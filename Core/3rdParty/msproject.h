// Created by Microsoft (R) C/C++ Compiler Version 12.00.9782.0 (4b2b6eac).
//
// d:\_code\shared\unicode_debug\MSPRJ.tlh
//
// C++ source equivalent of Win32 type library C:\Program Files (x86)\Microsoft Office\Office10\MSPRJ.OLB
// compiler-generated file created 01/20/16 at 20:47:36 - DO NOT EDIT!

//
// Cross-referenced type libraries:
//
//  #import "C:\Windows\SysWOW64\mshtml.tlb"
//  #import "C:\Program Files (x86)\Common Files\Microsoft Shared\Office10\MSO.DLL"
//  #import "C:\Program Files (x86)\Common Files\Microsoft Shared\VBA\VBA6\VBE6EXT.OLB"
//

#pragma once
#pragma pack(push, 8)

#include <comdef.h>

namespace MSProject {

//
// Forward references and typedefs
//

struct __declspec(uuid("000c0c3f-0000-0000-c000-000000000046"))
/* dual interface */ Task;
struct __declspec(uuid("000c0c41-0000-0000-c000-000000000046"))
/* dual interface */ Resource;
struct __declspec(uuid("000c0c43-0000-0000-c000-000000000046"))
/* dual interface */ Calendar;
struct __declspec(uuid("000c0c45-0000-0000-c000-000000000046"))
/* dual interface */ Assignment;
struct __declspec(uuid("000c0c4a-0000-0000-c000-000000000046"))
/* dual interface */ Years;
struct __declspec(uuid("000c0c4c-0000-0000-c000-000000000046"))
/* dual interface */ Months;
struct __declspec(uuid("000c0c51-0000-0000-c000-000000000046"))
/* dual interface */ Days;
struct __declspec(uuid("00020b17-0000-0000-c000-000000000046"))
/* dispinterface */ List;
struct __declspec(uuid("00020b18-0000-0000-c000-000000000046"))
/* dispinterface */ Selection;
struct __declspec(uuid("00020b19-0000-0000-c000-000000000046"))
/* dispinterface */ Cell;
struct __declspec(uuid("00020b1c-0000-0000-c000-000000000046"))
/* dual interface */ Subproject;
struct __declspec(uuid("00020b1b-0000-0000-c000-000000000046"))
/* dual interface */ Subprojects;
struct __declspec(uuid("11589054-69f0-11d2-b889-00c04fb90729"))
/* dual interface */ TaskGroups;
struct __declspec(uuid("11589055-69f0-11d2-b889-00c04fb90729"))
/* dual interface */ ResourceGroups;
struct __declspec(uuid("11589051-69f0-11d2-b889-00c04fb90729"))
/* dual interface */ Group;
struct __declspec(uuid("11589052-69f0-11d2-b889-00c04fb90729"))
/* dual interface */ GroupCriteria;
struct __declspec(uuid("11589053-69f0-11d2-b889-00c04fb90729"))
/* dual interface */ GroupCriterion;
struct __declspec(uuid("000c0c4e-0000-0000-c000-000000000046"))
/* dual interface */ WeekDays;
struct __declspec(uuid("000c0c4f-0000-0000-c000-000000000046"))
/* dual interface */ WeekDay;
struct __declspec(uuid("000c0c50-0000-0000-c000-000000000046"))
/* dual interface */ Shift;
struct __declspec(uuid("000c0c49-0000-0000-c000-000000000046"))
/* dual interface */ Period;
struct __declspec(uuid("000c0c4b-0000-0000-c000-000000000046"))
/* dual interface */ Year;
struct __declspec(uuid("000c0c4d-0000-0000-c000-000000000046"))
/* dual interface */ Month;
struct __declspec(uuid("000c0c52-0000-0000-c000-000000000046"))
/* dual interface */ Day;
struct __declspec(uuid("000c0c54-0000-0000-c000-000000000046"))
/* dual interface */ TimeScaleValue;
struct __declspec(uuid("000c0c53-0000-0000-c000-000000000046"))
/* dual interface */ TimeScaleValues;
struct __declspec(uuid("000c0c56-0000-0000-c000-000000000046"))
/* dual interface */ CostRateTable;
struct __declspec(uuid("000c0c55-0000-0000-c000-000000000046"))
/* dual interface */ CostRateTables;
struct __declspec(uuid("000c0c58-0000-0000-c000-000000000046"))
/* dual interface */ PayRate;
struct __declspec(uuid("000c0c57-0000-0000-c000-000000000046"))
/* dual interface */ PayRates;
struct __declspec(uuid("1251566d-2bdf-11d2-9eac-00c04fb92e6f"))
/* dual interface */ Availability;
struct __declspec(uuid("1251566c-2bdf-11d2-9eac-00c04fb92e6f"))
/* dual interface */ Availabilities;
struct __declspec(uuid("a7c6acb0-58c6-11d2-ae5a-00c04fb6f701"))
/* dual interface */ TaskDependency;
struct __declspec(uuid("a7c6acb1-58c6-11d2-ae5a-00c04fb6f701"))
/* dual interface */ TaskDependencies;
struct __declspec(uuid("00020b04-0000-0000-c000-000000000046"))
/* dispinterface */ Pane;
struct __declspec(uuid("00020b02-0000-0000-c000-000000000046"))
/* dispinterface */ Window;
struct __declspec(uuid("00020b03-0000-0000-c000-000000000046"))
/* dispinterface */ Windows;
struct __declspec(uuid("000c0c48-0000-0000-c000-000000000046"))
/* dual interface */ SplitPart;
struct __declspec(uuid("000c0c47-0000-0000-c000-000000000046"))
/* dual interface */ SplitParts;
struct __declspec(uuid("000c0c40-0000-0000-c000-000000000046"))
/* dual interface */ Tasks;
struct __declspec(uuid("000c0c42-0000-0000-c000-000000000046"))
/* dual interface */ Resources;
struct __declspec(uuid("000c0c46-0000-0000-c000-000000000046"))
/* dual interface */ Assignments;
struct __declspec(uuid("000c0c44-0000-0000-c000-000000000046"))
/* dual interface */ Calendars;
struct __declspec(uuid("00020b00-0000-0000-c000-000000000046"))
/* dispinterface */ _IProjectDoc;
struct __declspec(uuid("f81dd3c0-5089-11cf-a49d-00aa00574c74"))
/* dispinterface */ _EProjectDoc;
struct /* coclass */ Project;
struct __declspec(uuid("00020b01-0000-0000-c000-000000000046"))
/* dispinterface */ Projects;
struct __declspec(uuid("78e9f620-ebc0-11cf-a523-00a0c904de55"))
/* dispinterface */ _Global;
struct __declspec(uuid("00020aff-0000-0000-c000-000000000046"))
/* dispinterface */ _MSProject;
struct __declspec(uuid("7b7597d0-0c9f-11d0-8c43-00a0c904dcd4"))
/* dispinterface */ _EProjectApp;
struct /* coclass */ Application;
struct /* coclass */ Global;
struct __declspec(uuid("11589050-69f0-11d2-b889-00c04fb90729"))
/* dual interface */ Groups;
struct __declspec(uuid("4cf32482-106b-4fff-a1ab-7dd395fb0958"))
/* dual interface */ Views;
struct __declspec(uuid("b4097887-ec12-4683-9622-9974ef26353c"))
/* dual interface */ ViewsSingle;
struct __declspec(uuid("ce4f7d83-369b-43cf-96a8-29c2de2b8658"))
/* dual interface */ ViewsCombination;
struct __declspec(uuid("103ef3dc-9fce-4611-8c8b-f306c8881ca5"))
/* dual interface */ View;
struct __declspec(uuid("f15fde9e-fdc1-44d2-a0d0-249ad48f58fe"))
/* dual interface */ ViewSingle;
struct __declspec(uuid("0880e27c-c621-4349-96ad-56520c827e14"))
/* dual interface */ ViewCombination;
struct __declspec(uuid("31e3eb5a-6339-43b0-b1b8-1aed03886aec"))
/* dual interface */ Tables;
struct __declspec(uuid("54eff41a-4603-4771-80ee-f313bf9faec2"))
/* dual interface */ Table;
struct __declspec(uuid("ed989e98-f561-4d58-8f67-5d2e2b920e77"))
/* dual interface */ Filters;
struct __declspec(uuid("dc2fddaf-ce01-42dc-bb4f-b3fb3346d5b7"))
/* dual interface */ Filter;
struct __declspec(uuid("02497005-3861-4603-80a4-ff309631dba1"))
/* dual interface */ EventInfo;
struct __declspec(uuid("6711f81e-aa55-47ee-aa9f-31b00e709cb6"))
/* dual interface */ Profile;
struct __declspec(uuid("08cd6de7-87cd-42ab-bd28-6e2c0170a274"))
/* dual interface */ Profiles;
struct __declspec(uuid("bf6d2103-92d3-4162-9816-a3d811bcf8ca"))
/* dual interface */ TableFields;
struct __declspec(uuid("747d4ba8-fb3b-4c2c-b615-02cb6ebf0ae7"))
/* dual interface */ TableField;
struct __declspec(uuid("5066d7c4-1ed7-48c4-ace7-299e109d368c"))
/* dispinterface */ _EProjectApp2;

//
// Smart pointer typedef declarations
//

_COM_SMARTPTR_TYPEDEF(Task, __uuidof(Task));
_COM_SMARTPTR_TYPEDEF(Resource, __uuidof(Resource));
_COM_SMARTPTR_TYPEDEF(Calendar, __uuidof(Calendar));
_COM_SMARTPTR_TYPEDEF(Assignment, __uuidof(Assignment));
_COM_SMARTPTR_TYPEDEF(Years, __uuidof(Years));
_COM_SMARTPTR_TYPEDEF(Months, __uuidof(Months));
_COM_SMARTPTR_TYPEDEF(Days, __uuidof(Days));
_COM_SMARTPTR_TYPEDEF(List, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(Selection, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(Cell, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(Subproject, __uuidof(Subproject));
_COM_SMARTPTR_TYPEDEF(Subprojects, __uuidof(Subprojects));
_COM_SMARTPTR_TYPEDEF(Group, __uuidof(Group));
_COM_SMARTPTR_TYPEDEF(GroupCriteria, __uuidof(GroupCriteria));
_COM_SMARTPTR_TYPEDEF(GroupCriterion, __uuidof(GroupCriterion));
_COM_SMARTPTR_TYPEDEF(WeekDays, __uuidof(WeekDays));
_COM_SMARTPTR_TYPEDEF(WeekDay, __uuidof(WeekDay));
_COM_SMARTPTR_TYPEDEF(Shift, __uuidof(Shift));
_COM_SMARTPTR_TYPEDEF(Period, __uuidof(Period));
_COM_SMARTPTR_TYPEDEF(Year, __uuidof(Year));
_COM_SMARTPTR_TYPEDEF(Month, __uuidof(Month));
_COM_SMARTPTR_TYPEDEF(Day, __uuidof(Day));
_COM_SMARTPTR_TYPEDEF(TimeScaleValue, __uuidof(TimeScaleValue));
_COM_SMARTPTR_TYPEDEF(TimeScaleValues, __uuidof(TimeScaleValues));
_COM_SMARTPTR_TYPEDEF(CostRateTable, __uuidof(CostRateTable));
_COM_SMARTPTR_TYPEDEF(CostRateTables, __uuidof(CostRateTables));
_COM_SMARTPTR_TYPEDEF(PayRate, __uuidof(PayRate));
_COM_SMARTPTR_TYPEDEF(PayRates, __uuidof(PayRates));
_COM_SMARTPTR_TYPEDEF(Availability, __uuidof(Availability));
_COM_SMARTPTR_TYPEDEF(Availabilities, __uuidof(Availabilities));
_COM_SMARTPTR_TYPEDEF(TaskDependency, __uuidof(TaskDependency));
_COM_SMARTPTR_TYPEDEF(TaskDependencies, __uuidof(TaskDependencies));
_COM_SMARTPTR_TYPEDEF(Pane, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(Window, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(Windows, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(SplitPart, __uuidof(SplitPart));
_COM_SMARTPTR_TYPEDEF(SplitParts, __uuidof(SplitParts));
_COM_SMARTPTR_TYPEDEF(Tasks, __uuidof(Tasks));
_COM_SMARTPTR_TYPEDEF(Resources, __uuidof(Resources));
_COM_SMARTPTR_TYPEDEF(Assignments, __uuidof(Assignments));
_COM_SMARTPTR_TYPEDEF(Calendars, __uuidof(Calendars));
_COM_SMARTPTR_TYPEDEF(_IProjectDoc, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(_EProjectDoc, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(Projects, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(_Global, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(_MSProject, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(_EProjectApp, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(Groups, __uuidof(Groups));
_COM_SMARTPTR_TYPEDEF(TaskGroups, __uuidof(TaskGroups));
_COM_SMARTPTR_TYPEDEF(ResourceGroups, __uuidof(ResourceGroups));
_COM_SMARTPTR_TYPEDEF(Views, __uuidof(Views));
_COM_SMARTPTR_TYPEDEF(ViewsSingle, __uuidof(ViewsSingle));
_COM_SMARTPTR_TYPEDEF(ViewsCombination, __uuidof(ViewsCombination));
_COM_SMARTPTR_TYPEDEF(View, __uuidof(View));
_COM_SMARTPTR_TYPEDEF(ViewSingle, __uuidof(ViewSingle));
_COM_SMARTPTR_TYPEDEF(ViewCombination, __uuidof(ViewCombination));
_COM_SMARTPTR_TYPEDEF(Tables, __uuidof(Tables));
_COM_SMARTPTR_TYPEDEF(Table, __uuidof(Table));
_COM_SMARTPTR_TYPEDEF(Filters, __uuidof(Filters));
_COM_SMARTPTR_TYPEDEF(Filter, __uuidof(Filter));
_COM_SMARTPTR_TYPEDEF(EventInfo, __uuidof(EventInfo));
_COM_SMARTPTR_TYPEDEF(Profile, __uuidof(Profile));
_COM_SMARTPTR_TYPEDEF(Profiles, __uuidof(Profiles));
_COM_SMARTPTR_TYPEDEF(TableFields, __uuidof(TableFields));
_COM_SMARTPTR_TYPEDEF(TableField, __uuidof(TableField));
_COM_SMARTPTR_TYPEDEF(_EProjectApp2, __uuidof(IDispatch));

//
// Type library items
//

enum PjMonth
{
    pjJanuary = 1,
    pjFebruary = 2,
    pjMarch = 3,
    pjApril = 4,
    pjMay = 5,
    pjJune = 6,
    pjJuly = 7,
    pjAugust = 8,
    pjSeptember = 9,
    pjOctober = 10,
    pjNovember = 11,
    pjDecember = 12
};

enum PjAccrueAt
{
    pjStart = 1,
    pjEnd = 2,
    pjProrated = 3
};

enum PjDateFormat
{
    pjDateDefault = 255,
    pjDate_mm_dd_yy_hh_mmAM = 0,
    pjDate_mm_dd_yy = 1,
    pjDate_mmmm_dd_yyyy_hh_mmAM = 2,
    pjDate_mmmm_dd_yyyy = 3,
    pjDate_mmm_dd_hh_mmAM = 4,
    pjDate_mmm_dd_yyy = 5,
    pjDate_mmmm_dd = 6,
    pjDate_mmm_dd = 7,
    pjDate_ddd_mm_dd_yy_hh_mmAM = 8,
    pjDate_ddd_mm_dd_yy = 9,
    pjDate_ddd_mmm_dd_yyy = 10,
    pjDate_ddd_hh_mmAM = 11,
    pjDate_mm_dd = 12,
    pjDate_dd = 13,
    pjDate_hh_mmAM = 14,
    pjDate_ddd_mmm_dd = 15,
    pjDate_ddd_mm_dd = 16,
    pjDate_ddd_dd = 17,
    pjDate_Www_dd = 18,
    pjDate_Www_dd_yy_hh_mmAM = 19,
    pjDate_mm_dd_yyyy = 20
};

enum PjConstraint
{
    pjASAP = 0,
    pjALAP = 1,
    pjFNET = 6,
    pjFNLT = 7,
    pjMFO = 3,
    pjMSO = 2,
    pjSNET = 4,
    pjSNLT = 5
};

enum PjGridline
{
    pjBarRows = 1,
    pjCalendarDays = 0,
    pjCalendarTitleHorizontal = 3,
    pjCalendarTitleVertical = 2,
    pjCalendarWeeks = 1,
    pjDateBoxBottom = 5,
    pjDateBoxTop = 4,
    pjGanttRows = 0,
    pjSheetRows = 0,
    pjGanttCurrentDate = 4,
    pjGanttPageBreaks = 9,
    pjGanttProjectFinish = 11,
    pjGanttProjectStart = 10,
    pjGanttSheetColumns = 6,
    pjGanttSheetRows = 5,
    pjGanttTitleHorizontal = 8,
    pjGanttTitleVertical = 7,
    pjGanttStatusDate = 12,
    pjGraphCurrentDate = 3,
    pjGraphProjectFinish = 7,
    pjGraphProjectStart = 6,
    pjGraphTitleHorizontal = 5,
    pjGraphTitleVertical = 4,
    pjGraphStatusDate = 8,
    pjHorizontal = 2,
    pjMajorColumns = 2,
    pjMinorColumns = 3,
    pjMajorVertical = 0,
    pjMinorVertical = 1,
    pjSheetColumns = 1,
    pjSheetPageBreaks = 4,
    pjSheetTitleHorizontal = 3,
    pjSheetTitleVertical = 2,
    pjUsagePageBreaks = 6,
    pjUsageSheetColumns = 1,
    pjUsageSheetRows = 0,
    pjUsageTitleHorizontal = 3,
    pjUsageTitleVertical = 2,
    pjUsageRows = 5,
    pjUsageColumns = 4
};

enum PjBarSize
{
    pjBarSize6 = 6,
    pjBarSize8 = 8,
    pjBarSize10 = 10,
    pjBarSize12 = 12,
    pjBarSize14 = 14,
    pjBarSize18 = 18,
    pjBarSize24 = 24
};

enum PjAlignment
{
    pjLeft = 0,
    pjCenter = 1,
    pjRight = 2
};

enum PjVerticalAlignment
{
    pjTop = 0,
    pjMiddle = 1,
    pjBottom = 2
};

enum PjBarEndShape
{
    pjNoBarEndShape = 0,
    pjHouseUp = 1,
    pjHouseDown = 2,
    pjDiamond = 3,
    pjCircleDiamond = 13,
    pjTriangleUp = 4,
    pjTriangleDown = 5,
    pjTriangleRight = 6,
    pjTriangleLeft = 7,
    pjCircleTriangleUp = 15,
    pjCircleTriangleDown = 16,
    pjArrowUp = 8,
    pjArrowDown = 14,
    pjCircleArrowUp = 17,
    pjCircleArrowDown = 18,
    pjCaretDownTop = 9,
    pjCaretUpBottom = 10,
    pjLineShape = 11,
    pjSquare = 12,
    pjCircle = 19,
    pjStar = 20
};

enum PjBarItem
{
    pjBarNoncritical = 0,
    pjBarCritical = 1,
    pjBarSummary = 2,
    pjBarMilestone = 3,
    pjBarMarked = 5,
    pjBarHighlighted = 6,
    pjBarProjectSummary = 7,
    pjBarExternalTask = 8
};

enum PjBarShape
{
    pjNone = 0,
    pjRectangleBar = 1,
    pjRectangleTop = 2,
    pjRectangleMiddle = 3,
    pjRectangleBottom = 4,
    pjLineTop = 5,
    pjLineMiddle = 6,
    pjLineBottom = 7
};

enum PjBarType
{
    pjDashed = 2,
    pjFramed = 1,
    pjSolid = 0
};

enum PjBorder
{
    pjNoBorder = 0,
    pjAroundEveryPage = 1,
    pjOutsidePages = 2
};

enum PjCalculation
{
    pjAutomatic = -1,
    pjManual = 0
};

enum PjCalendarBarType
{
    pjNormalBar = 0,
    pjLineBar = 1,
    pjNoBar = 2
};

enum PjCalendarDateLabel
{
    pjCalendarLabelDay_mm_dd = 27,
    pjCalendarLabelDay_mm_dd_yy = 26,
    pjCalendarLabelDay_m_dd = 115,
    pjCalendarLabelDay_mmm_dd = 25,
    pjCalendarLabelDay_mmm_dd_yyy = 24,
    pjCalendarLabelDay_di = 20,
    pjCalendarLabelDay_di_mm_dd = 110,
    pjCalendarLabelDay_di_dd = 107,
    pjCalendarLabelDay_di_m_dd = 114,
    pjCalendarLabelDay_didd = 121,
    pjCalendarLabelDay_ddi = 119,
    pjCalendarLabelDay_ddi_mm_dd = 109,
    pjCalendarLabelDay_ddi_dd = 106,
    pjCalendarLabelDay_ddi_m_dd = 113,
    pjCalendarLabelDay_ddd = 19,
    pjCalendarLabelDay_ddd_mm_dd = 108,
    pjCalendarLabelDay_ddd_mm_dd_yy = 52,
    pjCalendarLabelDay_ddd_dd = 105,
    pjCalendarLabelDay_ddd_m_dd = 112,
    pjCalendarLabelDay_ddd_mmm_dd = 23,
    pjCalendarLabelDay_ddd_mmm_dd_yyy = 22,
    pjCalendarLabelDay_ddd_mmmm_dd = 111,
    pjCalendarLabelDay_dddd = 18,
    pjCalendarLabelDayFromEnd_dd = 54,
    pjCalendarLabelDayFromEnd_Ddd = 53,
    pjCalendarLabelDayFromEnd_Day_dd = 41,
    pjCalendarLabelDayFromStart_dd = 56,
    pjCalendarLabelDayFromStart_Ddd = 55,
    pjCalendarLabelDayFromStart_Day_dd = 40,
    pjCalendarLabelDayOfMonth_dd = 21,
    pjCalendarLabelDayOfYear_dd = 118,
    pjCalendarLabelDayOfYear_dd_yyyy = 117,
    pjCalendarLabelDayOfYear_dd_yyy = 116,
    pjNoDateFormat = 35,
    pjOverflowIndicator = 122
};

enum PjCalendarShading
{
    pjBaseWorking = 0,
    pjBaseNonworking = 1,
    pjBaseNondefaultWorking = 2,
    pjResourceWorking = 3,
    pjResourceNonworking = 4,
    pjResourceNondefaultWorking = 5
};

enum PjColor
{
    pjBlack = 0,
    pjRed = 1,
    pjYellow = 2,
    pjLime = 3,
    pjAqua = 4,
    pjBlue = 5,
    pjFuchsia = 6,
    pjWhite = 7,
    pjMaroon = 8,
    pjGreen = 9,
    pjOlive = 10,
    pjNavy = 11,
    pjPurple = 12,
    pjTeal = 13,
    pjGray = 14,
    pjSilver = 15,
    pjColorAutomatic = 16
};

enum PjCreatePublisher
{
    pjPublishAll = 0,
    pjPictureOnly = 1
};

enum PjCustomizeMailAction
{
    pjMailStartFields = 1,
    pjMailDefineField = 2,
    pjMailEndFields = 0
};

enum PjDateLabel
{
    pjDay_mm_dd = 27,
    pjDay_mm_dd_yy = 26,
    pjDay_m_dd = 115,
    pjDay_mmm_dd = 25,
    pjDay_mmm_dd_yyy = 24,
    pjDay_di = 20,
    pjDay_di_mm_dd = 110,
    pjDay_di_dd = 107,
    pjDay_di_m_dd = 114,
    pjDay_didd = 121,
    pjDay_ddi = 119,
    pjDay_ddi_mm_dd = 109,
    pjDay_ddi_dd = 106,
    pjDay_ddi_m_dd = 113,
    pjDay_ddd = 19,
    pjDay_ddd_mm_dd = 108,
    pjDay_ddd_mm_dd_yy = 52,
    pjDay_ddd_dd = 105,
    pjDay_ddd_m_dd = 112,
    pjDay_ddd_mmm_dd = 23,
    pjDay_ddd_mmm_dd_yyy = 22,
    pjDay_ddd_mmmm_dd = 111,
    pjDay_dddd = 18,
    pjDayFromEnd_dd = 54,
    pjDayFromEnd_Ddd = 53,
    pjDayFromEnd_Day_dd = 41,
    pjDayFromStart_dd = 56,
    pjDayFromStart_Ddd = 55,
    pjDayFromStart_Day_dd = 40,
    pjDayOfMonth_dd = 21,
    pjDayOfYear_dd = 118,
    pjDayOfYear_dd_yyyy = 117,
    pjDayOfYear_dd_yyy = 116,
    pjHour_mm_dd_hhAM = 120,
    pjHour_hh = 32,
    pjHour_hh_mmAM = 30,
    pjHour_hhAM = 31,
    pjHour_mmm_dd_hhAM = 29,
    pjHour_ddd_mmm_dd_hhAM = 28,
    pjHourFromEnd_hh = 77,
    pjHourFromEnd_Hhh = 76,
    pjHourFromEnd_Hour_hh = 39,
    pjHourFromStart_hh = 79,
    pjHourFromStart_Hhh = 78,
    pjHourFromStart_Hour_hh = 38,
    pjMinute_hh_mmAM = 33,
    pjMinute_mm = 34,
    pjMinuteFromEnd_mm = 81,
    pjMinuteFromEnd_Mmm = 80,
    pjMinuteFromEnd_Minute_mm = 37,
    pjMinuteFromStart_mm = 83,
    pjMinuteFromStart_Mmm = 82,
    pjMinuteFromStart_Minute_mm = 36,
    pjMonth_mm = 57,
    pjMonth_mm_yy = 86,
    pjMonth_mm_yyy = 85,
    pjMonth_m = 11,
    pjMonth_mmm = 10,
    pjMonth_mmm_yyy = 8,
    pjMonth_mmmm = 9,
    pjMonth_mmmm_yyyy = 7,
    pjMonthFromEnd_mm = 59,
    pjMonthFromEnd_Mmm = 58,
    pjMonthFromEnd_Month_mm = 45,
    pjMonthFromStart_mm = 61,
    pjMonthFromStart_Mmm = 60,
    pjMonthFromStart_Month_mm = 44,
    pjQuarter_q = 62,
    pjQuarter_qQyy = 51,
    pjQuarter_qqq_Quarter = 2,
    pjQuarter_Qq = 6,
    pjQuarter_Qq_yyy = 4,
    pjQuarter_Qtr_q = 5,
    pjQuarter_Qtr_q_yyyy = 3,
    pjQuarterFromEnd_q = 64,
    pjQuarterFromEnd_Qq = 63,
    pjQuarterFromEnd_Quarter_q = 47,
    pjQuarterFromStart_q = 66,
    pjQuarterFromStart_Qq = 65,
    pjQuarterFromStart_Quarter_q = 46,
    pjWeek_mm_dd = 17,
    pjWeek_mm_dd_yy = 16,
    pjWeek_m_dd = 89,
    pjWeek_mmm_dd = 15,
    pjWeek_mmm_dd_yyy = 13,
    pjWeek_mmmm_dd = 14,
    pjWeek_mmmm_dd_yyyy = 12,
    pjWeek_di_mm_dd = 92,
    pjWeek_di_m_dd = 99,
    pjWeek_di_mmm_dd = 95,
    pjWeek_ddi_mm_dd = 91,
    pjWeek_ddi_m_dd = 98,
    pjWeek_ddi_mmm_dd = 94,
    pjWeek_ddd_mm_dd = 90,
    pjWeek_ddd_mm_dd_yy = 100,
    pjWeek_ddd_dd = 88,
    pjWeek_ddd_ww = 103,
    pjWeek_ddd_m_dd = 97,
    pjWeek_ddd_mmm_dd = 93,
    pjWeek_ddd_mmm_dd_yyy = 101,
    pjWeek_ddd_mmmm_dd = 96,
    pjWeek_ddd_mmmm_dd_yyy = 102,
    pjWeekDayOfMonth_dd = 87,
    pjWeekFromEnd_ww = 68,
    pjWeekFromEnd_Www = 67,
    pjWeekFromEnd_Week_ww = 43,
    pjWeekFromStart_ww = 70,
    pjWeekFromStart_Www = 69,
    pjWeekFromStart_Week_ww = 42,
    pjWeekNumber_dd_ww = 104,
    pjWeekNumber_ww = 50,
    pjYear_yyyy = 0,
    pjYear_yyy = 1,
    pjYear_yy = 75,
    pjYearFromEnd_yy = 72,
    pjYearFromEnd_Yyy = 71,
    pjYearFromEnd_Year_yy = 49,
    pjYearFromStart_yy = 74,
    pjYearFromStart_Yyy = 73,
    pjYearFromStart_Year_yy = 48,
    pjHalfYear_hhh_Half = 123,
    pjHalfYear_Hlf_h_yyyy = 124,
    pjHalfYear_Hlf_h = 125,
    pjHalfYear_Hh_yyy = 126,
    pjHalfYear_Hh = 127,
    pjHalfYear_h = 128,
    pjHalfYear_hHyy = 129,
    pjHalfYearFromStart_Half_h = 130,
    pjHalfYearFromStart_Hh = 131,
    pjHalfYearFromStart_h = 132,
    pjHalfYearFromEnd_Half_h = 133,
    pjHalfYearFromEnd_Hh = 134,
    pjHalfYearFromEnd_h = 135,
    pjThirdsOfMonths_dd = 136,
    pjThirdsOfMonths_ddd = 137,
    pjThirdsOfMonths_dddd = 138,
    pjThirdsOfMonths_mm_dd = 139,
    pjThirdsOfMonths_mm_ddd = 140,
    pjThirdsOfMonths_mmmm_dddd = 141,
    pjThirdsOfMonths_mmm_dd = 142,
    pjThirdsOfMonths_mmm_ddd = 143,
    pjThirdsOfMonths_mmmm_dd = 144,
    pjThirdsOfMonths_mm_dd_yy = 145,
    pjThirdsOfMonths_mm_ddd_yy = 146,
    pjThirdsOfMonths_mmm_dd_yy = 147,
    pjThirdsOfMonths_mmm_ddd_yy = 148,
    pjThirdsOfMonths_mmmm_dd_yyyy = 149,
    pjThirdsOfMonths_mmmm_dddd_yyyy = 150
};

enum PjDateOrder
{
    pjDayMonthYear = 0,
    pjMonthDayYear = 1,
    pjYearMonthDay = 2
};

enum PjDayLabel
{
    pjDayLabelDay_di = 20,
    pjDayLabelDay_ddi = 119,
    pjDayLabelDay_ddd = 19,
    pjDayLabelDay_dddd = 18,
    pjDayLabelNoDateFormat = 35
};

enum PjDialog
{
    pjResourceAssignment = 4087
};

enum PjAssignmentField
{
    pjAssignmentUniqueID = 255852544,
    pjAssignmentTaskUniqueID = 255852545,
    pjAssignmentResourceUniqueID = 255852546,
    pjAssignmentTaskID = 255852547,
    pjAssignmentResourceID = 255852548,
    pjAssignmentTaskName = 255852549,
    pjAssignmentResourceName = 255852550,
    pjAssignmentAssignmentUnits = 255852551,
    pjAssignmentWork = 255852552,
    pjAssignmentOvertimeWork = 255852553,
    pjAssignmentActualWork = 255852554,
    pjAssignmentRegularWork = 255852555,
    pjAssignmentRemainingWork = 255852556,
    pjAssignmentActualOvertimeWork = 255852557,
    pjAssignmentRemainingOvertimeWork = 255852558,
    pjAssignmentBaselineWork = 255852560,
    pjAssignmentPeak = 255852563,
    pjAssignmentStart = 255852564,
    pjAssignmentFinish = 255852565,
    pjAssignmentActualStart = 255852566,
    pjAssignmentActualFinish = 255852567,
    pjAssignmentDelay = 255852569,
    pjAssignmentCost = 255852570,
    pjAssignmentOvertimeCost = 255852571,
    pjAssignmentActualCost = 255852572,
    pjAssignmentRemainingCost = 255852573,
    pjAssignmentActualOvertimeCost = 255852574,
    pjAssignmentRemainingOvertimeCost = 255852575,
    pjAssignmentBaselineCost = 255852576,
    pjAssignmentBCWS = 255852578,
    pjAssignmentBCWP = 255852579,
    pjAssignmentACWP = 255852580,
    pjAssignmentSV = 255852581,
    pjAssignmentCostVariance = 255852582,
    pjAssignmentWorkContour = 255852583,
    pjAssignmentPercentWorkComplete = 255852587,
    pjAssignmentProject = 255852588,
    pjAssignmentNotes = 255852615,
    pjAssignmentConfirmed = 255852616,
    pjAssignmentResponsePending = 255852617,
    pjAssignmentUpdateNeeded = 255852618,
    pjAssignmentTeamStatusPending = 255852619,
    pjAssignmentCostRateTable = 255852624,
    pjAssignmentText1 = 255852632,
    pjAssignmentText2 = 255852633,
    pjAssignmentText3 = 255852634,
    pjAssignmentText4 = 255852635,
    pjAssignmentText5 = 255852636,
    pjAssignmentText6 = 255852637,
    pjAssignmentText7 = 255852638,
    pjAssignmentText8 = 255852639,
    pjAssignmentText9 = 255852640,
    pjAssignmentText10 = 255852641,
    pjAssignmentStart1 = 255852642,
    pjAssignmentStart2 = 255852643,
    pjAssignmentStart3 = 255852644,
    pjAssignmentStart4 = 255852645,
    pjAssignmentStart5 = 255852646,
    pjAssignmentFinish1 = 255852647,
    pjAssignmentFinish2 = 255852648,
    pjAssignmentFinish3 = 255852649,
    pjAssignmentFinish4 = 255852650,
    pjAssignmentFinish5 = 255852651,
    pjAssignmentNumber1 = 255852652,
    pjAssignmentNumber2 = 255852653,
    pjAssignmentNumber3 = 255852654,
    pjAssignmentNumber4 = 255852655,
    pjAssignmentNumber5 = 255852656,
    pjAssignmentDuration1 = 255852657,
    pjAssignmentDuration2 = 255852658,
    pjAssignmentDuration3 = 255852659,
    pjAssignmentCost1 = 255852663,
    pjAssignmentCost2 = 255852664,
    pjAssignmentCost3 = 255852665,
    pjAssignmentFlag10 = 255852666,
    pjAssignmentFlag1 = 255852667,
    pjAssignmentFlag2 = 255852668,
    pjAssignmentFlag3 = 255852669,
    pjAssignmentFlag4 = 255852670,
    pjAssignmentFlag5 = 255852671,
    pjAssignmentFlag6 = 255852672,
    pjAssignmentFlag7 = 255852673,
    pjAssignmentFlag8 = 255852674,
    pjAssignmentFlag9 = 255852675,
    pjAssignmentLinkedFields = 255852676,
    pjAssignmentOverallocated = 255852679,
    pjAssignmentTaskSummaryName = 255852686,
    pjAssignmentLevelingDelay = 255852689,
    pjAssignmentBaselineStart = 255852690,
    pjAssignmentBaselineFinish = 255852691,
    pjAssignmentHyperlink = 255852696,
    pjAssignmentHyperlinkAddress = 255852697,
    pjAssignmentHyperlinkSubAddress = 255852698,
    pjAssignmentHyperlinkHREF = 255852699,
    pjAssignmentCost4 = 255852703,
    pjAssignmentCost5 = 255852704,
    pjAssignmentCost6 = 255852705,
    pjAssignmentCost7 = 255852706,
    pjAssignmentCost8 = 255852707,
    pjAssignmentCost9 = 255852708,
    pjAssignmentCost10 = 255852709,
    pjAssignmentDate1 = 255852710,
    pjAssignmentDate2 = 255852711,
    pjAssignmentDate3 = 255852712,
    pjAssignmentDate4 = 255852713,
    pjAssignmentDate5 = 255852714,
    pjAssignmentDate6 = 255852715,
    pjAssignmentDate7 = 255852716,
    pjAssignmentDate8 = 255852717,
    pjAssignmentDate9 = 255852718,
    pjAssignmentDate10 = 255852719,
    pjAssignmentDuration4 = 255852720,
    pjAssignmentDuration5 = 255852721,
    pjAssignmentDuration6 = 255852722,
    pjAssignmentDuration7 = 255852723,
    pjAssignmentDuration8 = 255852724,
    pjAssignmentDuration9 = 255852725,
    pjAssignmentDuration10 = 255852726,
    pjAssignmentFinish6 = 255852727,
    pjAssignmentFinish7 = 255852728,
    pjAssignmentFinish8 = 255852729,
    pjAssignmentFinish9 = 255852730,
    pjAssignmentFinish10 = 255852731,
    pjAssignmentFlag11 = 255852732,
    pjAssignmentFlag12 = 255852733,
    pjAssignmentFlag13 = 255852734,
    pjAssignmentFlag14 = 255852735,
    pjAssignmentFlag15 = 255852736,
    pjAssignmentFlag16 = 255852737,
    pjAssignmentFlag17 = 255852738,
    pjAssignmentFlag18 = 255852739,
    pjAssignmentFlag19 = 255852740,
    pjAssignmentFlag20 = 255852741,
    pjAssignmentNumber6 = 255852742,
    pjAssignmentNumber7 = 255852743,
    pjAssignmentNumber8 = 255852744,
    pjAssignmentNumber9 = 255852745,
    pjAssignmentNumber10 = 255852746,
    pjAssignmentNumber11 = 255852747,
    pjAssignmentNumber12 = 255852748,
    pjAssignmentNumber13 = 255852749,
    pjAssignmentNumber14 = 255852750,
    pjAssignmentNumber15 = 255852751,
    pjAssignmentNumber16 = 255852752,
    pjAssignmentNumber17 = 255852753,
    pjAssignmentNumber18 = 255852754,
    pjAssignmentNumber19 = 255852755,
    pjAssignmentNumber20 = 255852756,
    pjAssignmentStart6 = 255852757,
    pjAssignmentStart7 = 255852758,
    pjAssignmentStart8 = 255852759,
    pjAssignmentStart9 = 255852760,
    pjAssignmentStart10 = 255852761,
    pjAssignmentText11 = 255852762,
    pjAssignmentText12 = 255852763,
    pjAssignmentText13 = 255852764,
    pjAssignmentText14 = 255852765,
    pjAssignmentText15 = 255852766,
    pjAssignmentText16 = 255852767,
    pjAssignmentText17 = 255852768,
    pjAssignmentText18 = 255852769,
    pjAssignmentText19 = 255852770,
    pjAssignmentText20 = 255852771,
    pjAssignmentText21 = 255852772,
    pjAssignmentText22 = 255852773,
    pjAssignmentText23 = 255852774,
    pjAssignmentText24 = 255852775,
    pjAssignmentText25 = 255852776,
    pjAssignmentText26 = 255852777,
    pjAssignmentText27 = 255852778,
    pjAssignmentText28 = 255852779,
    pjAssignmentText29 = 255852780,
    pjAssignmentText30 = 255852781,
    pjAssignmentIndex = 255852790,
    pjAssignmentCV = 255852791,
    pjAssignmentWorkVariance = 255852792,
    pjAssignmentStartVariance = 255852806,
    pjAssignmentFinishVariance = 255852807,
    pjAssignmentVAC = 255852815,
    pjAssignmentFixedMaterialAssignment = 255852819,
    pjAssignmentResourceType = 255852820,
    pjAssignmentHyperlinkScreenTip = 255852823,
    pjAssignmentBaseline1Work = 255852833,
    pjAssignmentBaseline1Cost = 255852834,
    pjAssignmentBaseline1Start = 255852839,
    pjAssignmentBaseline1Finish = 255852840,
    pjAssignmentBaseline2Work = 255852842,
    pjAssignmentBaseline2Cost = 255852843,
    pjAssignmentBaseline2Start = 255852848,
    pjAssignmentBaseline2Finish = 255852849,
    pjAssignmentBaseline3Work = 255852851,
    pjAssignmentBaseline3Cost = 255852852,
    pjAssignmentBaseline3Start = 255852857,
    pjAssignmentBaseline3Finish = 255852858,
    pjAssignmentBaseline4Work = 255852860,
    pjAssignmentBaseline4Cost = 255852861,
    pjAssignmentBaseline4Start = 255852866,
    pjAssignmentBaseline4Finish = 255852867,
    pjAssignmentBaseline5Work = 255852869,
    pjAssignmentBaseline5Cost = 255852870,
    pjAssignmentBaseline5Start = 255852875,
    pjAssignmentBaseline5Finish = 255852876,
    pjAssignmentBaseline6Work = 255852878,
    pjAssignmentBaseline6Cost = 255852879,
    pjAssignmentBaseline6Start = 255852884,
    pjAssignmentBaseline6Finish = 255852885,
    pjAssignmentBaseline7Work = 255852887,
    pjAssignmentBaseline7Cost = 255852888,
    pjAssignmentBaseline7Start = 255852893,
    pjAssignmentBaseline7Finish = 255852894,
    pjAssignmentBaseline8Work = 255852896,
    pjAssignmentBaseline8Cost = 255852897,
    pjAssignmentBaseline8Start = 255852902,
    pjAssignmentBaseline8Finish = 255852903,
    pjAssignmentBaseline9Work = 255852905,
    pjAssignmentBaseline9Cost = 255852906,
    pjAssignmentBaseline9Start = 255852911,
    pjAssignmentBaseline9Finish = 255852912,
    pjAssignmentBaseline10Work = 255852914,
    pjAssignmentBaseline10Cost = 255852915,
    pjAssignmentBaseline10Start = 255852920,
    pjAssignmentBaseline10Finish = 255852921,
    pjAssignmentTaskOutlineNumber = 255852923,
    pjAssignmentEnterpriseCost1 = 255852925,
    pjAssignmentEnterpriseCost2 = 255852926,
    pjAssignmentEnterpriseCost3 = 255852927,
    pjAssignmentEnterpriseCost4 = 255852928,
    pjAssignmentEnterpriseCost5 = 255852929,
    pjAssignmentEnterpriseCost6 = 255852930,
    pjAssignmentEnterpriseCost7 = 255852931,
    pjAssignmentEnterpriseCost8 = 255852932,
    pjAssignmentEnterpriseCost9 = 255852933,
    pjAssignmentEnterpriseCost10 = 255852934,
    pjAssignmentEnterpriseDate1 = 255852935,
    pjAssignmentEnterpriseDate2 = 255852936,
    pjAssignmentEnterpriseDate3 = 255852937,
    pjAssignmentEnterpriseDate4 = 255852938,
    pjAssignmentEnterpriseDate5 = 255852939,
    pjAssignmentEnterpriseDate6 = 255852940,
    pjAssignmentEnterpriseDate7 = 255852941,
    pjAssignmentEnterpriseDate8 = 255852942,
    pjAssignmentEnterpriseDate9 = 255852943,
    pjAssignmentEnterpriseDate10 = 255852944,
    pjAssignmentEnterpriseDate11 = 255852945,
    pjAssignmentEnterpriseDate12 = 255852946,
    pjAssignmentEnterpriseDate13 = 255852947,
    pjAssignmentEnterpriseDate14 = 255852948,
    pjAssignmentEnterpriseDate15 = 255852949,
    pjAssignmentEnterpriseDate16 = 255852950,
    pjAssignmentEnterpriseDate17 = 255852951,
    pjAssignmentEnterpriseDate18 = 255852952,
    pjAssignmentEnterpriseDate19 = 255852953,
    pjAssignmentEnterpriseDate20 = 255852954,
    pjAssignmentEnterpriseDate21 = 255852955,
    pjAssignmentEnterpriseDate22 = 255852956,
    pjAssignmentEnterpriseDate23 = 255852957,
    pjAssignmentEnterpriseDate24 = 255852958,
    pjAssignmentEnterpriseDate25 = 255852959,
    pjAssignmentEnterpriseDate26 = 255852960,
    pjAssignmentEnterpriseDate27 = 255852961,
    pjAssignmentEnterpriseDate28 = 255852962,
    pjAssignmentEnterpriseDate29 = 255852963,
    pjAssignmentEnterpriseDate30 = 255852964,
    pjAssignmentEnterpriseDuration1 = 255852965,
    pjAssignmentEnterpriseDuration2 = 255852966,
    pjAssignmentEnterpriseDuration3 = 255852967,
    pjAssignmentEnterpriseDuration4 = 255852968,
    pjAssignmentEnterpriseDuration5 = 255852969,
    pjAssignmentEnterpriseDuration6 = 255852970,
    pjAssignmentEnterpriseDuration7 = 255852971,
    pjAssignmentEnterpriseDuration8 = 255852972,
    pjAssignmentEnterpriseDuration9 = 255852973,
    pjAssignmentEnterpriseDuration10 = 255852974,
    pjAssignmentEnterpriseFlag1 = 255852985,
    pjAssignmentEnterpriseFlag2 = 255852986,
    pjAssignmentEnterpriseFlag3 = 255852987,
    pjAssignmentEnterpriseFlag4 = 255852988,
    pjAssignmentEnterpriseFlag5 = 255852989,
    pjAssignmentEnterpriseFlag6 = 255852990,
    pjAssignmentEnterpriseFlag7 = 255852991,
    pjAssignmentEnterpriseFlag8 = 255852992,
    pjAssignmentEnterpriseFlag9 = 255852993,
    pjAssignmentEnterpriseFlag10 = 255852994,
    pjAssignmentEnterpriseFlag11 = 255852995,
    pjAssignmentEnterpriseFlag12 = 255852996,
    pjAssignmentEnterpriseFlag13 = 255852997,
    pjAssignmentEnterpriseFlag14 = 255852998,
    pjAssignmentEnterpriseFlag15 = 255852999,
    pjAssignmentEnterpriseFlag16 = 255853000,
    pjAssignmentEnterpriseFlag17 = 255853001,
    pjAssignmentEnterpriseFlag18 = 255853002,
    pjAssignmentEnterpriseFlag19 = 255853003,
    pjAssignmentEnterpriseFlag20 = 255853004,
    pjAssignmentEnterpriseNumber1 = 255853005,
    pjAssignmentEnterpriseNumber2 = 255853006,
    pjAssignmentEnterpriseNumber3 = 255853007,
    pjAssignmentEnterpriseNumber4 = 255853008,
    pjAssignmentEnterpriseNumber5 = 255853009,
    pjAssignmentEnterpriseNumber6 = 255853010,
    pjAssignmentEnterpriseNumber7 = 255853011,
    pjAssignmentEnterpriseNumber8 = 255853012,
    pjAssignmentEnterpriseNumber9 = 255853013,
    pjAssignmentEnterpriseNumber10 = 255853014,
    pjAssignmentEnterpriseNumber11 = 255853015,
    pjAssignmentEnterpriseNumber12 = 255853016,
    pjAssignmentEnterpriseNumber13 = 255853017,
    pjAssignmentEnterpriseNumber14 = 255853018,
    pjAssignmentEnterpriseNumber15 = 255853019,
    pjAssignmentEnterpriseNumber16 = 255853020,
    pjAssignmentEnterpriseNumber17 = 255853021,
    pjAssignmentEnterpriseNumber18 = 255853022,
    pjAssignmentEnterpriseNumber19 = 255853023,
    pjAssignmentEnterpriseNumber20 = 255853024,
    pjAssignmentEnterpriseNumber21 = 255853025,
    pjAssignmentEnterpriseNumber22 = 255853026,
    pjAssignmentEnterpriseNumber23 = 255853027,
    pjAssignmentEnterpriseNumber24 = 255853028,
    pjAssignmentEnterpriseNumber25 = 255853029,
    pjAssignmentEnterpriseNumber26 = 255853030,
    pjAssignmentEnterpriseNumber27 = 255853031,
    pjAssignmentEnterpriseNumber28 = 255853032,
    pjAssignmentEnterpriseNumber29 = 255853033,
    pjAssignmentEnterpriseNumber30 = 255853034,
    pjAssignmentEnterpriseNumber31 = 255853035,
    pjAssignmentEnterpriseNumber32 = 255853036,
    pjAssignmentEnterpriseNumber33 = 255853037,
    pjAssignmentEnterpriseNumber34 = 255853038,
    pjAssignmentEnterpriseNumber35 = 255853039,
    pjAssignmentEnterpriseNumber36 = 255853040,
    pjAssignmentEnterpriseNumber37 = 255853041,
    pjAssignmentEnterpriseNumber38 = 255853042,
    pjAssignmentEnterpriseNumber39 = 255853043,
    pjAssignmentEnterpriseNumber40 = 255853044,
    pjAssignmentEnterpriseText1 = 255853045,
    pjAssignmentEnterpriseText2 = 255853046,
    pjAssignmentEnterpriseText3 = 255853047,
    pjAssignmentEnterpriseText4 = 255853048,
    pjAssignmentEnterpriseText5 = 255853049,
    pjAssignmentEnterpriseText6 = 255853050,
    pjAssignmentEnterpriseText7 = 255853051,
    pjAssignmentEnterpriseText8 = 255853052,
    pjAssignmentEnterpriseText9 = 255853053,
    pjAssignmentEnterpriseText10 = 255853054,
    pjAssignmentEnterpriseText11 = 255853055,
    pjAssignmentEnterpriseText12 = 255853056,
    pjAssignmentEnterpriseText13 = 255853057,
    pjAssignmentEnterpriseText14 = 255853058,
    pjAssignmentEnterpriseText15 = 255853059,
    pjAssignmentEnterpriseText16 = 255853060,
    pjAssignmentEnterpriseText17 = 255853061,
    pjAssignmentEnterpriseText18 = 255853062,
    pjAssignmentEnterpriseText19 = 255853063,
    pjAssignmentEnterpriseText20 = 255853064,
    pjAssignmentEnterpriseText21 = 255853065,
    pjAssignmentEnterpriseText22 = 255853066,
    pjAssignmentEnterpriseText23 = 255853067,
    pjAssignmentEnterpriseText24 = 255853068,
    pjAssignmentEnterpriseText25 = 255853069,
    pjAssignmentEnterpriseText26 = 255853070,
    pjAssignmentEnterpriseText27 = 255853071,
    pjAssignmentEnterpriseText28 = 255853072,
    pjAssignmentEnterpriseText29 = 255853073,
    pjAssignmentEnterpriseText30 = 255853074,
    pjAssignmentEnterpriseText31 = 255853075,
    pjAssignmentEnterpriseText32 = 255853076,
    pjAssignmentEnterpriseText33 = 255853077,
    pjAssignmentEnterpriseText34 = 255853078,
    pjAssignmentEnterpriseText35 = 255853079,
    pjAssignmentEnterpriseText36 = 255853080,
    pjAssignmentEnterpriseText37 = 255853081,
    pjAssignmentEnterpriseText38 = 255853082,
    pjAssignmentEnterpriseText39 = 255853083,
    pjAssignmentEnterpriseText40 = 255853084,
    pjAssignmentEnterpriseResourceOutlineCode1 = 255853089,
    pjAssignmentEnterpriseResourceOutlineCode2 = 255853090,
    pjAssignmentEnterpriseResourceOutlineCode3 = 255853091,
    pjAssignmentEnterpriseResourceOutlineCode4 = 255853092,
    pjAssignmentEnterpriseResourceOutlineCode5 = 255853093,
    pjAssignmentEnterpriseResourceOutlineCode6 = 255853094,
    pjAssignmentEnterpriseResourceOutlineCode7 = 255853095,
    pjAssignmentEnterpriseResourceOutlineCode8 = 255853096,
    pjAssignmentEnterpriseResourceOutlineCode9 = 255853097,
    pjAssignmentEnterpriseResourceOutlineCode10 = 255853098,
    pjAssignmentEnterpriseResourceOutlineCode11 = 255853099,
    pjAssignmentEnterpriseResourceOutlineCode12 = 255853100,
    pjAssignmentEnterpriseResourceOutlineCode13 = 255853101,
    pjAssignmentEnterpriseResourceOutlineCode14 = 255853102,
    pjAssignmentEnterpriseResourceOutlineCode15 = 255853103,
    pjAssignmentEnterpriseResourceOutlineCode16 = 255853104,
    pjAssignmentEnterpriseResourceOutlineCode17 = 255853105,
    pjAssignmentEnterpriseResourceOutlineCode18 = 255853106,
    pjAssignmentEnterpriseResourceOutlineCode19 = 255853107,
    pjAssignmentEnterpriseResourceOutlineCode20 = 255853108,
    pjAssignmentEnterpriseResourceOutlineCode21 = 255853109,
    pjAssignmentEnterpriseResourceOutlineCode22 = 255853110,
    pjAssignmentEnterpriseResourceOutlineCode23 = 255853111,
    pjAssignmentEnterpriseResourceOutlineCode24 = 255853112,
    pjAssignmentEnterpriseResourceOutlineCode25 = 255853113,
    pjAssignmentEnterpriseResourceOutlineCode26 = 255853114,
    pjAssignmentEnterpriseResourceOutlineCode27 = 255853115,
    pjAssignmentEnterpriseResourceOutlineCode28 = 255853116,
    pjAssignmentEnterpriseResourceOutlineCode29 = 255853117,
    pjAssignmentEnterpriseResourceRBS = 255853118,
    pjAssignmentResourceRequestType = 255853149,
    pjAssignmentEnterpriseTeamMember = 255853151
};

enum PjField
{
    pjTaskWork = 188743680,
    pjTaskBaselineWork = 188743681,
    pjTaskActualWork = 188743682,
    pjTaskWorkVariance = 188743683,
    pjTaskRemainingWork = 188743684,
    pjTaskCost = 188743685,
    pjTaskBaselineCost = 188743686,
    pjTaskActualCost = 188743687,
    pjTaskFixedCost = 188743688,
    pjTaskCostVariance = 188743689,
    pjTaskRemainingCost = 188743690,
    pjTaskBCWP = 188743691,
    pjTaskBCWS = 188743692,
    pjTaskSV = 188743693,
    pjTaskName = 188743694,
    pjTaskNotes = 188743695,
    pjTaskWBS = 188743696,
    pjTaskConstraintType = 188743697,
    pjTaskConstraintDate = 188743698,
    pjTaskCritical = 188743699,
    pjTaskLevelDelay = 188743700,
    pjTaskFreeSlack = 188743701,
    pjTaskTotalSlack = 188743702,
    pjTaskID = 188743703,
    pjTaskMilestone = 188743704,
    pjTaskPriority = 188743705,
    pjTaskSubproject = 188743706,
    pjTaskBaselineDuration = 188743707,
    pjTaskActualDuration = 188743708,
    pjTaskDuration = 188743709,
    pjTaskDurationVariance = 188743710,
    pjTaskRemainingDuration = 188743711,
    pjTaskPercentComplete = 188743712,
    pjTaskPercentWorkComplete = 188743713,
    pjTaskFixedDuration = 188743714,
    pjTaskStart = 188743715,
    pjTaskFinish = 188743716,
    pjTaskEarlyStart = 188743717,
    pjTaskEarlyFinish = 188743718,
    pjTaskLateStart = 188743719,
    pjTaskLateFinish = 188743720,
    pjTaskActualStart = 188743721,
    pjTaskActualFinish = 188743722,
    pjTaskBaselineStart = 188743723,
    pjTaskBaselineFinish = 188743724,
    pjTaskStartVariance = 188743725,
    pjTaskFinishVariance = 188743726,
    pjTaskPredecessors = 188743727,
    pjTaskSuccessors = 188743728,
    pjTaskResourceNames = 188743729,
    pjTaskResourceInitials = 188743730,
    pjTaskText1 = 188743731,
    pjTaskStart1 = 188743732,
    pjTaskFinish1 = 188743733,
    pjTaskText2 = 188743734,
    pjTaskStart2 = 188743735,
    pjTaskFinish2 = 188743736,
    pjTaskText3 = 188743737,
    pjTaskStart3 = 188743738,
    pjTaskFinish3 = 188743739,
    pjTaskText4 = 188743740,
    pjTaskStart4 = 188743741,
    pjTaskFinish4 = 188743742,
    pjTaskText5 = 188743743,
    pjTaskStart5 = 188743744,
    pjTaskFinish5 = 188743745,
    pjTaskText6 = 188743746,
    pjTaskText7 = 188743747,
    pjTaskText8 = 188743748,
    pjTaskText9 = 188743749,
    pjTaskText10 = 188743750,
    pjTaskMarked = 188743751,
    pjTaskFlag1 = 188743752,
    pjTaskFlag2 = 188743753,
    pjTaskFlag3 = 188743754,
    pjTaskFlag4 = 188743755,
    pjTaskFlag5 = 188743756,
    pjTaskFlag6 = 188743757,
    pjTaskFlag7 = 188743758,
    pjTaskFlag8 = 188743759,
    pjTaskFlag9 = 188743760,
    pjTaskFlag10 = 188743761,
    pjTaskRollup = 188743762,
    pjTaskCV = 188743763,
    pjTaskProject = 188743764,
    pjTaskOutlineLevel = 188743765,
    pjTaskUniqueID = 188743766,
    pjTaskNumber1 = 188743767,
    pjTaskNumber2 = 188743768,
    pjTaskNumber3 = 188743769,
    pjTaskNumber4 = 188743770,
    pjTaskNumber5 = 188743771,
    pjTaskSummary = 188743772,
    pjTaskCreated = 188743773,
    pjTaskSheetNotes = 188743774,
    pjTaskUniquePredecessors = 188743775,
    pjTaskUniqueSuccessors = 188743776,
    pjTaskObjects = 188743777,
    pjTaskLinkedFields = 188743778,
    pjTaskResume = 188743779,
    pjTaskStop = 188743780,
    pjTaskResumeNoEarlierThan = 188743781,
    pjTaskOutlineNumber = 188743782,
    pjTaskDuration1 = 188743783,
    pjTaskDuration2 = 188743784,
    pjTaskDuration3 = 188743785,
    pjTaskCost1 = 188743786,
    pjTaskCost2 = 188743787,
    pjTaskCost3 = 188743788,
    pjTaskHideBar = 188743789,
    pjTaskConfirmed = 188743790,
    pjTaskUpdateNeeded = 188743791,
    pjTaskContact = 188743792,
    pjTaskResourceGroup = 188743793,
    pjTaskACWP = 188743800,
    pjTaskType = 188743808,
    pjTaskRecurring = 188743809,
    pjTaskEffortDriven = 188743812,
    pjTaskParentTask = 188743815,
    pjTaskOvertimeWork = 188743843,
    pjTaskActualOvertimeWork = 188743844,
    pjTaskRemainingOvertimeWork = 188743845,
    pjTaskRegularWork = 188743846,
    pjTaskOvertimeCost = 188743848,
    pjTaskActualOvertimeCost = 188743849,
    pjTaskRemainingOvertimeCost = 188743850,
    pjTaskFixedCostAccrual = 188743880,
    pjTaskIndicators = 188743885,
    pjTaskHyperlink = 188743897,
    pjTaskHyperlinkAddress = 188743898,
    pjTaskHyperlinkSubAddress = 188743899,
    pjTaskHyperlinkHref = 188743900,
    pjTaskIsAssignment = 188743904,
    pjTaskOverallocated = 188743905,
    pjTaskExternalTask = 188743912,
    pjTaskSubprojectReadOnly = 188743926,
    pjTaskResponsePending = 188743930,
    pjTaskTeamStatusPending = 188743931,
    pjTaskLevelCanSplit = 188743932,
    pjTaskLevelAssignments = 188743933,
    pjTaskWorkContour = 188743936,
    pjTaskCost4 = 188743938,
    pjTaskCost5 = 188743939,
    pjTaskCost6 = 188743940,
    pjTaskCost7 = 188743941,
    pjTaskCost8 = 188743942,
    pjTaskCost9 = 188743943,
    pjTaskCost10 = 188743944,
    pjTaskDate1 = 188743945,
    pjTaskDate2 = 188743946,
    pjTaskDate3 = 188743947,
    pjTaskDate4 = 188743948,
    pjTaskDate5 = 188743949,
    pjTaskDate6 = 188743950,
    pjTaskDate7 = 188743951,
    pjTaskDate8 = 188743952,
    pjTaskDate9 = 188743953,
    pjTaskDate10 = 188743954,
    pjTaskDuration4 = 188743955,
    pjTaskDuration5 = 188743956,
    pjTaskDuration6 = 188743957,
    pjTaskDuration7 = 188743958,
    pjTaskDuration8 = 188743959,
    pjTaskDuration9 = 188743960,
    pjTaskDuration10 = 188743961,
    pjTaskStart6 = 188743962,
    pjTaskFinish6 = 188743963,
    pjTaskStart7 = 188743964,
    pjTaskFinish7 = 188743965,
    pjTaskStart8 = 188743966,
    pjTaskFinish8 = 188743967,
    pjTaskStart9 = 188743968,
    pjTaskFinish9 = 188743969,
    pjTaskStart10 = 188743970,
    pjTaskFinish10 = 188743971,
    pjTaskFlag11 = 188743972,
    pjTaskFlag12 = 188743973,
    pjTaskFlag13 = 188743974,
    pjTaskFlag14 = 188743975,
    pjTaskFlag15 = 188743976,
    pjTaskFlag16 = 188743977,
    pjTaskFlag17 = 188743978,
    pjTaskFlag18 = 188743979,
    pjTaskFlag19 = 188743980,
    pjTaskFlag20 = 188743981,
    pjTaskNumber6 = 188743982,
    pjTaskNumber7 = 188743983,
    pjTaskNumber8 = 188743984,
    pjTaskNumber9 = 188743985,
    pjTaskNumber10 = 188743986,
    pjTaskNumber11 = 188743987,
    pjTaskNumber12 = 188743988,
    pjTaskNumber13 = 188743989,
    pjTaskNumber14 = 188743990,
    pjTaskNumber15 = 188743991,
    pjTaskNumber16 = 188743992,
    pjTaskNumber17 = 188743993,
    pjTaskNumber18 = 188743994,
    pjTaskNumber19 = 188743995,
    pjTaskNumber20 = 188743996,
    pjTaskText11 = 188743997,
    pjTaskText12 = 188743998,
    pjTaskText13 = 188743999,
    pjTaskText14 = 188744000,
    pjTaskText15 = 188744001,
    pjTaskText16 = 188744002,
    pjTaskText17 = 188744003,
    pjTaskText18 = 188744004,
    pjTaskText19 = 188744005,
    pjTaskText20 = 188744006,
    pjTaskText21 = 188744007,
    pjTaskText22 = 188744008,
    pjTaskText23 = 188744009,
    pjTaskText24 = 188744010,
    pjTaskText25 = 188744011,
    pjTaskText26 = 188744012,
    pjTaskText27 = 188744013,
    pjTaskText28 = 188744014,
    pjTaskText29 = 188744015,
    pjTaskText30 = 188744016,
    pjTaskResourcePhonetics = 188744029,
    pjTaskIndex = 188744040,
    pjTaskAssignmentDelay = 188744046,
    pjTaskAssignmentUnits = 188744047,
    pjTaskCostRateTable = 188744048,
    pjTaskPreleveledStart = 188744049,
    pjTaskPreleveledFinish = 188744050,
    pjTaskEstimated = 188744076,
    pjTaskIgnoreResourceCalendar = 188744079,
    pjTaskCalendar = 188744082,
    pjTaskDuration1Estimated = 188744083,
    pjTaskDuration2Estimated = 188744084,
    pjTaskDuration3Estimated = 188744085,
    pjTaskDuration4Estimated = 188744086,
    pjTaskDuration5Estimated = 188744087,
    pjTaskDuration6Estimated = 188744088,
    pjTaskDuration7Estimated = 188744089,
    pjTaskDuration8Estimated = 188744090,
    pjTaskDuration9Estimated = 188744091,
    pjTaskDuration10Estimated = 188744092,
    pjTaskBaselineDurationEstimated = 188744093,
    pjTaskOutlineCode1 = 188744096,
    pjTaskOutlineCode2 = 188744098,
    pjTaskOutlineCode3 = 188744100,
    pjTaskOutlineCode4 = 188744102,
    pjTaskOutlineCode5 = 188744104,
    pjTaskOutlineCode6 = 188744106,
    pjTaskOutlineCode7 = 188744108,
    pjTaskOutlineCode8 = 188744110,
    pjTaskOutlineCode9 = 188744112,
    pjTaskOutlineCode10 = 188744114,
    pjTaskDeadline = 188744117,
    pjTaskStartSlack = 188744118,
    pjTaskFinishSlack = 188744119,
    pjTaskVAC = 188744121,
    pjTaskGroupBySummary = 188744126,
    pjTaskWBSPredecessors = 188744129,
    pjTaskWBSSuccessors = 188744130,
    pjTaskResourceType = 188744131,
    pjTaskHyperlinkScreenTip = 188744132,
    pjTaskBaseline1Start = 188744162,
    pjTaskBaseline1Finish = 188744163,
    pjTaskBaseline1Cost = 188744164,
    pjTaskBaseline1Work = 188744165,
    pjTaskBaseline1Duration = 188744167,
    pjTaskBaseline2Start = 188744173,
    pjTaskBaseline2Finish = 188744174,
    pjTaskBaseline2Cost = 188744175,
    pjTaskBaseline2Work = 188744176,
    pjTaskBaseline2Duration = 188744178,
    pjTaskBaseline3Start = 188744184,
    pjTaskBaseline3Finish = 188744185,
    pjTaskBaseline3Cost = 188744186,
    pjTaskBaseline3Work = 188744187,
    pjTaskBaseline3Duration = 188744189,
    pjTaskBaseline4Start = 188744195,
    pjTaskBaseline4Finish = 188744196,
    pjTaskBaseline4Cost = 188744197,
    pjTaskBaseline4Work = 188744198,
    pjTaskBaseline4Duration = 188744200,
    pjTaskBaseline5Start = 188744206,
    pjTaskBaseline5Finish = 188744207,
    pjTaskBaseline5Cost = 188744208,
    pjTaskBaseline5Work = 188744209,
    pjTaskBaseline5Duration = 188744211,
    pjTaskCPI = 188744217,
    pjTaskSPI = 188744218,
    pjTaskCVPercent = 188744219,
    pjTaskSVPercent = 188744220,
    pjTaskEAC = 188744221,
    pjTaskTCPI = 188744222,
    pjTaskStatus = 188744223,
    pjTaskBaseline6Start = 188744224,
    pjTaskBaseline6Finish = 188744225,
    pjTaskBaseline6Cost = 188744226,
    pjTaskBaseline6Work = 188744227,
    pjTaskBaseline6Duration = 188744229,
    pjTaskBaseline7Start = 188744235,
    pjTaskBaseline7Finish = 188744236,
    pjTaskBaseline7Cost = 188744237,
    pjTaskBaseline7Work = 188744238,
    pjTaskBaseline7Duration = 188744240,
    pjTaskBaseline8Start = 188744246,
    pjTaskBaseline8Finish = 188744247,
    pjTaskBaseline8Cost = 188744248,
    pjTaskBaseline8Work = 188744249,
    pjTaskBaseline8Duration = 188744251,
    pjTaskBaseline9Start = 188744257,
    pjTaskBaseline9Finish = 188744258,
    pjTaskBaseline9Cost = 188744259,
    pjTaskBaseline9Work = 188744260,
    pjTaskBaseline9Duration = 188744262,
    pjTaskBaseline10Start = 188744268,
    pjTaskBaseline10Finish = 188744269,
    pjTaskBaseline10Cost = 188744270,
    pjTaskBaseline10Work = 188744271,
    pjTaskBaseline10Duration = 188744273,
    pjTaskEnterpriseCost1 = 188744279,
    pjTaskEnterpriseCost2 = 188744280,
    pjTaskEnterpriseCost3 = 188744281,
    pjTaskEnterpriseCost4 = 188744282,
    pjTaskEnterpriseCost5 = 188744283,
    pjTaskEnterpriseCost6 = 188744284,
    pjTaskEnterpriseCost7 = 188744285,
    pjTaskEnterpriseCost8 = 188744286,
    pjTaskEnterpriseCost9 = 188744287,
    pjTaskEnterpriseCost10 = 188744288,
    pjTaskEnterpriseDate1 = 188744289,
    pjTaskEnterpriseDate2 = 188744290,
    pjTaskEnterpriseDate3 = 188744291,
    pjTaskEnterpriseDate4 = 188744292,
    pjTaskEnterpriseDate5 = 188744293,
    pjTaskEnterpriseDate6 = 188744294,
    pjTaskEnterpriseDate7 = 188744295,
    pjTaskEnterpriseDate8 = 188744296,
    pjTaskEnterpriseDate9 = 188744297,
    pjTaskEnterpriseDate10 = 188744298,
    pjTaskEnterpriseDate11 = 188744299,
    pjTaskEnterpriseDate12 = 188744300,
    pjTaskEnterpriseDate13 = 188744301,
    pjTaskEnterpriseDate14 = 188744302,
    pjTaskEnterpriseDate15 = 188744303,
    pjTaskEnterpriseDate16 = 188744304,
    pjTaskEnterpriseDate17 = 188744305,
    pjTaskEnterpriseDate18 = 188744306,
    pjTaskEnterpriseDate19 = 188744307,
    pjTaskEnterpriseDate20 = 188744308,
    pjTaskEnterpriseDate21 = 188744309,
    pjTaskEnterpriseDate22 = 188744310,
    pjTaskEnterpriseDate23 = 188744311,
    pjTaskEnterpriseDate24 = 188744312,
    pjTaskEnterpriseDate25 = 188744313,
    pjTaskEnterpriseDate26 = 188744314,
    pjTaskEnterpriseDate27 = 188744315,
    pjTaskEnterpriseDate28 = 188744316,
    pjTaskEnterpriseDate29 = 188744317,
    pjTaskEnterpriseDate30 = 188744318,
    pjTaskEnterpriseDuration1 = 188744319,
    pjTaskEnterpriseDuration2 = 188744320,
    pjTaskEnterpriseDuration3 = 188744321,
    pjTaskEnterpriseDuration4 = 188744322,
    pjTaskEnterpriseDuration5 = 188744323,
    pjTaskEnterpriseDuration6 = 188744324,
    pjTaskEnterpriseDuration7 = 188744325,
    pjTaskEnterpriseDuration8 = 188744326,
    pjTaskEnterpriseDuration9 = 188744327,
    pjTaskEnterpriseDuration10 = 188744328,
    pjTaskEnterpriseFlag1 = 188744339,
    pjTaskEnterpriseFlag2 = 188744340,
    pjTaskEnterpriseFlag3 = 188744341,
    pjTaskEnterpriseFlag4 = 188744342,
    pjTaskEnterpriseFlag5 = 188744343,
    pjTaskEnterpriseFlag6 = 188744344,
    pjTaskEnterpriseFlag7 = 188744345,
    pjTaskEnterpriseFlag8 = 188744346,
    pjTaskEnterpriseFlag9 = 188744347,
    pjTaskEnterpriseFlag10 = 188744348,
    pjTaskEnterpriseFlag11 = 188744349,
    pjTaskEnterpriseFlag12 = 188744350,
    pjTaskEnterpriseFlag13 = 188744351,
    pjTaskEnterpriseFlag14 = 188744352,
    pjTaskEnterpriseFlag15 = 188744353,
    pjTaskEnterpriseFlag16 = 188744354,
    pjTaskEnterpriseFlag17 = 188744355,
    pjTaskEnterpriseFlag18 = 188744356,
    pjTaskEnterpriseFlag19 = 188744357,
    pjTaskEnterpriseFlag20 = 188744358,
    pjTaskEnterpriseNumber1 = 188744379,
    pjTaskEnterpriseNumber2 = 188744380,
    pjTaskEnterpriseNumber3 = 188744381,
    pjTaskEnterpriseNumber4 = 188744382,
    pjTaskEnterpriseNumber5 = 188744383,
    pjTaskEnterpriseNumber6 = 188744384,
    pjTaskEnterpriseNumber7 = 188744385,
    pjTaskEnterpriseNumber8 = 188744386,
    pjTaskEnterpriseNumber9 = 188744387,
    pjTaskEnterpriseNumber10 = 188744388,
    pjTaskEnterpriseNumber11 = 188744389,
    pjTaskEnterpriseNumber12 = 188744390,
    pjTaskEnterpriseNumber13 = 188744391,
    pjTaskEnterpriseNumber14 = 188744392,
    pjTaskEnterpriseNumber15 = 188744393,
    pjTaskEnterpriseNumber16 = 188744394,
    pjTaskEnterpriseNumber17 = 188744395,
    pjTaskEnterpriseNumber18 = 188744396,
    pjTaskEnterpriseNumber19 = 188744397,
    pjTaskEnterpriseNumber20 = 188744398,
    pjTaskEnterpriseNumber21 = 188744399,
    pjTaskEnterpriseNumber22 = 188744400,
    pjTaskEnterpriseNumber23 = 188744401,
    pjTaskEnterpriseNumber24 = 188744402,
    pjTaskEnterpriseNumber25 = 188744403,
    pjTaskEnterpriseNumber26 = 188744404,
    pjTaskEnterpriseNumber27 = 188744405,
    pjTaskEnterpriseNumber28 = 188744406,
    pjTaskEnterpriseNumber29 = 188744407,
    pjTaskEnterpriseNumber30 = 188744408,
    pjTaskEnterpriseNumber31 = 188744409,
    pjTaskEnterpriseNumber32 = 188744410,
    pjTaskEnterpriseNumber33 = 188744411,
    pjTaskEnterpriseNumber34 = 188744412,
    pjTaskEnterpriseNumber35 = 188744413,
    pjTaskEnterpriseNumber36 = 188744414,
    pjTaskEnterpriseNumber37 = 188744415,
    pjTaskEnterpriseNumber38 = 188744416,
    pjTaskEnterpriseNumber39 = 188744417,
    pjTaskEnterpriseNumber40 = 188744418,
    pjTaskEnterpriseOutlineCode1 = 188744419,
    pjTaskEnterpriseOutlineCode2 = 188744421,
    pjTaskEnterpriseOutlineCode3 = 188744423,
    pjTaskEnterpriseOutlineCode4 = 188744425,
    pjTaskEnterpriseOutlineCode5 = 188744427,
    pjTaskEnterpriseOutlineCode6 = 188744429,
    pjTaskEnterpriseOutlineCode7 = 188744431,
    pjTaskEnterpriseOutlineCode8 = 188744433,
    pjTaskEnterpriseOutlineCode9 = 188744435,
    pjTaskEnterpriseOutlineCode10 = 188744437,
    pjTaskEnterpriseOutlineCode11 = 188744439,
    pjTaskEnterpriseOutlineCode12 = 188744441,
    pjTaskEnterpriseOutlineCode13 = 188744443,
    pjTaskEnterpriseOutlineCode14 = 188744445,
    pjTaskEnterpriseOutlineCode15 = 188744447,
    pjTaskEnterpriseOutlineCode16 = 188744449,
    pjTaskEnterpriseOutlineCode17 = 188744451,
    pjTaskEnterpriseOutlineCode18 = 188744453,
    pjTaskEnterpriseOutlineCode19 = 188744455,
    pjTaskEnterpriseOutlineCode20 = 188744457,
    pjTaskEnterpriseOutlineCode21 = 188744459,
    pjTaskEnterpriseOutlineCode22 = 188744461,
    pjTaskEnterpriseOutlineCode23 = 188744463,
    pjTaskEnterpriseOutlineCode24 = 188744465,
    pjTaskEnterpriseOutlineCode25 = 188744467,
    pjTaskEnterpriseOutlineCode26 = 188744469,
    pjTaskEnterpriseOutlineCode27 = 188744471,
    pjTaskEnterpriseOutlineCode28 = 188744473,
    pjTaskEnterpriseOutlineCode29 = 188744475,
    pjTaskEnterpriseOutlineCode30 = 188744477,
    pjTaskEnterpriseText1 = 188744479,
    pjTaskEnterpriseText2 = 188744480,
    pjTaskEnterpriseText3 = 188744481,
    pjTaskEnterpriseText4 = 188744482,
    pjTaskEnterpriseText5 = 188744483,
    pjTaskEnterpriseText6 = 188744484,
    pjTaskEnterpriseText7 = 188744485,
    pjTaskEnterpriseText8 = 188744486,
    pjTaskEnterpriseText9 = 188744487,
    pjTaskEnterpriseText10 = 188744488,
    pjTaskEnterpriseText11 = 188744489,
    pjTaskEnterpriseText12 = 188744490,
    pjTaskEnterpriseText13 = 188744491,
    pjTaskEnterpriseText14 = 188744492,
    pjTaskEnterpriseText15 = 188744493,
    pjTaskEnterpriseText16 = 188744494,
    pjTaskEnterpriseText17 = 188744495,
    pjTaskEnterpriseText18 = 188744496,
    pjTaskEnterpriseText19 = 188744497,
    pjTaskEnterpriseText20 = 188744498,
    pjTaskEnterpriseText21 = 188744499,
    pjTaskEnterpriseText22 = 188744500,
    pjTaskEnterpriseText23 = 188744501,
    pjTaskEnterpriseText24 = 188744502,
    pjTaskEnterpriseText25 = 188744503,
    pjTaskEnterpriseText26 = 188744504,
    pjTaskEnterpriseText27 = 188744505,
    pjTaskEnterpriseText28 = 188744506,
    pjTaskEnterpriseText29 = 188744507,
    pjTaskEnterpriseText30 = 188744508,
    pjTaskEnterpriseText31 = 188744509,
    pjTaskEnterpriseText32 = 188744510,
    pjTaskEnterpriseText33 = 188744511,
    pjTaskEnterpriseText34 = 188744512,
    pjTaskEnterpriseText35 = 188744513,
    pjTaskEnterpriseText36 = 188744514,
    pjTaskEnterpriseText37 = 188744515,
    pjTaskEnterpriseText38 = 188744516,
    pjTaskEnterpriseText39 = 188744517,
    pjTaskEnterpriseText40 = 188744518,
    pjTaskBaseline1DurationEstimated = 188744519,
    pjTaskBaseline2DurationEstimated = 188744520,
    pjTaskBaseline3DurationEstimated = 188744521,
    pjTaskBaseline4DurationEstimated = 188744522,
    pjTaskBaseline5DurationEstimated = 188744523,
    pjTaskBaseline6DurationEstimated = 188744524,
    pjTaskBaseline7DurationEstimated = 188744525,
    pjTaskBaseline8DurationEstimated = 188744526,
    pjTaskBaseline9DurationEstimated = 188744527,
    pjTaskBaseline10DurationEstimated = 188744528,
    pjTaskEnterpriseProjectCost1 = 188744529,
    pjTaskEnterpriseProjectCost2 = 188744530,
    pjTaskEnterpriseProjectCost3 = 188744531,
    pjTaskEnterpriseProjectCost4 = 188744532,
    pjTaskEnterpriseProjectCost5 = 188744533,
    pjTaskEnterpriseProjectCost6 = 188744534,
    pjTaskEnterpriseProjectCost7 = 188744535,
    pjTaskEnterpriseProjectCost8 = 188744536,
    pjTaskEnterpriseProjectCost9 = 188744537,
    pjTaskEnterpriseProjectCost10 = 188744538,
    pjTaskEnterpriseProjectDate1 = 188744539,
    pjTaskEnterpriseProjectDate2 = 188744540,
    pjTaskEnterpriseProjectDate3 = 188744541,
    pjTaskEnterpriseProjectDate4 = 188744542,
    pjTaskEnterpriseProjectDate5 = 188744543,
    pjTaskEnterpriseProjectDate6 = 188744544,
    pjTaskEnterpriseProjectDate7 = 188744545,
    pjTaskEnterpriseProjectDate8 = 188744546,
    pjTaskEnterpriseProjectDate9 = 188744547,
    pjTaskEnterpriseProjectDate10 = 188744548,
    pjTaskEnterpriseProjectDate11 = 188744549,
    pjTaskEnterpriseProjectDate12 = 188744550,
    pjTaskEnterpriseProjectDate13 = 188744551,
    pjTaskEnterpriseProjectDate14 = 188744552,
    pjTaskEnterpriseProjectDate15 = 188744553,
    pjTaskEnterpriseProjectDate16 = 188744554,
    pjTaskEnterpriseProjectDate17 = 188744555,
    pjTaskEnterpriseProjectDate18 = 188744556,
    pjTaskEnterpriseProjectDate19 = 188744557,
    pjTaskEnterpriseProjectDate20 = 188744558,
    pjTaskEnterpriseProjectDate21 = 188744559,
    pjTaskEnterpriseProjectDate22 = 188744560,
    pjTaskEnterpriseProjectDate23 = 188744561,
    pjTaskEnterpriseProjectDate24 = 188744562,
    pjTaskEnterpriseProjectDate25 = 188744563,
    pjTaskEnterpriseProjectDate26 = 188744564,
    pjTaskEnterpriseProjectDate27 = 188744565,
    pjTaskEnterpriseProjectDate28 = 188744566,
    pjTaskEnterpriseProjectDate29 = 188744567,
    pjTaskEnterpriseProjectDate30 = 188744568,
    pjTaskEnterpriseProjectDuration1 = 188744569,
    pjTaskEnterpriseProjectDuration2 = 188744570,
    pjTaskEnterpriseProjectDuration3 = 188744571,
    pjTaskEnterpriseProjectDuration4 = 188744572,
    pjTaskEnterpriseProjectDuration5 = 188744573,
    pjTaskEnterpriseProjectDuration6 = 188744574,
    pjTaskEnterpriseProjectDuration7 = 188744575,
    pjTaskEnterpriseProjectDuration8 = 188744576,
    pjTaskEnterpriseProjectDuration9 = 188744577,
    pjTaskEnterpriseProjectDuration10 = 188744578,
    pjTaskEnterpriseProjectOutlineCode1 = 188744589,
    pjTaskEnterpriseProjectOutlineCode2 = 188744590,
    pjTaskEnterpriseProjectOutlineCode3 = 188744591,
    pjTaskEnterpriseProjectOutlineCode4 = 188744592,
    pjTaskEnterpriseProjectOutlineCode5 = 188744593,
    pjTaskEnterpriseProjectOutlineCode6 = 188744594,
    pjTaskEnterpriseProjectOutlineCode7 = 188744595,
    pjTaskEnterpriseProjectOutlineCode8 = 188744596,
    pjTaskEnterpriseProjectOutlineCode9 = 188744597,
    pjTaskEnterpriseProjectOutlineCode10 = 188744598,
    pjTaskEnterpriseProjectOutlineCode11 = 188744599,
    pjTaskEnterpriseProjectOutlineCode12 = 188744600,
    pjTaskEnterpriseProjectOutlineCode13 = 188744601,
    pjTaskEnterpriseProjectOutlineCode14 = 188744602,
    pjTaskEnterpriseProjectOutlineCode15 = 188744603,
    pjTaskEnterpriseProjectOutlineCode16 = 188744604,
    pjTaskEnterpriseProjectOutlineCode17 = 188744605,
    pjTaskEnterpriseProjectOutlineCode18 = 188744606,
    pjTaskEnterpriseProjectOutlineCode19 = 188744607,
    pjTaskEnterpriseProjectOutlineCode20 = 188744608,
    pjTaskEnterpriseProjectOutlineCode21 = 188744609,
    pjTaskEnterpriseProjectOutlineCode22 = 188744610,
    pjTaskEnterpriseProjectOutlineCode23 = 188744611,
    pjTaskEnterpriseProjectOutlineCode24 = 188744612,
    pjTaskEnterpriseProjectOutlineCode25 = 188744613,
    pjTaskEnterpriseProjectOutlineCode26 = 188744614,
    pjTaskEnterpriseProjectOutlineCode27 = 188744615,
    pjTaskEnterpriseProjectOutlineCode28 = 188744616,
    pjTaskEnterpriseProjectOutlineCode29 = 188744617,
    pjTaskEnterpriseProjectOutlineCode30 = 188744618,
    pjTaskEnterpriseProjectFlag1 = 188744649,
    pjTaskEnterpriseProjectFlag2 = 188744650,
    pjTaskEnterpriseProjectFlag3 = 188744651,
    pjTaskEnterpriseProjectFlag4 = 188744652,
    pjTaskEnterpriseProjectFlag5 = 188744653,
    pjTaskEnterpriseProjectFlag6 = 188744654,
    pjTaskEnterpriseProjectFlag7 = 188744655,
    pjTaskEnterpriseProjectFlag8 = 188744656,
    pjTaskEnterpriseProjectFlag9 = 188744657,
    pjTaskEnterpriseProjectFlag10 = 188744658,
    pjTaskEnterpriseProjectFlag11 = 188744659,
    pjTaskEnterpriseProjectFlag12 = 188744660,
    pjTaskEnterpriseProjectFlag13 = 188744661,
    pjTaskEnterpriseProjectFlag14 = 188744662,
    pjTaskEnterpriseProjectFlag15 = 188744663,
    pjTaskEnterpriseProjectFlag16 = 188744664,
    pjTaskEnterpriseProjectFlag17 = 188744665,
    pjTaskEnterpriseProjectFlag18 = 188744666,
    pjTaskEnterpriseProjectFlag19 = 188744667,
    pjTaskEnterpriseProjectFlag20 = 188744668,
    pjTaskEnterpriseProjectNumber1 = 188744689,
    pjTaskEnterpriseProjectNumber2 = 188744690,
    pjTaskEnterpriseProjectNumber3 = 188744691,
    pjTaskEnterpriseProjectNumber4 = 188744692,
    pjTaskEnterpriseProjectNumber5 = 188744693,
    pjTaskEnterpriseProjectNumber6 = 188744694,
    pjTaskEnterpriseProjectNumber7 = 188744695,
    pjTaskEnterpriseProjectNumber8 = 188744696,
    pjTaskEnterpriseProjectNumber9 = 188744697,
    pjTaskEnterpriseProjectNumber10 = 188744698,
    pjTaskEnterpriseProjectNumber11 = 188744699,
    pjTaskEnterpriseProjectNumber12 = 188744700,
    pjTaskEnterpriseProjectNumber13 = 188744701,
    pjTaskEnterpriseProjectNumber14 = 188744702,
    pjTaskEnterpriseProjectNumber15 = 188744703,
    pjTaskEnterpriseProjectNumber16 = 188744704,
    pjTaskEnterpriseProjectNumber17 = 188744705,
    pjTaskEnterpriseProjectNumber18 = 188744706,
    pjTaskEnterpriseProjectNumber19 = 188744707,
    pjTaskEnterpriseProjectNumber20 = 188744708,
    pjTaskEnterpriseProjectNumber21 = 188744709,
    pjTaskEnterpriseProjectNumber22 = 188744710,
    pjTaskEnterpriseProjectNumber23 = 188744711,
    pjTaskEnterpriseProjectNumber24 = 188744712,
    pjTaskEnterpriseProjectNumber25 = 188744713,
    pjTaskEnterpriseProjectNumber26 = 188744714,
    pjTaskEnterpriseProjectNumber27 = 188744715,
    pjTaskEnterpriseProjectNumber28 = 188744716,
    pjTaskEnterpriseProjectNumber29 = 188744717,
    pjTaskEnterpriseProjectNumber30 = 188744718,
    pjTaskEnterpriseProjectNumber31 = 188744719,
    pjTaskEnterpriseProjectNumber32 = 188744720,
    pjTaskEnterpriseProjectNumber33 = 188744721,
    pjTaskEnterpriseProjectNumber34 = 188744722,
    pjTaskEnterpriseProjectNumber35 = 188744723,
    pjTaskEnterpriseProjectNumber36 = 188744724,
    pjTaskEnterpriseProjectNumber37 = 188744725,
    pjTaskEnterpriseProjectNumber38 = 188744726,
    pjTaskEnterpriseProjectNumber39 = 188744727,
    pjTaskEnterpriseProjectNumber40 = 188744728,
    pjTaskEnterpriseProjectText1 = 188744729,
    pjTaskEnterpriseProjectText2 = 188744730,
    pjTaskEnterpriseProjectText3 = 188744731,
    pjTaskEnterpriseProjectText4 = 188744732,
    pjTaskEnterpriseProjectText5 = 188744733,
    pjTaskEnterpriseProjectText6 = 188744734,
    pjTaskEnterpriseProjectText7 = 188744735,
    pjTaskEnterpriseProjectText8 = 188744736,
    pjTaskEnterpriseProjectText9 = 188744737,
    pjTaskEnterpriseProjectText10 = 188744738,
    pjTaskEnterpriseProjectText11 = 188744739,
    pjTaskEnterpriseProjectText12 = 188744740,
    pjTaskEnterpriseProjectText13 = 188744741,
    pjTaskEnterpriseProjectText14 = 188744742,
    pjTaskEnterpriseProjectText15 = 188744743,
    pjTaskEnterpriseProjectText16 = 188744744,
    pjTaskEnterpriseProjectText17 = 188744745,
    pjTaskEnterpriseProjectText18 = 188744746,
    pjTaskEnterpriseProjectText19 = 188744747,
    pjTaskEnterpriseProjectText20 = 188744748,
    pjTaskEnterpriseProjectText21 = 188744749,
    pjTaskEnterpriseProjectText22 = 188744750,
    pjTaskEnterpriseProjectText23 = 188744751,
    pjTaskEnterpriseProjectText24 = 188744752,
    pjTaskEnterpriseProjectText25 = 188744753,
    pjTaskEnterpriseProjectText26 = 188744754,
    pjTaskEnterpriseProjectText27 = 188744755,
    pjTaskEnterpriseProjectText28 = 188744756,
    pjTaskEnterpriseProjectText29 = 188744757,
    pjTaskEnterpriseProjectText30 = 188744758,
    pjTaskEnterpriseProjectText31 = 188744759,
    pjTaskEnterpriseProjectText32 = 188744760,
    pjTaskEnterpriseProjectText33 = 188744761,
    pjTaskEnterpriseProjectText34 = 188744762,
    pjTaskEnterpriseProjectText35 = 188744763,
    pjTaskEnterpriseProjectText36 = 188744764,
    pjTaskEnterpriseProjectText37 = 188744765,
    pjTaskEnterpriseProjectText38 = 188744766,
    pjTaskEnterpriseProjectText39 = 188744767,
    pjTaskEnterpriseProjectText40 = 188744768,
    pjTaskResourceEnterpriseOutlineCode1 = 188744769,
    pjTaskResourceEnterpriseOutlineCode2 = 188744770,
    pjTaskResourceEnterpriseOutlineCode3 = 188744771,
    pjTaskResourceEnterpriseOutlineCode4 = 188744772,
    pjTaskResourceEnterpriseOutlineCode5 = 188744773,
    pjTaskResourceEnterpriseOutlineCode6 = 188744774,
    pjTaskResourceEnterpriseOutlineCode7 = 188744775,
    pjTaskResourceEnterpriseOutlineCode8 = 188744776,
    pjTaskResourceEnterpriseOutlineCode9 = 188744777,
    pjTaskResourceEnterpriseOutlineCode10 = 188744778,
    pjTaskResourceEnterpriseOutlineCode11 = 188744779,
    pjTaskResourceEnterpriseOutlineCode12 = 188744780,
    pjTaskResourceEnterpriseOutlineCode13 = 188744781,
    pjTaskResourceEnterpriseOutlineCode14 = 188744782,
    pjTaskResourceEnterpriseOutlineCode15 = 188744783,
    pjTaskResourceEnterpriseOutlineCode16 = 188744784,
    pjTaskResourceEnterpriseOutlineCode17 = 188744785,
    pjTaskResourceEnterpriseOutlineCode18 = 188744786,
    pjTaskResourceEnterpriseOutlineCode19 = 188744787,
    pjTaskResourceEnterpriseOutlineCode20 = 188744788,
    pjTaskResourceEnterpriseOutlineCode21 = 188744789,
    pjTaskResourceEnterpriseOutlineCode22 = 188744790,
    pjTaskResourceEnterpriseOutlineCode23 = 188744791,
    pjTaskResourceEnterpriseOutlineCode24 = 188744792,
    pjTaskResourceEnterpriseOutlineCode25 = 188744793,
    pjTaskResourceEnterpriseOutlineCode26 = 188744794,
    pjTaskResourceEnterpriseOutlineCode27 = 188744795,
    pjTaskResourceEnterpriseOutlineCode28 = 188744796,
    pjTaskResourceEnterpriseOutlineCode29 = 188744797,
    pjTaskResourceEnterpriseRBS = 188744798,
    pjTaskPhysicalPercentComplete = 188744799,
    pjTaskDemandedRequested = 188744800,
    pjTaskStatusIndicator = 188744801,
    pjTaskEarnedValueMethod = 188744802,
    pjResourceID = 205520896,
    pjResourceName = 205520897,
    pjResourceInitials = 205520898,
    pjResourceGroup = 205520899,
    pjResourceMaxUnits = 205520900,
    pjResourceBaseCalendar = 205520901,
    pjResourceStandardRate = 205520902,
    pjResourceOvertimeRate = 205520903,
    pjResourceText1 = 205520904,
    pjResourceText2 = 205520905,
    pjResourceCode = 205520906,
    pjResourceActualCost = 205520907,
    pjResourceCost = 205520908,
    pjResourceWork = 205520909,
    pjResourceActualWork = 205520910,
    pjResourceBaselineWork = 205520911,
    pjResourceOvertimeWork = 205520912,
    pjResourceBaselineCost = 205520913,
    pjResourceCostPerUse = 205520914,
    pjResourceAccrueAt = 205520915,
    pjResourceNotes = 205520916,
    pjResourceRemainingCost = 205520917,
    pjResourceRemainingWork = 205520918,
    pjResourceWorkVariance = 205520919,
    pjResourceCostVariance = 205520920,
    pjResourceOverallocated = 205520921,
    pjResourcePeakUnits = 205520922,
    pjResourceUniqueID = 205520923,
    pjResourceSheetNotes = 205520924,
    pjResourcePercentWorkComplete = 205520925,
    pjResourceText3 = 205520926,
    pjResourceText4 = 205520927,
    pjResourceText5 = 205520928,
    pjResourceObjects = 205520929,
    pjResourceLinkedFields = 205520930,
    pjResourceEMailAddress = 205520931,
    pjResourceRegularWork = 205520934,
    pjResourceActualOvertimeWork = 205520935,
    pjResourceRemainingOvertimeWork = 205520936,
    pjResourceOvertimeCost = 205520943,
    pjResourceActualOvertimeCost = 205520944,
    pjResourceRemainingOvertimeCost = 205520945,
    pjResourceBCWS = 205520947,
    pjResourceBCWP = 205520948,
    pjResourceACWP = 205520949,
    pjResourceSV = 205520950,
    pjResourceAvailableFrom = 205520953,
    pjResourceAvailableTo = 205520954,
    pjResourceIndicators = 205520982,
    pjResourceText6 = 205520993,
    pjResourceText7 = 205520994,
    pjResourceText8 = 205520995,
    pjResourceText9 = 205520996,
    pjResourceText10 = 205520997,
    pjResourceStart1 = 205520998,
    pjResourceStart2 = 205520999,
    pjResourceStart3 = 205521000,
    pjResourceStart4 = 205521001,
    pjResourceStart5 = 205521002,
    pjResourceFinish1 = 205521003,
    pjResourceFinish2 = 205521004,
    pjResourceFinish3 = 205521005,
    pjResourceFinish4 = 205521006,
    pjResourceFinish5 = 205521007,
    pjResourceNumber1 = 205521008,
    pjResourceNumber2 = 205521009,
    pjResourceNumber3 = 205521010,
    pjResourceNumber4 = 205521011,
    pjResourceNumber5 = 205521012,
    pjResourceDuration1 = 205521013,
    pjResourceDuration2 = 205521014,
    pjResourceDuration3 = 205521015,
    pjResourceCost1 = 205521019,
    pjResourceCost2 = 205521020,
    pjResourceCost3 = 205521021,
    pjResourceFlag10 = 205521022,
    pjResourceFlag1 = 205521023,
    pjResourceFlag2 = 205521024,
    pjResourceFlag3 = 205521025,
    pjResourceFlag4 = 205521026,
    pjResourceFlag5 = 205521027,
    pjResourceFlag6 = 205521028,
    pjResourceFlag7 = 205521029,
    pjResourceFlag8 = 205521030,
    pjResourceFlag9 = 205521031,
    pjResourceHyperlink = 205521034,
    pjResourceHyperlinkAddress = 205521035,
    pjResourceHyperlinkSubAddress = 205521036,
    pjResourceHyperlinkHref = 205521037,
    pjResourceIsAssignment = 205521040,
    pjResourceTaskSummaryName = 205521055,
    pjResourceCanLevel = 205521059,
    pjResourceWorkContour = 205521060,
    pjResourceCost4 = 205521062,
    pjResourceCost5 = 205521063,
    pjResourceCost6 = 205521064,
    pjResourceCost7 = 205521065,
    pjResourceCost8 = 205521066,
    pjResourceCost9 = 205521067,
    pjResourceCost10 = 205521068,
    pjResourceDate1 = 205521069,
    pjResourceDate2 = 205521070,
    pjResourceDate3 = 205521071,
    pjResourceDate4 = 205521072,
    pjResourceDate5 = 205521073,
    pjResourceDate6 = 205521074,
    pjResourceDate7 = 205521075,
    pjResourceDate8 = 205521076,
    pjResourceDate9 = 205521077,
    pjResourceDate10 = 205521078,
    pjResourceDuration4 = 205521079,
    pjResourceDuration5 = 205521080,
    pjResourceDuration6 = 205521081,
    pjResourceDuration7 = 205521082,
    pjResourceDuration8 = 205521083,
    pjResourceDuration9 = 205521084,
    pjResourceDuration10 = 205521085,
    pjResourceFinish6 = 205521086,
    pjResourceFinish7 = 205521087,
    pjResourceFinish8 = 205521088,
    pjResourceFinish9 = 205521089,
    pjResourceFinish10 = 205521090,
    pjResourceFlag11 = 205521091,
    pjResourceFlag12 = 205521092,
    pjResourceFlag13 = 205521093,
    pjResourceFlag14 = 205521094,
    pjResourceFlag15 = 205521095,
    pjResourceFlag16 = 205521096,
    pjResourceFlag17 = 205521097,
    pjResourceFlag18 = 205521098,
    pjResourceFlag19 = 205521099,
    pjResourceFlag20 = 205521100,
    pjResourceNumber6 = 205521101,
    pjResourceNumber7 = 205521102,
    pjResourceNumber8 = 205521103,
    pjResourceNumber9 = 205521104,
    pjResourceNumber10 = 205521105,
    pjResourceNumber11 = 205521106,
    pjResourceNumber12 = 205521107,
    pjResourceNumber13 = 205521108,
    pjResourceNumber14 = 205521109,
    pjResourceNumber15 = 205521110,
    pjResourceNumber16 = 205521111,
    pjResourceNumber17 = 205521112,
    pjResourceNumber18 = 205521113,
    pjResourceNumber19 = 205521114,
    pjResourceNumber20 = 205521115,
    pjResourceStart6 = 205521116,
    pjResourceStart7 = 205521117,
    pjResourceStart8 = 205521118,
    pjResourceStart9 = 205521119,
    pjResourceStart10 = 205521120,
    pjResourceText11 = 205521121,
    pjResourceText12 = 205521122,
    pjResourceText13 = 205521123,
    pjResourceText14 = 205521124,
    pjResourceText15 = 205521125,
    pjResourceText16 = 205521126,
    pjResourceText17 = 205521127,
    pjResourceText18 = 205521128,
    pjResourceText19 = 205521129,
    pjResourceText20 = 205521130,
    pjResourceText21 = 205521131,
    pjResourceText22 = 205521132,
    pjResourceText23 = 205521133,
    pjResourceText24 = 205521134,
    pjResourceText25 = 205521135,
    pjResourceText26 = 205521136,
    pjResourceText27 = 205521137,
    pjResourceText28 = 205521138,
    pjResourceText29 = 205521139,
    pjResourceText30 = 205521140,
    pjResourcePhonetics = 205521148,
    pjResourceIndex = 205521149,
    pjResourceAssignmentDelay = 205521153,
    pjResourceAssignmentUnits = 205521154,
    pjResourceBaselineStart = 205521155,
    pjResourceBaselineFinish = 205521156,
    pjResourceConfirmed = 205521157,
    pjResourceFinish = 205521158,
    pjResourceLevelingDelay = 205521159,
    pjResourceResponsePending = 205521160,
    pjResourceStart = 205521161,
    pjResourceTeamStatusPending = 205521162,
    pjResourceUpdateNeeded = 205521163,
    pjResourceCV = 205521164,
    pjResourceCostRateTable = 205521165,
    pjResourceWorkgroup = 205521168,
    pjResourceProject = 205521169,
    pjResourceOutlineCode1 = 205521174,
    pjResourceOutlineCode2 = 205521176,
    pjResourceOutlineCode3 = 205521178,
    pjResourceOutlineCode4 = 205521180,
    pjResourceOutlineCode5 = 205521182,
    pjResourceOutlineCode6 = 205521184,
    pjResourceOutlineCode7 = 205521186,
    pjResourceOutlineCode8 = 205521188,
    pjResourceOutlineCode9 = 205521190,
    pjResourceOutlineCode10 = 205521192,
    pjResourceMaterialLabel = 205521195,
    pjResourceType = 205521196,
    pjResourceVAC = 205521197,
    pjResourceGroupbySummary = 205521202,
    pjResourceWindowsUserAccount = 205521207,
    pjResourceHyperlinkScreenTip = 205521208,
    pjResourceBaseline1Work = 205521238,
    pjResourceBaseline1Cost = 205521239,
    pjResourceBaseline1Start = 205521244,
    pjResourceBaseline1Finish = 205521245,
    pjResourceBaseline2Work = 205521248,
    pjResourceBaseline2Cost = 205521249,
    pjResourceBaseline2Start = 205521254,
    pjResourceBaseline2Finish = 205521255,
    pjResourceBaseline3Work = 205521258,
    pjResourceBaseline3Cost = 205521259,
    pjResourceBaseline3Start = 205521264,
    pjResourceBaseline3Finish = 205521265,
    pjResourceBaseline4Work = 205521268,
    pjResourceBaseline4Cost = 205521269,
    pjResourceBaseline4Start = 205521274,
    pjResourceBaseline4Finish = 205521275,
    pjResourceBaseline5Work = 205521278,
    pjResourceBaseline5Cost = 205521279,
    pjResourceBaseline5Start = 205521284,
    pjResourceBaseline5Finish = 205521285,
    pjResourceBaseline6Work = 205521288,
    pjResourceBaseline6Cost = 205521289,
    pjResourceBaseline6Start = 205521294,
    pjResourceBaseline6Finish = 205521295,
    pjResourceBaseline7Work = 205521298,
    pjResourceBaseline7Cost = 205521299,
    pjResourceBaseline7Start = 205521304,
    pjResourceBaseline7Finish = 205521305,
    pjResourceBaseline8Work = 205521308,
    pjResourceBaseline8Cost = 205521309,
    pjResourceBaseline8Start = 205521314,
    pjResourceBaseline8Finish = 205521315,
    pjResourceBaseline9Work = 205521318,
    pjResourceBaseline9Cost = 205521319,
    pjResourceBaseline9Start = 205521324,
    pjResourceBaseline9Finish = 205521325,
    pjResourceBaseline10Work = 205521328,
    pjResourceBaseline10Cost = 205521329,
    pjResourceBaseline10Start = 205521334,
    pjResourceBaseline10Finish = 205521335,
    pjResourceEnterpriseUniqueID = 205521339,
    pjResourceEnterpriseCost1 = 205521342,
    pjResourceEnterpriseCost2 = 205521343,
    pjResourceEnterpriseCost3 = 205521344,
    pjResourceEnterpriseCost4 = 205521345,
    pjResourceEnterpriseCost5 = 205521346,
    pjResourceEnterpriseCost6 = 205521347,
    pjResourceEnterpriseCost7 = 205521348,
    pjResourceEnterpriseCost8 = 205521349,
    pjResourceEnterpriseCost9 = 205521350,
    pjResourceEnterpriseCost10 = 205521351,
    pjResourceEnterpriseDate1 = 205521352,
    pjResourceEnterpriseDate2 = 205521353,
    pjResourceEnterpriseDate3 = 205521354,
    pjResourceEnterpriseDate4 = 205521355,
    pjResourceEnterpriseDate5 = 205521356,
    pjResourceEnterpriseDate6 = 205521357,
    pjResourceEnterpriseDate7 = 205521358,
    pjResourceEnterpriseDate8 = 205521359,
    pjResourceEnterpriseDate9 = 205521360,
    pjResourceEnterpriseDate10 = 205521361,
    pjResourceEnterpriseDate11 = 205521362,
    pjResourceEnterpriseDate12 = 205521363,
    pjResourceEnterpriseDate13 = 205521364,
    pjResourceEnterpriseDate14 = 205521365,
    pjResourceEnterpriseDate15 = 205521366,
    pjResourceEnterpriseDate16 = 205521367,
    pjResourceEnterpriseDate17 = 205521368,
    pjResourceEnterpriseDate18 = 205521369,
    pjResourceEnterpriseDate19 = 205521370,
    pjResourceEnterpriseDate20 = 205521371,
    pjResourceEnterpriseDate21 = 205521372,
    pjResourceEnterpriseDate22 = 205521373,
    pjResourceEnterpriseDate23 = 205521374,
    pjResourceEnterpriseDate24 = 205521375,
    pjResourceEnterpriseDate25 = 205521376,
    pjResourceEnterpriseDate26 = 205521377,
    pjResourceEnterpriseDate27 = 205521378,
    pjResourceEnterpriseDate28 = 205521379,
    pjResourceEnterpriseDate29 = 205521380,
    pjResourceEnterpriseDate30 = 205521381,
    pjResourceEnterpriseDuration1 = 205521382,
    pjResourceEnterpriseDuration2 = 205521383,
    pjResourceEnterpriseDuration3 = 205521384,
    pjResourceEnterpriseDuration4 = 205521385,
    pjResourceEnterpriseDuration5 = 205521386,
    pjResourceEnterpriseDuration6 = 205521387,
    pjResourceEnterpriseDuration7 = 205521388,
    pjResourceEnterpriseDuration8 = 205521389,
    pjResourceEnterpriseDuration9 = 205521390,
    pjResourceEnterpriseDuration10 = 205521391,
    pjResourceEnterpriseFlag1 = 205521402,
    pjResourceEnterpriseFlag2 = 205521403,
    pjResourceEnterpriseFlag3 = 205521404,
    pjResourceEnterpriseFlag4 = 205521405,
    pjResourceEnterpriseFlag5 = 205521406,
    pjResourceEnterpriseFlag6 = 205521407,
    pjResourceEnterpriseFlag7 = 205521408,
    pjResourceEnterpriseFlag8 = 205521409,
    pjResourceEnterpriseFlag9 = 205521410,
    pjResourceEnterpriseFlag10 = 205521411,
    pjResourceEnterpriseFlag11 = 205521412,
    pjResourceEnterpriseFlag12 = 205521413,
    pjResourceEnterpriseFlag13 = 205521414,
    pjResourceEnterpriseFlag14 = 205521415,
    pjResourceEnterpriseFlag15 = 205521416,
    pjResourceEnterpriseFlag16 = 205521417,
    pjResourceEnterpriseFlag17 = 205521418,
    pjResourceEnterpriseFlag18 = 205521419,
    pjResourceEnterpriseFlag19 = 205521420,
    pjResourceEnterpriseFlag20 = 205521421,
    pjResourceEnterpriseNumber1 = 205521442,
    pjResourceEnterpriseNumber2 = 205521443,
    pjResourceEnterpriseNumber3 = 205521444,
    pjResourceEnterpriseNumber4 = 205521445,
    pjResourceEnterpriseNumber5 = 205521446,
    pjResourceEnterpriseNumber6 = 205521447,
    pjResourceEnterpriseNumber7 = 205521448,
    pjResourceEnterpriseNumber8 = 205521449,
    pjResourceEnterpriseNumber9 = 205521450,
    pjResourceEnterpriseNumber10 = 205521451,
    pjResourceEnterpriseNumber11 = 205521452,
    pjResourceEnterpriseNumber12 = 205521453,
    pjResourceEnterpriseNumber13 = 205521454,
    pjResourceEnterpriseNumber14 = 205521455,
    pjResourceEnterpriseNumber15 = 205521456,
    pjResourceEnterpriseNumber16 = 205521457,
    pjResourceEnterpriseNumber17 = 205521458,
    pjResourceEnterpriseNumber18 = 205521459,
    pjResourceEnterpriseNumber19 = 205521460,
    pjResourceEnterpriseNumber20 = 205521461,
    pjResourceEnterpriseNumber21 = 205521462,
    pjResourceEnterpriseNumber22 = 205521463,
    pjResourceEnterpriseNumber23 = 205521464,
    pjResourceEnterpriseNumber24 = 205521465,
    pjResourceEnterpriseNumber25 = 205521466,
    pjResourceEnterpriseNumber26 = 205521467,
    pjResourceEnterpriseNumber27 = 205521468,
    pjResourceEnterpriseNumber28 = 205521469,
    pjResourceEnterpriseNumber29 = 205521470,
    pjResourceEnterpriseNumber30 = 205521471,
    pjResourceEnterpriseNumber31 = 205521472,
    pjResourceEnterpriseNumber32 = 205521473,
    pjResourceEnterpriseNumber33 = 205521474,
    pjResourceEnterpriseNumber34 = 205521475,
    pjResourceEnterpriseNumber35 = 205521476,
    pjResourceEnterpriseNumber36 = 205521477,
    pjResourceEnterpriseNumber37 = 205521478,
    pjResourceEnterpriseNumber38 = 205521479,
    pjResourceEnterpriseNumber39 = 205521480,
    pjResourceEnterpriseNumber40 = 205521481,
    pjResourceEnterpriseOutlineCode1 = 205521482,
    pjResourceEnterpriseOutlineCode2 = 205521484,
    pjResourceEnterpriseOutlineCode3 = 205521486,
    pjResourceEnterpriseOutlineCode4 = 205521488,
    pjResourceEnterpriseOutlineCode5 = 205521490,
    pjResourceEnterpriseOutlineCode6 = 205521492,
    pjResourceEnterpriseOutlineCode7 = 205521494,
    pjResourceEnterpriseOutlineCode8 = 205521496,
    pjResourceEnterpriseOutlineCode9 = 205521498,
    pjResourceEnterpriseOutlineCode10 = 205521500,
    pjResourceEnterpriseOutlineCode11 = 205521502,
    pjResourceEnterpriseOutlineCode12 = 205521504,
    pjResourceEnterpriseOutlineCode13 = 205521506,
    pjResourceEnterpriseOutlineCode14 = 205521508,
    pjResourceEnterpriseOutlineCode15 = 205521510,
    pjResourceEnterpriseOutlineCode16 = 205521512,
    pjResourceEnterpriseOutlineCode17 = 205521514,
    pjResourceEnterpriseOutlineCode18 = 205521516,
    pjResourceEnterpriseOutlineCode19 = 205521518,
    pjResourceEnterpriseOutlineCode20 = 205521520,
    pjResourceEnterpriseOutlineCode21 = 205521522,
    pjResourceEnterpriseOutlineCode22 = 205521524,
    pjResourceEnterpriseOutlineCode23 = 205521526,
    pjResourceEnterpriseOutlineCode24 = 205521528,
    pjResourceEnterpriseOutlineCode25 = 205521530,
    pjResourceEnterpriseOutlineCode26 = 205521532,
    pjResourceEnterpriseOutlineCode27 = 205521534,
    pjResourceEnterpriseOutlineCode28 = 205521536,
    pjResourceEnterpriseOutlineCode29 = 205521538,
    pjResourceEnterpriseRBS = 205521540,
    pjResourceEnterpriseText1 = 205521542,
    pjResourceEnterpriseText2 = 205521543,
    pjResourceEnterpriseText3 = 205521544,
    pjResourceEnterpriseText4 = 205521545,
    pjResourceEnterpriseText5 = 205521546,
    pjResourceEnterpriseText6 = 205521547,
    pjResourceEnterpriseText7 = 205521548,
    pjResourceEnterpriseText8 = 205521549,
    pjResourceEnterpriseText9 = 205521550,
    pjResourceEnterpriseText10 = 205521551,
    pjResourceEnterpriseText11 = 205521552,
    pjResourceEnterpriseText12 = 205521553,
    pjResourceEnterpriseText13 = 205521554,
    pjResourceEnterpriseText14 = 205521555,
    pjResourceEnterpriseText15 = 205521556,
    pjResourceEnterpriseText16 = 205521557,
    pjResourceEnterpriseText17 = 205521558,
    pjResourceEnterpriseText18 = 205521559,
    pjResourceEnterpriseText19 = 205521560,
    pjResourceEnterpriseText20 = 205521561,
    pjResourceEnterpriseText21 = 205521562,
    pjResourceEnterpriseText22 = 205521563,
    pjResourceEnterpriseText23 = 205521564,
    pjResourceEnterpriseText24 = 205521565,
    pjResourceEnterpriseText25 = 205521566,
    pjResourceEnterpriseText26 = 205521567,
    pjResourceEnterpriseText27 = 205521568,
    pjResourceEnterpriseText28 = 205521569,
    pjResourceEnterpriseText29 = 205521570,
    pjResourceEnterpriseText30 = 205521571,
    pjResourceEnterpriseText31 = 205521572,
    pjResourceEnterpriseText32 = 205521573,
    pjResourceEnterpriseText33 = 205521574,
    pjResourceEnterpriseText34 = 205521575,
    pjResourceEnterpriseText35 = 205521576,
    pjResourceEnterpriseText36 = 205521577,
    pjResourceEnterpriseText37 = 205521578,
    pjResourceEnterpriseText38 = 205521579,
    pjResourceEnterpriseText39 = 205521580,
    pjResourceEnterpriseText40 = 205521581,
    pjResourceEnterpriseGeneric = 205521582,
    pjResourceEnterpriseBaseCalendar = 205521583,
    pjResourceEnterpriseRequiredValues = 205521584,
    pjResourceEnterpriseNameUsed = 205521585,
    pjResourceDemandedRequested = 205521586,
    pjResourceEnterprise = 205521587,
    pjResourceEnterpriseIsCheckedOut = 205521588,
    pjResourceEnterpriseCheckedOutBy = 205521589,
    pjResourceEnterpriseLastModifiedDate = 205521590,
    pjResourceEnterpriseTeamMember = 205521591,
    pjResourceEnterpriseInactive = 205521592,
    pjTaskDelay = 188743700
};

enum PjCustomField
{
    pjCustomTaskCost1 = 188743786,
    pjCustomTaskCost2 = 188743787,
    pjCustomTaskCost3 = 188743788,
    pjCustomTaskCost4 = 188743938,
    pjCustomTaskCost5 = 188743939,
    pjCustomTaskCost6 = 188743940,
    pjCustomTaskCost7 = 188743941,
    pjCustomTaskCost8 = 188743942,
    pjCustomTaskCost9 = 188743943,
    pjCustomTaskCost10 = 188743944,
    pjCustomTaskDate1 = 188743945,
    pjCustomTaskDate2 = 188743946,
    pjCustomTaskDate3 = 188743947,
    pjCustomTaskDate4 = 188743948,
    pjCustomTaskDate5 = 188743949,
    pjCustomTaskDate6 = 188743950,
    pjCustomTaskDate7 = 188743951,
    pjCustomTaskDate8 = 188743952,
    pjCustomTaskDate9 = 188743953,
    pjCustomTaskDate10 = 188743954,
    pjCustomTaskDuration1 = 188743783,
    pjCustomTaskDuration2 = 188743784,
    pjCustomTaskDuration3 = 188743785,
    pjCustomTaskDuration4 = 188743955,
    pjCustomTaskDuration5 = 188743956,
    pjCustomTaskDuration6 = 188743957,
    pjCustomTaskDuration7 = 188743958,
    pjCustomTaskDuration8 = 188743959,
    pjCustomTaskDuration9 = 188743960,
    pjCustomTaskDuration10 = 188743961,
    pjCustomTaskFinish1 = 188743733,
    pjCustomTaskFinish2 = 188743736,
    pjCustomTaskFinish3 = 188743739,
    pjCustomTaskFinish4 = 188743742,
    pjCustomTaskFinish5 = 188743745,
    pjCustomTaskFinish6 = 188743963,
    pjCustomTaskFinish7 = 188743965,
    pjCustomTaskFinish8 = 188743967,
    pjCustomTaskFinish9 = 188743969,
    pjCustomTaskFinish10 = 188743971,
    pjCustomTaskFlag1 = 188743752,
    pjCustomTaskFlag10 = 188743761,
    pjCustomTaskFlag2 = 188743753,
    pjCustomTaskFlag3 = 188743754,
    pjCustomTaskFlag4 = 188743755,
    pjCustomTaskFlag5 = 188743756,
    pjCustomTaskFlag6 = 188743757,
    pjCustomTaskFlag7 = 188743758,
    pjCustomTaskFlag8 = 188743759,
    pjCustomTaskFlag9 = 188743760,
    pjCustomTaskFlag11 = 188743972,
    pjCustomTaskFlag12 = 188743973,
    pjCustomTaskFlag13 = 188743974,
    pjCustomTaskFlag14 = 188743975,
    pjCustomTaskFlag15 = 188743976,
    pjCustomTaskFlag16 = 188743977,
    pjCustomTaskFlag17 = 188743978,
    pjCustomTaskFlag18 = 188743979,
    pjCustomTaskFlag19 = 188743980,
    pjCustomTaskFlag20 = 188743981,
    pjCustomTaskNumber1 = 188743767,
    pjCustomTaskNumber2 = 188743768,
    pjCustomTaskNumber3 = 188743769,
    pjCustomTaskNumber4 = 188743770,
    pjCustomTaskNumber5 = 188743771,
    pjCustomTaskNumber6 = 188743982,
    pjCustomTaskNumber7 = 188743983,
    pjCustomTaskNumber8 = 188743984,
    pjCustomTaskNumber9 = 188743985,
    pjCustomTaskNumber10 = 188743986,
    pjCustomTaskNumber11 = 188743987,
    pjCustomTaskNumber12 = 188743988,
    pjCustomTaskNumber13 = 188743989,
    pjCustomTaskNumber14 = 188743990,
    pjCustomTaskNumber15 = 188743991,
    pjCustomTaskNumber16 = 188743992,
    pjCustomTaskNumber17 = 188743993,
    pjCustomTaskNumber18 = 188743994,
    pjCustomTaskNumber19 = 188743995,
    pjCustomTaskNumber20 = 188743996,
    pjCustomTaskOutlineCode1 = 188744096,
    pjCustomTaskOutlineCode2 = 188744098,
    pjCustomTaskOutlineCode3 = 188744100,
    pjCustomTaskOutlineCode4 = 188744102,
    pjCustomTaskOutlineCode5 = 188744104,
    pjCustomTaskOutlineCode6 = 188744106,
    pjCustomTaskOutlineCode7 = 188744108,
    pjCustomTaskOutlineCode8 = 188744110,
    pjCustomTaskOutlineCode9 = 188744112,
    pjCustomTaskOutlineCode10 = 188744114,
    pjCustomTaskStart1 = 188743732,
    pjCustomTaskStart2 = 188743735,
    pjCustomTaskStart3 = 188743738,
    pjCustomTaskStart4 = 188743741,
    pjCustomTaskStart5 = 188743744,
    pjCustomTaskStart6 = 188743962,
    pjCustomTaskStart7 = 188743964,
    pjCustomTaskStart8 = 188743966,
    pjCustomTaskStart9 = 188743968,
    pjCustomTaskStart10 = 188743970,
    pjCustomTaskText1 = 188743731,
    pjCustomTaskText10 = 188743750,
    pjCustomTaskText2 = 188743734,
    pjCustomTaskText3 = 188743737,
    pjCustomTaskText4 = 188743740,
    pjCustomTaskText5 = 188743743,
    pjCustomTaskText6 = 188743746,
    pjCustomTaskText7 = 188743747,
    pjCustomTaskText8 = 188743748,
    pjCustomTaskText9 = 188743749,
    pjCustomTaskText11 = 188743997,
    pjCustomTaskText12 = 188743998,
    pjCustomTaskText13 = 188743999,
    pjCustomTaskText14 = 188744000,
    pjCustomTaskText15 = 188744001,
    pjCustomTaskText16 = 188744002,
    pjCustomTaskText17 = 188744003,
    pjCustomTaskText18 = 188744004,
    pjCustomTaskText19 = 188744005,
    pjCustomTaskText20 = 188744006,
    pjCustomTaskText21 = 188744007,
    pjCustomTaskText22 = 188744008,
    pjCustomTaskText23 = 188744009,
    pjCustomTaskText24 = 188744010,
    pjCustomTaskText25 = 188744011,
    pjCustomTaskText26 = 188744012,
    pjCustomTaskText27 = 188744013,
    pjCustomTaskText28 = 188744014,
    pjCustomTaskText29 = 188744015,
    pjCustomTaskText30 = 188744016,
    pjCustomResourceText1 = 205520904,
    pjCustomResourceText2 = 205520905,
    pjCustomResourceText3 = 205520926,
    pjCustomResourceText4 = 205520927,
    pjCustomResourceText5 = 205520928,
    pjCustomResourceText6 = 205520993,
    pjCustomResourceText7 = 205520994,
    pjCustomResourceText8 = 205520995,
    pjCustomResourceText9 = 205520996,
    pjCustomResourceText10 = 205520997,
    pjCustomResourceText11 = 205521121,
    pjCustomResourceText12 = 205521122,
    pjCustomResourceText13 = 205521123,
    pjCustomResourceText14 = 205521124,
    pjCustomResourceText15 = 205521125,
    pjCustomResourceText16 = 205521126,
    pjCustomResourceText17 = 205521127,
    pjCustomResourceText18 = 205521128,
    pjCustomResourceText19 = 205521129,
    pjCustomResourceText20 = 205521130,
    pjCustomResourceText21 = 205521131,
    pjCustomResourceText22 = 205521132,
    pjCustomResourceText23 = 205521133,
    pjCustomResourceText24 = 205521134,
    pjCustomResourceText25 = 205521135,
    pjCustomResourceText26 = 205521136,
    pjCustomResourceText27 = 205521137,
    pjCustomResourceText28 = 205521138,
    pjCustomResourceText29 = 205521139,
    pjCustomResourceText30 = 205521140,
    pjCustomResourceStart1 = 205520998,
    pjCustomResourceStart2 = 205520999,
    pjCustomResourceStart3 = 205521000,
    pjCustomResourceStart4 = 205521001,
    pjCustomResourceStart5 = 205521002,
    pjCustomResourceStart6 = 205521116,
    pjCustomResourceStart7 = 205521117,
    pjCustomResourceStart8 = 205521118,
    pjCustomResourceStart9 = 205521119,
    pjCustomResourceStart10 = 205521120,
    pjCustomResourceFinish1 = 205521003,
    pjCustomResourceFinish2 = 205521004,
    pjCustomResourceFinish3 = 205521005,
    pjCustomResourceFinish4 = 205521006,
    pjCustomResourceFinish5 = 205521007,
    pjCustomResourceFinish6 = 205521086,
    pjCustomResourceFinish7 = 205521087,
    pjCustomResourceFinish8 = 205521088,
    pjCustomResourceFinish9 = 205521089,
    pjCustomResourceFinish10 = 205521090,
    pjCustomResourceNumber1 = 205521008,
    pjCustomResourceNumber2 = 205521009,
    pjCustomResourceNumber3 = 205521010,
    pjCustomResourceNumber4 = 205521011,
    pjCustomResourceNumber5 = 205521012,
    pjCustomResourceNumber6 = 205521101,
    pjCustomResourceNumber7 = 205521102,
    pjCustomResourceNumber8 = 205521103,
    pjCustomResourceNumber9 = 205521104,
    pjCustomResourceNumber10 = 205521105,
    pjCustomResourceNumber11 = 205521106,
    pjCustomResourceNumber12 = 205521107,
    pjCustomResourceNumber13 = 205521108,
    pjCustomResourceNumber14 = 205521109,
    pjCustomResourceNumber15 = 205521110,
    pjCustomResourceNumber16 = 205521111,
    pjCustomResourceNumber17 = 205521112,
    pjCustomResourceNumber18 = 205521113,
    pjCustomResourceNumber19 = 205521114,
    pjCustomResourceNumber20 = 205521115,
    pjCustomResourceDuration1 = 205521013,
    pjCustomResourceDuration2 = 205521014,
    pjCustomResourceDuration3 = 205521015,
    pjCustomResourceDuration4 = 205521079,
    pjCustomResourceDuration5 = 205521080,
    pjCustomResourceDuration6 = 205521081,
    pjCustomResourceDuration7 = 205521082,
    pjCustomResourceDuration8 = 205521083,
    pjCustomResourceDuration9 = 205521084,
    pjCustomResourceDuration10 = 205521085,
    pjCustomResourceCost1 = 205521019,
    pjCustomResourceCost2 = 205521020,
    pjCustomResourceCost3 = 205521021,
    pjCustomResourceCost4 = 205521062,
    pjCustomResourceCost5 = 205521063,
    pjCustomResourceCost6 = 205521064,
    pjCustomResourceCost7 = 205521065,
    pjCustomResourceCost8 = 205521066,
    pjCustomResourceCost9 = 205521067,
    pjCustomResourceCost10 = 205521068,
    pjCustomResourceFlag10 = 205521022,
    pjCustomResourceFlag1 = 205521023,
    pjCustomResourceFlag2 = 205521024,
    pjCustomResourceFlag3 = 205521025,
    pjCustomResourceFlag4 = 205521026,
    pjCustomResourceFlag5 = 205521027,
    pjCustomResourceFlag6 = 205521028,
    pjCustomResourceFlag7 = 205521029,
    pjCustomResourceFlag8 = 205521030,
    pjCustomResourceFlag9 = 205521031,
    pjCustomResourceFlag11 = 205521091,
    pjCustomResourceFlag12 = 205521092,
    pjCustomResourceFlag13 = 205521093,
    pjCustomResourceFlag14 = 205521094,
    pjCustomResourceFlag15 = 205521095,
    pjCustomResourceFlag16 = 205521096,
    pjCustomResourceFlag17 = 205521097,
    pjCustomResourceFlag18 = 205521098,
    pjCustomResourceFlag19 = 205521099,
    pjCustomResourceFlag20 = 205521100,
    pjCustomResourceDate1 = 205521069,
    pjCustomResourceDate2 = 205521070,
    pjCustomResourceDate3 = 205521071,
    pjCustomResourceDate4 = 205521072,
    pjCustomResourceDate5 = 205521073,
    pjCustomResourceDate6 = 205521074,
    pjCustomResourceDate7 = 205521075,
    pjCustomResourceDate8 = 205521076,
    pjCustomResourceDate9 = 205521077,
    pjCustomResourceDate10 = 205521078,
    pjCustomResourceOutlineCode1 = 205521174,
    pjCustomResourceOutlineCode2 = 205521176,
    pjCustomResourceOutlineCode3 = 205521178,
    pjCustomResourceOutlineCode4 = 205521180,
    pjCustomResourceOutlineCode5 = 205521182,
    pjCustomResourceOutlineCode6 = 205521184,
    pjCustomResourceOutlineCode7 = 205521186,
    pjCustomResourceOutlineCode8 = 205521188,
    pjCustomResourceOutlineCode9 = 205521190,
    pjCustomResourceOutlineCode10 = 205521192,
    pjCustomProjectEnterpriseCost1 = 188744529,
    pjCustomProjectEnterpriseCost2 = 188744530,
    pjCustomProjectEnterpriseCost3 = 188744531,
    pjCustomProjectEnterpriseCost4 = 188744532,
    pjCustomProjectEnterpriseCost5 = 188744533,
    pjCustomProjectEnterpriseCost6 = 188744534,
    pjCustomProjectEnterpriseCost7 = 188744535,
    pjCustomProjectEnterpriseCost8 = 188744536,
    pjCustomProjectEnterpriseCost9 = 188744537,
    pjCustomProjectEnterpriseCost10 = 188744538,
    pjCustomProjectEnterpriseDate1 = 188744539,
    pjCustomProjectEnterpriseDate2 = 188744540,
    pjCustomProjectEnterpriseDate3 = 188744541,
    pjCustomProjectEnterpriseDate4 = 188744542,
    pjCustomProjectEnterpriseDate5 = 188744543,
    pjCustomProjectEnterpriseDate6 = 188744544,
    pjCustomProjectEnterpriseDate7 = 188744545,
    pjCustomProjectEnterpriseDate8 = 188744546,
    pjCustomProjectEnterpriseDate9 = 188744547,
    pjCustomProjectEnterpriseDate10 = 188744548,
    pjCustomProjectEnterpriseDate11 = 188744549,
    pjCustomProjectEnterpriseDate12 = 188744550,
    pjCustomProjectEnterpriseDate13 = 188744551,
    pjCustomProjectEnterpriseDate14 = 188744552,
    pjCustomProjectEnterpriseDate15 = 188744553,
    pjCustomProjectEnterpriseDate16 = 188744554,
    pjCustomProjectEnterpriseDate17 = 188744555,
    pjCustomProjectEnterpriseDate18 = 188744556,
    pjCustomProjectEnterpriseDate19 = 188744557,
    pjCustomProjectEnterpriseDate20 = 188744558,
    pjCustomProjectEnterpriseDate21 = 188744559,
    pjCustomProjectEnterpriseDate22 = 188744560,
    pjCustomProjectEnterpriseDate23 = 188744561,
    pjCustomProjectEnterpriseDate24 = 188744562,
    pjCustomProjectEnterpriseDate25 = 188744563,
    pjCustomProjectEnterpriseDate26 = 188744564,
    pjCustomProjectEnterpriseDate27 = 188744565,
    pjCustomProjectEnterpriseDate28 = 188744566,
    pjCustomProjectEnterpriseDate29 = 188744567,
    pjCustomProjectEnterpriseDate30 = 188744568,
    pjCustomProjectEnterpriseDuration1 = 188744569,
    pjCustomProjectEnterpriseDuration2 = 188744570,
    pjCustomProjectEnterpriseDuration3 = 188744571,
    pjCustomProjectEnterpriseDuration4 = 188744572,
    pjCustomProjectEnterpriseDuration5 = 188744573,
    pjCustomProjectEnterpriseDuration6 = 188744574,
    pjCustomProjectEnterpriseDuration7 = 188744575,
    pjCustomProjectEnterpriseDuration8 = 188744576,
    pjCustomProjectEnterpriseDuration9 = 188744577,
    pjCustomProjectEnterpriseDuration10 = 188744578,
    pjCustomProjectEnterpriseOutlineCode1 = 188744589,
    pjCustomProjectEnterpriseOutlineCode2 = 188744590,
    pjCustomProjectEnterpriseOutlineCode3 = 188744591,
    pjCustomProjectEnterpriseOutlineCode4 = 188744592,
    pjCustomProjectEnterpriseOutlineCode5 = 188744593,
    pjCustomProjectEnterpriseOutlineCode6 = 188744594,
    pjCustomProjectEnterpriseOutlineCode7 = 188744595,
    pjCustomProjectEnterpriseOutlineCode8 = 188744596,
    pjCustomProjectEnterpriseOutlineCode9 = 188744597,
    pjCustomProjectEnterpriseOutlineCode10 = 188744598,
    pjCustomProjectEnterpriseOutlineCode11 = 188744599,
    pjCustomProjectEnterpriseOutlineCode12 = 188744600,
    pjCustomProjectEnterpriseOutlineCode13 = 188744601,
    pjCustomProjectEnterpriseOutlineCode14 = 188744602,
    pjCustomProjectEnterpriseOutlineCode15 = 188744603,
    pjCustomProjectEnterpriseOutlineCode16 = 188744604,
    pjCustomProjectEnterpriseOutlineCode17 = 188744605,
    pjCustomProjectEnterpriseOutlineCode18 = 188744606,
    pjCustomProjectEnterpriseOutlineCode19 = 188744607,
    pjCustomProjectEnterpriseOutlineCode20 = 188744608,
    pjCustomProjectEnterpriseOutlineCode21 = 188744609,
    pjCustomProjectEnterpriseOutlineCode22 = 188744610,
    pjCustomProjectEnterpriseOutlineCode23 = 188744611,
    pjCustomProjectEnterpriseOutlineCode24 = 188744612,
    pjCustomProjectEnterpriseOutlineCode25 = 188744613,
    pjCustomProjectEnterpriseOutlineCode26 = 188744614,
    pjCustomProjectEnterpriseOutlineCode27 = 188744615,
    pjCustomProjectEnterpriseOutlineCode28 = 188744616,
    pjCustomProjectEnterpriseOutlineCode29 = 188744617,
    pjCustomProjectEnterpriseOutlineCode30 = 188744618,
    pjCustomProjectEnterpriseFlag1 = 188744649,
    pjCustomProjectEnterpriseFlag2 = 188744650,
    pjCustomProjectEnterpriseFlag3 = 188744651,
    pjCustomProjectEnterpriseFlag4 = 188744652,
    pjCustomProjectEnterpriseFlag5 = 188744653,
    pjCustomProjectEnterpriseFlag6 = 188744654,
    pjCustomProjectEnterpriseFlag7 = 188744655,
    pjCustomProjectEnterpriseFlag8 = 188744656,
    pjCustomProjectEnterpriseFlag9 = 188744657,
    pjCustomProjectEnterpriseFlag10 = 188744658,
    pjCustomProjectEnterpriseFlag11 = 188744659,
    pjCustomProjectEnterpriseFlag12 = 188744660,
    pjCustomProjectEnterpriseFlag13 = 188744661,
    pjCustomProjectEnterpriseFlag14 = 188744662,
    pjCustomProjectEnterpriseFlag15 = 188744663,
    pjCustomProjectEnterpriseFlag16 = 188744664,
    pjCustomProjectEnterpriseFlag17 = 188744665,
    pjCustomProjectEnterpriseFlag18 = 188744666,
    pjCustomProjectEnterpriseFlag19 = 188744667,
    pjCustomProjectEnterpriseFlag20 = 188744668,
    pjCustomProjectEnterpriseNumber1 = 188744689,
    pjCustomProjectEnterpriseNumber2 = 188744690,
    pjCustomProjectEnterpriseNumber3 = 188744691,
    pjCustomProjectEnterpriseNumber4 = 188744692,
    pjCustomProjectEnterpriseNumber5 = 188744693,
    pjCustomProjectEnterpriseNumber6 = 188744694,
    pjCustomProjectEnterpriseNumber7 = 188744695,
    pjCustomProjectEnterpriseNumber8 = 188744696,
    pjCustomProjectEnterpriseNumber9 = 188744697,
    pjCustomProjectEnterpriseNumber10 = 188744698,
    pjCustomProjectEnterpriseNumber11 = 188744699,
    pjCustomProjectEnterpriseNumber12 = 188744700,
    pjCustomProjectEnterpriseNumber13 = 188744701,
    pjCustomProjectEnterpriseNumber14 = 188744702,
    pjCustomProjectEnterpriseNumber15 = 188744703,
    pjCustomProjectEnterpriseNumber16 = 188744704,
    pjCustomProjectEnterpriseNumber17 = 188744705,
    pjCustomProjectEnterpriseNumber18 = 188744706,
    pjCustomProjectEnterpriseNumber19 = 188744707,
    pjCustomProjectEnterpriseNumber20 = 188744708,
    pjCustomProjectEnterpriseNumber21 = 188744709,
    pjCustomProjectEnterpriseNumber22 = 188744710,
    pjCustomProjectEnterpriseNumber23 = 188744711,
    pjCustomProjectEnterpriseNumber24 = 188744712,
    pjCustomProjectEnterpriseNumber25 = 188744713,
    pjCustomProjectEnterpriseNumber26 = 188744714,
    pjCustomProjectEnterpriseNumber27 = 188744715,
    pjCustomProjectEnterpriseNumber28 = 188744716,
    pjCustomProjectEnterpriseNumber29 = 188744717,
    pjCustomProjectEnterpriseNumber30 = 188744718,
    pjCustomProjectEnterpriseNumber31 = 188744719,
    pjCustomProjectEnterpriseNumber32 = 188744720,
    pjCustomProjectEnterpriseNumber33 = 188744721,
    pjCustomProjectEnterpriseNumber34 = 188744722,
    pjCustomProjectEnterpriseNumber35 = 188744723,
    pjCustomProjectEnterpriseNumber36 = 188744724,
    pjCustomProjectEnterpriseNumber37 = 188744725,
    pjCustomProjectEnterpriseNumber38 = 188744726,
    pjCustomProjectEnterpriseNumber39 = 188744727,
    pjCustomProjectEnterpriseNumber40 = 188744728,
    pjCustomProjectEnterpriseText1 = 188744729,
    pjCustomProjectEnterpriseText2 = 188744730,
    pjCustomProjectEnterpriseText3 = 188744731,
    pjCustomProjectEnterpriseText4 = 188744732,
    pjCustomProjectEnterpriseText5 = 188744733,
    pjCustomProjectEnterpriseText6 = 188744734,
    pjCustomProjectEnterpriseText7 = 188744735,
    pjCustomProjectEnterpriseText8 = 188744736,
    pjCustomProjectEnterpriseText9 = 188744737,
    pjCustomProjectEnterpriseText10 = 188744738,
    pjCustomProjectEnterpriseText11 = 188744739,
    pjCustomProjectEnterpriseText12 = 188744740,
    pjCustomProjectEnterpriseText13 = 188744741,
    pjCustomProjectEnterpriseText14 = 188744742,
    pjCustomProjectEnterpriseText15 = 188744743,
    pjCustomProjectEnterpriseText16 = 188744744,
    pjCustomProjectEnterpriseText17 = 188744745,
    pjCustomProjectEnterpriseText18 = 188744746,
    pjCustomProjectEnterpriseText19 = 188744747,
    pjCustomProjectEnterpriseText20 = 188744748,
    pjCustomProjectEnterpriseText21 = 188744749,
    pjCustomProjectEnterpriseText22 = 188744750,
    pjCustomProjectEnterpriseText23 = 188744751,
    pjCustomProjectEnterpriseText24 = 188744752,
    pjCustomProjectEnterpriseText25 = 188744753,
    pjCustomProjectEnterpriseText26 = 188744754,
    pjCustomProjectEnterpriseText27 = 188744755,
    pjCustomProjectEnterpriseText28 = 188744756,
    pjCustomProjectEnterpriseText29 = 188744757,
    pjCustomProjectEnterpriseText30 = 188744758,
    pjCustomProjectEnterpriseText31 = 188744759,
    pjCustomProjectEnterpriseText32 = 188744760,
    pjCustomProjectEnterpriseText33 = 188744761,
    pjCustomProjectEnterpriseText34 = 188744762,
    pjCustomProjectEnterpriseText35 = 188744763,
    pjCustomProjectEnterpriseText36 = 188744764,
    pjCustomProjectEnterpriseText37 = 188744765,
    pjCustomProjectEnterpriseText38 = 188744766,
    pjCustomProjectEnterpriseText39 = 188744767,
    pjCustomProjectEnterpriseText40 = 188744768,
    pjCustomTaskEnterpriseCost1 = 188744279,
    pjCustomTaskEnterpriseCost2 = 188744280,
    pjCustomTaskEnterpriseCost3 = 188744281,
    pjCustomTaskEnterpriseCost4 = 188744282,
    pjCustomTaskEnterpriseCost5 = 188744283,
    pjCustomTaskEnterpriseCost6 = 188744284,
    pjCustomTaskEnterpriseCost7 = 188744285,
    pjCustomTaskEnterpriseCost8 = 188744286,
    pjCustomTaskEnterpriseCost9 = 188744287,
    pjCustomTaskEnterpriseCost10 = 188744288,
    pjCustomTaskEnterpriseDate1 = 188744289,
    pjCustomTaskEnterpriseDate2 = 188744290,
    pjCustomTaskEnterpriseDate3 = 188744291,
    pjCustomTaskEnterpriseDate4 = 188744292,
    pjCustomTaskEnterpriseDate5 = 188744293,
    pjCustomTaskEnterpriseDate6 = 188744294,
    pjCustomTaskEnterpriseDate7 = 188744295,
    pjCustomTaskEnterpriseDate8 = 188744296,
    pjCustomTaskEnterpriseDate9 = 188744297,
    pjCustomTaskEnterpriseDate10 = 188744298,
    pjCustomTaskEnterpriseDate11 = 188744299,
    pjCustomTaskEnterpriseDate12 = 188744300,
    pjCustomTaskEnterpriseDate13 = 188744301,
    pjCustomTaskEnterpriseDate14 = 188744302,
    pjCustomTaskEnterpriseDate15 = 188744303,
    pjCustomTaskEnterpriseDate16 = 188744304,
    pjCustomTaskEnterpriseDate17 = 188744305,
    pjCustomTaskEnterpriseDate18 = 188744306,
    pjCustomTaskEnterpriseDate19 = 188744307,
    pjCustomTaskEnterpriseDate20 = 188744308,
    pjCustomTaskEnterpriseDate21 = 188744309,
    pjCustomTaskEnterpriseDate22 = 188744310,
    pjCustomTaskEnterpriseDate23 = 188744311,
    pjCustomTaskEnterpriseDate24 = 188744312,
    pjCustomTaskEnterpriseDate25 = 188744313,
    pjCustomTaskEnterpriseDate26 = 188744314,
    pjCustomTaskEnterpriseDate27 = 188744315,
    pjCustomTaskEnterpriseDate28 = 188744316,
    pjCustomTaskEnterpriseDate29 = 188744317,
    pjCustomTaskEnterpriseDate30 = 188744318,
    pjCustomTaskEnterpriseDuration1 = 188744319,
    pjCustomTaskEnterpriseDuration2 = 188744320,
    pjCustomTaskEnterpriseDuration3 = 188744321,
    pjCustomTaskEnterpriseDuration4 = 188744322,
    pjCustomTaskEnterpriseDuration5 = 188744323,
    pjCustomTaskEnterpriseDuration6 = 188744324,
    pjCustomTaskEnterpriseDuration7 = 188744325,
    pjCustomTaskEnterpriseDuration8 = 188744326,
    pjCustomTaskEnterpriseDuration9 = 188744327,
    pjCustomTaskEnterpriseDuration10 = 188744328,
    pjCustomTaskEnterpriseOutlineCode1 = 188744419,
    pjCustomTaskEnterpriseOutlineCode2 = 188744421,
    pjCustomTaskEnterpriseOutlineCode3 = 188744423,
    pjCustomTaskEnterpriseOutlineCode4 = 188744425,
    pjCustomTaskEnterpriseOutlineCode5 = 188744427,
    pjCustomTaskEnterpriseOutlineCode6 = 188744429,
    pjCustomTaskEnterpriseOutlineCode7 = 188744431,
    pjCustomTaskEnterpriseOutlineCode8 = 188744433,
    pjCustomTaskEnterpriseOutlineCode9 = 188744435,
    pjCustomTaskEnterpriseOutlineCode10 = 188744437,
    pjCustomTaskEnterpriseOutlineCode11 = 188744439,
    pjCustomTaskEnterpriseOutlineCode12 = 188744441,
    pjCustomTaskEnterpriseOutlineCode13 = 188744443,
    pjCustomTaskEnterpriseOutlineCode14 = 188744445,
    pjCustomTaskEnterpriseOutlineCode15 = 188744447,
    pjCustomTaskEnterpriseOutlineCode16 = 188744449,
    pjCustomTaskEnterpriseOutlineCode17 = 188744451,
    pjCustomTaskEnterpriseOutlineCode18 = 188744453,
    pjCustomTaskEnterpriseOutlineCode19 = 188744455,
    pjCustomTaskEnterpriseOutlineCode20 = 188744457,
    pjCustomTaskEnterpriseOutlineCode21 = 188744459,
    pjCustomTaskEnterpriseOutlineCode22 = 188744461,
    pjCustomTaskEnterpriseOutlineCode23 = 188744463,
    pjCustomTaskEnterpriseOutlineCode24 = 188744465,
    pjCustomTaskEnterpriseOutlineCode25 = 188744467,
    pjCustomTaskEnterpriseOutlineCode26 = 188744469,
    pjCustomTaskEnterpriseOutlineCode27 = 188744471,
    pjCustomTaskEnterpriseOutlineCode28 = 188744473,
    pjCustomTaskEnterpriseOutlineCode29 = 188744475,
    pjCustomTaskEnterpriseOutlineCode30 = 188744477,
    pjCustomTaskEnterpriseFlag1 = 188744339,
    pjCustomTaskEnterpriseFlag2 = 188744340,
    pjCustomTaskEnterpriseFlag3 = 188744341,
    pjCustomTaskEnterpriseFlag4 = 188744342,
    pjCustomTaskEnterpriseFlag5 = 188744343,
    pjCustomTaskEnterpriseFlag6 = 188744344,
    pjCustomTaskEnterpriseFlag7 = 188744345,
    pjCustomTaskEnterpriseFlag8 = 188744346,
    pjCustomTaskEnterpriseFlag9 = 188744347,
    pjCustomTaskEnterpriseFlag10 = 188744348,
    pjCustomTaskEnterpriseFlag11 = 188744349,
    pjCustomTaskEnterpriseFlag12 = 188744350,
    pjCustomTaskEnterpriseFlag13 = 188744351,
    pjCustomTaskEnterpriseFlag14 = 188744352,
    pjCustomTaskEnterpriseFlag15 = 188744353,
    pjCustomTaskEnterpriseFlag16 = 188744354,
    pjCustomTaskEnterpriseFlag17 = 188744355,
    pjCustomTaskEnterpriseFlag18 = 188744356,
    pjCustomTaskEnterpriseFlag19 = 188744357,
    pjCustomTaskEnterpriseFlag20 = 188744358,
    pjCustomTaskEnterpriseNumber1 = 188744379,
    pjCustomTaskEnterpriseNumber2 = 188744380,
    pjCustomTaskEnterpriseNumber3 = 188744381,
    pjCustomTaskEnterpriseNumber4 = 188744382,
    pjCustomTaskEnterpriseNumber5 = 188744383,
    pjCustomTaskEnterpriseNumber6 = 188744384,
    pjCustomTaskEnterpriseNumber7 = 188744385,
    pjCustomTaskEnterpriseNumber8 = 188744386,
    pjCustomTaskEnterpriseNumber9 = 188744387,
    pjCustomTaskEnterpriseNumber10 = 188744388,
    pjCustomTaskEnterpriseNumber11 = 188744389,
    pjCustomTaskEnterpriseNumber12 = 188744390,
    pjCustomTaskEnterpriseNumber13 = 188744391,
    pjCustomTaskEnterpriseNumber14 = 188744392,
    pjCustomTaskEnterpriseNumber15 = 188744393,
    pjCustomTaskEnterpriseNumber16 = 188744394,
    pjCustomTaskEnterpriseNumber17 = 188744395,
    pjCustomTaskEnterpriseNumber18 = 188744396,
    pjCustomTaskEnterpriseNumber19 = 188744397,
    pjCustomTaskEnterpriseNumber20 = 188744398,
    pjCustomTaskEnterpriseNumber21 = 188744399,
    pjCustomTaskEnterpriseNumber22 = 188744400,
    pjCustomTaskEnterpriseNumber23 = 188744401,
    pjCustomTaskEnterpriseNumber24 = 188744402,
    pjCustomTaskEnterpriseNumber25 = 188744403,
    pjCustomTaskEnterpriseNumber26 = 188744404,
    pjCustomTaskEnterpriseNumber27 = 188744405,
    pjCustomTaskEnterpriseNumber28 = 188744406,
    pjCustomTaskEnterpriseNumber29 = 188744407,
    pjCustomTaskEnterpriseNumber30 = 188744408,
    pjCustomTaskEnterpriseNumber31 = 188744409,
    pjCustomTaskEnterpriseNumber32 = 188744410,
    pjCustomTaskEnterpriseNumber33 = 188744411,
    pjCustomTaskEnterpriseNumber34 = 188744412,
    pjCustomTaskEnterpriseNumber35 = 188744413,
    pjCustomTaskEnterpriseNumber36 = 188744414,
    pjCustomTaskEnterpriseNumber37 = 188744415,
    pjCustomTaskEnterpriseNumber38 = 188744416,
    pjCustomTaskEnterpriseNumber39 = 188744417,
    pjCustomTaskEnterpriseNumber40 = 188744418,
    pjCustomTaskEnterpriseText1 = 188744479,
    pjCustomTaskEnterpriseText2 = 188744480,
    pjCustomTaskEnterpriseText3 = 188744481,
    pjCustomTaskEnterpriseText4 = 188744482,
    pjCustomTaskEnterpriseText5 = 188744483,
    pjCustomTaskEnterpriseText6 = 188744484,
    pjCustomTaskEnterpriseText7 = 188744485,
    pjCustomTaskEnterpriseText8 = 188744486,
    pjCustomTaskEnterpriseText9 = 188744487,
    pjCustomTaskEnterpriseText10 = 188744488,
    pjCustomTaskEnterpriseText11 = 188744489,
    pjCustomTaskEnterpriseText12 = 188744490,
    pjCustomTaskEnterpriseText13 = 188744491,
    pjCustomTaskEnterpriseText14 = 188744492,
    pjCustomTaskEnterpriseText15 = 188744493,
    pjCustomTaskEnterpriseText16 = 188744494,
    pjCustomTaskEnterpriseText17 = 188744495,
    pjCustomTaskEnterpriseText18 = 188744496,
    pjCustomTaskEnterpriseText19 = 188744497,
    pjCustomTaskEnterpriseText20 = 188744498,
    pjCustomTaskEnterpriseText21 = 188744499,
    pjCustomTaskEnterpriseText22 = 188744500,
    pjCustomTaskEnterpriseText23 = 188744501,
    pjCustomTaskEnterpriseText24 = 188744502,
    pjCustomTaskEnterpriseText25 = 188744503,
    pjCustomTaskEnterpriseText26 = 188744504,
    pjCustomTaskEnterpriseText27 = 188744505,
    pjCustomTaskEnterpriseText28 = 188744506,
    pjCustomTaskEnterpriseText29 = 188744507,
    pjCustomTaskEnterpriseText30 = 188744508,
    pjCustomTaskEnterpriseText31 = 188744509,
    pjCustomTaskEnterpriseText32 = 188744510,
    pjCustomTaskEnterpriseText33 = 188744511,
    pjCustomTaskEnterpriseText34 = 188744512,
    pjCustomTaskEnterpriseText35 = 188744513,
    pjCustomTaskEnterpriseText36 = 188744514,
    pjCustomTaskEnterpriseText37 = 188744515,
    pjCustomTaskEnterpriseText38 = 188744516,
    pjCustomTaskEnterpriseText39 = 188744517,
    pjCustomTaskEnterpriseText40 = 188744518,
    pjCustomResourceEnterpriseCost1 = 205521342,
    pjCustomResourceEnterpriseCost2 = 205521343,
    pjCustomResourceEnterpriseCost3 = 205521344,
    pjCustomResourceEnterpriseCost4 = 205521345,
    pjCustomResourceEnterpriseCost5 = 205521346,
    pjCustomResourceEnterpriseCost6 = 205521347,
    pjCustomResourceEnterpriseCost7 = 205521348,
    pjCustomResourceEnterpriseCost8 = 205521349,
    pjCustomResourceEnterpriseCost9 = 205521350,
    pjCustomResourceEnterpriseCost10 = 205521351,
    pjCustomResourceEnterpriseDate1 = 205521352,
    pjCustomResourceEnterpriseDate2 = 205521353,
    pjCustomResourceEnterpriseDate3 = 205521354,
    pjCustomResourceEnterpriseDate4 = 205521355,
    pjCustomResourceEnterpriseDate5 = 205521356,
    pjCustomResourceEnterpriseDate6 = 205521357,
    pjCustomResourceEnterpriseDate7 = 205521358,
    pjCustomResourceEnterpriseDate8 = 205521359,
    pjCustomResourceEnterpriseDate9 = 205521360,
    pjCustomResourceEnterpriseDate10 = 205521361,
    pjCustomResourceEnterpriseDate11 = 205521362,
    pjCustomResourceEnterpriseDate12 = 205521363,
    pjCustomResourceEnterpriseDate13 = 205521364,
    pjCustomResourceEnterpriseDate14 = 205521365,
    pjCustomResourceEnterpriseDate15 = 205521366,
    pjCustomResourceEnterpriseDate16 = 205521367,
    pjCustomResourceEnterpriseDate17 = 205521368,
    pjCustomResourceEnterpriseDate18 = 205521369,
    pjCustomResourceEnterpriseDate19 = 205521370,
    pjCustomResourceEnterpriseDate20 = 205521371,
    pjCustomResourceEnterpriseDate21 = 205521372,
    pjCustomResourceEnterpriseDate22 = 205521373,
    pjCustomResourceEnterpriseDate23 = 205521374,
    pjCustomResourceEnterpriseDate24 = 205521375,
    pjCustomResourceEnterpriseDate25 = 205521376,
    pjCustomResourceEnterpriseDate26 = 205521377,
    pjCustomResourceEnterpriseDate27 = 205521378,
    pjCustomResourceEnterpriseDate28 = 205521379,
    pjCustomResourceEnterpriseDate29 = 205521380,
    pjCustomResourceEnterpriseDate30 = 205521381,
    pjCustomResourceEnterpriseDuration1 = 205521382,
    pjCustomResourceEnterpriseDuration2 = 205521383,
    pjCustomResourceEnterpriseDuration3 = 205521384,
    pjCustomResourceEnterpriseDuration4 = 205521385,
    pjCustomResourceEnterpriseDuration5 = 205521386,
    pjCustomResourceEnterpriseDuration6 = 205521387,
    pjCustomResourceEnterpriseDuration7 = 205521388,
    pjCustomResourceEnterpriseDuration8 = 205521389,
    pjCustomResourceEnterpriseDuration9 = 205521390,
    pjCustomResourceEnterpriseDuration10 = 205521391,
    pjCustomResourceEnterpriseOutlineCode1 = 205521482,
    pjCustomResourceEnterpriseOutlineCode2 = 205521484,
    pjCustomResourceEnterpriseOutlineCode3 = 205521486,
    pjCustomResourceEnterpriseOutlineCode4 = 205521488,
    pjCustomResourceEnterpriseOutlineCode5 = 205521490,
    pjCustomResourceEnterpriseOutlineCode6 = 205521492,
    pjCustomResourceEnterpriseOutlineCode7 = 205521494,
    pjCustomResourceEnterpriseOutlineCode8 = 205521496,
    pjCustomResourceEnterpriseOutlineCode9 = 205521498,
    pjCustomResourceEnterpriseOutlineCode10 = 205521500,
    pjCustomResourceEnterpriseOutlineCode11 = 205521502,
    pjCustomResourceEnterpriseOutlineCode12 = 205521504,
    pjCustomResourceEnterpriseOutlineCode13 = 205521506,
    pjCustomResourceEnterpriseOutlineCode14 = 205521508,
    pjCustomResourceEnterpriseOutlineCode15 = 205521510,
    pjCustomResourceEnterpriseOutlineCode16 = 205521512,
    pjCustomResourceEnterpriseOutlineCode17 = 205521514,
    pjCustomResourceEnterpriseOutlineCode18 = 205521516,
    pjCustomResourceEnterpriseOutlineCode19 = 205521518,
    pjCustomResourceEnterpriseOutlineCode20 = 205521520,
    pjCustomResourceEnterpriseOutlineCode21 = 205521522,
    pjCustomResourceEnterpriseOutlineCode22 = 205521524,
    pjCustomResourceEnterpriseOutlineCode23 = 205521526,
    pjCustomResourceEnterpriseOutlineCode24 = 205521528,
    pjCustomResourceEnterpriseOutlineCode25 = 205521530,
    pjCustomResourceEnterpriseOutlineCode26 = 205521532,
    pjCustomResourceEnterpriseOutlineCode27 = 205521534,
    pjCustomResourceEnterpriseOutlineCode28 = 205521536,
    pjCustomResourceEnterpriseOutlineCode29 = 205521538,
    pjCustomResourceEnterpriseRBS = 205521540,
    pjCustomResourceEnterpriseFlag1 = 205521402,
    pjCustomResourceEnterpriseFlag2 = 205521403,
    pjCustomResourceEnterpriseFlag3 = 205521404,
    pjCustomResourceEnterpriseFlag4 = 205521405,
    pjCustomResourceEnterpriseFlag5 = 205521406,
    pjCustomResourceEnterpriseFlag6 = 205521407,
    pjCustomResourceEnterpriseFlag7 = 205521408,
    pjCustomResourceEnterpriseFlag8 = 205521409,
    pjCustomResourceEnterpriseFlag9 = 205521410,
    pjCustomResourceEnterpriseFlag10 = 205521411,
    pjCustomResourceEnterpriseFlag11 = 205521412,
    pjCustomResourceEnterpriseFlag12 = 205521413,
    pjCustomResourceEnterpriseFlag13 = 205521414,
    pjCustomResourceEnterpriseFlag14 = 205521415,
    pjCustomResourceEnterpriseFlag15 = 205521416,
    pjCustomResourceEnterpriseFlag16 = 205521417,
    pjCustomResourceEnterpriseFlag17 = 205521418,
    pjCustomResourceEnterpriseFlag18 = 205521419,
    pjCustomResourceEnterpriseFlag19 = 205521420,
    pjCustomResourceEnterpriseFlag20 = 205521421,
    pjCustomResourceEnterpriseNumber1 = 205521442,
    pjCustomResourceEnterpriseNumber2 = 205521443,
    pjCustomResourceEnterpriseNumber3 = 205521444,
    pjCustomResourceEnterpriseNumber4 = 205521445,
    pjCustomResourceEnterpriseNumber5 = 205521446,
    pjCustomResourceEnterpriseNumber6 = 205521447,
    pjCustomResourceEnterpriseNumber7 = 205521448,
    pjCustomResourceEnterpriseNumber8 = 205521449,
    pjCustomResourceEnterpriseNumber9 = 205521450,
    pjCustomResourceEnterpriseNumber10 = 205521451,
    pjCustomResourceEnterpriseNumber11 = 205521452,
    pjCustomResourceEnterpriseNumber12 = 205521453,
    pjCustomResourceEnterpriseNumber13 = 205521454,
    pjCustomResourceEnterpriseNumber14 = 205521455,
    pjCustomResourceEnterpriseNumber15 = 205521456,
    pjCustomResourceEnterpriseNumber16 = 205521457,
    pjCustomResourceEnterpriseNumber17 = 205521458,
    pjCustomResourceEnterpriseNumber18 = 205521459,
    pjCustomResourceEnterpriseNumber19 = 205521460,
    pjCustomResourceEnterpriseNumber20 = 205521461,
    pjCustomResourceEnterpriseNumber21 = 205521462,
    pjCustomResourceEnterpriseNumber22 = 205521463,
    pjCustomResourceEnterpriseNumber23 = 205521464,
    pjCustomResourceEnterpriseNumber24 = 205521465,
    pjCustomResourceEnterpriseNumber25 = 205521466,
    pjCustomResourceEnterpriseNumber26 = 205521467,
    pjCustomResourceEnterpriseNumber27 = 205521468,
    pjCustomResourceEnterpriseNumber28 = 205521469,
    pjCustomResourceEnterpriseNumber29 = 205521470,
    pjCustomResourceEnterpriseNumber30 = 205521471,
    pjCustomResourceEnterpriseNumber31 = 205521472,
    pjCustomResourceEnterpriseNumber32 = 205521473,
    pjCustomResourceEnterpriseNumber33 = 205521474,
    pjCustomResourceEnterpriseNumber34 = 205521475,
    pjCustomResourceEnterpriseNumber35 = 205521476,
    pjCustomResourceEnterpriseNumber36 = 205521477,
    pjCustomResourceEnterpriseNumber37 = 205521478,
    pjCustomResourceEnterpriseNumber38 = 205521479,
    pjCustomResourceEnterpriseNumber39 = 205521480,
    pjCustomResourceEnterpriseNumber40 = 205521481,
    pjCustomResourceEnterpriseText1 = 205521542,
    pjCustomResourceEnterpriseText2 = 205521543,
    pjCustomResourceEnterpriseText3 = 205521544,
    pjCustomResourceEnterpriseText4 = 205521545,
    pjCustomResourceEnterpriseText5 = 205521546,
    pjCustomResourceEnterpriseText6 = 205521547,
    pjCustomResourceEnterpriseText7 = 205521548,
    pjCustomResourceEnterpriseText8 = 205521549,
    pjCustomResourceEnterpriseText9 = 205521550,
    pjCustomResourceEnterpriseText10 = 205521551,
    pjCustomResourceEnterpriseText11 = 205521552,
    pjCustomResourceEnterpriseText12 = 205521553,
    pjCustomResourceEnterpriseText13 = 205521554,
    pjCustomResourceEnterpriseText14 = 205521555,
    pjCustomResourceEnterpriseText15 = 205521556,
    pjCustomResourceEnterpriseText16 = 205521557,
    pjCustomResourceEnterpriseText17 = 205521558,
    pjCustomResourceEnterpriseText18 = 205521559,
    pjCustomResourceEnterpriseText19 = 205521560,
    pjCustomResourceEnterpriseText20 = 205521561,
    pjCustomResourceEnterpriseText21 = 205521562,
    pjCustomResourceEnterpriseText22 = 205521563,
    pjCustomResourceEnterpriseText23 = 205521564,
    pjCustomResourceEnterpriseText24 = 205521565,
    pjCustomResourceEnterpriseText25 = 205521566,
    pjCustomResourceEnterpriseText26 = 205521567,
    pjCustomResourceEnterpriseText27 = 205521568,
    pjCustomResourceEnterpriseText28 = 205521569,
    pjCustomResourceEnterpriseText29 = 205521570,
    pjCustomResourceEnterpriseText30 = 205521571,
    pjCustomResourceEnterpriseText31 = 205521572,
    pjCustomResourceEnterpriseText32 = 205521573,
    pjCustomResourceEnterpriseText33 = 205521574,
    pjCustomResourceEnterpriseText34 = 205521575,
    pjCustomResourceEnterpriseText35 = 205521576,
    pjCustomResourceEnterpriseText36 = 205521577,
    pjCustomResourceEnterpriseText37 = 205521578,
    pjCustomResourceEnterpriseText38 = 205521579,
    pjCustomResourceEnterpriseText39 = 205521580,
    pjCustomResourceEnterpriseText40 = 205521581
};

enum PjCustomFieldAttribute
{
    pjFieldAttributeNone = 0,
    pjFieldAttributeFormula = 1,
    pjFieldAttributeValueList = 2
};

enum PjSummaryCalc
{
    pjCalcNone = 10,
    pjCalcFormula = 11,
    pjCalcRollupAverage = 4,
    pjCalcRollupAverageFirstSublevel = 5,
    pjCalcRollupCountAll = 2,
    pjCalcRollupCountFirstSublevel = 6,
    pjCalcRollupCountNonsummaries = 7,
    pjCalcRollupMax = 0,
    pjCalcRollupMin = 1,
    pjCalcRollupAnd = 1,
    pjCalcRollupOr = 0,
    pjCalcRollupSum = 3
};

enum PjCriteriaList
{
    pjCriteriaNonSummary = 0,
    pjCriteriaSummary = 1,
    pjCriteriaProjectSummary = 2
};

enum PjIndicator
{
    pjIndicatorNone = 0,
    pjIndicatorSphereLime = 1,
    pjIndicatorSphereYellow = 2,
    pjIndicatorSphereRed = 3,
    pjIndicatorSphereBlack = 4,
    pjIndicatorSphereWhite = 5,
    pjIndicatorSphereAqua = 6,
    pjIndicatorSphereGreen = 7,
    pjIndicatorSphereBlue = 8,
    pjIndicatorSphereFuschia = 9,
    pjIndicatorSpherePurple = 10,
    pjIndicatorSphereMaroon = 11,
    pjIndicatorSphereGray = 12,
    pjIndicatorSphereSilver = 13,
    pjIndicatorFlagLime = 14,
    pjIndicatorFlagYellow = 15,
    pjIndicatorFlagRed = 16,
    pjIndicatorFlagWhite = 17,
    pjIndicatorFlagAqua = 18,
    pjIndicatorFlagBlue = 19,
    pjIndicatorFlagFuschia = 20,
    pjIndicatorFlagSilver = 21,
    pjIndicatorSquareLime = 22,
    pjIndicatorSquareYellow = 23,
    pjIndicatorSquareRed = 24,
    pjIndicatorSquareBlack = 25,
    pjIndicatorSquareWhite = 26,
    pjIndicatorPlusLime = 27,
    pjIndicatorPlusYellow = 28,
    pjIndicatorPlusRed = 29,
    pjIndicatorPlusBlack = 30,
    pjIndicatorPlusWhite = 31,
    pjIndicatorMinusLime = 32,
    pjIndicatorMinusYellow = 33,
    pjIndicatorMinusRed = 34,
    pjIndicatorMinusBlack = 35,
    pjIndicatorMinusWhite = 36,
    pjIndicatorDiamondLime = 37,
    pjIndicatorDiamondYellow = 38,
    pjIndicatorDiamondRed = 39,
    pjIndicatorArrowLeft = 40,
    pjIndicatorArrowRight = 41,
    pjIndicatorArrowDouble = 42,
    pjIndicatorArrowUp = 43,
    pjIndicatorArrowDown = 44,
    pjIndicatorCircleSolidFill = 45,
    pjIndicatorCircleBottomFill = 46,
    pjIndicatorCircleLeftFill = 47,
    pjIndicatorCircleTopFill = 48,
    pjIndicatorCircleRightFill = 49,
    pjIndicatorCircleRoundFill = 50,
    pjIndicatorCircleHollow = 51,
    pjIndicatorLightBulbOff = 52,
    pjIndicatorLightBulbOn = 53,
    pjIndicatorCheckMark = 54,
    pjIndicatorDeleteMark = 55,
    pjIndicatorQuestionMark = 56,
    pjIndicatorClock = 57,
    pjIndicatorPushPin = 58,
    pjIndicatorFaceHappyYellow = 59,
    pjIndicatorFaceHappyLime = 60,
    pjIndicatorFaceStraightYellow = 61,
    pjIndicatorFaceStraightAqua = 62,
    pjIndicatorFaceSadYellow = 63,
    pjIndicatorFaceSadRed = 64,
    pjIndicatorDashGray = 65
};

enum PjComparison
{
    pjCompareAnyValue = 11,
    pjCompareEquals = 5,
    pjCompareNotEqual = 6,
    pjCompareGreaterThan = 1,
    pjCompareGreaterThanOrEqual = 3,
    pjCompareLessThan = 2,
    pjCompareLessThanOrEqual = 4,
    pjCompareWithin = 0,
    pjCompareNotWithin = 8,
    pjCompareContains = 7,
    pjCompareNotContains = 9,
    pjCompareContainsExactly = 10
};

enum PjListOrder
{
    pjListOrderDefault = 0,
    pjListOrderAscending = 1,
    pjListOrderDescending = 2
};

enum PjValueListItem
{
    pjValueListValue = 0,
    pjValueListDescription = 1,
    pjValueListPhonetics = 2
};

enum PjFileFormat
{
    pjMPP = 0,
    pjTXT = 3,
    pjCSV = 4,
    pjXLS = 5,
    pjMPT = 11
};

enum PjFillPattern
{
    pjHollowPattern = 0,
    pjSolidFillPattern = 1,
    pjLightFillPattern = 2,
    pjMediumFillPattern = 3,
    pjDarkFillPattern = 4,
    pjDiagonalLeftPattern = 5,
    pjDiagonalRightPattern = 6,
    pjDiagonalCrossPattern = 7,
    pjLineVerticalPattern = 8,
    pjLineHorizontalPattern = 9,
    pjLineCrossPattern = 10
};

enum PjFormatUnit
{
    pjMinutes = 3,
    pjHours = 5,
    pjDays = 7,
    pjWeeks = 9,
    pjMonths = 11,
    pjElapsedMinutes = 4,
    pjElapsedHours = 6,
    pjElapsedDays = 8,
    pjElapsedWeeks = 10,
    pjElapsedMonths = 12,
    pjMinutesEstimated = 35,
    pjHoursEstimated = 37,
    pjDaysEstimated = 39,
    pjWeeksEstimated = 41,
    pjMonthsEstimated = 43,
    pjElapsedMinutesEstimated = 36,
    pjElapsedHoursEstimated = 38,
    pjElapsedDaysEstimated = 40,
    pjElapsedWeeksEstimated = 42,
    pjElapsedMonthsEstimated = 44
};

enum PjGanttBarLink
{
    pjNoGanttBarLinks = 0,
    pjToTop = 1,
    pjToEnd = 2
};

enum PjLegend
{
    pjNoLegend = 0,
    pjAfterLastPage = 1,
    pjOnEveryPage = 2
};

enum PjLevelOrder
{
    pjLevelID = 0,
    pjLevelStandard = 1,
    pjLevelPriority = 2
};

enum PjCostRateTable
{
    pjCostRateTableA = 0,
    pjCostRateTableB = 1,
    pjCostRateTableC = 2,
    pjCostRateTableD = 3,
    pjCostRateTableE = 4
};

enum PjLevelPeriodBasis
{
    pjMinuteByMinute = 0,
    pjHourByHour = 1,
    pjDayByDay = 2,
    pjWeekByWeek = 3,
    pjMonthByMonth = 4
};

enum PjMailField
{
    pjMailTaskContact = 188743792,
    pjMailTaskCost = 188743685,
    pjMailTaskCost1 = 188743786,
    pjMailTaskCost10 = 188743944,
    pjMailTaskCost2 = 188743787,
    pjMailTaskCost3 = 188743788,
    pjMailTaskCost4 = 188743938,
    pjMailTaskCost5 = 188743939,
    pjMailTaskCost6 = 188743940,
    pjMailTaskCost7 = 188743941,
    pjMailTaskCost8 = 188743942,
    pjMailTaskCost9 = 188743943,
    pjMailTaskCritical = 188743699,
    pjMailTaskDate1 = 188743945,
    pjMailTaskDate10 = 188743954,
    pjMailTaskDate2 = 188743946,
    pjMailTaskDate3 = 188743947,
    pjMailTaskDate4 = 188743948,
    pjMailTaskDate5 = 188743949,
    pjMailTaskDate6 = 188743950,
    pjMailTaskDate7 = 188743951,
    pjMailTaskDate8 = 188743952,
    pjMailTaskDate9 = 188743953,
    pjMailTaskDuration = 188743709,
    pjMailTaskDuration1 = 188743783,
    pjMailTaskDuration10 = 188743961,
    pjMailTaskDuration2 = 188743784,
    pjMailTaskDuration3 = 188743785,
    pjMailTaskDuration4 = 188743955,
    pjMailTaskDuration5 = 188743956,
    pjMailTaskDuration6 = 188743957,
    pjMailTaskDuration7 = 188743958,
    pjMailTaskDuration8 = 188743959,
    pjMailTaskDuration9 = 188743960,
    pjMailTaskEarlyFinish = 188743718,
    pjMailTaskEarlyStart = 188743717,
    pjMailTaskFinish1 = 188743733,
    pjMailTaskFinish10 = 188743971,
    pjMailTaskFinish2 = 188743736,
    pjMailTaskFinish3 = 188743739,
    pjMailTaskFinish4 = 188743742,
    pjMailTaskFinish5 = 188743745,
    pjMailTaskFinish6 = 188743963,
    pjMailTaskFinish7 = 188743965,
    pjMailTaskFinish8 = 188743967,
    pjMailTaskFinish9 = 188743969,
    pjMailTaskFixedCost = 188743688,
    pjMailTaskFlag1 = 188743752,
    pjMailTaskFlag10 = 188743761,
    pjMailTaskFlag11 = 188743972,
    pjMailTaskFlag12 = 188743973,
    pjMailTaskFlag13 = 188743974,
    pjMailTaskFlag14 = 188743975,
    pjMailTaskFlag15 = 188743976,
    pjMailTaskFlag16 = 188743977,
    pjMailTaskFlag17 = 188743978,
    pjMailTaskFlag18 = 188743979,
    pjMailTaskFlag19 = 188743980,
    pjMailTaskFlag2 = 188743753,
    pjMailTaskFlag20 = 188743981,
    pjMailTaskFlag3 = 188743754,
    pjMailTaskFlag4 = 188743755,
    pjMailTaskFlag5 = 188743756,
    pjMailTaskFlag6 = 188743757,
    pjMailTaskFlag7 = 188743758,
    pjMailTaskFlag8 = 188743759,
    pjMailTaskFlag9 = 188743760,
    pjMailTaskFreeSlack = 188743701,
    pjMailTaskLateFinish = 188743720,
    pjMailTaskLateStart = 188743719,
    pjMailTaskMarked = 188743751,
    pjMailTaskName = 188743694,
    pjMailTaskNumber1 = 188743767,
    pjMailTaskNumber10 = 188743986,
    pjMailTaskNumber11 = 188743987,
    pjMailTaskNumber12 = 188743988,
    pjMailTaskNumber13 = 188743989,
    pjMailTaskNumber14 = 188743990,
    pjMailTaskNumber15 = 188743991,
    pjMailTaskNumber16 = 188743992,
    pjMailTaskNumber17 = 188743993,
    pjMailTaskNumber18 = 188743994,
    pjMailTaskNumber19 = 188743995,
    pjMailTaskNumber2 = 188743768,
    pjMailTaskNumber20 = 188743996,
    pjMailTaskNumber3 = 188743769,
    pjMailTaskNumber4 = 188743770,
    pjMailTaskNumber5 = 188743771,
    pjMailTaskNumber6 = 188743982,
    pjMailTaskNumber7 = 188743983,
    pjMailTaskNumber8 = 188743984,
    pjMailTaskNumber9 = 188743985,
    pjMailTaskPercentComplete = 188743712,
    pjMailTaskPercentWorkComplete = 188743713,
    pjMailTaskPriority = 188743705,
    pjMailTaskProject = 188743764,
    pjMailTaskResourceNames = 188743729,
    pjMailTaskStart1 = 188743732,
    pjMailTaskStart10 = 188743970,
    pjMailTaskStart2 = 188743735,
    pjMailTaskStart3 = 188743738,
    pjMailTaskStart4 = 188743741,
    pjMailTaskStart5 = 188743744,
    pjMailTaskStart6 = 188743962,
    pjMailTaskStart7 = 188743964,
    pjMailTaskStart8 = 188743966,
    pjMailTaskStart9 = 188743968,
    pjMailTaskText1 = 188743731,
    pjMailTaskText10 = 188743750,
    pjMailTaskText11 = 188743997,
    pjMailTaskText12 = 188743998,
    pjMailTaskText13 = 188743999,
    pjMailTaskText14 = 188744000,
    pjMailTaskText15 = 188744001,
    pjMailTaskText16 = 188744002,
    pjMailTaskText17 = 188744003,
    pjMailTaskText18 = 188744004,
    pjMailTaskText19 = 188744005,
    pjMailTaskText2 = 188743734,
    pjMailTaskText20 = 188744006,
    pjMailTaskText21 = 188744007,
    pjMailTaskText22 = 188744008,
    pjMailTaskText23 = 188744009,
    pjMailTaskText24 = 188744010,
    pjMailTaskText25 = 188744011,
    pjMailTaskText26 = 188744012,
    pjMailTaskText27 = 188744013,
    pjMailTaskText28 = 188744014,
    pjMailTaskText29 = 188744015,
    pjMailTaskText3 = 188743737,
    pjMailTaskText30 = 188744016,
    pjMailTaskText4 = 188743740,
    pjMailTaskText5 = 188743743,
    pjMailTaskText6 = 188743746,
    pjMailTaskText7 = 188743747,
    pjMailTaskText8 = 188743748,
    pjMailTaskText9 = 188743749,
    pjMailTaskTotalSlack = 188743702,
    pjMailTaskWBS = 188743696,
    pjMailActualWork = 32773,
    pjMailWork = 32772,
    pjMailComments = 32769,
    pjMailStart = 32770,
    pjMailFinish = 32771
};

enum PjMailSystem
{
    pjNoMailSystem = 0,
    pjMAPI = 1,
    pjMAPICompatible = 2
};

enum PjMergeType
{
    pjDoNotMerge = 0,
    pjMerge = 1,
    pjPrompt = 2,
    pjAppend = 3
};

enum PjMessageType
{
    pjOKOnly = 0,
    pjOKCancel = 1,
    pjYesNo = 2,
    pjYesNoCancel = 3
};

enum PjMonthLabel
{
    pjMonthLabelMonth_mm = 57,
    pjMonthLabelMonth_mm_yy = 86,
    pjMonthLabelMonth_mm_yyy = 85,
    pjMonthLabelMonth_m = 11,
    pjMonthLabelMonth_mmm = 10,
    pjMonthLabelMonth_mmm_yyy = 8,
    pjMonthLabelMonth_mmmm = 9,
    pjMonthLabelMonth_mmmm_yyyy = 7,
    pjMonthLabelMonthFromEnd_mm = 59,
    pjMonthLabelMonthFromEnd_Mmm = 58,
    pjMonthLabelMonthFromEnd_Month_mm = 45,
    pjMonthLabelMonthFromStart_mm = 61,
    pjMonthLabelMonthFromStart_Mmm = 60,
    pjMonthLabelMonthFromStart_Month_mm = 44,
    pjMonthLabelNoDateFormat = 35
};

enum PjNonWorkingPlacement
{
    pjBehind = 0,
    pjInFront = 1,
    pjDoNotDraw = 2
};

enum PjYesNoAutomatic
{
    pjNo = 0,
    pjYes = 1,
    pjAuto = 2
};

enum PjOrganizer
{
    pjViews = 0,
    pjTables = 1,
    pjFilters = 2,
    pjModules = 3,
    pjReports = 4,
    pjCalendars = 5,
    pjToolbars = 6,
    pjMaps = 7,
    pjForms = 8,
    pjFields = 9,
    pjGroups = 10
};

enum PjPageSetupCalendarItem
{
    pjAllCalendarItems = 0,
    pjMonthlyTitles = 1,
    pjPreviousNextMonths = 2,
    pjAdditionalTasks = 3
};

enum PjPERTField
{
    pjPERTTaskWork = 188743680,
    pjPERTTaskBaselineWork = 188743681,
    pjPERTTaskActualWork = 188743682,
    pjPERTTaskWorkVariance = 188743683,
    pjPERTTaskRemainingWork = 188743684,
    pjPERTTaskCost = 188743685,
    pjPERTTaskBaselineCost = 188743686,
    pjPERTTaskActualCost = 188743687,
    pjPERTTaskFixedCost = 188743688,
    pjPERTTaskCostVariance = 188743689,
    pjPERTTaskRemainingCost = 188743690,
    pjPERTTaskBCWP = 188743691,
    pjPERTTaskBCWS = 188743692,
    pjPERTTaskSV = 188743693,
    pjPERTTaskName = 188743694,
    pjPERTTaskWBS = 188743696,
    pjPERTTaskConstraintType = 188743697,
    pjPERTTaskConstraintDate = 188743698,
    pjPERTTaskCritical = 188743699,
    pjPERTTaskLevelingDelay = 188743700,
    pjPERTTaskFreeSlack = 188743701,
    pjPERTTaskTotalSlack = 188743702,
    pjPERTTaskID = 188743703,
    pjPERTTaskMilestone = 188743704,
    pjPERTTaskPriority = 188743705,
    pjPERTTaskSubproject = 188743706,
    pjPERTTaskBaselineDuration = 188743707,
    pjPERTTaskActualDuration = 188743708,
    pjPERTTaskDuration = 188743709,
    pjPERTTaskDurationVariance = 188743710,
    pjPERTTaskRemainingDuration = 188743711,
    pjPERTTaskPercentComplete = 188743712,
    pjPERTTaskPercentWorkComplete = 188743713,
    pjPERTTaskStart = 188743715,
    pjPERTTaskFinish = 188743716,
    pjPERTTaskEarlyStart = 188743717,
    pjPERTTaskEarlyFinish = 188743718,
    pjPERTTaskLateStart = 188743719,
    pjPERTTaskLateFinish = 188743720,
    pjPERTTaskActualStart = 188743721,
    pjPERTTaskActualFinish = 188743722,
    pjPERTTaskBaselineStart = 188743723,
    pjPERTTaskBaselineFinish = 188743724,
    pjPERTTaskStartVariance = 188743725,
    pjPERTTaskFinishVariance = 188743726,
    pjPERTTaskPredecessors = 188743727,
    pjPERTTaskSuccessors = 188743728,
    pjPERTTaskResourceNames = 188743729,
    pjPERTTaskResourceInitials = 188743730,
    pjPERTTaskText1 = 188743731,
    pjPERTTaskStart1 = 188743732,
    pjPERTTaskFinish1 = 188743733,
    pjPERTTaskText2 = 188743734,
    pjPERTTaskStart2 = 188743735,
    pjPERTTaskFinish2 = 188743736,
    pjPERTTaskText3 = 188743737,
    pjPERTTaskStart3 = 188743738,
    pjPERTTaskFinish3 = 188743739,
    pjPERTTaskText4 = 188743740,
    pjPERTTaskStart4 = 188743741,
    pjPERTTaskFinish4 = 188743742,
    pjPERTTaskText5 = 188743743,
    pjPERTTaskStart5 = 188743744,
    pjPERTTaskFinish5 = 188743745,
    pjPERTTaskText6 = 188743746,
    pjPERTTaskText7 = 188743747,
    pjPERTTaskText8 = 188743748,
    pjPERTTaskText9 = 188743749,
    pjPERTTaskText10 = 188743750,
    pjPERTTaskMarked = 188743751,
    pjPERTTaskFlag1 = 188743752,
    pjPERTTaskFlag2 = 188743753,
    pjPERTTaskFlag3 = 188743754,
    pjPERTTaskFlag4 = 188743755,
    pjPERTTaskFlag5 = 188743756,
    pjPERTTaskFlag6 = 188743757,
    pjPERTTaskFlag7 = 188743758,
    pjPERTTaskFlag8 = 188743759,
    pjPERTTaskFlag9 = 188743760,
    pjPERTTaskFlag10 = 188743761,
    pjPERTTaskRollup = 188743762,
    pjPERTTaskCV = 188743763,
    pjPERTTaskProject = 188743764,
    pjPERTTaskOutlineLevel = 188743765,
    pjPERTTaskUniqueID = 188743766,
    pjPERTTaskNumber1 = 188743767,
    pjPERTTaskNumber2 = 188743768,
    pjPERTTaskNumber3 = 188743769,
    pjPERTTaskNumber4 = 188743770,
    pjPERTTaskNumber5 = 188743771,
    pjPERTTaskSummary = 188743772,
    pjPERTTaskCreated = 188743773,
    pjPERTTaskSheetNotes = 188743774,
    pjPERTTaskUniquePredecessors = 188743775,
    pjPERTTaskUniqueSuccessors = 188743776,
    pjPERTTaskObjects = 188743777,
    pjPERTTaskLinkedFields = 188743778,
    pjPERTTaskResume = 188743779,
    pjPERTTaskStop = 188743780,
    pjPERTTaskOutlineNumber = 188743782,
    pjPERTTaskDuration1 = 188743783,
    pjPERTTaskDuration2 = 188743784,
    pjPERTTaskDuration3 = 188743785,
    pjPERTTaskCost1 = 188743786,
    pjPERTTaskCost2 = 188743787,
    pjPERTTaskCost3 = 188743788,
    pjPERTTaskHideBar = 188743789,
    pjPERTTaskConfirmed = 188743790,
    pjPERTTaskUpdateNeeded = 188743791,
    pjPERTTaskContact = 188743792,
    pjPERTTaskResourceGroup = 188743793,
    pjPERTTaskACWP = 188743800,
    pjPERTTaskType = 188743808,
    pjPERTTaskRecurring = 188743809,
    pjPERTTaskEffortDriven = 188743812,
    pjPERTTaskOvertimeWork = 188743843,
    pjPERTTaskActualOvertimeWork = 188743844,
    pjPERTTaskRemainingOvertimeWork = 188743845,
    pjPERTTaskRegularWork = 188743846,
    pjPERTTaskOvertimeCost = 188743848,
    pjPERTTaskActualOvertimeCost = 188743849,
    pjPERTTaskRemainingOvertimeCost = 188743850,
    pjPERTTaskFixedCostAccrual = 188743880,
    pjPERTTaskHyperlink = 188743897,
    pjPERTTaskHyperlinkAddress = 188743898,
    pjPERTTaskHyperlinkSubAddress = 188743899,
    pjPERTTaskHyperlinkHref = 188743900,
    pjPERTTaskIsAssn = 188743904,
    pjPERTTaskOverallocated = 188743905,
    pjPERTTaskExternalTask = 188743912,
    pjPERTTaskSubprojectReadOnly = 188743926,
    pjPERTTaskResponsePending = 188743930,
    pjPERTTaskTeamStatusPending = 188743931,
    pjPERTTaskLevelingCanSplit = 188743932,
    pjPERTTaskLevelAssignments = 188743933,
    pjPERTTaskWorkContour = 188743936,
    pjPERTTaskCost4 = 188743938,
    pjPERTTaskCost5 = 188743939,
    pjPERTTaskCost6 = 188743940,
    pjPERTTaskCost7 = 188743941,
    pjPERTTaskCost8 = 188743942,
    pjPERTTaskCost9 = 188743943,
    pjPERTTaskCost10 = 188743944,
    pjPERTTaskDate1 = 188743945,
    pjPERTTaskDate2 = 188743946,
    pjPERTTaskDate3 = 188743947,
    pjPERTTaskDate4 = 188743948,
    pjPERTTaskDate5 = 188743949,
    pjPERTTaskDate6 = 188743950,
    pjPERTTaskDate7 = 188743951,
    pjPERTTaskDate8 = 188743952,
    pjPERTTaskDate9 = 188743953,
    pjPERTTaskDate10 = 188743954,
    pjPERTTaskDuration4 = 188743955,
    pjPERTTaskDuration5 = 188743956,
    pjPERTTaskDuration6 = 188743957,
    pjPERTTaskDuration7 = 188743958,
    pjPERTTaskDuration8 = 188743959,
    pjPERTTaskDuration9 = 188743960,
    pjPERTTaskDuration10 = 188743961,
    pjPERTTaskStart6 = 188743962,
    pjPERTTaskFinish6 = 188743963,
    pjPERTTaskStart7 = 188743964,
    pjPERTTaskFinish7 = 188743965,
    pjPERTTaskStart8 = 188743966,
    pjPERTTaskFinish8 = 188743967,
    pjPERTTaskStart9 = 188743968,
    pjPERTTaskFinish9 = 188743969,
    pjPERTTaskStart10 = 188743970,
    pjPERTTaskFinish10 = 188743971,
    pjPERTTaskFlag11 = 188743972,
    pjPERTTaskFlag12 = 188743973,
    pjPERTTaskFlag13 = 188743974,
    pjPERTTaskFlag14 = 188743975,
    pjPERTTaskFlag15 = 188743976,
    pjPERTTaskFlag16 = 188743977,
    pjPERTTaskFlag17 = 188743978,
    pjPERTTaskFlag18 = 188743979,
    pjPERTTaskFlag19 = 188743980,
    pjPERTTaskFlag20 = 188743981,
    pjPERTTaskNumber6 = 188743982,
    pjPERTTaskNumber7 = 188743983,
    pjPERTTaskNumber8 = 188743984,
    pjPERTTaskNumber9 = 188743985,
    pjPERTTaskNumber10 = 188743986,
    pjPERTTaskNumber11 = 188743987,
    pjPERTTaskNumber12 = 188743988,
    pjPERTTaskNumber13 = 188743989,
    pjPERTTaskNumber14 = 188743990,
    pjPERTTaskNumber15 = 188743991,
    pjPERTTaskNumber16 = 188743992,
    pjPERTTaskNumber17 = 188743993,
    pjPERTTaskNumber18 = 188743994,
    pjPERTTaskNumber19 = 188743995,
    pjPERTTaskNumber20 = 188743996,
    pjPERTTaskText11 = 188743997,
    pjPERTTaskText12 = 188743998,
    pjPERTTaskText13 = 188743999,
    pjPERTTaskText14 = 188744000,
    pjPERTTaskText15 = 188744001,
    pjPERTTaskText16 = 188744002,
    pjPERTTaskText17 = 188744003,
    pjPERTTaskText18 = 188744004,
    pjPERTTaskText19 = 188744005,
    pjPERTTaskText20 = 188744006,
    pjPERTTaskText21 = 188744007,
    pjPERTTaskText22 = 188744008,
    pjPERTTaskText23 = 188744009,
    pjPERTTaskText24 = 188744010,
    pjPERTTaskText25 = 188744011,
    pjPERTTaskText26 = 188744012,
    pjPERTTaskText27 = 188744013,
    pjPERTTaskText28 = 188744014,
    pjPERTTaskText29 = 188744015,
    pjPERTTaskText30 = 188744016,
    pjPERTTaskResourcePhonetics = 188744029,
    pjPERTTaskAssignmentDelay = 188744046,
    pjPERTTaskAssignmentUnits = 188744047,
    pjPERTTaskCostRateTable = 188744048,
    pjPERTTaskPreLeveledStart = 188744049,
    pjPERTTaskPreLeveledFinish = 188744050,
    pjPERTTaskEstimated = 188744076,
    pjPERTTaskIgnoreResourceCalendar = 188744079,
    pjPERTTaskCalendar = 188744082,
    pjPERTTaskOutlineCode1 = 188744096,
    pjPERTTaskOutlineCode2 = 188744098,
    pjPERTTaskOutlineCode3 = 188744100,
    pjPERTTaskOutlineCode4 = 188744102,
    pjPERTTaskOutlineCode5 = 188744104,
    pjPERTTaskOutlineCode6 = 188744106,
    pjPERTTaskOutlineCode7 = 188744108,
    pjPERTTaskOutlineCode8 = 188744110,
    pjPERTTaskOutlineCode9 = 188744112,
    pjPERTTaskOutlineCode10 = 188744114,
    pjPERTTaskDeadline = 188744117,
    pjPERTTaskStartSlack = 188744118,
    pjPERTTaskFinishSlack = 188744119,
    pjPERTTaskVAC = 188744121,
    pjPERTTaskGroupBySummary = 188744126,
    pjPERTTaskWBSPredecessors = 188744129,
    pjPERTTaskWBSSuccessors = 188744130,
    pjPERTTaskResourceType = 188744131,
    pjPERTTaskBaseline1Start = 188744162,
    pjPERTTaskBaseline1Finish = 188744163,
    pjPERTTaskBaseline1Cost = 188744164,
    pjPERTTaskBaseline1Work = 188744165,
    pjPERTTaskBaseline1Duration = 188744167,
    pjPERTTaskBaseline2Start = 188744173,
    pjPERTTaskBaseline2Finish = 188744174,
    pjPERTTaskBaseline2Cost = 188744175,
    pjPERTTaskBaseline2Work = 188744176,
    pjPERTTaskBaseline2Duration = 188744178,
    pjPERTTaskBaseline3Start = 188744184,
    pjPERTTaskBaseline3Finish = 188744185,
    pjPERTTaskBaseline3Cost = 188744186,
    pjPERTTaskBaseline3Work = 188744187,
    pjPERTTaskBaseline3Duration = 188744189,
    pjPERTTaskBaseline4Start = 188744195,
    pjPERTTaskBaseline4Finish = 188744196,
    pjPERTTaskBaseline4Cost = 188744197,
    pjPERTTaskBaseline4Work = 188744198,
    pjPERTTaskBaseline4Duration = 188744200,
    pjPERTTaskBaseline5Start = 188744206,
    pjPERTTaskBaseline5Finish = 188744207,
    pjPERTTaskBaseline5Cost = 188744208,
    pjPERTTaskBaseline5Work = 188744209,
    pjPERTTaskBaseline5Duration = 188744211,
    pjPERTTaskCPI = 188744217,
    pjPERTTaskSPI = 188744218,
    pjPERTTaskCVPercent = 188744219,
    pjPERTTaskSVPercent = 188744220,
    pjPERTTaskEAC = 188744221,
    pjPERTTaskTCPI = 188744222,
    pjPERTTaskStatus = 188744223,
    pjPERTTaskBaseline6Start = 188744224,
    pjPERTTaskBaseline6Finish = 188744225,
    pjPERTTaskBaseline6Cost = 188744226,
    pjPERTTaskBaseline6Work = 188744227,
    pjPERTTaskBaseline6Duration = 188744229,
    pjPERTTaskBaseline7Start = 188744235,
    pjPERTTaskBaseline7Finish = 188744236,
    pjPERTTaskBaseline7Cost = 188744237,
    pjPERTTaskBaseline7Work = 188744238,
    pjPERTTaskBaseline7Duration = 188744240,
    pjPERTTaskBaseline8Start = 188744246,
    pjPERTTaskBaseline8Finish = 188744247,
    pjPERTTaskBaseline8Cost = 188744248,
    pjPERTTaskBaseline8Work = 188744249,
    pjPERTTaskBaseline8Duration = 188744251,
    pjPERTTaskBaseline9Start = 188744257,
    pjPERTTaskBaseline9Finish = 188744258,
    pjPERTTaskBaseline9Cost = 188744259,
    pjPERTTaskBaseline9Work = 188744260,
    pjPERTTaskBaseline9Duration = 188744262,
    pjPERTTaskBaseline10Start = 188744268,
    pjPERTTaskBaseline10Finish = 188744269,
    pjPERTTaskBaseline10Cost = 188744270,
    pjPERTTaskBaseline10Work = 188744271,
    pjPERTTaskBaseline10Duration = 188744273,
    pjPERTTaskEnterpriseCost1 = 188744279,
    pjPERTTaskEnterpriseCost2 = 188744280,
    pjPERTTaskEnterpriseCost3 = 188744281,
    pjPERTTaskEnterpriseCost4 = 188744282,
    pjPERTTaskEnterpriseCost5 = 188744283,
    pjPERTTaskEnterpriseCost6 = 188744284,
    pjPERTTaskEnterpriseCost7 = 188744285,
    pjPERTTaskEnterpriseCost8 = 188744286,
    pjPERTTaskEnterpriseCost9 = 188744287,
    pjPERTTaskEnterpriseCost10 = 188744288,
    pjPERTTaskEnterpriseDate1 = 188744289,
    pjPERTTaskEnterpriseDate2 = 188744290,
    pjPERTTaskEnterpriseDate3 = 188744291,
    pjPERTTaskEnterpriseDate4 = 188744292,
    pjPERTTaskEnterpriseDate5 = 188744293,
    pjPERTTaskEnterpriseDate6 = 188744294,
    pjPERTTaskEnterpriseDate7 = 188744295,
    pjPERTTaskEnterpriseDate8 = 188744296,
    pjPERTTaskEnterpriseDate9 = 188744297,
    pjPERTTaskEnterpriseDate10 = 188744298,
    pjPERTTaskEnterpriseDate11 = 188744299,
    pjPERTTaskEnterpriseDate12 = 188744300,
    pjPERTTaskEnterpriseDate13 = 188744301,
    pjPERTTaskEnterpriseDate14 = 188744302,
    pjPERTTaskEnterpriseDate15 = 188744303,
    pjPERTTaskEnterpriseDate16 = 188744304,
    pjPERTTaskEnterpriseDate17 = 188744305,
    pjPERTTaskEnterpriseDate18 = 188744306,
    pjPERTTaskEnterpriseDate19 = 188744307,
    pjPERTTaskEnterpriseDate20 = 188744308,
    pjPERTTaskEnterpriseDate21 = 188744309,
    pjPERTTaskEnterpriseDate22 = 188744310,
    pjPERTTaskEnterpriseDate23 = 188744311,
    pjPERTTaskEnterpriseDate24 = 188744312,
    pjPERTTaskEnterpriseDate25 = 188744313,
    pjPERTTaskEnterpriseDate26 = 188744314,
    pjPERTTaskEnterpriseDate27 = 188744315,
    pjPERTTaskEnterpriseDate28 = 188744316,
    pjPERTTaskEnterpriseDate29 = 188744317,
    pjPERTTaskEnterpriseDate30 = 188744318,
    pjPERTTaskEnterpriseDuration1 = 188744319,
    pjPERTTaskEnterpriseDuration2 = 188744320,
    pjPERTTaskEnterpriseDuration3 = 188744321,
    pjPERTTaskEnterpriseDuration4 = 188744322,
    pjPERTTaskEnterpriseDuration5 = 188744323,
    pjPERTTaskEnterpriseDuration6 = 188744324,
    pjPERTTaskEnterpriseDuration7 = 188744325,
    pjPERTTaskEnterpriseDuration8 = 188744326,
    pjPERTTaskEnterpriseDuration9 = 188744327,
    pjPERTTaskEnterpriseDuration10 = 188744328,
    pjPERTTaskEnterpriseFlag1 = 188744339,
    pjPERTTaskEnterpriseFlag2 = 188744340,
    pjPERTTaskEnterpriseFlag3 = 188744341,
    pjPERTTaskEnterpriseFlag4 = 188744342,
    pjPERTTaskEnterpriseFlag5 = 188744343,
    pjPERTTaskEnterpriseFlag6 = 188744344,
    pjPERTTaskEnterpriseFlag7 = 188744345,
    pjPERTTaskEnterpriseFlag8 = 188744346,
    pjPERTTaskEnterpriseFlag9 = 188744347,
    pjPERTTaskEnterpriseFlag10 = 188744348,
    pjPERTTaskEnterpriseFlag11 = 188744349,
    pjPERTTaskEnterpriseFlag12 = 188744350,
    pjPERTTaskEnterpriseFlag13 = 188744351,
    pjPERTTaskEnterpriseFlag14 = 188744352,
    pjPERTTaskEnterpriseFlag15 = 188744353,
    pjPERTTaskEnterpriseFlag16 = 188744354,
    pjPERTTaskEnterpriseFlag17 = 188744355,
    pjPERTTaskEnterpriseFlag18 = 188744356,
    pjPERTTaskEnterpriseFlag19 = 188744357,
    pjPERTTaskEnterpriseFlag20 = 188744358,
    pjPERTTaskEnterpriseNumber1 = 188744379,
    pjPERTTaskEnterpriseNumber2 = 188744380,
    pjPERTTaskEnterpriseNumber3 = 188744381,
    pjPERTTaskEnterpriseNumber4 = 188744382,
    pjPERTTaskEnterpriseNumber5 = 188744383,
    pjPERTTaskEnterpriseNumber6 = 188744384,
    pjPERTTaskEnterpriseNumber7 = 188744385,
    pjPERTTaskEnterpriseNumber8 = 188744386,
    pjPERTTaskEnterpriseNumber9 = 188744387,
    pjPERTTaskEnterpriseNumber10 = 188744388,
    pjPERTTaskEnterpriseNumber11 = 188744389,
    pjPERTTaskEnterpriseNumber12 = 188744390,
    pjPERTTaskEnterpriseNumber13 = 188744391,
    pjPERTTaskEnterpriseNumber14 = 188744392,
    pjPERTTaskEnterpriseNumber15 = 188744393,
    pjPERTTaskEnterpriseNumber16 = 188744394,
    pjPERTTaskEnterpriseNumber17 = 188744395,
    pjPERTTaskEnterpriseNumber18 = 188744396,
    pjPERTTaskEnterpriseNumber19 = 188744397,
    pjPERTTaskEnterpriseNumber20 = 188744398,
    pjPERTTaskEnterpriseNumber21 = 188744399,
    pjPERTTaskEnterpriseNumber22 = 188744400,
    pjPERTTaskEnterpriseNumber23 = 188744401,
    pjPERTTaskEnterpriseNumber24 = 188744402,
    pjPERTTaskEnterpriseNumber25 = 188744403,
    pjPERTTaskEnterpriseNumber26 = 188744404,
    pjPERTTaskEnterpriseNumber27 = 188744405,
    pjPERTTaskEnterpriseNumber28 = 188744406,
    pjPERTTaskEnterpriseNumber29 = 188744407,
    pjPERTTaskEnterpriseNumber30 = 188744408,
    pjPERTTaskEnterpriseNumber31 = 188744409,
    pjPERTTaskEnterpriseNumber32 = 188744410,
    pjPERTTaskEnterpriseNumber33 = 188744411,
    pjPERTTaskEnterpriseNumber34 = 188744412,
    pjPERTTaskEnterpriseNumber35 = 188744413,
    pjPERTTaskEnterpriseNumber36 = 188744414,
    pjPERTTaskEnterpriseNumber37 = 188744415,
    pjPERTTaskEnterpriseNumber38 = 188744416,
    pjPERTTaskEnterpriseNumber39 = 188744417,
    pjPERTTaskEnterpriseNumber40 = 188744418,
    pjPERTTaskEnterpriseOutlineCode1 = 188744419,
    pjPERTTaskEnterpriseOutlineCode2 = 188744421,
    pjPERTTaskEnterpriseOutlineCode3 = 188744423,
    pjPERTTaskEnterpriseOutlineCode4 = 188744425,
    pjPERTTaskEnterpriseOutlineCode5 = 188744427,
    pjPERTTaskEnterpriseOutlineCode6 = 188744429,
    pjPERTTaskEnterpriseOutlineCode7 = 188744431,
    pjPERTTaskEnterpriseOutlineCode8 = 188744433,
    pjPERTTaskEnterpriseOutlineCode9 = 188744435,
    pjPERTTaskEnterpriseOutlineCode10 = 188744437,
    pjPERTTaskEnterpriseOutlineCode11 = 188744439,
    pjPERTTaskEnterpriseOutlineCode12 = 188744441,
    pjPERTTaskEnterpriseOutlineCode13 = 188744443,
    pjPERTTaskEnterpriseOutlineCode14 = 188744445,
    pjPERTTaskEnterpriseOutlineCode15 = 188744447,
    pjPERTTaskEnterpriseOutlineCode16 = 188744449,
    pjPERTTaskEnterpriseOutlineCode17 = 188744451,
    pjPERTTaskEnterpriseOutlineCode18 = 188744453,
    pjPERTTaskEnterpriseOutlineCode19 = 188744455,
    pjPERTTaskEnterpriseOutlineCode20 = 188744457,
    pjPERTTaskEnterpriseOutlineCode21 = 188744459,
    pjPERTTaskEnterpriseOutlineCode22 = 188744461,
    pjPERTTaskEnterpriseOutlineCode23 = 188744463,
    pjPERTTaskEnterpriseOutlineCode24 = 188744465,
    pjPERTTaskEnterpriseOutlineCode25 = 188744467,
    pjPERTTaskEnterpriseOutlineCode26 = 188744469,
    pjPERTTaskEnterpriseOutlineCode27 = 188744471,
    pjPERTTaskEnterpriseOutlineCode28 = 188744473,
    pjPERTTaskEnterpriseOutlineCode29 = 188744475,
    pjPERTTaskEnterpriseOutlineCode30 = 188744477,
    pjPERTTaskEnterpriseText1 = 188744479,
    pjPERTTaskEnterpriseText2 = 188744480,
    pjPERTTaskEnterpriseText3 = 188744481,
    pjPERTTaskEnterpriseText4 = 188744482,
    pjPERTTaskEnterpriseText5 = 188744483,
    pjPERTTaskEnterpriseText6 = 188744484,
    pjPERTTaskEnterpriseText7 = 188744485,
    pjPERTTaskEnterpriseText8 = 188744486,
    pjPERTTaskEnterpriseText9 = 188744487,
    pjPERTTaskEnterpriseText10 = 188744488,
    pjPERTTaskEnterpriseText11 = 188744489,
    pjPERTTaskEnterpriseText12 = 188744490,
    pjPERTTaskEnterpriseText13 = 188744491,
    pjPERTTaskEnterpriseText14 = 188744492,
    pjPERTTaskEnterpriseText15 = 188744493,
    pjPERTTaskEnterpriseText16 = 188744494,
    pjPERTTaskEnterpriseText17 = 188744495,
    pjPERTTaskEnterpriseText18 = 188744496,
    pjPERTTaskEnterpriseText19 = 188744497,
    pjPERTTaskEnterpriseText20 = 188744498,
    pjPERTTaskEnterpriseText21 = 188744499,
    pjPERTTaskEnterpriseText22 = 188744500,
    pjPERTTaskEnterpriseText23 = 188744501,
    pjPERTTaskEnterpriseText24 = 188744502,
    pjPERTTaskEnterpriseText25 = 188744503,
    pjPERTTaskEnterpriseText26 = 188744504,
    pjPERTTaskEnterpriseText27 = 188744505,
    pjPERTTaskEnterpriseText28 = 188744506,
    pjPERTTaskEnterpriseText29 = 188744507,
    pjPERTTaskEnterpriseText30 = 188744508,
    pjPERTTaskEnterpriseText31 = 188744509,
    pjPERTTaskEnterpriseText32 = 188744510,
    pjPERTTaskEnterpriseText33 = 188744511,
    pjPERTTaskEnterpriseText34 = 188744512,
    pjPERTTaskEnterpriseText35 = 188744513,
    pjPERTTaskEnterpriseText36 = 188744514,
    pjPERTTaskEnterpriseText37 = 188744515,
    pjPERTTaskEnterpriseText38 = 188744516,
    pjPERTTaskEnterpriseText39 = 188744517,
    pjPERTTaskEnterpriseText40 = 188744518,
    pjPERTTaskEnterpriseProjectCost1 = 188744529,
    pjPERTTaskEnterpriseProjectCost2 = 188744530,
    pjPERTTaskEnterpriseProjectCost3 = 188744531,
    pjPERTTaskEnterpriseProjectCost4 = 188744532,
    pjPERTTaskEnterpriseProjectCost5 = 188744533,
    pjPERTTaskEnterpriseProjectCost6 = 188744534,
    pjPERTTaskEnterpriseProjectCost7 = 188744535,
    pjPERTTaskEnterpriseProjectCost8 = 188744536,
    pjPERTTaskEnterpriseProjectCost9 = 188744537,
    pjPERTTaskEnterpriseProjectCost10 = 188744538,
    pjPERTTaskEnterpriseProjectDate1 = 188744539,
    pjPERTTaskEnterpriseProjectDate2 = 188744540,
    pjPERTTaskEnterpriseProjectDate3 = 188744541,
    pjPERTTaskEnterpriseProjectDate4 = 188744542,
    pjPERTTaskEnterpriseProjectDate5 = 188744543,
    pjPERTTaskEnterpriseProjectDate6 = 188744544,
    pjPERTTaskEnterpriseProjectDate7 = 188744545,
    pjPERTTaskEnterpriseProjectDate8 = 188744546,
    pjPERTTaskEnterpriseProjectDate9 = 188744547,
    pjPERTTaskEnterpriseProjectDate10 = 188744548,
    pjPERTTaskEnterpriseProjectDate11 = 188744549,
    pjPERTTaskEnterpriseProjectDate12 = 188744550,
    pjPERTTaskEnterpriseProjectDate13 = 188744551,
    pjPERTTaskEnterpriseProjectDate14 = 188744552,
    pjPERTTaskEnterpriseProjectDate15 = 188744553,
    pjPERTTaskEnterpriseProjectDate16 = 188744554,
    pjPERTTaskEnterpriseProjectDate17 = 188744555,
    pjPERTTaskEnterpriseProjectDate18 = 188744556,
    pjPERTTaskEnterpriseProjectDate19 = 188744557,
    pjPERTTaskEnterpriseProjectDate20 = 188744558,
    pjPERTTaskEnterpriseProjectDate21 = 188744559,
    pjPERTTaskEnterpriseProjectDate22 = 188744560,
    pjPERTTaskEnterpriseProjectDate23 = 188744561,
    pjPERTTaskEnterpriseProjectDate24 = 188744562,
    pjPERTTaskEnterpriseProjectDate25 = 188744563,
    pjPERTTaskEnterpriseProjectDate26 = 188744564,
    pjPERTTaskEnterpriseProjectDate27 = 188744565,
    pjPERTTaskEnterpriseProjectDate28 = 188744566,
    pjPERTTaskEnterpriseProjectDate29 = 188744567,
    pjPERTTaskEnterpriseProjectDate30 = 188744568,
    pjPERTTaskEnterpriseProjectDuration1 = 188744569,
    pjPERTTaskEnterpriseProjectDuration2 = 188744570,
    pjPERTTaskEnterpriseProjectDuration3 = 188744571,
    pjPERTTaskEnterpriseProjectDuration4 = 188744572,
    pjPERTTaskEnterpriseProjectDuration5 = 188744573,
    pjPERTTaskEnterpriseProjectDuration6 = 188744574,
    pjPERTTaskEnterpriseProjectDuration7 = 188744575,
    pjPERTTaskEnterpriseProjectDuration8 = 188744576,
    pjPERTTaskEnterpriseProjectDuration9 = 188744577,
    pjPERTTaskEnterpriseProjectDuration10 = 188744578,
    pjPERTTaskEnterpriseProjectOutlineCode1 = 188744589,
    pjPERTTaskEnterpriseProjectOutlineCode2 = 188744590,
    pjPERTTaskEnterpriseProjectOutlineCode3 = 188744591,
    pjPERTTaskEnterpriseProjectOutlineCode4 = 188744592,
    pjPERTTaskEnterpriseProjectOutlineCode5 = 188744593,
    pjPERTTaskEnterpriseProjectOutlineCode6 = 188744594,
    pjPERTTaskEnterpriseProjectOutlineCode7 = 188744595,
    pjPERTTaskEnterpriseProjectOutlineCode8 = 188744596,
    pjPERTTaskEnterpriseProjectOutlineCode9 = 188744597,
    pjPERTTaskEnterpriseProjectOutlineCode10 = 188744598,
    pjPERTTaskEnterpriseProjectOutlineCode11 = 188744599,
    pjPERTTaskEnterpriseProjectOutlineCode12 = 188744600,
    pjPERTTaskEnterpriseProjectOutlineCode13 = 188744601,
    pjPERTTaskEnterpriseProjectOutlineCode14 = 188744602,
    pjPERTTaskEnterpriseProjectOutlineCode15 = 188744603,
    pjPERTTaskEnterpriseProjectOutlineCode16 = 188744604,
    pjPERTTaskEnterpriseProjectOutlineCode17 = 188744605,
    pjPERTTaskEnterpriseProjectOutlineCode18 = 188744606,
    pjPERTTaskEnterpriseProjectOutlineCode19 = 188744607,
    pjPERTTaskEnterpriseProjectOutlineCode20 = 188744608,
    pjPERTTaskEnterpriseProjectOutlineCode21 = 188744609,
    pjPERTTaskEnterpriseProjectOutlineCode22 = 188744610,
    pjPERTTaskEnterpriseProjectOutlineCode23 = 188744611,
    pjPERTTaskEnterpriseProjectOutlineCode24 = 188744612,
    pjPERTTaskEnterpriseProjectOutlineCode25 = 188744613,
    pjPERTTaskEnterpriseProjectOutlineCode26 = 188744614,
    pjPERTTaskEnterpriseProjectOutlineCode27 = 188744615,
    pjPERTTaskEnterpriseProjectOutlineCode28 = 188744616,
    pjPERTTaskEnterpriseProjectOutlineCode29 = 188744617,
    pjPERTTaskEnterpriseProjectOutlineCode30 = 188744618,
    pjPERTTaskEnterpriseProjectFlag1 = 188744649,
    pjPERTTaskEnterpriseProjectFlag2 = 188744650,
    pjPERTTaskEnterpriseProjectFlag3 = 188744651,
    pjPERTTaskEnterpriseProjectFlag4 = 188744652,
    pjPERTTaskEnterpriseProjectFlag5 = 188744653,
    pjPERTTaskEnterpriseProjectFlag6 = 188744654,
    pjPERTTaskEnterpriseProjectFlag7 = 188744655,
    pjPERTTaskEnterpriseProjectFlag8 = 188744656,
    pjPERTTaskEnterpriseProjectFlag9 = 188744657,
    pjPERTTaskEnterpriseProjectFlag10 = 188744658,
    pjPERTTaskEnterpriseProjectFlag11 = 188744659,
    pjPERTTaskEnterpriseProjectFlag12 = 188744660,
    pjPERTTaskEnterpriseProjectFlag13 = 188744661,
    pjPERTTaskEnterpriseProjectFlag14 = 188744662,
    pjPERTTaskEnterpriseProjectFlag15 = 188744663,
    pjPERTTaskEnterpriseProjectFlag16 = 188744664,
    pjPERTTaskEnterpriseProjectFlag17 = 188744665,
    pjPERTTaskEnterpriseProjectFlag18 = 188744666,
    pjPERTTaskEnterpriseProjectFlag19 = 188744667,
    pjPERTTaskEnterpriseProjectFlag20 = 188744668,
    pjPERTTaskEnterpriseProjectNumber1 = 188744689,
    pjPERTTaskEnterpriseProjectNumber2 = 188744690,
    pjPERTTaskEnterpriseProjectNumber3 = 188744691,
    pjPERTTaskEnterpriseProjectNumber4 = 188744692,
    pjPERTTaskEnterpriseProjectNumber5 = 188744693,
    pjPERTTaskEnterpriseProjectNumber6 = 188744694,
    pjPERTTaskEnterpriseProjectNumber7 = 188744695,
    pjPERTTaskEnterpriseProjectNumber8 = 188744696,
    pjPERTTaskEnterpriseProjectNumber9 = 188744697,
    pjPERTTaskEnterpriseProjectNumber10 = 188744698,
    pjPERTTaskEnterpriseProjectNumber11 = 188744699,
    pjPERTTaskEnterpriseProjectNumber12 = 188744700,
    pjPERTTaskEnterpriseProjectNumber13 = 188744701,
    pjPERTTaskEnterpriseProjectNumber14 = 188744702,
    pjPERTTaskEnterpriseProjectNumber15 = 188744703,
    pjPERTTaskEnterpriseProjectNumber16 = 188744704,
    pjPERTTaskEnterpriseProjectNumber17 = 188744705,
    pjPERTTaskEnterpriseProjectNumber18 = 188744706,
    pjPERTTaskEnterpriseProjectNumber19 = 188744707,
    pjPERTTaskEnterpriseProjectNumber20 = 188744708,
    pjPERTTaskEnterpriseProjectNumber21 = 188744709,
    pjPERTTaskEnterpriseProjectNumber22 = 188744710,
    pjPERTTaskEnterpriseProjectNumber23 = 188744711,
    pjPERTTaskEnterpriseProjectNumber24 = 188744712,
    pjPERTTaskEnterpriseProjectNumber25 = 188744713,
    pjPERTTaskEnterpriseProjectNumber26 = 188744714,
    pjPERTTaskEnterpriseProjectNumber27 = 188744715,
    pjPERTTaskEnterpriseProjectNumber28 = 188744716,
    pjPERTTaskEnterpriseProjectNumber29 = 188744717,
    pjPERTTaskEnterpriseProjectNumber30 = 188744718,
    pjPERTTaskEnterpriseProjectNumber31 = 188744719,
    pjPERTTaskEnterpriseProjectNumber32 = 188744720,
    pjPERTTaskEnterpriseProjectNumber33 = 188744721,
    pjPERTTaskEnterpriseProjectNumber34 = 188744722,
    pjPERTTaskEnterpriseProjectNumber35 = 188744723,
    pjPERTTaskEnterpriseProjectNumber36 = 188744724,
    pjPERTTaskEnterpriseProjectNumber37 = 188744725,
    pjPERTTaskEnterpriseProjectNumber38 = 188744726,
    pjPERTTaskEnterpriseProjectNumber39 = 188744727,
    pjPERTTaskEnterpriseProjectNumber40 = 188744728,
    pjPERTTaskEnterpriseProjectText1 = 188744729,
    pjPERTTaskEnterpriseProjectText2 = 188744730,
    pjPERTTaskEnterpriseProjectText3 = 188744731,
    pjPERTTaskEnterpriseProjectText4 = 188744732,
    pjPERTTaskEnterpriseProjectText5 = 188744733,
    pjPERTTaskEnterpriseProjectText6 = 188744734,
    pjPERTTaskEnterpriseProjectText7 = 188744735,
    pjPERTTaskEnterpriseProjectText8 = 188744736,
    pjPERTTaskEnterpriseProjectText9 = 188744737,
    pjPERTTaskEnterpriseProjectText10 = 188744738,
    pjPERTTaskEnterpriseProjectText11 = 188744739,
    pjPERTTaskEnterpriseProjectText12 = 188744740,
    pjPERTTaskEnterpriseProjectText13 = 188744741,
    pjPERTTaskEnterpriseProjectText14 = 188744742,
    pjPERTTaskEnterpriseProjectText15 = 188744743,
    pjPERTTaskEnterpriseProjectText16 = 188744744,
    pjPERTTaskEnterpriseProjectText17 = 188744745,
    pjPERTTaskEnterpriseProjectText18 = 188744746,
    pjPERTTaskEnterpriseProjectText19 = 188744747,
    pjPERTTaskEnterpriseProjectText20 = 188744748,
    pjPERTTaskEnterpriseProjectText21 = 188744749,
    pjPERTTaskEnterpriseProjectText22 = 188744750,
    pjPERTTaskEnterpriseProjectText23 = 188744751,
    pjPERTTaskEnterpriseProjectText24 = 188744752,
    pjPERTTaskEnterpriseProjectText25 = 188744753,
    pjPERTTaskEnterpriseProjectText26 = 188744754,
    pjPERTTaskEnterpriseProjectText27 = 188744755,
    pjPERTTaskEnterpriseProjectText28 = 188744756,
    pjPERTTaskEnterpriseProjectText29 = 188744757,
    pjPERTTaskEnterpriseProjectText30 = 188744758,
    pjPERTTaskEnterpriseProjectText31 = 188744759,
    pjPERTTaskEnterpriseProjectText32 = 188744760,
    pjPERTTaskEnterpriseProjectText33 = 188744761,
    pjPERTTaskEnterpriseProjectText34 = 188744762,
    pjPERTTaskEnterpriseProjectText35 = 188744763,
    pjPERTTaskEnterpriseProjectText36 = 188744764,
    pjPERTTaskEnterpriseProjectText37 = 188744765,
    pjPERTTaskEnterpriseProjectText38 = 188744766,
    pjPERTTaskEnterpriseProjectText39 = 188744767,
    pjPERTTaskEnterpriseProjectText40 = 188744768,
    pjPERTTaskResourceEnterpriseOutlineCode1 = 188744769,
    pjPERTTaskResourceEnterpriseOutlineCode2 = 188744770,
    pjPERTTaskResourceEnterpriseOutlineCode3 = 188744771,
    pjPERTTaskResourceEnterpriseOutlineCode4 = 188744772,
    pjPERTTaskResourceEnterpriseOutlineCode5 = 188744773,
    pjPERTTaskResourceEnterpriseOutlineCode6 = 188744774,
    pjPERTTaskResourceEnterpriseOutlineCode7 = 188744775,
    pjPERTTaskResourceEnterpriseOutlineCode8 = 188744776,
    pjPERTTaskResourceEnterpriseOutlineCode9 = 188744777,
    pjPERTTaskResourceEnterpriseOutlineCode10 = 188744778,
    pjPERTTaskResourceEnterpriseOutlineCode11 = 188744779,
    pjPERTTaskResourceEnterpriseOutlineCode12 = 188744780,
    pjPERTTaskResourceEnterpriseOutlineCode13 = 188744781,
    pjPERTTaskResourceEnterpriseOutlineCode14 = 188744782,
    pjPERTTaskResourceEnterpriseOutlineCode15 = 188744783,
    pjPERTTaskResourceEnterpriseOutlineCode16 = 188744784,
    pjPERTTaskResourceEnterpriseOutlineCode17 = 188744785,
    pjPERTTaskResourceEnterpriseOutlineCode18 = 188744786,
    pjPERTTaskResourceEnterpriseOutlineCode19 = 188744787,
    pjPERTTaskResourceEnterpriseOutlineCode20 = 188744788,
    pjPERTTaskResourceEnterpriseOutlineCode21 = 188744789,
    pjPERTTaskResourceEnterpriseOutlineCode22 = 188744790,
    pjPERTTaskResourceEnterpriseOutlineCode23 = 188744791,
    pjPERTTaskResourceEnterpriseOutlineCode24 = 188744792,
    pjPERTTaskResourceEnterpriseOutlineCode25 = 188744793,
    pjPERTTaskResourceEnterpriseOutlineCode26 = 188744794,
    pjPERTTaskResourceEnterpriseOutlineCode27 = 188744795,
    pjPERTTaskResourceEnterpriseOutlineCode28 = 188744796,
    pjPERTTaskResourceEnterpriseOutlineCode29 = 188744797,
    pjPERTTaskResourceEnterpriseOutlineCode30 = 188744798,
    pjPERTTaskPhysicalPercentComplete = 188744799,
    pjPERTTaskDemandedRequested = 188744800,
    pjPERTTaskEarnedValueMethod = 188744802,
    pjPERTTaskNotes = 188743695
};

enum PjPERTBoxSize
{
    pjIDOnly = 0,
    pjSmall = 1,
    pjMedium = 2,
    pjLarge = 3
};

enum PjPERTBoxStyle
{
    pjPlainBox = 0,
    pjThickBox = 1,
    pjShadowBox = 2,
    pjDottedBox = 3,
    pjFrame = 4,
    pjGrayFrame = 5,
    pjPatternFrame = 6,
    pjMarquee = 7
};

enum PjPlacement
{
    pjBefore = 0,
    pjAfter = 1,
    pjBeforeWithSpace = 2,
    pjAfterWithSpace = 3
};

enum PjPoolAction
{
    pjPoolTakesPrecedence = 1,
    pjSharersTakePrecedence = 2,
    pjOpenSharer = 3,
    pjOpenAllSharers = 4,
    pjUnlinkSharer = 5
};

enum PjPriority
{
    pjPriorityDoNotLevel = 9,
    pjPriorityHighest = 8,
    pjPriorityVeryHigh = 7,
    pjPriorityHigher = 6,
    pjPriorityHigh = 5,
    pjPriorityMedium = 4,
    pjPriorityLow = 3,
    pjPriorityLower = 2,
    pjPriorityVeryLow = 1,
    pjPriorityLowest = 0
};

enum PjProjectUpdate
{
    pj0or100Percent = 0,
    pj0to100Percent = 1,
    pjReschedule = 2
};

enum PjPublishAction
{
    pjCancel = 1,
    pjSendPublisher = 2
};

enum PjEditionUpdate
{
    pjAutomaticUpdate = 4,
    pjManualUpdate = 5
};

enum PjResAssignOperation
{
    pjAssign = 0,
    pjRemove = 1,
    pjReplace = 2,
    pjChange = 3
};

enum PjResourceGraphStyle
{
    pjBar = 0,
    pjArea = 1,
    pjStep = 2,
    pjLineGraph = 3,
    pjStepLine = 4,
    pjDoNotShow = 5
};

enum PjSaveType
{
    pjDoNotSave = 0,
    pjSave = 1,
    pjPromptSave = 2
};

enum PjSaveBaselineFrom
{
    pjCopyCurrent = 0,
    pjCopyBaseline = 1,
    pjCopyStart_Finish1 = 2,
    pjCopyStart_Finish2 = 3,
    pjCopyStart_Finish3 = 4,
    pjCopyStart_Finish4 = 5,
    pjCopyStart_Finish5 = 6,
    pjCopyStart_Finish6 = 7,
    pjCopyStart_Finish7 = 8,
    pjCopyStart_Finish8 = 9,
    pjCopyStart_Finish9 = 10,
    pjCopyStart_Finish10 = 11,
    pjCopyBaseline1 = 12,
    pjCopyBaseline2 = 13,
    pjCopyBaseline3 = 14,
    pjCopyBaseline4 = 15,
    pjCopyBaseline5 = 16,
    pjCopyBaseline6 = 17,
    pjCopyBaseline7 = 18,
    pjCopyBaseline8 = 19,
    pjCopyBaseline9 = 20,
    pjCopyBaseline10 = 21
};

enum PjSaveBaselineTo
{
    pjIntoBaseline = 0,
    pjIntoStart_Finish1 = 1,
    pjIntoStart_Finish2 = 2,
    pjIntoStart_Finish3 = 3,
    pjIntoStart_Finish4 = 4,
    pjIntoStart_Finish5 = 5,
    pjIntoStart_Finish6 = 6,
    pjIntoStart_Finish7 = 7,
    pjIntoStart_Finish8 = 8,
    pjIntoStart_Finish9 = 9,
    pjIntoStart_Finish10 = 10,
    pjIntoBaseline1 = 11,
    pjIntoBaseline2 = 12,
    pjIntoBaseline3 = 13,
    pjIntoBaseline4 = 14,
    pjIntoBaseline5 = 15,
    pjIntoBaseline6 = 16,
    pjIntoBaseline7 = 17,
    pjIntoBaseline8 = 18,
    pjIntoBaseline9 = 19,
    pjIntoBaseline10 = 20
};

enum PjScheduleProjectFrom
{
    pjProjectStart = 1,
    pjProjectFinish = 2
};

enum PjViewScreen
{
    pjGantt = 1,
    pjNetworkDiagram = 2,
    pjRelationshipDiagram = 3,
    pjTaskForm = 4,
    pjTaskSheet = 5,
    pjResourceForm = 6,
    pjResourceSheet = 7,
    pjResourceGraph = 8,
    pjTaskDetailsForm = 10,
    pjTaskNameForm = 11,
    pjResourceNameForm = 12,
    pjCalendar = 13,
    pjTaskUsage = 14,
    pjResourceUsage = 15
};

enum PjShape
{
    pjOLEObject = 1,
    pjLine = 2,
    pjArrow = 3,
    pjRectangle = 4,
    pjEllipse = 5,
    pjArc = 6,
    pjPolygon = 7,
    pjTextBox = 8
};

enum PjSubscribeAction
{
    pjCancelSubscribe = 1,
    pjUpdateSubscriber = 2
};

enum PjSubscribeFormat
{
    pjSubscribeToText = 1,
    pjSubscribeToPicture = 2
};

enum PjTaskLinkType
{
    pjFinishToFinish = 0,
    pjFinishToStart = 1,
    pjStartToFinish = 2,
    pjStartToStart = 3
};

enum PjTaskFixedType
{
    pjFixedUnits = 0,
    pjFixedDuration = 1,
    pjFixedWork = 2
};

enum PjWorkContourType
{
    pjFlat = 0,
    pjBackLoaded = 1,
    pjFrontLoaded = 2,
    pjDoublePeak = 3,
    pjEarlyPeak = 4,
    pjLatePeak = 5,
    pjBell = 6,
    pjTurtle = 7,
    pjContour = 8
};

enum PjInformationTab
{
    pjTaskGeneralTab = 0,
    pjTaskPredecessorsTab = 1,
    pjTaskResourcesTab = 2,
    pjTaskAdvancedTab = 3,
    pjTaskNotesTab = 4,
    pjResourceGeneralTab = 0,
    pjResourceWorkingTimeTab = 1,
    pjResourceCostsTab = 2,
    pjResourceNotesTab = 3,
    pjAssignmentGeneralTab = 0,
    pjAssignmentTrackingTab = 1,
    pjAssignmentNotesTab = 2,
    pjResourceCustomFieldsTab = 4,
    pjTaskCustomFieldsTab = 5
};

enum PjTextItem
{
    pjAll = 0,
    pjNoncritical = 1,
    pjCritical = 2,
    pjMilestone = 3,
    pjSummary = 4,
    pjProjectSummary = 5,
    pjMarked = 6,
    pjTaskFilterHighlight = 7,
    pjTaskRowColumnTitles = 8,
    pjGanttMajorTimescale = 9,
    pjGanttMinorTimescale = 10,
    pjGanttExternalTask = 16,
    pjBarTextLeft = 11,
    pjBarTextRight = 12,
    pjBarTextTop = 13,
    pjBarTextBottom = 14,
    pjBarTextInside = 15,
    pjCalendarMonthlyTitles = 8,
    pjCalendarExternalTask = 17,
    pjDailyTitles = 9,
    pjWeeklyTitles = 10,
    pjMonthPreviews = 11,
    pjDateBoxTopRight = 12,
    pjDateBoxTopLeft = 13,
    pjDateBoxBottomRight = 14,
    pjDateBoxBottomLeft = 15,
    pjTaskSheetExternalTask = 9,
    pjTaskUsageExternalTask = 11,
    pjAllocated = 1,
    pjOverallocated = 2,
    pjGraphMajorTimescale = 3,
    pjGraphMinorTimescale = 4,
    pjTickLabels = 5,
    pjLegendLabels = 6,
    pjResourceFilterHighlight = 3,
    pjResourceRowColumnTitles = 4,
    pjTaskUsageAssignmentRow = 9,
    pjTaskMajorTimescale = 10,
    pjTaskMinorTimescale = 11,
    pjResourceUsageAssignmentRow = 5,
    pjResourceMajorTimescale = 6,
    pjResourceMinorTimescale = 7
};

enum PjTimescaledData
{
    pjWork = 0,
    pjCost = 1,
    pjCumulativeWork = 2,
    pjCumulativeCost = 3,
    pjActualWork = 4,
    pjActualOvertimeWork = 5,
    pjOvertimeWork = 6,
    pjBaselineWork = 7,
    pjOverallocation = 8,
    pjFixedCost = 9,
    pjActualCost = 10,
    pjBaselineCost = 11,
    pjRegularWork = 12,
    pjBCWS = 13,
    pjBCWP = 14,
    pjACWP = 15,
    pjSV = 16,
    pjCV = 17,
    pjPercentAllocation = 18,
    pjPeakUnits = 19,
    pjRemainingAvailability = 20,
    pjPctComplete = 21,
    pjCumPctComplete = 22,
    pjAllTaskRows = 23,
    pjAllResourceRows = 23,
    pjAllAssignmentRows = 24,
    pjUnitAvailability = 25,
    pjWorkAvailability = 26,
    pjBaseline1Work = 27,
    pjBaseline1Cost = 28,
    pjBaseline2Work = 29,
    pjBaseline2Cost = 30,
    pjBaseline3Work = 31,
    pjBaseline3Cost = 32,
    pjBaseline4Work = 33,
    pjBaseline4Cost = 34,
    pjBaseline5Work = 35,
    pjBaseline5Cost = 36,
    pjBaseline6Work = 37,
    pjBaseline6Cost = 38,
    pjBaseline7Work = 39,
    pjBaseline7Cost = 40,
    pjBaseline8Work = 41,
    pjBaseline8Cost = 42,
    pjBaseline9Work = 43,
    pjBaseline9Cost = 44,
    pjBaseline10Work = 45,
    pjBaseline10Cost = 46,
    pjActualFixedCost = 47,
    pjCPI = 48,
    pjSPI = 49,
    pjCVP = 50,
    pjSVP = 51
};

enum PjTimescaleUnit
{
    pjTimescaleYears = 0,
    pjTimescaleQuarters = 1,
    pjTimescaleMonths = 2,
    pjTimescaleWeeks = 3,
    pjTimescaleDays = 4,
    pjTimescaleHours = 5,
    pjTimescaleMinutes = 6,
    pjTimescaleThirdsOfMonths = 7,
    pjTimescaleHalfYears = 8,
    pjTimescaleNone = 255
};

enum PjTaskTimescaledData
{
    pjTaskTimescaledWork = 0,
    pjTaskTimescaledRegularWork = 166,
    pjTaskTimescaledOvertimeWork = 163,
    pjTaskTimescaledActualWork = 2,
    pjTaskTimescaledActualOvertimeWork = 164,
    pjTaskTimescaledCumulativeWork = 176,
    pjTaskTimescaledBaselineWork = 1,
    pjTaskTimescaledOverallocation = 167,
    pjTaskTimescaledCost = 5,
    pjTaskTimescaledFixedCost = 8,
    pjTaskTimescaledActualCost = 7,
    pjTaskTimescaledBaselineCost = 6,
    pjTaskTimescaledCumulativeCost = 177,
    pjTaskTimescaledBCWS = 12,
    pjTaskTimescaledBCWP = 11,
    pjTaskTimescaledACWP = 120,
    pjTaskTimescaledSV = 13,
    pjTaskTimescaledCV = 83,
    pjTaskTimescaledPercentComplete = 32,
    pjTaskTimescaledCumulativePercentComplete = 240,
    pjTaskTimescaledBaseline1Work = 485,
    pjTaskTimescaledBaseline1Cost = 484,
    pjTaskTimescaledBaseline2Work = 496,
    pjTaskTimescaledBaseline2Cost = 495,
    pjTaskTimescaledBaseline3Work = 507,
    pjTaskTimescaledBaseline3Cost = 506,
    pjTaskTimescaledBaseline4Work = 518,
    pjTaskTimescaledBaseline4Cost = 517,
    pjTaskTimescaledBaseline5Work = 529,
    pjTaskTimescaledBaseline5Cost = 528,
    pjTaskTimescaledBaseline6Work = 547,
    pjTaskTimescaledBaseline6Cost = 546,
    pjTaskTimescaledBaseline7Work = 558,
    pjTaskTimescaledBaseline7Cost = 557,
    pjTaskTimescaledBaseline8Work = 569,
    pjTaskTimescaledBaseline8Cost = 568,
    pjTaskTimescaledBaseline9Work = 580,
    pjTaskTimescaledBaseline9Cost = 579,
    pjTaskTimescaledBaseline10Work = 591,
    pjTaskTimescaledBaseline10Cost = 590,
    pjTaskTimescaledCPI = 537,
    pjTaskTimescaledSPI = 538,
    pjTaskTimescaledCVP = 539,
    pjTaskTimescaledSVP = 540,
    pjTaskTimescaledActualFixedCost = 171
};

enum PjResourceTimescaledData
{
    pjResourceTimescaledWork = 13,
    pjResourceTimescaledRegularWork = 38,
    pjResourceTimescaledOvertimeWork = 16,
    pjResourceTimescaledActualWork = 14,
    pjResourceTimescaledActualOvertimeWork = 39,
    pjResourceTimescaledCumulativeWork = 41,
    pjResourceTimescaledBaselineWork = 15,
    pjResourceTimescaledOverallocation = 42,
    pjResourceTimescaledPercentAllocation = 43,
    pjResourceTimescaledPeakUnits = 26,
    pjResourceTimescaledRemainingAvailability = 44,
    pjResourceTimescaledCost = 12,
    pjResourceTimescaledActualCost = 11,
    pjResourceTimescaledBaselineCost = 17,
    pjResourceTimescaledCumulativeCost = 50,
    pjResourceTimescaledBCWS = 51,
    pjResourceTimescaledBCWP = 52,
    pjResourceTimescaledACWP = 53,
    pjResourceTimescaledSV = 54,
    pjResourceTimescaledCV = 268,
    pjResourceTimescaledWorkAvailability = 45,
    pjResourceTimescaledUnitAvailability = 4,
    pjResourceTimescaledBaseline1Work = 342,
    pjResourceTimescaledBaseline1Cost = 343,
    pjResourceTimescaledBaseline2Work = 352,
    pjResourceTimescaledBaseline2Cost = 353,
    pjResourceTimescaledBaseline3Work = 362,
    pjResourceTimescaledBaseline3Cost = 363,
    pjResourceTimescaledBaseline4Work = 372,
    pjResourceTimescaledBaseline4Cost = 373,
    pjResourceTimescaledBaseline5Work = 382,
    pjResourceTimescaledBaseline5Cost = 383,
    pjResourceTimescaledBaseline6Work = 392,
    pjResourceTimescaledBaseline6Cost = 393,
    pjResourceTimescaledBaseline7Work = 402,
    pjResourceTimescaledBaseline7Cost = 403,
    pjResourceTimescaledBaseline8Work = 412,
    pjResourceTimescaledBaseline8Cost = 413,
    pjResourceTimescaledBaseline9Work = 422,
    pjResourceTimescaledBaseline9Cost = 423,
    pjResourceTimescaledBaseline10Work = 432,
    pjResourceTimescaledBaseline10Cost = 433
};

enum PjAssignmentTimescaledData
{
    pjAssignmentTimescaledWork = 8,
    pjAssignmentTimescaledRegularWork = 11,
    pjAssignmentTimescaledOvertimeWork = 9,
    pjAssignmentTimescaledActualWork = 10,
    pjAssignmentTimescaledActualOvertimeWork = 13,
    pjAssignmentTimescaledCumulativeWork = 15,
    pjAssignmentTimescaledBaselineWork = 16,
    pjAssignmentTimescaledOverallocation = 17,
    pjAssignmentTimescaledPercentAllocation = 18,
    pjAssignmentTimescaledPeakUnits = 19,
    pjAssignmentTimescaledCost = 26,
    pjAssignmentTimescaledActualCost = 28,
    pjAssignmentTimescaledBaselineCost = 32,
    pjAssignmentTimescaledCumulativeCost = 33,
    pjAssignmentTimescaledBCWS = 34,
    pjAssignmentTimescaledBCWP = 35,
    pjAssignmentTimescaledACWP = 36,
    pjAssignmentTimescaledSV = 37,
    pjAssignmentTimescaledCV = 247,
    pjAssignmentTimescaledBaseline1Work = 289,
    pjAssignmentTimescaledBaseline1Cost = 290,
    pjAssignmentTimescaledBaseline2Work = 298,
    pjAssignmentTimescaledBaseline2Cost = 299,
    pjAssignmentTimescaledBaseline3Work = 307,
    pjAssignmentTimescaledBaseline3Cost = 308,
    pjAssignmentTimescaledBaseline4Work = 316,
    pjAssignmentTimescaledBaseline4Cost = 317,
    pjAssignmentTimescaledBaseline5Work = 325,
    pjAssignmentTimescaledBaseline5Cost = 326,
    pjAssignmentTimescaledBaseline6Work = 334,
    pjAssignmentTimescaledBaseline6Cost = 335,
    pjAssignmentTimescaledBaseline7Work = 343,
    pjAssignmentTimescaledBaseline7Cost = 344,
    pjAssignmentTimescaledBaseline8Work = 352,
    pjAssignmentTimescaledBaseline8Cost = 353,
    pjAssignmentTimescaledBaseline9Work = 361,
    pjAssignmentTimescaledBaseline9Cost = 362,
    pjAssignmentTimescaledBaseline10Work = 370,
    pjAssignmentTimescaledBaseline10Cost = 371
};

enum PjToolbarAction
{
    pjToggle = 1,
    pjDelete = 2,
    pjReset = 2,
    pjNew = 3,
    pjCopy = 4,
    pjRename = 5,
    pjShow = 6,
    pjHide = 7
};

enum PjUnit
{
    pjMinute = 3,
    pjHour = 5,
    pjDay = 7,
    pjWeek = 9,
    pjMonthUnit = 11
};

enum PjWeekday
{
    pjSunday = 1,
    pjMonday = 2,
    pjTuesday = 3,
    pjWednesday = 4,
    pjThursday = 5,
    pjFriday = 6,
    pjSaturday = 7
};

enum PjWeekLabel
{
    pjWeekLabelWeek_mm_dd = 17,
    pjWeekLabelWeek_mm_dd_yy = 16,
    pjWeekLabelWeek_m_dd = 89,
    pjWeekLabelWeek_mmm_dd = 15,
    pjWeekLabelWeek_mmm_dd_yyy = 13,
    pjWeekLabelWeek_mmmm_dd = 14,
    pjWeekLabelWeek_mmmm_dd_yyyy = 12,
    pjWeekLabelWeek_di_mm_dd = 92,
    pjWeekLabelWeek_di_m_dd = 99,
    pjWeekLabelWeek_di_mmm_dd = 95,
    pjWeekLabelWeek_ddi_mm_dd = 91,
    pjWeekLabelWeek_ddi_m_dd = 98,
    pjWeekLabelWeek_ddi_mmm_dd = 94,
    pjWeekLabelWeek_ddd_mm_dd = 90,
    pjWeekLabelWeek_ddd_mm_dd_yy = 100,
    pjWeekLabelWeek_ddd_dd = 88,
    pjWeekLabelWeek_ddd_ww = 103,
    pjWeekLabelWeek_ddd_m_dd = 97,
    pjWeekLabelWeek_ddd_mmm_dd = 93,
    pjWeekLabelWeek_ddd_mmm_dd_yyy = 101,
    pjWeekLabelWeek_ddd_mmmm_dd = 96,
    pjWeekLabelWeek_ddd_mmmm_dd_yyy = 102,
    pjWeekLabelWeekDayOfMonth_dd = 87,
    pjWeekLabelWeekFromEnd_ww = 68,
    pjWeekLabelWeekFromEnd_Www = 67,
    pjWeekLabelWeekFromEnd_Week_ww = 43,
    pjWeekLabelWeekFromStart_ww = 70,
    pjWeekLabelWeekFromStart_Www = 69,
    pjWeekLabelWeekFromStart_Week_ww = 42,
    pjWeekLabelWeekNumber_dd_ww = 104,
    pjWeekLabelWeekNumber_ww = 50,
    pjWeekLabelNoDateFormat = 35
};

enum PjWindowState
{
    pjNormal = 1,
    pjMinimized = 2,
    pjMaximized = 3
};

enum PjResourceGraphPattern
{
    pjHollow = 0,
    pjSolidFill = 1,
    pjLightFill = 2,
    pjMediumFill = 3,
    pjDarkFill = 4,
    pjDiagonalLeft = 5,
    pjDiagonalRight = 6,
    pjDiagonalCross = 7,
    pjLineVertical = 8,
    pjLineHorizontal = 9,
    pjLineCross = 10,
    pjNoGraphLine = 0,
    pjGraphContinuous = 1,
    pjGraphDash = 2,
    pjGraphDot = 3,
    pjDashDot = 4,
    pjDashDotDot = 5
};

enum PjLineType
{
    pjNoLines = 0,
    pjDash = 4,
    pjCloseDot = 2,
    pjDot = 3,
    pjContinuous = 1
};

enum PjPasteSpecialType
{
    pjEmbedObject = 0,
    pjPicture = 1,
    pjTextData = 2,
    pjProjectData = 3
};

enum PjFieldType
{
    pjTask = 0,
    pjResource = 1
};

enum PjEnableCancelKey
{
    pjDisabled = 0,
    pjInterrupt = 1,
    pjErrorHandler = 2
};

enum PjPhoneticType
{
    pjKatakanaHalf = 0,
    pjKatakana = 1,
    pjHiragana = 2
};

enum PjAssignmentUnits
{
    pjPercentageAssignmentUnits = 0,
    pjDecimalAssignmentUnits = 1
};

enum PjPoolOpen
{
    pjPromptPool = 0,
    pjPoolReadOnly = 1,
    pjPoolReadWrite = 2,
    pjPoolAndSharers = 3,
    pjDoNotOpenPool = 4
};

enum PjOldConstants
{
    pjUsageMinorTimescale = 7,
    pjUsageMajorTimescale = 6,
    pjMenuBars = 6,
    pjGeneralTab = 0,
    pjPredecessorsTab = 1,
    pjResourcesTab = 2,
    pjAdvancedTab = 3,
    pjNotesTab = 4,
    pjUsageProjectStart = -1,
    pjUsageProjectFinish = -1,
    pjUsageMajorColumns = 4,
    pjUsageMinorColumns = 4,
    pjMacMail = 4,
    pjSubscriber = 9,
    pjMPX4 = 12,
    pjPERT = 2,
    pjTaskPERT = 3
};

enum PjCopyPictureFor
{
    pjScreen = 0,
    pjPrinter = 1,
    pjGIF = 2
};

enum PjIMEMode
{
    pjIMEModeNoControl = 0,
    pjIMEModeOn = 1,
    pjIMEModeOff = 2,
    pjIMEModeDisable = 3,
    pjIMEModeHiragana = 4,
    pjIMEModeKatakana = 5,
    pjIMEModeKatakanaHalf = 6,
    pjIMEModeAlphaFull = 7,
    pjIMEModeAlpha = 8,
    pjIMEModeHangulFull = 9,
    pjIMEModeHangul = 10
};

enum PjCopyPictureRows
{
    pjCopyOnScreen = 0,
    pjCopySelected = 1
};

enum PjWorkgroupMessages
{
    pjDefaultMessages = 0,
    pjNoWorkgroupMessages = 1,
    pjWorkgroupViaEmail = 2,
    pjWorkgroupViaWeb = 3,
    pjWorkgroupViaEmailAndWeb = 4
};

enum PjImportMethods
{
    pjImportNew = 0,
    pjImportAppend = 1,
    pjImportMerge = 2
};

enum PjTextFileOrigin
{
    pjTextOriginWin = 0,
    pjTextOriginDOS = 1,
    pjTextOriginMac = 2,
    pjTextOriginUnicode = 3
};

enum PjDataCategories
{
    pjMapTasks = 0,
    pjMapResources = 1,
    pjMapAssignments = 2
};

enum PjTeamStatusCompletedWork
{
    pjTotalForEntirePeriod = 0,
    pjBrokenDownByDay = 1,
    pjBrokenDownByWeek = 2
};

enum PjMSApplication
{
    pjMicrosoftWord = 0,
    pjMicrosoftPowerPoint = 1,
    pjMicrosoftMail = 2,
    pjMicrosoftAccess = 3,
    pjMicrosoftFoxPro = 4,
    pjMicrosoftExcel = 5,
    pjMicrosoftSchedulePlus = 6
};

enum PjWBSSequence
{
    pjWBSOrderedNumbers = 0,
    pjWBSOrderedUppercaseLetters = 1,
    pjWBSOrderedLowercaseLetters = 2,
    pjWBSUnorderedCharacters = 3
};

enum PjCustomOutlineCodeSequence
{
    pjCustomOutlineCodeNumbers = 0,
    pjCustomOutlineCodeUppercaseLetters = 1,
    pjCustomOutlineCodeLowercaseLetters = 2,
    pjCustomOutlineCodeCharacters = 3
};

enum PjResourceTypes
{
    pjResourceTypeWork = 0,
    pjResourceTypeMaterial = 1
};

enum PjBoxStyle
{
    pjBoxCritical = 0,
    pjBoxNoncritical = 1,
    pjBoxCriticalMilestone = 2,
    pjBoxNoncriticalMilestone = 3,
    pjBoxCriticalSummary = 4,
    pjBoxNoncriticalSummary = 5,
    pjBoxCriticalInsertedProject = 6,
    pjBoxNoncriticalInsertedProject = 7,
    pjBoxCriticalMarked = 8,
    pjBoxNoncriticalMarked = 9,
    pjBoxCriticalExternalTask = 10,
    pjBoxNoncriticalExternalTask = 11,
    pjBoxProjectSummaryTask = 12,
    pjBoxHighlightedTasks = 13
};

enum PjBoxShape
{
    pjBoxRectangle = 0,
    pjBoxWideRectangle = 1,
    pjBoxRoundedRectangle = 2,
    pjBoxWideRoundedRectangle = 3,
    pjBoxCapsule = 4,
    pjBoxPointedEnds = 5,
    pjBoxRightParallelogram = 6,
    pjBoxLeftParallelogram = 7,
    pjBoxUpTrapezoid = 8,
    pjBoxDownTrapezoid = 9
};

enum PjDataTemplate
{
    pjDataTemplateNew = 0,
    pjDataTemplateCopy = 1,
    pjDataTemplateRename = 2,
    pjDataTemplateDelete = 3
};

enum PjCell
{
    pjCell1_1 = 0,
    pjCell2_1 = 1,
    pjCell3_1 = 2,
    pjCell4_1 = 3,
    pjCell1_2 = 4,
    pjCell2_2 = 5,
    pjCell3_2 = 6,
    pjCell4_2 = 7,
    pjCell1_3 = 8,
    pjCell2_3 = 9,
    pjCell3_3 = 10,
    pjCell4_3 = 11,
    pjCell1_4 = 12,
    pjCell2_4 = 13,
    pjCell3_4 = 14,
    pjCell4_4 = 15
};

enum PjBoxSet
{
    pjBoxAddToSelection = 0,
    pjBoxCreate = 1,
    pjBoxMoveAbsolute = 2,
    pjBoxMoveRelative = 3,
    pjBoxSelect = 4,
    pjBoxUnselect = 5
};

enum PjGroupOn
{
    pjGroupOnEachValue = 0,
    pjGroupOnInterval = 1,
    pjGroupOnDateEachValue = 10,
    pjGroupOnDateMinute = 11,
    pjGroupOnDateHour = 12,
    pjGroupOnDateDay = 13,
    pjGroupOnDateWeek = 14,
    pjGroupOnDateThirdOfMonth = 15,
    pjGroupOnDateMonth = 16,
    pjGroupOnDateQtr = 17,
    pjGroupOnDateYear = 18,
    pjGroupOnDurationEachValue = 20,
    pjGroupOnDurationMinutes = 21,
    pjGroupOnDurationHours = 22,
    pjGroupOnDurationDays = 23,
    pjGroupOnDurationWeeks = 24,
    pjGroupOnDurationMonths = 25,
    pjGroupOnOutlineEachValue = 30,
    pjGroupOnOutlineLevel = 31,
    pjGroupOnPctEachValue = 40,
    pjGroupOnPctInterval = 41,
    pjGroupOnPct1_99 = 42,
    pjGroupOnPct1_50 = 43,
    pjGroupOnPct1_25 = 44,
    pjGroupOnPct1_10 = 45,
    pjGroupOnTextEachValue = 50,
    pjGroupOnTextPrefix = 51
};

enum PjAuthentication
{
    pjUserName = 0,
    pjWindowsUserAccount = 1
};

enum PjAccountType
{
    pjResourceAccount = 0,
    pjManagerAccount = 1
};

enum PjBackgroundPattern
{
    pjBackgroundHollow = 0,
    pjBackgroundSolidFill = 1,
    pjBackgroundLightFill = 2,
    pjBackgroundMediumFill = 3,
    pjBackgroundDarkFill = 4,
    pjBackgroundDiagonalLeft = 5,
    pjBackgroundDiagonalRight = 6,
    pjBackgroundDarkDiagonalLeft = 7,
    pjBackgroundDarkDiagonalRight = 8,
    pjBackgroundThinVerticalStripe = 9,
    pjBackgroundMediumVerticalStripe = 10,
    pjBackgroundLightDither = 11,
    pjBackgroundMediumDither = 12,
    pjBackgroundDarkDither = 13
};

enum PjAutomaticSaveOptions
{
    pjAutomaticSaveActiveProjectOnly = 1,
    pjAutomaticSaveAllOpenProjectFiles = 2
};

enum PJTaskOutlineShowLevel
{
    pjTaskOutlineShowLevel1 = 1,
    pjTaskOutlineShowLevel2 = 2,
    pjTaskOutlineShowLevel3 = 3,
    pjTaskOutlineShowLevel4 = 4,
    pjTaskOutlineShowLevel5 = 5,
    pjTaskOutlineShowLevel6 = 6,
    pjTaskOutlineShowLevel7 = 7,
    pjTaskOutlineShowLevel8 = 8,
    pjTaskOutlineShowLevel9 = 9,
    pjTaskOutlineShowLevelMax = 65535
};

enum PjLayoutMode
{
    pjLayoutAutomatic = 1,
    pjLayoutManual = 2
};

enum PjLayoutScheme
{
    pjLayoutTopDownFromLeft = 0,
    pjLayoutTopDownByDay = 1,
    pjLayoutTopDownByWeek = 2,
    pjLayoutTopDownByMonth = 3,
    pjLayoutTopDownCriticalFirst = 4,
    pjLayoutCenteredFromLeft = 5,
    pjLayoutCenteredFromTop = 6
};

enum PjRowColSize
{
    pjSizeBestFit = 0,
    pjSizeFixed = 1
};

enum PjLinkStyle
{
    pjLinkStraight = 1,
    pjLinkRectilinear = 2
};

enum PjLinkColorMode
{
    pjColorModeCustom = 1,
    pjColorModePredecessor = 2
};

enum PjAlign
{
    pjAlignLefts = 0,
    pjAlignCenters = 1,
    pjAlignRights = 2,
    pjAlignTops = 3,
    pjAlignMiddles = 4,
    pjAlignBottoms = 5
};

enum PjCopyPictureScaleOption
{
    pjCopyPictureShowOptions = 0,
    pjCopyPictureKeepRange = 1,
    pjCopyPictureScale = 2,
    pjCopyPictureScaleWRatio = 3,
    pjCopyPictureTimescale = 4,
    pjCopyPictureTruncate = 5
};

enum PjPaperSize
{
    pjPaper10x14 = 16,
    pjPaper11x17 = 17,
    pjPaperA3 = 8,
    pjPaperA4 = 9,
    pjPaperA4Small = 10,
    pjPaperA5 = 11,
    pjPaperB4 = 12,
    pjPaperB5 = 13,
    pjPaperCsheet = 24,
    pjPaperDsheet = 25,
    pjPaperEnvelop10 = 20,
    pjPaperEnvelope11 = 21,
    pjPaperEnvelope12 = 22,
    pjPaperEnvelope14 = 23,
    pjPaperEnvelope9 = 19,
    pjPaperEnvelopeB4 = 33,
    pjPaperEnvelopeB5 = 34,
    pjPaperEnvelopB6 = 35,
    pjPaperEnvelopeC3 = 29,
    pjPaperEnvelopeC4 = 30,
    pjPaperEnvelopeC5 = 28,
    pjPaperEnvelopeC6 = 31,
    pjPaperEnvelopeC65 = 32,
    pjPaperEnvelopeDL = 27,
    pjPaperEnvelopeItaly = 36,
    pjPaperEnvelopeMonarch = 37,
    pjPaperEnvelopePersonal = 38,
    pjPaperEsheet = 26,
    pjPaperExecutive = 7,
    pjPaperFanfoldLegalGerman = 41,
    pjPaperFanfoldStdGerman = 40,
    pjPaperFanfoldUS = 39,
    pjPaperFolio = 14,
    pjPaperLedger = 4,
    pjPaperLegal = 5,
    pjPaperLetter = 1,
    pjPaperLetterSmall = 2,
    pjPaperNote = 18,
    pjPaperQuarto = 15,
    pjPaperStatement = 6,
    pjPaperTabloid = 3,
    pjPaperUser = 255,
    pjPaperDefault = 0
};

struct __declspec(uuid("000c0c3f-0000-0000-c000-000000000046"))
Task : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetWork,put=PutWork))
    _variant_t Work;
    __declspec(property(get=GetBaselineWork,put=PutBaselineWork))
    _variant_t BaselineWork;
    __declspec(property(get=GetActualWork,put=PutActualWork))
    _variant_t ActualWork;
    __declspec(property(get=GetWorkVariance))
    _variant_t WorkVariance;
    __declspec(property(get=GetRemainingWork,put=PutRemainingWork))
    _variant_t RemainingWork;
    __declspec(property(get=GetCost,put=PutCost))
    _variant_t Cost;
    __declspec(property(get=GetBaselineCost,put=PutBaselineCost))
    _variant_t BaselineCost;
    __declspec(property(get=GetActualCost,put=PutActualCost))
    _variant_t ActualCost;
    __declspec(property(get=GetFixedCost,put=PutFixedCost))
    _variant_t FixedCost;
    __declspec(property(get=GetCostVariance))
    _variant_t CostVariance;
    __declspec(property(get=GetRemainingCost))
    _variant_t RemainingCost;
    __declspec(property(get=GetBCWP))
    _variant_t BCWP;
    __declspec(property(get=GetBCWS))
    _variant_t BCWS;
    __declspec(property(get=GetSV))
    _variant_t SV;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetNotes,put=PutNotes))
    _bstr_t Notes;
    __declspec(property(get=GetWBS,put=PutWBS))
    _bstr_t WBS;
    __declspec(property(get=GetConstraintType,put=PutConstraintType))
    _variant_t ConstraintType;
    __declspec(property(get=GetConstraintDate,put=PutConstraintDate))
    _variant_t ConstraintDate;
    __declspec(property(get=GetCritical))
    _variant_t Critical;
    __declspec(property(get=GetLevelingDelay,put=PutLevelingDelay))
    _variant_t LevelingDelay;
    __declspec(property(get=GetFreeSlack))
    _variant_t FreeSlack;
    __declspec(property(get=GetTotalSlack))
    _variant_t TotalSlack;
    __declspec(property(get=GetID))
    long ID;
    __declspec(property(get=GetMilestone,put=PutMilestone))
    _variant_t Milestone;
    __declspec(property(get=GetPriority,put=PutPriority))
    _variant_t Priority;
    __declspec(property(get=GetSubproject,put=PutSubproject))
    _bstr_t Subproject;
    __declspec(property(get=GetBaselineDuration,put=PutBaselineDuration))
    _variant_t BaselineDuration;
    __declspec(property(get=GetActualDuration,put=PutActualDuration))
    _variant_t ActualDuration;
    __declspec(property(get=GetDuration,put=PutDuration))
    _variant_t Duration;
    __declspec(property(get=GetDurationVariance))
    _variant_t DurationVariance;
    __declspec(property(get=GetRemainingDuration,put=PutRemainingDuration))
    _variant_t RemainingDuration;
    __declspec(property(get=GetPercentComplete,put=PutPercentComplete))
    _variant_t PercentComplete;
    __declspec(property(get=GetPercentWorkComplete,put=PutPercentWorkComplete))
    _variant_t PercentWorkComplete;
    __declspec(property(get=GetFixedDuration,put=PutFixedDuration))
    _variant_t FixedDuration;
    __declspec(property(get=GetStart,put=PutStart))
    _variant_t Start;
    __declspec(property(get=GetFinish,put=PutFinish))
    _variant_t Finish;
    __declspec(property(get=GetEarlyStart))
    _variant_t EarlyStart;
    __declspec(property(get=GetEarlyFinish))
    _variant_t EarlyFinish;
    __declspec(property(get=GetLateStart))
    _variant_t LateStart;
    __declspec(property(get=GetLateFinish))
    _variant_t LateFinish;
    __declspec(property(get=GetActualStart,put=PutActualStart))
    _variant_t ActualStart;
    __declspec(property(get=GetActualFinish,put=PutActualFinish))
    _variant_t ActualFinish;
    __declspec(property(get=GetBaselineStart,put=PutBaselineStart))
    _variant_t BaselineStart;
    __declspec(property(get=GetBaselineFinish,put=PutBaselineFinish))
    _variant_t BaselineFinish;
    __declspec(property(get=GetStartVariance))
    _variant_t StartVariance;
    __declspec(property(get=GetFinishVariance))
    _variant_t FinishVariance;
    __declspec(property(get=GetUniqueID))
    long UniqueID;
    __declspec(property(get=GetText1,put=PutText1))
    _bstr_t Text1;
    __declspec(property(get=GetStart1,put=PutStart1))
    _variant_t Start1;
    __declspec(property(get=GetFinish1,put=PutFinish1))
    _variant_t Finish1;
    __declspec(property(get=GetText2,put=PutText2))
    _bstr_t Text2;
    __declspec(property(get=GetStart2,put=PutStart2))
    _variant_t Start2;
    __declspec(property(get=GetFinish2,put=PutFinish2))
    _variant_t Finish2;
    __declspec(property(get=GetText3,put=PutText3))
    _bstr_t Text3;
    __declspec(property(get=GetStart3,put=PutStart3))
    _variant_t Start3;
    __declspec(property(get=GetFinish3,put=PutFinish3))
    _variant_t Finish3;
    __declspec(property(get=GetText4,put=PutText4))
    _bstr_t Text4;
    __declspec(property(get=GetStart4,put=PutStart4))
    _variant_t Start4;
    __declspec(property(get=GetFinish4,put=PutFinish4))
    _variant_t Finish4;
    __declspec(property(get=GetText5,put=PutText5))
    _bstr_t Text5;
    __declspec(property(get=GetStart5,put=PutStart5))
    _variant_t Start5;
    __declspec(property(get=GetFinish5,put=PutFinish5))
    _variant_t Finish5;
    __declspec(property(get=GetText6,put=PutText6))
    _bstr_t Text6;
    __declspec(property(get=GetText7,put=PutText7))
    _bstr_t Text7;
    __declspec(property(get=GetText8,put=PutText8))
    _bstr_t Text8;
    __declspec(property(get=GetText9,put=PutText9))
    _bstr_t Text9;
    __declspec(property(get=GetText10,put=PutText10))
    _bstr_t Text10;
    __declspec(property(get=GetMarked,put=PutMarked))
    _variant_t Marked;
    __declspec(property(get=GetFlag1,put=PutFlag1))
    _variant_t Flag1;
    __declspec(property(get=GetFlag2,put=PutFlag2))
    _variant_t Flag2;
    __declspec(property(get=GetFlag3,put=PutFlag3))
    _variant_t Flag3;
    __declspec(property(get=GetFlag4,put=PutFlag4))
    _variant_t Flag4;
    __declspec(property(get=GetFlag5,put=PutFlag5))
    _variant_t Flag5;
    __declspec(property(get=GetFlag6,put=PutFlag6))
    _variant_t Flag6;
    __declspec(property(get=GetFlag7,put=PutFlag7))
    _variant_t Flag7;
    __declspec(property(get=GetFlag8,put=PutFlag8))
    _variant_t Flag8;
    __declspec(property(get=GetFlag9,put=PutFlag9))
    _variant_t Flag9;
    __declspec(property(get=GetFlag10,put=PutFlag10))
    _variant_t Flag10;
    __declspec(property(get=GetRollup,put=PutRollup))
    _variant_t Rollup;
    __declspec(property(get=GetCV))
    _variant_t CV;
    __declspec(property(get=GetProject))
    _bstr_t Project;
    __declspec(property(get=GetNumber1,put=PutNumber1))
    double Number1;
    __declspec(property(get=GetNumber2,put=PutNumber2))
    double Number2;
    __declspec(property(get=GetNumber3,put=PutNumber3))
    double Number3;
    __declspec(property(get=GetNumber4,put=PutNumber4))
    double Number4;
    __declspec(property(get=GetNumber5,put=PutNumber5))
    double Number5;
    __declspec(property(get=GetSummary))
    _variant_t Summary;
    __declspec(property(get=GetCreated))
    _variant_t Created;
    __declspec(property(get=GetUniqueIDPredecessors,put=PutUniqueIDPredecessors))
    _bstr_t UniqueIDPredecessors;
    __declspec(property(get=GetUniqueIDSuccessors,put=PutUniqueIDSuccessors))
    _bstr_t UniqueIDSuccessors;
    __declspec(property(get=GetObjects))
    long Objects;
    __declspec(property(get=GetLinkedFields))
    _variant_t LinkedFields;
    __declspec(property(get=GetResume,put=PutResume))
    _variant_t Resume;
    __declspec(property(get=GetStop,put=PutStop))
    _variant_t Stop;
    __declspec(property(get=GetResumeNoEarlierThan,put=PutResumeNoEarlierThan))
    _variant_t ResumeNoEarlierThan;
    __declspec(property(get=GetOutlineNumber))
    _bstr_t OutlineNumber;
    __declspec(property(get=GetDuration1,put=PutDuration1))
    _variant_t Duration1;
    __declspec(property(get=GetDuration2,put=PutDuration2))
    _variant_t Duration2;
    __declspec(property(get=GetDuration3,put=PutDuration3))
    _variant_t Duration3;
    __declspec(property(get=GetCost1,put=PutCost1))
    _variant_t Cost1;
    __declspec(property(get=GetCost2,put=PutCost2))
    _variant_t Cost2;
    __declspec(property(get=GetCost3,put=PutCost3))
    _variant_t Cost3;
    __declspec(property(get=GetHideBar,put=PutHideBar))
    _variant_t HideBar;
    __declspec(property(get=GetConfirmed))
    _variant_t Confirmed;
    __declspec(property(get=GetUpdateNeeded))
    _variant_t UpdateNeeded;
    __declspec(property(get=GetContact,put=PutContact))
    _bstr_t Contact;
    __declspec(property(get=GetResourceGroup))
    _bstr_t ResourceGroup;
    __declspec(property(get=GetACWP))
    _variant_t ACWP;
    __declspec(property(get=GetType,put=PutType))
    enum PjTaskFixedType Type;
    __declspec(property(get=GetRecurring))
    _variant_t Recurring;
    __declspec(property(get=GetEffortDriven,put=PutEffortDriven))
    _variant_t EffortDriven;
    __declspec(property(get=GetOutlineChildren))
    TasksPtr OutlineChildren;
    __declspec(property(get=GetPredecessorTasks))
    TasksPtr PredecessorTasks;
    __declspec(property(get=GetSuccessorTasks))
    TasksPtr SuccessorTasks;
    __declspec(property(get=GetOvertimeWork))
    _variant_t OvertimeWork;
    __declspec(property(get=GetActualOvertimeWork))
    _variant_t ActualOvertimeWork;
    __declspec(property(get=GetRemainingOvertimeWork))
    _variant_t RemainingOvertimeWork;
    __declspec(property(get=GetRegularWork))
    _variant_t RegularWork;
    __declspec(property(get=GetOvertimeCost))
    _variant_t OvertimeCost;
    __declspec(property(get=GetActualOvertimeCost))
    _variant_t ActualOvertimeCost;
    __declspec(property(get=GetRemainingOvertimeCost))
    _variant_t RemainingOvertimeCost;
    __declspec(property(get=GetFixedCostAccrual,put=PutFixedCostAccrual))
    enum PjAccrueAt FixedCostAccrual;
    __declspec(property(get=GetAssignments))
    AssignmentsPtr Assignments;
    __declspec(property(get=GetParent,put=PutParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetApplication))
    _MSProjectPtr Application;
    __declspec(property(get=GetHyperlink,put=PutHyperlink))
    _bstr_t Hyperlink;
    __declspec(property(get=GetHyperlinkAddress,put=PutHyperlinkAddress))
    _bstr_t HyperlinkAddress;
    __declspec(property(get=GetHyperlinkSubAddress,put=PutHyperlinkSubAddress))
    _bstr_t HyperlinkSubAddress;
    __declspec(property(get=GetHyperlinkHREF,put=PutHyperlinkHREF))
    _bstr_t HyperlinkHREF;
    __declspec(property(get=GetOverallocated))
    _variant_t Overallocated;
    __declspec(property(get=GetSplitParts))
    SplitPartsPtr SplitParts;
    __declspec(property(get=GetExternalTask))
    _variant_t ExternalTask;
    __declspec(property(get=GetOutlineParent))
    TaskPtr OutlineParent;
    __declspec(property(get=GetResources))
    ResourcesPtr Resources;
    __declspec(property(get=GetSubProjectReadOnly,put=PutSubProjectReadOnly))
    _variant_t SubProjectReadOnly;
    __declspec(property(get=GetResponsePending))
    _variant_t ResponsePending;
    __declspec(property(get=GetTeamStatusPending))
    _variant_t TeamStatusPending;
    __declspec(property(get=GetLevelingCanSplit,put=PutLevelingCanSplit))
    _variant_t LevelingCanSplit;
    __declspec(property(get=GetLevelIndividualAssignments,put=PutLevelIndividualAssignments))
    _variant_t LevelIndividualAssignments;
    __declspec(property(get=GetCost4,put=PutCost4))
    _variant_t Cost4;
    __declspec(property(get=GetCost5,put=PutCost5))
    _variant_t Cost5;
    __declspec(property(get=GetCost6,put=PutCost6))
    _variant_t Cost6;
    __declspec(property(get=GetCost7,put=PutCost7))
    _variant_t Cost7;
    __declspec(property(get=GetCost8,put=PutCost8))
    _variant_t Cost8;
    __declspec(property(get=GetCost9,put=PutCost9))
    _variant_t Cost9;
    __declspec(property(get=GetCost10,put=PutCost10))
    _variant_t Cost10;
    __declspec(property(get=GetDate1,put=PutDate1))
    _variant_t Date1;
    __declspec(property(get=GetDate2,put=PutDate2))
    _variant_t Date2;
    __declspec(property(get=GetDate3,put=PutDate3))
    _variant_t Date3;
    __declspec(property(get=GetDate4,put=PutDate4))
    _variant_t Date4;
    __declspec(property(get=GetDate5,put=PutDate5))
    _variant_t Date5;
    __declspec(property(get=GetDate6,put=PutDate6))
    _variant_t Date6;
    __declspec(property(get=GetDate7,put=PutDate7))
    _variant_t Date7;
    __declspec(property(get=GetDate8,put=PutDate8))
    _variant_t Date8;
    __declspec(property(get=GetDate9,put=PutDate9))
    _variant_t Date9;
    __declspec(property(get=GetDate10,put=PutDate10))
    _variant_t Date10;
    __declspec(property(get=GetDuration4,put=PutDuration4))
    _variant_t Duration4;
    __declspec(property(get=GetDuration5,put=PutDuration5))
    _variant_t Duration5;
    __declspec(property(get=GetDuration6,put=PutDuration6))
    _variant_t Duration6;
    __declspec(property(get=GetDuration7,put=PutDuration7))
    _variant_t Duration7;
    __declspec(property(get=GetDuration8,put=PutDuration8))
    _variant_t Duration8;
    __declspec(property(get=GetDuration9,put=PutDuration9))
    _variant_t Duration9;
    __declspec(property(get=GetDuration10,put=PutDuration10))
    _variant_t Duration10;
    __declspec(property(get=GetStart6,put=PutStart6))
    _variant_t Start6;
    __declspec(property(get=GetFinish6,put=PutFinish6))
    _variant_t Finish6;
    __declspec(property(get=GetStart7,put=PutStart7))
    _variant_t Start7;
    __declspec(property(get=GetFinish7,put=PutFinish7))
    _variant_t Finish7;
    __declspec(property(get=GetStart8,put=PutStart8))
    _variant_t Start8;
    __declspec(property(get=GetFinish8,put=PutFinish8))
    _variant_t Finish8;
    __declspec(property(get=GetStart9,put=PutStart9))
    _variant_t Start9;
    __declspec(property(get=GetFinish9,put=PutFinish9))
    _variant_t Finish9;
    __declspec(property(get=GetStart10,put=PutStart10))
    _variant_t Start10;
    __declspec(property(get=GetFinish10,put=PutFinish10))
    _variant_t Finish10;
    __declspec(property(get=GetFlag11,put=PutFlag11))
    _variant_t Flag11;
    __declspec(property(get=GetFlag12,put=PutFlag12))
    _variant_t Flag12;
    __declspec(property(get=GetFlag13,put=PutFlag13))
    _variant_t Flag13;
    __declspec(property(get=GetFlag14,put=PutFlag14))
    _variant_t Flag14;
    __declspec(property(get=GetFlag15,put=PutFlag15))
    _variant_t Flag15;
    __declspec(property(get=GetFlag16,put=PutFlag16))
    _variant_t Flag16;
    __declspec(property(get=GetFlag17,put=PutFlag17))
    _variant_t Flag17;
    __declspec(property(get=GetFlag18,put=PutFlag18))
    _variant_t Flag18;
    __declspec(property(get=GetFlag19,put=PutFlag19))
    _variant_t Flag19;
    __declspec(property(get=GetFlag20,put=PutFlag20))
    _variant_t Flag20;
    __declspec(property(get=GetNumber6,put=PutNumber6))
    double Number6;
    __declspec(property(get=GetNumber7,put=PutNumber7))
    double Number7;
    __declspec(property(get=GetNumber8,put=PutNumber8))
    double Number8;
    __declspec(property(get=GetNumber9,put=PutNumber9))
    double Number9;
    __declspec(property(get=GetNumber10,put=PutNumber10))
    double Number10;
    __declspec(property(get=GetNumber11,put=PutNumber11))
    double Number11;
    __declspec(property(get=GetNumber12,put=PutNumber12))
    double Number12;
    __declspec(property(get=GetNumber13,put=PutNumber13))
    double Number13;
    __declspec(property(get=GetNumber14,put=PutNumber14))
    double Number14;
    __declspec(property(get=GetNumber15,put=PutNumber15))
    double Number15;
    __declspec(property(get=GetNumber16,put=PutNumber16))
    double Number16;
    __declspec(property(get=GetNumber17,put=PutNumber17))
    double Number17;
    __declspec(property(get=GetNumber18,put=PutNumber18))
    double Number18;
    __declspec(property(get=GetNumber19,put=PutNumber19))
    double Number19;
    __declspec(property(get=GetNumber20,put=PutNumber20))
    double Number20;
    __declspec(property(get=GetText11,put=PutText11))
    _bstr_t Text11;
    __declspec(property(get=GetText12,put=PutText12))
    _bstr_t Text12;
    __declspec(property(get=GetText13,put=PutText13))
    _bstr_t Text13;
    __declspec(property(get=GetText14,put=PutText14))
    _bstr_t Text14;
    __declspec(property(get=GetText15,put=PutText15))
    _bstr_t Text15;
    __declspec(property(get=GetText16,put=PutText16))
    _bstr_t Text16;
    __declspec(property(get=GetText17,put=PutText17))
    _bstr_t Text17;
    __declspec(property(get=GetText18,put=PutText18))
    _bstr_t Text18;
    __declspec(property(get=GetText19,put=PutText19))
    _bstr_t Text19;
    __declspec(property(get=GetText20,put=PutText20))
    _bstr_t Text20;
    __declspec(property(get=GetText21,put=PutText21))
    _bstr_t Text21;
    __declspec(property(get=GetText22,put=PutText22))
    _bstr_t Text22;
    __declspec(property(get=GetText23,put=PutText23))
    _bstr_t Text23;
    __declspec(property(get=GetText24,put=PutText24))
    _bstr_t Text24;
    __declspec(property(get=GetText25,put=PutText25))
    _bstr_t Text25;
    __declspec(property(get=GetText26,put=PutText26))
    _bstr_t Text26;
    __declspec(property(get=GetText27,put=PutText27))
    _bstr_t Text27;
    __declspec(property(get=GetText28,put=PutText28))
    _bstr_t Text28;
    __declspec(property(get=GetText29,put=PutText29))
    _bstr_t Text29;
    __declspec(property(get=GetText30,put=PutText30))
    _bstr_t Text30;
    __declspec(property(get=GetPhysicalPercentComplete,put=PutPhysicalPercentComplete))
    _variant_t PhysicalPercentComplete;
    __declspec(property(get=GetEarnedValueMethod,put=PutEarnedValueMethod))
    enum PjEarnedValueMethod EarnedValueMethod;
    __declspec(property(get=GetResourcePhonetics))
    _bstr_t ResourcePhonetics;
    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetPreleveledStart))
    _variant_t PreleveledStart;
    __declspec(property(get=GetPreleveledFinish))
    _variant_t PreleveledFinish;
    __declspec(property(get=GetPredecessors,put=PutPredecessors))
    _bstr_t Predecessors;
    __declspec(property(get=GetSuccessors,put=PutSuccessors))
    _bstr_t Successors;
    __declspec(property(get=GetResourceNames,put=PutResourceNames))
    _bstr_t ResourceNames;
    __declspec(property(get=GetResourceInitials,put=PutResourceInitials))
    _bstr_t ResourceInitials;
    __declspec(property(get=GetEstimated,put=PutEstimated))
    _variant_t Estimated;
    __declspec(property(get=GetIgnoreResourceCalendar,put=PutIgnoreResourceCalendar))
    _variant_t IgnoreResourceCalendar;
    __declspec(property(get=GetCalendar,put=PutCalendar))
    _bstr_t Calendar;
    __declspec(property(get=GetDuration1Estimated,put=PutDuration1Estimated))
    _variant_t Duration1Estimated;
    __declspec(property(get=GetDuration2Estimated,put=PutDuration2Estimated))
    _variant_t Duration2Estimated;
    __declspec(property(get=GetDuration3Estimated,put=PutDuration3Estimated))
    _variant_t Duration3Estimated;
    __declspec(property(get=GetDuration4Estimated,put=PutDuration4Estimated))
    _variant_t Duration4Estimated;
    __declspec(property(get=GetDuration5Estimated,put=PutDuration5Estimated))
    _variant_t Duration5Estimated;
    __declspec(property(get=GetDuration6Estimated,put=PutDuration6Estimated))
    _variant_t Duration6Estimated;
    __declspec(property(get=GetDuration7Estimated,put=PutDuration7Estimated))
    _variant_t Duration7Estimated;
    __declspec(property(get=GetDuration8Estimated,put=PutDuration8Estimated))
    _variant_t Duration8Estimated;
    __declspec(property(get=GetDuration9Estimated,put=PutDuration9Estimated))
    _variant_t Duration9Estimated;
    __declspec(property(get=GetDuration10Estimated,put=PutDuration10Estimated))
    _variant_t Duration10Estimated;
    __declspec(property(get=GetBaselineDurationEstimated,put=PutBaselineDurationEstimated))
    _variant_t BaselineDurationEstimated;
    __declspec(property(get=GetOutlineCode1,put=PutOutlineCode1))
    _bstr_t OutlineCode1;
    __declspec(property(get=GetOutlineCode2,put=PutOutlineCode2))
    _bstr_t OutlineCode2;
    __declspec(property(get=GetOutlineCode3,put=PutOutlineCode3))
    _bstr_t OutlineCode3;
    __declspec(property(get=GetOutlineCode4,put=PutOutlineCode4))
    _bstr_t OutlineCode4;
    __declspec(property(get=GetOutlineCode5,put=PutOutlineCode5))
    _bstr_t OutlineCode5;
    __declspec(property(get=GetOutlineCode6,put=PutOutlineCode6))
    _bstr_t OutlineCode6;
    __declspec(property(get=GetOutlineCode7,put=PutOutlineCode7))
    _bstr_t OutlineCode7;
    __declspec(property(get=GetOutlineCode8,put=PutOutlineCode8))
    _bstr_t OutlineCode8;
    __declspec(property(get=GetOutlineCode9,put=PutOutlineCode9))
    _bstr_t OutlineCode9;
    __declspec(property(get=GetOutlineCode10,put=PutOutlineCode10))
    _bstr_t OutlineCode10;
    __declspec(property(get=GetDeadline,put=PutDeadline))
    _variant_t Deadline;
    __declspec(property(get=GetStartSlack))
    _variant_t StartSlack;
    __declspec(property(get=GetFinishSlack))
    _variant_t FinishSlack;
    __declspec(property(get=GetVAC))
    _variant_t VAC;
    __declspec(property(get=GetTaskDependencies))
    TaskDependenciesPtr TaskDependencies;
    __declspec(property(get=GetGroupBySummary))
    _variant_t GroupBySummary;
    __declspec(property(get=GetWBSPredecessors))
    _bstr_t WBSPredecessors;
    __declspec(property(get=GetWBSSuccessors))
    _bstr_t WBSSuccessors;
    __declspec(property(get=GetHyperlinkScreenTip,put=PutHyperlinkScreenTip))
    _bstr_t HyperlinkScreenTip;
    __declspec(property(get=GetBaseline1Start,put=PutBaseline1Start))
    _variant_t Baseline1Start;
    __declspec(property(get=GetBaseline1Finish,put=PutBaseline1Finish))
    _variant_t Baseline1Finish;
    __declspec(property(get=GetBaseline1Cost,put=PutBaseline1Cost))
    _variant_t Baseline1Cost;
    __declspec(property(get=GetBaseline1Work,put=PutBaseline1Work))
    _variant_t Baseline1Work;
    __declspec(property(get=GetBaseline1Duration,put=PutBaseline1Duration))
    _variant_t Baseline1Duration;
    __declspec(property(get=GetBaseline2Start,put=PutBaseline2Start))
    _variant_t Baseline2Start;
    __declspec(property(get=GetBaseline2Finish,put=PutBaseline2Finish))
    _variant_t Baseline2Finish;
    __declspec(property(get=GetBaseline2Cost,put=PutBaseline2Cost))
    _variant_t Baseline2Cost;
    __declspec(property(get=GetBaseline2Work,put=PutBaseline2Work))
    _variant_t Baseline2Work;
    __declspec(property(get=GetBaseline2Duration,put=PutBaseline2Duration))
    _variant_t Baseline2Duration;
    __declspec(property(get=GetBaseline3Start,put=PutBaseline3Start))
    _variant_t Baseline3Start;
    __declspec(property(get=GetBaseline3Finish,put=PutBaseline3Finish))
    _variant_t Baseline3Finish;
    __declspec(property(get=GetBaseline3Cost,put=PutBaseline3Cost))
    _variant_t Baseline3Cost;
    __declspec(property(get=GetBaseline3Work,put=PutBaseline3Work))
    _variant_t Baseline3Work;
    __declspec(property(get=GetBaseline3Duration,put=PutBaseline3Duration))
    _variant_t Baseline3Duration;
    __declspec(property(get=GetBaseline4Start,put=PutBaseline4Start))
    _variant_t Baseline4Start;
    __declspec(property(get=GetBaseline4Finish,put=PutBaseline4Finish))
    _variant_t Baseline4Finish;
    __declspec(property(get=GetBaseline4Cost,put=PutBaseline4Cost))
    _variant_t Baseline4Cost;
    __declspec(property(get=GetBaseline4Work,put=PutBaseline4Work))
    _variant_t Baseline4Work;
    __declspec(property(get=GetBaseline4Duration,put=PutBaseline4Duration))
    _variant_t Baseline4Duration;
    __declspec(property(get=GetBaseline5Start,put=PutBaseline5Start))
    _variant_t Baseline5Start;
    __declspec(property(get=GetBaseline5Finish,put=PutBaseline5Finish))
    _variant_t Baseline5Finish;
    __declspec(property(get=GetBaseline5Cost,put=PutBaseline5Cost))
    _variant_t Baseline5Cost;
    __declspec(property(get=GetBaseline5Work,put=PutBaseline5Work))
    _variant_t Baseline5Work;
    __declspec(property(get=GetBaseline5Duration,put=PutBaseline5Duration))
    _variant_t Baseline5Duration;
    __declspec(property(get=GetCPI))
    double CPI;
    __declspec(property(get=GetSPI))
    double SPI;
    __declspec(property(get=GetCVPercent))
    _variant_t CVPercent;
    __declspec(property(get=GetSVPercent))
    _variant_t SVPercent;
    __declspec(property(get=GetEAC))
    _variant_t EAC;
    __declspec(property(get=GetTCPI))
    double TCPI;
    __declspec(property(get=GetStatus))
    enum PjStatusType Status;
    __declspec(property(get=GetBaseline6Start,put=PutBaseline6Start))
    _variant_t Baseline6Start;
    __declspec(property(get=GetBaseline6Finish,put=PutBaseline6Finish))
    _variant_t Baseline6Finish;
    __declspec(property(get=GetBaseline6Cost,put=PutBaseline6Cost))
    _variant_t Baseline6Cost;
    __declspec(property(get=GetBaseline6Work,put=PutBaseline6Work))
    _variant_t Baseline6Work;
    __declspec(property(get=GetBaseline6Duration,put=PutBaseline6Duration))
    _variant_t Baseline6Duration;
    __declspec(property(get=GetBaseline7Start,put=PutBaseline7Start))
    _variant_t Baseline7Start;
    __declspec(property(get=GetBaseline7Finish,put=PutBaseline7Finish))
    _variant_t Baseline7Finish;
    __declspec(property(get=GetBaseline7Cost,put=PutBaseline7Cost))
    _variant_t Baseline7Cost;
    __declspec(property(get=GetBaseline7Work,put=PutBaseline7Work))
    _variant_t Baseline7Work;
    __declspec(property(get=GetBaseline7Duration,put=PutBaseline7Duration))
    _variant_t Baseline7Duration;
    __declspec(property(get=GetBaseline8Start,put=PutBaseline8Start))
    _variant_t Baseline8Start;
    __declspec(property(get=GetBaseline8Finish,put=PutBaseline8Finish))
    _variant_t Baseline8Finish;
    __declspec(property(get=GetBaseline8Cost,put=PutBaseline8Cost))
    _variant_t Baseline8Cost;
    __declspec(property(get=GetBaseline8Work,put=PutBaseline8Work))
    _variant_t Baseline8Work;
    __declspec(property(get=GetBaseline8Duration,put=PutBaseline8Duration))
    _variant_t Baseline8Duration;
    __declspec(property(get=GetBaseline9Start,put=PutBaseline9Start))
    _variant_t Baseline9Start;
    __declspec(property(get=GetBaseline9Finish,put=PutBaseline9Finish))
    _variant_t Baseline9Finish;
    __declspec(property(get=GetBaseline9Cost,put=PutBaseline9Cost))
    _variant_t Baseline9Cost;
    __declspec(property(get=GetBaseline9Work,put=PutBaseline9Work))
    _variant_t Baseline9Work;
    __declspec(property(get=GetBaseline9Duration,put=PutBaseline9Duration))
    _variant_t Baseline9Duration;
    __declspec(property(get=GetBaseline10Start,put=PutBaseline10Start))
    _variant_t Baseline10Start;
    __declspec(property(get=GetBaseline10Finish,put=PutBaseline10Finish))
    _variant_t Baseline10Finish;
    __declspec(property(get=GetBaseline10Cost,put=PutBaseline10Cost))
    _variant_t Baseline10Cost;
    __declspec(property(get=GetBaseline10Work,put=PutBaseline10Work))
    _variant_t Baseline10Work;
    __declspec(property(get=GetBaseline10Duration,put=PutBaseline10Duration))
    _variant_t Baseline10Duration;
    __declspec(property(get=GetEnterpriseCost1,put=PutEnterpriseCost1))
    _variant_t EnterpriseCost1;
    __declspec(property(get=GetEnterpriseCost2,put=PutEnterpriseCost2))
    _variant_t EnterpriseCost2;
    __declspec(property(get=GetEnterpriseCost3,put=PutEnterpriseCost3))
    _variant_t EnterpriseCost3;
    __declspec(property(get=GetEnterpriseCost4,put=PutEnterpriseCost4))
    _variant_t EnterpriseCost4;
    __declspec(property(get=GetEnterpriseCost5,put=PutEnterpriseCost5))
    _variant_t EnterpriseCost5;
    __declspec(property(get=GetEnterpriseCost6,put=PutEnterpriseCost6))
    _variant_t EnterpriseCost6;
    __declspec(property(get=GetEnterpriseCost7,put=PutEnterpriseCost7))
    _variant_t EnterpriseCost7;
    __declspec(property(get=GetEnterpriseCost8,put=PutEnterpriseCost8))
    _variant_t EnterpriseCost8;
    __declspec(property(get=GetEnterpriseCost9,put=PutEnterpriseCost9))
    _variant_t EnterpriseCost9;
    __declspec(property(get=GetEnterpriseCost10,put=PutEnterpriseCost10))
    _variant_t EnterpriseCost10;
    __declspec(property(get=GetEnterpriseDate1,put=PutEnterpriseDate1))
    _variant_t EnterpriseDate1;
    __declspec(property(get=GetEnterpriseDate2,put=PutEnterpriseDate2))
    _variant_t EnterpriseDate2;
    __declspec(property(get=GetEnterpriseDate3,put=PutEnterpriseDate3))
    _variant_t EnterpriseDate3;
    __declspec(property(get=GetEnterpriseDate4,put=PutEnterpriseDate4))
    _variant_t EnterpriseDate4;
    __declspec(property(get=GetEnterpriseDate5,put=PutEnterpriseDate5))
    _variant_t EnterpriseDate5;
    __declspec(property(get=GetEnterpriseDate6,put=PutEnterpriseDate6))
    _variant_t EnterpriseDate6;
    __declspec(property(get=GetEnterpriseDate7,put=PutEnterpriseDate7))
    _variant_t EnterpriseDate7;
    __declspec(property(get=GetEnterpriseDate8,put=PutEnterpriseDate8))
    _variant_t EnterpriseDate8;
    __declspec(property(get=GetEnterpriseDate9,put=PutEnterpriseDate9))
    _variant_t EnterpriseDate9;
    __declspec(property(get=GetEnterpriseDate10,put=PutEnterpriseDate10))
    _variant_t EnterpriseDate10;
    __declspec(property(get=GetEnterpriseDate11,put=PutEnterpriseDate11))
    _variant_t EnterpriseDate11;
    __declspec(property(get=GetEnterpriseDate12,put=PutEnterpriseDate12))
    _variant_t EnterpriseDate12;
    __declspec(property(get=GetEnterpriseDate13,put=PutEnterpriseDate13))
    _variant_t EnterpriseDate13;
    __declspec(property(get=GetEnterpriseDate14,put=PutEnterpriseDate14))
    _variant_t EnterpriseDate14;
    __declspec(property(get=GetEnterpriseDate15,put=PutEnterpriseDate15))
    _variant_t EnterpriseDate15;
    __declspec(property(get=GetEnterpriseDate16,put=PutEnterpriseDate16))
    _variant_t EnterpriseDate16;
    __declspec(property(get=GetEnterpriseDate17,put=PutEnterpriseDate17))
    _variant_t EnterpriseDate17;
    __declspec(property(get=GetEnterpriseDate18,put=PutEnterpriseDate18))
    _variant_t EnterpriseDate18;
    __declspec(property(get=GetEnterpriseDate19,put=PutEnterpriseDate19))
    _variant_t EnterpriseDate19;
    __declspec(property(get=GetEnterpriseDate20,put=PutEnterpriseDate20))
    _variant_t EnterpriseDate20;
    __declspec(property(get=GetEnterpriseDate21,put=PutEnterpriseDate21))
    _variant_t EnterpriseDate21;
    __declspec(property(get=GetEnterpriseDate22,put=PutEnterpriseDate22))
    _variant_t EnterpriseDate22;
    __declspec(property(get=GetEnterpriseDate23,put=PutEnterpriseDate23))
    _variant_t EnterpriseDate23;
    __declspec(property(get=GetEnterpriseDate24,put=PutEnterpriseDate24))
    _variant_t EnterpriseDate24;
    __declspec(property(get=GetEnterpriseDate25,put=PutEnterpriseDate25))
    _variant_t EnterpriseDate25;
    __declspec(property(get=GetEnterpriseDate26,put=PutEnterpriseDate26))
    _variant_t EnterpriseDate26;
    __declspec(property(get=GetEnterpriseDate27,put=PutEnterpriseDate27))
    _variant_t EnterpriseDate27;
    __declspec(property(get=GetEnterpriseDate28,put=PutEnterpriseDate28))
    _variant_t EnterpriseDate28;
    __declspec(property(get=GetEnterpriseDate29,put=PutEnterpriseDate29))
    _variant_t EnterpriseDate29;
    __declspec(property(get=GetEnterpriseDate30,put=PutEnterpriseDate30))
    _variant_t EnterpriseDate30;
    __declspec(property(get=GetEnterpriseDuration1,put=PutEnterpriseDuration1))
    _variant_t EnterpriseDuration1;
    __declspec(property(get=GetEnterpriseDuration2,put=PutEnterpriseDuration2))
    _variant_t EnterpriseDuration2;
    __declspec(property(get=GetEnterpriseDuration3,put=PutEnterpriseDuration3))
    _variant_t EnterpriseDuration3;
    __declspec(property(get=GetEnterpriseDuration4,put=PutEnterpriseDuration4))
    _variant_t EnterpriseDuration4;
    __declspec(property(get=GetEnterpriseDuration5,put=PutEnterpriseDuration5))
    _variant_t EnterpriseDuration5;
    __declspec(property(get=GetEnterpriseDuration6,put=PutEnterpriseDuration6))
    _variant_t EnterpriseDuration6;
    __declspec(property(get=GetEnterpriseDuration7,put=PutEnterpriseDuration7))
    _variant_t EnterpriseDuration7;
    __declspec(property(get=GetEnterpriseDuration8,put=PutEnterpriseDuration8))
    _variant_t EnterpriseDuration8;
    __declspec(property(get=GetEnterpriseDuration9,put=PutEnterpriseDuration9))
    _variant_t EnterpriseDuration9;
    __declspec(property(get=GetEnterpriseDuration10,put=PutEnterpriseDuration10))
    _variant_t EnterpriseDuration10;
    __declspec(property(get=GetEnterpriseFlag1,put=PutEnterpriseFlag1))
    _variant_t EnterpriseFlag1;
    __declspec(property(get=GetEnterpriseFlag2,put=PutEnterpriseFlag2))
    _variant_t EnterpriseFlag2;
    __declspec(property(get=GetEnterpriseFlag3,put=PutEnterpriseFlag3))
    _variant_t EnterpriseFlag3;
    __declspec(property(get=GetEnterpriseFlag4,put=PutEnterpriseFlag4))
    _variant_t EnterpriseFlag4;
    __declspec(property(get=GetEnterpriseFlag5,put=PutEnterpriseFlag5))
    _variant_t EnterpriseFlag5;
    __declspec(property(get=GetEnterpriseFlag6,put=PutEnterpriseFlag6))
    _variant_t EnterpriseFlag6;
    __declspec(property(get=GetEnterpriseFlag7,put=PutEnterpriseFlag7))
    _variant_t EnterpriseFlag7;
    __declspec(property(get=GetEnterpriseFlag8,put=PutEnterpriseFlag8))
    _variant_t EnterpriseFlag8;
    __declspec(property(get=GetEnterpriseFlag9,put=PutEnterpriseFlag9))
    _variant_t EnterpriseFlag9;
    __declspec(property(get=GetEnterpriseFlag10,put=PutEnterpriseFlag10))
    _variant_t EnterpriseFlag10;
    __declspec(property(get=GetEnterpriseFlag11,put=PutEnterpriseFlag11))
    _variant_t EnterpriseFlag11;
    __declspec(property(get=GetEnterpriseFlag12,put=PutEnterpriseFlag12))
    _variant_t EnterpriseFlag12;
    __declspec(property(get=GetEnterpriseFlag13,put=PutEnterpriseFlag13))
    _variant_t EnterpriseFlag13;
    __declspec(property(get=GetEnterpriseFlag14,put=PutEnterpriseFlag14))
    _variant_t EnterpriseFlag14;
    __declspec(property(get=GetEnterpriseFlag15,put=PutEnterpriseFlag15))
    _variant_t EnterpriseFlag15;
    __declspec(property(get=GetEnterpriseFlag16,put=PutEnterpriseFlag16))
    _variant_t EnterpriseFlag16;
    __declspec(property(get=GetEnterpriseFlag17,put=PutEnterpriseFlag17))
    _variant_t EnterpriseFlag17;
    __declspec(property(get=GetEnterpriseFlag18,put=PutEnterpriseFlag18))
    _variant_t EnterpriseFlag18;
    __declspec(property(get=GetEnterpriseFlag19,put=PutEnterpriseFlag19))
    _variant_t EnterpriseFlag19;
    __declspec(property(get=GetEnterpriseFlag20,put=PutEnterpriseFlag20))
    _variant_t EnterpriseFlag20;
    __declspec(property(get=GetEnterpriseNumber1,put=PutEnterpriseNumber1))
    double EnterpriseNumber1;
    __declspec(property(get=GetEnterpriseNumber2,put=PutEnterpriseNumber2))
    double EnterpriseNumber2;
    __declspec(property(get=GetEnterpriseNumber3,put=PutEnterpriseNumber3))
    double EnterpriseNumber3;
    __declspec(property(get=GetEnterpriseNumber4,put=PutEnterpriseNumber4))
    double EnterpriseNumber4;
    __declspec(property(get=GetEnterpriseNumber5,put=PutEnterpriseNumber5))
    double EnterpriseNumber5;
    __declspec(property(get=GetEnterpriseNumber6,put=PutEnterpriseNumber6))
    double EnterpriseNumber6;
    __declspec(property(get=GetEnterpriseNumber7,put=PutEnterpriseNumber7))
    double EnterpriseNumber7;
    __declspec(property(get=GetEnterpriseNumber8,put=PutEnterpriseNumber8))
    double EnterpriseNumber8;
    __declspec(property(get=GetEnterpriseNumber9,put=PutEnterpriseNumber9))
    double EnterpriseNumber9;
    __declspec(property(get=GetEnterpriseNumber10,put=PutEnterpriseNumber10))
    double EnterpriseNumber10;
    __declspec(property(get=GetEnterpriseNumber11,put=PutEnterpriseNumber11))
    double EnterpriseNumber11;
    __declspec(property(get=GetEnterpriseNumber12,put=PutEnterpriseNumber12))
    double EnterpriseNumber12;
    __declspec(property(get=GetEnterpriseNumber13,put=PutEnterpriseNumber13))
    double EnterpriseNumber13;
    __declspec(property(get=GetEnterpriseNumber14,put=PutEnterpriseNumber14))
    double EnterpriseNumber14;
    __declspec(property(get=GetEnterpriseNumber15,put=PutEnterpriseNumber15))
    double EnterpriseNumber15;
    __declspec(property(get=GetEnterpriseNumber16,put=PutEnterpriseNumber16))
    double EnterpriseNumber16;
    __declspec(property(get=GetEnterpriseNumber17,put=PutEnterpriseNumber17))
    double EnterpriseNumber17;
    __declspec(property(get=GetEnterpriseNumber18,put=PutEnterpriseNumber18))
    double EnterpriseNumber18;
    __declspec(property(get=GetEnterpriseNumber19,put=PutEnterpriseNumber19))
    double EnterpriseNumber19;
    __declspec(property(get=GetEnterpriseNumber20,put=PutEnterpriseNumber20))
    double EnterpriseNumber20;
    __declspec(property(get=GetEnterpriseNumber21,put=PutEnterpriseNumber21))
    double EnterpriseNumber21;
    __declspec(property(get=GetEnterpriseNumber22,put=PutEnterpriseNumber22))
    double EnterpriseNumber22;
    __declspec(property(get=GetEnterpriseNumber23,put=PutEnterpriseNumber23))
    double EnterpriseNumber23;
    __declspec(property(get=GetEnterpriseNumber24,put=PutEnterpriseNumber24))
    double EnterpriseNumber24;
    __declspec(property(get=GetEnterpriseNumber25,put=PutEnterpriseNumber25))
    double EnterpriseNumber25;
    __declspec(property(get=GetEnterpriseNumber26,put=PutEnterpriseNumber26))
    double EnterpriseNumber26;
    __declspec(property(get=GetEnterpriseNumber27,put=PutEnterpriseNumber27))
    double EnterpriseNumber27;
    __declspec(property(get=GetEnterpriseNumber28,put=PutEnterpriseNumber28))
    double EnterpriseNumber28;
    __declspec(property(get=GetEnterpriseNumber29,put=PutEnterpriseNumber29))
    double EnterpriseNumber29;
    __declspec(property(get=GetEnterpriseNumber30,put=PutEnterpriseNumber30))
    double EnterpriseNumber30;
    __declspec(property(get=GetEnterpriseNumber31,put=PutEnterpriseNumber31))
    double EnterpriseNumber31;
    __declspec(property(get=GetEnterpriseNumber32,put=PutEnterpriseNumber32))
    double EnterpriseNumber32;
    __declspec(property(get=GetEnterpriseNumber33,put=PutEnterpriseNumber33))
    double EnterpriseNumber33;
    __declspec(property(get=GetEnterpriseNumber34,put=PutEnterpriseNumber34))
    double EnterpriseNumber34;
    __declspec(property(get=GetEnterpriseNumber35,put=PutEnterpriseNumber35))
    double EnterpriseNumber35;
    __declspec(property(get=GetEnterpriseNumber36,put=PutEnterpriseNumber36))
    double EnterpriseNumber36;
    __declspec(property(get=GetEnterpriseNumber37,put=PutEnterpriseNumber37))
    double EnterpriseNumber37;
    __declspec(property(get=GetEnterpriseNumber38,put=PutEnterpriseNumber38))
    double EnterpriseNumber38;
    __declspec(property(get=GetEnterpriseNumber39,put=PutEnterpriseNumber39))
    double EnterpriseNumber39;
    __declspec(property(get=GetEnterpriseNumber40,put=PutEnterpriseNumber40))
    double EnterpriseNumber40;
    __declspec(property(get=GetEnterpriseOutlineCode1,put=PutEnterpriseOutlineCode1))
    _bstr_t EnterpriseOutlineCode1;
    __declspec(property(get=GetEnterpriseOutlineCode2,put=PutEnterpriseOutlineCode2))
    _bstr_t EnterpriseOutlineCode2;
    __declspec(property(get=GetEnterpriseOutlineCode3,put=PutEnterpriseOutlineCode3))
    _bstr_t EnterpriseOutlineCode3;
    __declspec(property(get=GetEnterpriseOutlineCode4,put=PutEnterpriseOutlineCode4))
    _bstr_t EnterpriseOutlineCode4;
    __declspec(property(get=GetEnterpriseOutlineCode5,put=PutEnterpriseOutlineCode5))
    _bstr_t EnterpriseOutlineCode5;
    __declspec(property(get=GetEnterpriseOutlineCode6,put=PutEnterpriseOutlineCode6))
    _bstr_t EnterpriseOutlineCode6;
    __declspec(property(get=GetEnterpriseOutlineCode7,put=PutEnterpriseOutlineCode7))
    _bstr_t EnterpriseOutlineCode7;
    __declspec(property(get=GetEnterpriseOutlineCode8,put=PutEnterpriseOutlineCode8))
    _bstr_t EnterpriseOutlineCode8;
    __declspec(property(get=GetEnterpriseOutlineCode9,put=PutEnterpriseOutlineCode9))
    _bstr_t EnterpriseOutlineCode9;
    __declspec(property(get=GetEnterpriseOutlineCode10,put=PutEnterpriseOutlineCode10))
    _bstr_t EnterpriseOutlineCode10;
    __declspec(property(get=GetEnterpriseOutlineCode11,put=PutEnterpriseOutlineCode11))
    _bstr_t EnterpriseOutlineCode11;
    __declspec(property(get=GetEnterpriseOutlineCode12,put=PutEnterpriseOutlineCode12))
    _bstr_t EnterpriseOutlineCode12;
    __declspec(property(get=GetEnterpriseOutlineCode13,put=PutEnterpriseOutlineCode13))
    _bstr_t EnterpriseOutlineCode13;
    __declspec(property(get=GetEnterpriseOutlineCode14,put=PutEnterpriseOutlineCode14))
    _bstr_t EnterpriseOutlineCode14;
    __declspec(property(get=GetEnterpriseOutlineCode15,put=PutEnterpriseOutlineCode15))
    _bstr_t EnterpriseOutlineCode15;
    __declspec(property(get=GetEnterpriseOutlineCode16,put=PutEnterpriseOutlineCode16))
    _bstr_t EnterpriseOutlineCode16;
    __declspec(property(get=GetEnterpriseOutlineCode17,put=PutEnterpriseOutlineCode17))
    _bstr_t EnterpriseOutlineCode17;
    __declspec(property(get=GetEnterpriseOutlineCode18,put=PutEnterpriseOutlineCode18))
    _bstr_t EnterpriseOutlineCode18;
    __declspec(property(get=GetEnterpriseOutlineCode19,put=PutEnterpriseOutlineCode19))
    _bstr_t EnterpriseOutlineCode19;
    __declspec(property(get=GetEnterpriseOutlineCode20,put=PutEnterpriseOutlineCode20))
    _bstr_t EnterpriseOutlineCode20;
    __declspec(property(get=GetEnterpriseOutlineCode21,put=PutEnterpriseOutlineCode21))
    _bstr_t EnterpriseOutlineCode21;
    __declspec(property(get=GetEnterpriseOutlineCode22,put=PutEnterpriseOutlineCode22))
    _bstr_t EnterpriseOutlineCode22;
    __declspec(property(get=GetEnterpriseOutlineCode23,put=PutEnterpriseOutlineCode23))
    _bstr_t EnterpriseOutlineCode23;
    __declspec(property(get=GetEnterpriseOutlineCode24,put=PutEnterpriseOutlineCode24))
    _bstr_t EnterpriseOutlineCode24;
    __declspec(property(get=GetEnterpriseOutlineCode25,put=PutEnterpriseOutlineCode25))
    _bstr_t EnterpriseOutlineCode25;
    __declspec(property(get=GetEnterpriseOutlineCode26,put=PutEnterpriseOutlineCode26))
    _bstr_t EnterpriseOutlineCode26;
    __declspec(property(get=GetEnterpriseOutlineCode27,put=PutEnterpriseOutlineCode27))
    _bstr_t EnterpriseOutlineCode27;
    __declspec(property(get=GetEnterpriseOutlineCode28,put=PutEnterpriseOutlineCode28))
    _bstr_t EnterpriseOutlineCode28;
    __declspec(property(get=GetEnterpriseOutlineCode29,put=PutEnterpriseOutlineCode29))
    _bstr_t EnterpriseOutlineCode29;
    __declspec(property(get=GetEnterpriseOutlineCode30,put=PutEnterpriseOutlineCode30))
    _bstr_t EnterpriseOutlineCode30;
    __declspec(property(get=GetEnterpriseText1,put=PutEnterpriseText1))
    _bstr_t EnterpriseText1;
    __declspec(property(get=GetEnterpriseText2,put=PutEnterpriseText2))
    _bstr_t EnterpriseText2;
    __declspec(property(get=GetEnterpriseText3,put=PutEnterpriseText3))
    _bstr_t EnterpriseText3;
    __declspec(property(get=GetEnterpriseText4,put=PutEnterpriseText4))
    _bstr_t EnterpriseText4;
    __declspec(property(get=GetEnterpriseText5,put=PutEnterpriseText5))
    _bstr_t EnterpriseText5;
    __declspec(property(get=GetEnterpriseText6,put=PutEnterpriseText6))
    _bstr_t EnterpriseText6;
    __declspec(property(get=GetEnterpriseText7,put=PutEnterpriseText7))
    _bstr_t EnterpriseText7;
    __declspec(property(get=GetEnterpriseText8,put=PutEnterpriseText8))
    _bstr_t EnterpriseText8;
    __declspec(property(get=GetEnterpriseText9,put=PutEnterpriseText9))
    _bstr_t EnterpriseText9;
    __declspec(property(get=GetEnterpriseText10,put=PutEnterpriseText10))
    _bstr_t EnterpriseText10;
    __declspec(property(get=GetEnterpriseText11,put=PutEnterpriseText11))
    _bstr_t EnterpriseText11;
    __declspec(property(get=GetEnterpriseText12,put=PutEnterpriseText12))
    _bstr_t EnterpriseText12;
    __declspec(property(get=GetEnterpriseText13,put=PutEnterpriseText13))
    _bstr_t EnterpriseText13;
    __declspec(property(get=GetEnterpriseText14,put=PutEnterpriseText14))
    _bstr_t EnterpriseText14;
    __declspec(property(get=GetEnterpriseText15,put=PutEnterpriseText15))
    _bstr_t EnterpriseText15;
    __declspec(property(get=GetEnterpriseText16,put=PutEnterpriseText16))
    _bstr_t EnterpriseText16;
    __declspec(property(get=GetEnterpriseText17,put=PutEnterpriseText17))
    _bstr_t EnterpriseText17;
    __declspec(property(get=GetEnterpriseText18,put=PutEnterpriseText18))
    _bstr_t EnterpriseText18;
    __declspec(property(get=GetEnterpriseText19,put=PutEnterpriseText19))
    _bstr_t EnterpriseText19;
    __declspec(property(get=GetEnterpriseText20,put=PutEnterpriseText20))
    _bstr_t EnterpriseText20;
    __declspec(property(get=GetEnterpriseText21,put=PutEnterpriseText21))
    _bstr_t EnterpriseText21;
    __declspec(property(get=GetEnterpriseText22,put=PutEnterpriseText22))
    _bstr_t EnterpriseText22;
    __declspec(property(get=GetEnterpriseText23,put=PutEnterpriseText23))
    _bstr_t EnterpriseText23;
    __declspec(property(get=GetEnterpriseText24,put=PutEnterpriseText24))
    _bstr_t EnterpriseText24;
    __declspec(property(get=GetEnterpriseText25,put=PutEnterpriseText25))
    _bstr_t EnterpriseText25;
    __declspec(property(get=GetEnterpriseText26,put=PutEnterpriseText26))
    _bstr_t EnterpriseText26;
    __declspec(property(get=GetEnterpriseText27,put=PutEnterpriseText27))
    _bstr_t EnterpriseText27;
    __declspec(property(get=GetEnterpriseText28,put=PutEnterpriseText28))
    _bstr_t EnterpriseText28;
    __declspec(property(get=GetEnterpriseText29,put=PutEnterpriseText29))
    _bstr_t EnterpriseText29;
    __declspec(property(get=GetEnterpriseText30,put=PutEnterpriseText30))
    _bstr_t EnterpriseText30;
    __declspec(property(get=GetEnterpriseText31,put=PutEnterpriseText31))
    _bstr_t EnterpriseText31;
    __declspec(property(get=GetEnterpriseText32,put=PutEnterpriseText32))
    _bstr_t EnterpriseText32;
    __declspec(property(get=GetEnterpriseText33,put=PutEnterpriseText33))
    _bstr_t EnterpriseText33;
    __declspec(property(get=GetEnterpriseText34,put=PutEnterpriseText34))
    _bstr_t EnterpriseText34;
    __declspec(property(get=GetEnterpriseText35,put=PutEnterpriseText35))
    _bstr_t EnterpriseText35;
    __declspec(property(get=GetEnterpriseText36,put=PutEnterpriseText36))
    _bstr_t EnterpriseText36;
    __declspec(property(get=GetEnterpriseText37,put=PutEnterpriseText37))
    _bstr_t EnterpriseText37;
    __declspec(property(get=GetEnterpriseText38,put=PutEnterpriseText38))
    _bstr_t EnterpriseText38;
    __declspec(property(get=GetEnterpriseText39,put=PutEnterpriseText39))
    _bstr_t EnterpriseText39;
    __declspec(property(get=GetEnterpriseText40,put=PutEnterpriseText40))
    _bstr_t EnterpriseText40;
    __declspec(property(get=GetBaseline1DurationEstimated,put=PutBaseline1DurationEstimated))
    _variant_t Baseline1DurationEstimated;
    __declspec(property(get=GetBaseline2DurationEstimated,put=PutBaseline2DurationEstimated))
    _variant_t Baseline2DurationEstimated;
    __declspec(property(get=GetBaseline3DurationEstimated,put=PutBaseline3DurationEstimated))
    _variant_t Baseline3DurationEstimated;
    __declspec(property(get=GetBaseline4DurationEstimated,put=PutBaseline4DurationEstimated))
    _variant_t Baseline4DurationEstimated;
    __declspec(property(get=GetBaseline5DurationEstimated,put=PutBaseline5DurationEstimated))
    _variant_t Baseline5DurationEstimated;
    __declspec(property(get=GetBaseline6DurationEstimated,put=PutBaseline6DurationEstimated))
    _variant_t Baseline6DurationEstimated;
    __declspec(property(get=GetBaseline7DurationEstimated,put=PutBaseline7DurationEstimated))
    _variant_t Baseline7DurationEstimated;
    __declspec(property(get=GetBaseline8DurationEstimated,put=PutBaseline8DurationEstimated))
    _variant_t Baseline8DurationEstimated;
    __declspec(property(get=GetBaseline9DurationEstimated,put=PutBaseline9DurationEstimated))
    _variant_t Baseline9DurationEstimated;
    __declspec(property(get=GetBaseline10DurationEstimated,put=PutBaseline10DurationEstimated))
    _variant_t Baseline10DurationEstimated;

    //
    // Wrapper methods for error-handling
    //

    _variant_t GetWork ( );
    void PutWork (
        const _variant_t & retval );
    _variant_t GetBaselineWork ( );
    void PutBaselineWork (
        const _variant_t & retval );
    _variant_t GetActualWork ( );
    void PutActualWork (
        const _variant_t & retval );
    _variant_t GetWorkVariance ( );
    _variant_t GetRemainingWork ( );
    void PutRemainingWork (
        const _variant_t & retval );
    _variant_t GetCost ( );
    void PutCost (
        const _variant_t & retval );
    _variant_t GetBaselineCost ( );
    void PutBaselineCost (
        const _variant_t & retval );
    _variant_t GetActualCost ( );
    void PutActualCost (
        const _variant_t & retval );
    _variant_t GetFixedCost ( );
    void PutFixedCost (
        const _variant_t & retval );
    _variant_t GetCostVariance ( );
    _variant_t GetRemainingCost ( );
    _variant_t GetBCWP ( );
    _variant_t GetBCWS ( );
    _variant_t GetSV ( );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t retval );
    _bstr_t GetNotes ( );
    void PutNotes (
        _bstr_t retval );
    _bstr_t GetWBS ( );
    void PutWBS (
        _bstr_t retval );
    _variant_t GetConstraintType ( );
    void PutConstraintType (
        const _variant_t & retval );
    _variant_t GetConstraintDate ( );
    void PutConstraintDate (
        const _variant_t & retval );
    _variant_t GetCritical ( );
    _variant_t GetLevelingDelay ( );
    void PutLevelingDelay (
        const _variant_t & retval );
    _variant_t GetFreeSlack ( );
    _variant_t GetTotalSlack ( );
    long GetID ( );
    _variant_t GetMilestone ( );
    void PutMilestone (
        const _variant_t & retval );
    _variant_t GetPriority ( );
    void PutPriority (
        const _variant_t & retval );
    _bstr_t GetSubproject ( );
    void PutSubproject (
        _bstr_t retval );
    _variant_t GetBaselineDuration ( );
    void PutBaselineDuration (
        const _variant_t & retval );
    _variant_t GetActualDuration ( );
    void PutActualDuration (
        const _variant_t & retval );
    _variant_t GetDuration ( );
    void PutDuration (
        const _variant_t & retval );
    _variant_t GetDurationVariance ( );
    _variant_t GetRemainingDuration ( );
    void PutRemainingDuration (
        const _variant_t & retval );
    _variant_t GetPercentComplete ( );
    void PutPercentComplete (
        const _variant_t & retval );
    _variant_t GetPercentWorkComplete ( );
    void PutPercentWorkComplete (
        const _variant_t & retval );
    _variant_t GetFixedDuration ( );
    void PutFixedDuration (
        const _variant_t & retval );
    _variant_t GetStart ( );
    void PutStart (
        const _variant_t & retval );
    _variant_t GetFinish ( );
    void PutFinish (
        const _variant_t & retval );
    _variant_t GetEarlyStart ( );
    _variant_t GetEarlyFinish ( );
    _variant_t GetLateStart ( );
    _variant_t GetLateFinish ( );
    _variant_t GetActualStart ( );
    void PutActualStart (
        const _variant_t & retval );
    _variant_t GetActualFinish ( );
    void PutActualFinish (
        const _variant_t & retval );
    _variant_t GetBaselineStart ( );
    void PutBaselineStart (
        const _variant_t & retval );
    _variant_t GetBaselineFinish ( );
    void PutBaselineFinish (
        const _variant_t & retval );
    _variant_t GetStartVariance ( );
    _variant_t GetFinishVariance ( );
    _bstr_t GetText1 ( );
    void PutText1 (
        _bstr_t retval );
    _variant_t GetStart1 ( );
    void PutStart1 (
        const _variant_t & retval );
    _variant_t GetFinish1 ( );
    void PutFinish1 (
        const _variant_t & retval );
    _bstr_t GetText2 ( );
    void PutText2 (
        _bstr_t retval );
    _variant_t GetStart2 ( );
    void PutStart2 (
        const _variant_t & retval );
    _variant_t GetFinish2 ( );
    void PutFinish2 (
        const _variant_t & retval );
    _bstr_t GetText3 ( );
    void PutText3 (
        _bstr_t retval );
    _variant_t GetStart3 ( );
    void PutStart3 (
        const _variant_t & retval );
    _variant_t GetFinish3 ( );
    void PutFinish3 (
        const _variant_t & retval );
    _bstr_t GetText4 ( );
    void PutText4 (
        _bstr_t retval );
    _variant_t GetStart4 ( );
    void PutStart4 (
        const _variant_t & retval );
    _variant_t GetFinish4 ( );
    void PutFinish4 (
        const _variant_t & retval );
    _bstr_t GetText5 ( );
    void PutText5 (
        _bstr_t retval );
    _variant_t GetStart5 ( );
    void PutStart5 (
        const _variant_t & retval );
    _variant_t GetFinish5 ( );
    void PutFinish5 (
        const _variant_t & retval );
    _bstr_t GetText6 ( );
    void PutText6 (
        _bstr_t retval );
    _bstr_t GetText7 ( );
    void PutText7 (
        _bstr_t retval );
    _bstr_t GetText8 ( );
    void PutText8 (
        _bstr_t retval );
    _bstr_t GetText9 ( );
    void PutText9 (
        _bstr_t retval );
    _bstr_t GetText10 ( );
    void PutText10 (
        _bstr_t retval );
    _variant_t GetMarked ( );
    void PutMarked (
        const _variant_t & retval );
    _variant_t GetFlag1 ( );
    void PutFlag1 (
        const _variant_t & retval );
    _variant_t GetFlag2 ( );
    void PutFlag2 (
        const _variant_t & retval );
    _variant_t GetFlag3 ( );
    void PutFlag3 (
        const _variant_t & retval );
    _variant_t GetFlag4 ( );
    void PutFlag4 (
        const _variant_t & retval );
    _variant_t GetFlag5 ( );
    void PutFlag5 (
        const _variant_t & retval );
    _variant_t GetFlag6 ( );
    void PutFlag6 (
        const _variant_t & retval );
    _variant_t GetFlag7 ( );
    void PutFlag7 (
        const _variant_t & retval );
    _variant_t GetFlag8 ( );
    void PutFlag8 (
        const _variant_t & retval );
    _variant_t GetFlag9 ( );
    void PutFlag9 (
        const _variant_t & retval );
    _variant_t GetFlag10 ( );
    void PutFlag10 (
        const _variant_t & retval );
    _variant_t GetRollup ( );
    void PutRollup (
        const _variant_t & retval );
    _variant_t GetCV ( );
    _bstr_t GetProject ( );
    short GetOutlineLevel ( );
    long GetUniqueID ( );
    double GetNumber1 ( );
    void PutNumber1 (
        double retval );
    double GetNumber2 ( );
    void PutNumber2 (
        double retval );
    double GetNumber3 ( );
    void PutNumber3 (
        double retval );
    double GetNumber4 ( );
    void PutNumber4 (
        double retval );
    double GetNumber5 ( );
    void PutNumber5 (
        double retval );
    _variant_t GetSummary ( );
    _variant_t GetCreated ( );
    _bstr_t GetUniqueIDPredecessors ( );
    void PutUniqueIDPredecessors (
        _bstr_t retval );
    _bstr_t GetUniqueIDSuccessors ( );
    void PutUniqueIDSuccessors (
        _bstr_t retval );
    long GetObjects ( );
    _variant_t GetLinkedFields ( );
    _variant_t GetResume ( );
    void PutResume (
        const _variant_t & retval );
    _variant_t GetStop ( );
    void PutStop (
        const _variant_t & retval );
    _variant_t GetResumeNoEarlierThan ( );
    void PutResumeNoEarlierThan (
        const _variant_t & retval );
    _bstr_t GetOutlineNumber ( );
    _variant_t GetDuration1 ( );
    void PutDuration1 (
        const _variant_t & retval );
    _variant_t GetDuration2 ( );
    void PutDuration2 (
        const _variant_t & retval );
    _variant_t GetDuration3 ( );
    void PutDuration3 (
        const _variant_t & retval );
    _variant_t GetCost1 ( );
    void PutCost1 (
        const _variant_t & retval );
    _variant_t GetCost2 ( );
    void PutCost2 (
        const _variant_t & retval );
    _variant_t GetCost3 ( );
    void PutCost3 (
        const _variant_t & retval );
    _variant_t GetHideBar ( );
    void PutHideBar (
        const _variant_t & retval );
    _variant_t GetConfirmed ( );
    _variant_t GetUpdateNeeded ( );
    _bstr_t GetContact ( );
    void PutContact (
        _bstr_t retval );
    _bstr_t GetResourceGroup ( );
    _variant_t GetACWP ( );
    enum PjTaskFixedType GetType ( );
    void PutType (
        enum PjTaskFixedType retval );
    _variant_t GetRecurring ( );
    _variant_t GetEffortDriven ( );
    void PutEffortDriven (
        const _variant_t & retval );
    TasksPtr GetOutlineChildren ( );
    TasksPtr GetPredecessorTasks ( );
    TasksPtr GetSuccessorTasks ( );
    _variant_t GetOvertimeWork ( );
    _variant_t GetActualOvertimeWork ( );
    _variant_t GetRemainingOvertimeWork ( );
    _variant_t GetRegularWork ( );
    _variant_t GetOvertimeCost ( );
    _variant_t GetActualOvertimeCost ( );
    _variant_t GetRemainingOvertimeCost ( );
    enum PjAccrueAt GetFixedCostAccrual ( );
    void PutFixedCostAccrual (
        enum PjAccrueAt retval );
    AssignmentsPtr GetAssignments ( );
    IDispatchPtr GetParent ( );
    void PutParent (
        IDispatch * retval );
    _MSProjectPtr GetApplication ( );
    _bstr_t GetHyperlink ( );
    void PutHyperlink (
        _bstr_t retval );
    _bstr_t GetHyperlinkAddress ( );
    void PutHyperlinkAddress (
        _bstr_t retval );
    _bstr_t GetHyperlinkSubAddress ( );
    void PutHyperlinkSubAddress (
        _bstr_t retval );
    _bstr_t GetHyperlinkHREF ( );
    void PutHyperlinkHREF (
        _bstr_t retval );
    _variant_t GetOverallocated ( );
    SplitPartsPtr GetSplitParts ( );
    _bstr_t GetField (
        enum PjField FieldID );
    HRESULT SetField (
        enum PjField FieldID,
        _bstr_t Value );
    _variant_t GetExternalTask ( );
    HRESULT Delete ( );
    HRESULT AppendNotes (
        _bstr_t Value );
    TaskPtr GetOutlineParent ( );
    ResourcesPtr GetResources ( );
    TimeScaleValuesPtr TimeScaleData (
        const _variant_t & StartDate,
        const _variant_t & EndDate,
        enum PjTaskTimescaledData Type,
        enum PjTimescaleUnit TimeScaleUnit,
        long Count );
    _variant_t GetSubProjectReadOnly ( );
    void PutSubProjectReadOnly (
        const _variant_t & retval );
    _variant_t GetResponsePending ( );
    _variant_t GetTeamStatusPending ( );
    _variant_t GetLevelingCanSplit ( );
    void PutLevelingCanSplit (
        const _variant_t & retval );
    _variant_t GetLevelIndividualAssignments ( );
    void PutLevelIndividualAssignments (
        const _variant_t & retval );
    _variant_t GetCost4 ( );
    void PutCost4 (
        const _variant_t & retval );
    _variant_t GetCost5 ( );
    void PutCost5 (
        const _variant_t & retval );
    _variant_t GetCost6 ( );
    void PutCost6 (
        const _variant_t & retval );
    _variant_t GetCost7 ( );
    void PutCost7 (
        const _variant_t & retval );
    _variant_t GetCost8 ( );
    void PutCost8 (
        const _variant_t & retval );
    _variant_t GetCost9 ( );
    void PutCost9 (
        const _variant_t & retval );
    _variant_t GetCost10 ( );
    void PutCost10 (
        const _variant_t & retval );
    _variant_t GetDate1 ( );
    void PutDate1 (
        const _variant_t & retval );
    _variant_t GetDate2 ( );
    void PutDate2 (
        const _variant_t & retval );
    _variant_t GetDate3 ( );
    void PutDate3 (
        const _variant_t & retval );
    _variant_t GetDate4 ( );
    void PutDate4 (
        const _variant_t & retval );
    _variant_t GetDate5 ( );
    void PutDate5 (
        const _variant_t & retval );
    _variant_t GetDate6 ( );
    void PutDate6 (
        const _variant_t & retval );
    _variant_t GetDate7 ( );
    void PutDate7 (
        const _variant_t & retval );
    _variant_t GetDate8 ( );
    void PutDate8 (
        const _variant_t & retval );
    _variant_t GetDate9 ( );
    void PutDate9 (
        const _variant_t & retval );
    _variant_t GetDate10 ( );
    void PutDate10 (
        const _variant_t & retval );
    _variant_t GetDuration4 ( );
    void PutDuration4 (
        const _variant_t & retval );
    _variant_t GetDuration5 ( );
    void PutDuration5 (
        const _variant_t & retval );
    _variant_t GetDuration6 ( );
    void PutDuration6 (
        const _variant_t & retval );
    _variant_t GetDuration7 ( );
    void PutDuration7 (
        const _variant_t & retval );
    _variant_t GetDuration8 ( );
    void PutDuration8 (
        const _variant_t & retval );
    _variant_t GetDuration9 ( );
    void PutDuration9 (
        const _variant_t & retval );
    _variant_t GetDuration10 ( );
    void PutDuration10 (
        const _variant_t & retval );
    _variant_t GetStart6 ( );
    void PutStart6 (
        const _variant_t & retval );
    _variant_t GetFinish6 ( );
    void PutFinish6 (
        const _variant_t & retval );
    _variant_t GetStart7 ( );
    void PutStart7 (
        const _variant_t & retval );
    _variant_t GetFinish7 ( );
    void PutFinish7 (
        const _variant_t & retval );
    _variant_t GetStart8 ( );
    void PutStart8 (
        const _variant_t & retval );
    _variant_t GetFinish8 ( );
    void PutFinish8 (
        const _variant_t & retval );
    _variant_t GetStart9 ( );
    void PutStart9 (
        const _variant_t & retval );
    _variant_t GetFinish9 ( );
    void PutFinish9 (
        const _variant_t & retval );
    _variant_t GetStart10 ( );
    void PutStart10 (
        const _variant_t & retval );
    _variant_t GetFinish10 ( );
    void PutFinish10 (
        const _variant_t & retval );
    _variant_t GetFlag11 ( );
    void PutFlag11 (
        const _variant_t & retval );
    _variant_t GetFlag12 ( );
    void PutFlag12 (
        const _variant_t & retval );
    _variant_t GetFlag13 ( );
    void PutFlag13 (
        const _variant_t & retval );
    _variant_t GetFlag14 ( );
    void PutFlag14 (
        const _variant_t & retval );
    _variant_t GetFlag15 ( );
    void PutFlag15 (
        const _variant_t & retval );
    _variant_t GetFlag16 ( );
    void PutFlag16 (
        const _variant_t & retval );
    _variant_t GetFlag17 ( );
    void PutFlag17 (
        const _variant_t & retval );
    _variant_t GetFlag18 ( );
    void PutFlag18 (
        const _variant_t & retval );
    _variant_t GetFlag19 ( );
    void PutFlag19 (
        const _variant_t & retval );
    _variant_t GetFlag20 ( );
    void PutFlag20 (
        const _variant_t & retval );
    double GetNumber6 ( );
    void PutNumber6 (
        double retval );
    double GetNumber7 ( );
    void PutNumber7 (
        double retval );
    double GetNumber8 ( );
    void PutNumber8 (
        double retval );
    double GetNumber9 ( );
    void PutNumber9 (
        double retval );
    double GetNumber10 ( );
    void PutNumber10 (
        double retval );
    double GetNumber11 ( );
    void PutNumber11 (
        double retval );
    double GetNumber12 ( );
    void PutNumber12 (
        double retval );
    double GetNumber13 ( );
    void PutNumber13 (
        double retval );
    double GetNumber14 ( );
    void PutNumber14 (
        double retval );
    double GetNumber15 ( );
    void PutNumber15 (
        double retval );
    double GetNumber16 ( );
    void PutNumber16 (
        double retval );
    double GetNumber17 ( );
    void PutNumber17 (
        double retval );
    double GetNumber18 ( );
    void PutNumber18 (
        double retval );
    double GetNumber19 ( );
    void PutNumber19 (
        double retval );
    double GetNumber20 ( );
    void PutNumber20 (
        double retval );
    _bstr_t GetText11 ( );
    void PutText11 (
        _bstr_t retval );
    _bstr_t GetText12 ( );
    void PutText12 (
        _bstr_t retval );
    _bstr_t GetText13 ( );
    void PutText13 (
        _bstr_t retval );
    _bstr_t GetText14 ( );
    void PutText14 (
        _bstr_t retval );
    _bstr_t GetText15 ( );
    void PutText15 (
        _bstr_t retval );
    _bstr_t GetText16 ( );
    void PutText16 (
        _bstr_t retval );
    _bstr_t GetText17 ( );
    void PutText17 (
        _bstr_t retval );
    _bstr_t GetText18 ( );
    void PutText18 (
        _bstr_t retval );
    _bstr_t GetText19 ( );
    void PutText19 (
        _bstr_t retval );
    _bstr_t GetText20 ( );
    void PutText20 (
        _bstr_t retval );
    _bstr_t GetText21 ( );
    void PutText21 (
        _bstr_t retval );
    _bstr_t GetText22 ( );
    void PutText22 (
        _bstr_t retval );
    _bstr_t GetText23 ( );
    void PutText23 (
        _bstr_t retval );
    _bstr_t GetText24 ( );
    void PutText24 (
        _bstr_t retval );
    _bstr_t GetText25 ( );
    void PutText25 (
        _bstr_t retval );
    _bstr_t GetText26 ( );
    void PutText26 (
        _bstr_t retval );
    _bstr_t GetText27 ( );
    void PutText27 (
        _bstr_t retval );
    _bstr_t GetText28 ( );
    void PutText28 (
        _bstr_t retval );
    _bstr_t GetText29 ( );
    void PutText29 (
        _bstr_t retval );
    _bstr_t GetText30 ( );
    void PutText30 (
        _bstr_t retval );
    _bstr_t GetResourcePhonetics ( );
    HRESULT LinkPredecessors (
        IDispatch * Tasks,
        enum PjTaskLinkType Link,
        const _variant_t & Lag = vtMissing );
    HRESULT LinkSuccessors (
        IDispatch * Tasks,
        enum PjTaskLinkType Link,
        const _variant_t & Lag = vtMissing );
    HRESULT UnlinkPredecessors (
        IDispatch * Tasks );
    HRESULT UnlinkSuccessors (
        IDispatch * Tasks );
    HRESULT OutlineIndent ( );
    HRESULT OutlineOutdent ( );
    HRESULT OutlineHideSubTasks ( );
    HRESULT OutlineShowSubTasks ( );
    HRESULT OutlineShowAllTasks ( );
    long GetIndex ( );
    _variant_t GetPreleveledStart ( );
    _variant_t GetPreleveledFinish ( );
    HRESULT Split (
        const _variant_t & StartSplitOn,
        const _variant_t & EndSplitOn );
    _bstr_t GetPredecessors ( );
    void PutPredecessors (
        _bstr_t retval );
    _bstr_t GetSuccessors ( );
    void PutSuccessors (
        _bstr_t retval );
    _bstr_t GetResourceNames ( );
    void PutResourceNames (
        _bstr_t retval );
    _bstr_t GetResourceInitials ( );
    void PutResourceInitials (
        _bstr_t retval );
    void PutOutlineLevel (
        _bstr_t retval );
    _variant_t GetEstimated ( );
    void PutEstimated (
        const _variant_t & retval );
    _variant_t GetIgnoreResourceCalendar ( );
    void PutIgnoreResourceCalendar (
        const _variant_t & retval );
    _bstr_t GetCalendar ( );
    void PutCalendar (
        _bstr_t retval );
    _variant_t GetDuration1Estimated ( );
    void PutDuration1Estimated (
        const _variant_t & retval );
    _variant_t GetDuration2Estimated ( );
    void PutDuration2Estimated (
        const _variant_t & retval );
    _variant_t GetDuration3Estimated ( );
    void PutDuration3Estimated (
        const _variant_t & retval );
    _variant_t GetDuration4Estimated ( );
    void PutDuration4Estimated (
        const _variant_t & retval );
    _variant_t GetDuration5Estimated ( );
    void PutDuration5Estimated (
        const _variant_t & retval );
    _variant_t GetDuration6Estimated ( );
    void PutDuration6Estimated (
        const _variant_t & retval );
    _variant_t GetDuration7Estimated ( );
    void PutDuration7Estimated (
        const _variant_t & retval );
    _variant_t GetDuration8Estimated ( );
    void PutDuration8Estimated (
        const _variant_t & retval );
    _variant_t GetDuration9Estimated ( );
    void PutDuration9Estimated (
        const _variant_t & retval );
    _variant_t GetDuration10Estimated ( );
    void PutDuration10Estimated (
        const _variant_t & retval );
    _variant_t GetBaselineDurationEstimated ( );
    void PutBaselineDurationEstimated (
        const _variant_t & retval );
    _bstr_t GetOutlineCode1 ( );
    void PutOutlineCode1 (
        _bstr_t retval );
    _bstr_t GetOutlineCode2 ( );
    void PutOutlineCode2 (
        _bstr_t retval );
    _bstr_t GetOutlineCode3 ( );
    void PutOutlineCode3 (
        _bstr_t retval );
    _bstr_t GetOutlineCode4 ( );
    void PutOutlineCode4 (
        _bstr_t retval );
    _bstr_t GetOutlineCode5 ( );
    void PutOutlineCode5 (
        _bstr_t retval );
    _bstr_t GetOutlineCode6 ( );
    void PutOutlineCode6 (
        _bstr_t retval );
    _bstr_t GetOutlineCode7 ( );
    void PutOutlineCode7 (
        _bstr_t retval );
    _bstr_t GetOutlineCode8 ( );
    void PutOutlineCode8 (
        _bstr_t retval );
    _bstr_t GetOutlineCode9 ( );
    void PutOutlineCode9 (
        _bstr_t retval );
    _bstr_t GetOutlineCode10 ( );
    void PutOutlineCode10 (
        _bstr_t retval );
    _variant_t GetDeadline ( );
    void PutDeadline (
        const _variant_t & retval );
    _variant_t GetStartSlack ( );
    _variant_t GetFinishSlack ( );
    _variant_t GetVAC ( );
    TaskDependenciesPtr GetTaskDependencies ( );
    _variant_t GetGroupBySummary ( );
    _bstr_t GetWBSPredecessors ( );
    _bstr_t GetWBSSuccessors ( );
    _bstr_t GetHyperlinkScreenTip ( );
    void PutHyperlinkScreenTip (
        _bstr_t retval );
    _variant_t GetBaseline1Start ( );
    void PutBaseline1Start (
        const _variant_t & retval );
    _variant_t GetBaseline1Finish ( );
    void PutBaseline1Finish (
        const _variant_t & retval );
    _variant_t GetBaseline1Cost ( );
    void PutBaseline1Cost (
        const _variant_t & retval );
    _variant_t GetBaseline1Work ( );
    void PutBaseline1Work (
        const _variant_t & retval );
    _variant_t GetBaseline1Duration ( );
    void PutBaseline1Duration (
        const _variant_t & retval );
    _variant_t GetBaseline2Start ( );
    void PutBaseline2Start (
        const _variant_t & retval );
    _variant_t GetBaseline2Finish ( );
    void PutBaseline2Finish (
        const _variant_t & retval );
    _variant_t GetBaseline2Cost ( );
    void PutBaseline2Cost (
        const _variant_t & retval );
    _variant_t GetBaseline2Work ( );
    void PutBaseline2Work (
        const _variant_t & retval );
    _variant_t GetBaseline2Duration ( );
    void PutBaseline2Duration (
        const _variant_t & retval );
    _variant_t GetBaseline3Start ( );
    void PutBaseline3Start (
        const _variant_t & retval );
    _variant_t GetBaseline3Finish ( );
    void PutBaseline3Finish (
        const _variant_t & retval );
    _variant_t GetBaseline3Cost ( );
    void PutBaseline3Cost (
        const _variant_t & retval );
    _variant_t GetBaseline3Work ( );
    void PutBaseline3Work (
        const _variant_t & retval );
    _variant_t GetBaseline3Duration ( );
    void PutBaseline3Duration (
        const _variant_t & retval );
    _variant_t GetBaseline4Start ( );
    void PutBaseline4Start (
        const _variant_t & retval );
    _variant_t GetBaseline4Finish ( );
    void PutBaseline4Finish (
        const _variant_t & retval );
    _variant_t GetBaseline4Cost ( );
    void PutBaseline4Cost (
        const _variant_t & retval );
    _variant_t GetBaseline4Work ( );
    void PutBaseline4Work (
        const _variant_t & retval );
    _variant_t GetBaseline4Duration ( );
    void PutBaseline4Duration (
        const _variant_t & retval );
    _variant_t GetBaseline5Start ( );
    void PutBaseline5Start (
        const _variant_t & retval );
    _variant_t GetBaseline5Finish ( );
    void PutBaseline5Finish (
        const _variant_t & retval );
    _variant_t GetBaseline5Cost ( );
    void PutBaseline5Cost (
        const _variant_t & retval );
    _variant_t GetBaseline5Work ( );
    void PutBaseline5Work (
        const _variant_t & retval );
    _variant_t GetBaseline5Duration ( );
    void PutBaseline5Duration (
        const _variant_t & retval );
    double GetCPI ( );
    double GetSPI ( );
    _variant_t GetCVPercent ( );
    _variant_t GetSVPercent ( );
    _variant_t GetEAC ( );
    double GetTCPI ( );
    enum PjStatusType GetStatus ( );
    _variant_t GetBaseline6Start ( );
    void PutBaseline6Start (
        const _variant_t & retval );
    _variant_t GetBaseline6Finish ( );
    void PutBaseline6Finish (
        const _variant_t & retval );
    _variant_t GetBaseline6Cost ( );
    void PutBaseline6Cost (
        const _variant_t & retval );
    _variant_t GetBaseline6Work ( );
    void PutBaseline6Work (
        const _variant_t & retval );
    _variant_t GetBaseline6Duration ( );
    void PutBaseline6Duration (
        const _variant_t & retval );
    _variant_t GetBaseline7Start ( );
    void PutBaseline7Start (
        const _variant_t & retval );
    _variant_t GetBaseline7Finish ( );
    void PutBaseline7Finish (
        const _variant_t & retval );
    _variant_t GetBaseline7Cost ( );
    void PutBaseline7Cost (
        const _variant_t & retval );
    _variant_t GetBaseline7Work ( );
    void PutBaseline7Work (
        const _variant_t & retval );
    _variant_t GetBaseline7Duration ( );
    void PutBaseline7Duration (
        const _variant_t & retval );
    _variant_t GetBaseline8Start ( );
    void PutBaseline8Start (
        const _variant_t & retval );
    _variant_t GetBaseline8Finish ( );
    void PutBaseline8Finish (
        const _variant_t & retval );
    _variant_t GetBaseline8Cost ( );
    void PutBaseline8Cost (
        const _variant_t & retval );
    _variant_t GetBaseline8Work ( );
    void PutBaseline8Work (
        const _variant_t & retval );
    _variant_t GetBaseline8Duration ( );
    void PutBaseline8Duration (
        const _variant_t & retval );
    _variant_t GetBaseline9Start ( );
    void PutBaseline9Start (
        const _variant_t & retval );
    _variant_t GetBaseline9Finish ( );
    void PutBaseline9Finish (
        const _variant_t & retval );
    _variant_t GetBaseline9Cost ( );
    void PutBaseline9Cost (
        const _variant_t & retval );
    _variant_t GetBaseline9Work ( );
    void PutBaseline9Work (
        const _variant_t & retval );
    _variant_t GetBaseline9Duration ( );
    void PutBaseline9Duration (
        const _variant_t & retval );
    _variant_t GetBaseline10Start ( );
    void PutBaseline10Start (
        const _variant_t & retval );
    _variant_t GetBaseline10Finish ( );
    void PutBaseline10Finish (
        const _variant_t & retval );
    _variant_t GetBaseline10Cost ( );
    void PutBaseline10Cost (
        const _variant_t & retval );
    _variant_t GetBaseline10Work ( );
    void PutBaseline10Work (
        const _variant_t & retval );
    _variant_t GetBaseline10Duration ( );
    void PutBaseline10Duration (
        const _variant_t & retval );
    _variant_t GetEnterpriseCost1 ( );
    void PutEnterpriseCost1 (
        const _variant_t & retval );
    _variant_t GetEnterpriseCost2 ( );
    void PutEnterpriseCost2 (
        const _variant_t & retval );
    _variant_t GetEnterpriseCost3 ( );
    void PutEnterpriseCost3 (
        const _variant_t & retval );
    _variant_t GetEnterpriseCost4 ( );
    void PutEnterpriseCost4 (
        const _variant_t & retval );
    _variant_t GetEnterpriseCost5 ( );
    void PutEnterpriseCost5 (
        const _variant_t & retval );
    _variant_t GetEnterpriseCost6 ( );
    void PutEnterpriseCost6 (
        const _variant_t & retval );
    _variant_t GetEnterpriseCost7 ( );
    void PutEnterpriseCost7 (
        const _variant_t & retval );
    _variant_t GetEnterpriseCost8 ( );
    void PutEnterpriseCost8 (
        const _variant_t & retval );
    _variant_t GetEnterpriseCost9 ( );
    void PutEnterpriseCost9 (
        const _variant_t & retval );
    _variant_t GetEnterpriseCost10 ( );
    void PutEnterpriseCost10 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDate1 ( );
    void PutEnterpriseDate1 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDate2 ( );
    void PutEnterpriseDate2 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDate3 ( );
    void PutEnterpriseDate3 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDate4 ( );
    void PutEnterpriseDate4 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDate5 ( );
    void PutEnterpriseDate5 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDate6 ( );
    void PutEnterpriseDate6 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDate7 ( );
    void PutEnterpriseDate7 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDate8 ( );
    void PutEnterpriseDate8 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDate9 ( );
    void PutEnterpriseDate9 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDate10 ( );
    void PutEnterpriseDate10 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDate11 ( );
    void PutEnterpriseDate11 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDate12 ( );
    void PutEnterpriseDate12 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDate13 ( );
    void PutEnterpriseDate13 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDate14 ( );
    void PutEnterpriseDate14 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDate15 ( );
    void PutEnterpriseDate15 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDate16 ( );
    void PutEnterpriseDate16 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDate17 ( );
    void PutEnterpriseDate17 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDate18 ( );
    void PutEnterpriseDate18 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDate19 ( );
    void PutEnterpriseDate19 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDate20 ( );
    void PutEnterpriseDate20 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDate21 ( );
    void PutEnterpriseDate21 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDate22 ( );
    void PutEnterpriseDate22 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDate23 ( );
    void PutEnterpriseDate23 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDate24 ( );
    void PutEnterpriseDate24 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDate25 ( );
    void PutEnterpriseDate25 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDate26 ( );
    void PutEnterpriseDate26 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDate27 ( );
    void PutEnterpriseDate27 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDate28 ( );
    void PutEnterpriseDate28 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDate29 ( );
    void PutEnterpriseDate29 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDate30 ( );
    void PutEnterpriseDate30 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDuration1 ( );
    void PutEnterpriseDuration1 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDuration2 ( );
    void PutEnterpriseDuration2 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDuration3 ( );
    void PutEnterpriseDuration3 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDuration4 ( );
    void PutEnterpriseDuration4 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDuration5 ( );
    void PutEnterpriseDuration5 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDuration6 ( );
    void PutEnterpriseDuration6 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDuration7 ( );
    void PutEnterpriseDuration7 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDuration8 ( );
    void PutEnterpriseDuration8 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDuration9 ( );
    void PutEnterpriseDuration9 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDuration10 ( );
    void PutEnterpriseDuration10 (
        const _variant_t & retval );
    _variant_t GetEnterpriseFlag1 ( );
    void PutEnterpriseFlag1 (
        const _variant_t & retval );
    _variant_t GetEnterpriseFlag2 ( );
    void PutEnterpriseFlag2 (
        const _variant_t & retval );
    _variant_t GetEnterpriseFlag3 ( );
    void PutEnterpriseFlag3 (
        const _variant_t & retval );
    _variant_t GetEnterpriseFlag4 ( );
    void PutEnterpriseFlag4 (
        const _variant_t & retval );
    _variant_t GetEnterpriseFlag5 ( );
    void PutEnterpriseFlag5 (
        const _variant_t & retval );
    _variant_t GetEnterpriseFlag6 ( );
    void PutEnterpriseFlag6 (
        const _variant_t & retval );
    _variant_t GetEnterpriseFlag7 ( );
    void PutEnterpriseFlag7 (
        const _variant_t & retval );
    _variant_t GetEnterpriseFlag8 ( );
    void PutEnterpriseFlag8 (
        const _variant_t & retval );
    _variant_t GetEnterpriseFlag9 ( );
    void PutEnterpriseFlag9 (
        const _variant_t & retval );
    _variant_t GetEnterpriseFlag10 ( );
    void PutEnterpriseFlag10 (
        const _variant_t & retval );
    _variant_t GetEnterpriseFlag11 ( );
    void PutEnterpriseFlag11 (
        const _variant_t & retval );
    _variant_t GetEnterpriseFlag12 ( );
    void PutEnterpriseFlag12 (
        const _variant_t & retval );
    _variant_t GetEnterpriseFlag13 ( );
    void PutEnterpriseFlag13 (
        const _variant_t & retval );
    _variant_t GetEnterpriseFlag14 ( );
    void PutEnterpriseFlag14 (
        const _variant_t & retval );
    _variant_t GetEnterpriseFlag15 ( );
    void PutEnterpriseFlag15 (
        const _variant_t & retval );
    _variant_t GetEnterpriseFlag16 ( );
    void PutEnterpriseFlag16 (
        const _variant_t & retval );
    _variant_t GetEnterpriseFlag17 ( );
    void PutEnterpriseFlag17 (
        const _variant_t & retval );
    _variant_t GetEnterpriseFlag18 ( );
    void PutEnterpriseFlag18 (
        const _variant_t & retval );
    _variant_t GetEnterpriseFlag19 ( );
    void PutEnterpriseFlag19 (
        const _variant_t & retval );
    _variant_t GetEnterpriseFlag20 ( );
    void PutEnterpriseFlag20 (
        const _variant_t & retval );
    double GetEnterpriseNumber1 ( );
    void PutEnterpriseNumber1 (
        double retval );
    double GetEnterpriseNumber2 ( );
    void PutEnterpriseNumber2 (
        double retval );
    double GetEnterpriseNumber3 ( );
    void PutEnterpriseNumber3 (
        double retval );
    double GetEnterpriseNumber4 ( );
    void PutEnterpriseNumber4 (
        double retval );
    double GetEnterpriseNumber5 ( );
    void PutEnterpriseNumber5 (
        double retval );
    double GetEnterpriseNumber6 ( );
    void PutEnterpriseNumber6 (
        double retval );
    double GetEnterpriseNumber7 ( );
    void PutEnterpriseNumber7 (
        double retval );
    double GetEnterpriseNumber8 ( );
    void PutEnterpriseNumber8 (
        double retval );
    double GetEnterpriseNumber9 ( );
    void PutEnterpriseNumber9 (
        double retval );
    double GetEnterpriseNumber10 ( );
    void PutEnterpriseNumber10 (
        double retval );
    double GetEnterpriseNumber11 ( );
    void PutEnterpriseNumber11 (
        double retval );
    double GetEnterpriseNumber12 ( );
    void PutEnterpriseNumber12 (
        double retval );
    double GetEnterpriseNumber13 ( );
    void PutEnterpriseNumber13 (
        double retval );
    double GetEnterpriseNumber14 ( );
    void PutEnterpriseNumber14 (
        double retval );
    double GetEnterpriseNumber15 ( );
    void PutEnterpriseNumber15 (
        double retval );
    double GetEnterpriseNumber16 ( );
    void PutEnterpriseNumber16 (
        double retval );
    double GetEnterpriseNumber17 ( );
    void PutEnterpriseNumber17 (
        double retval );
    double GetEnterpriseNumber18 ( );
    void PutEnterpriseNumber18 (
        double retval );
    double GetEnterpriseNumber19 ( );
    void PutEnterpriseNumber19 (
        double retval );
    double GetEnterpriseNumber20 ( );
    void PutEnterpriseNumber20 (
        double retval );
    double GetEnterpriseNumber21 ( );
    void PutEnterpriseNumber21 (
        double retval );
    double GetEnterpriseNumber22 ( );
    void PutEnterpriseNumber22 (
        double retval );
    double GetEnterpriseNumber23 ( );
    void PutEnterpriseNumber23 (
        double retval );
    double GetEnterpriseNumber24 ( );
    void PutEnterpriseNumber24 (
        double retval );
    double GetEnterpriseNumber25 ( );
    void PutEnterpriseNumber25 (
        double retval );
    double GetEnterpriseNumber26 ( );
    void PutEnterpriseNumber26 (
        double retval );
    double GetEnterpriseNumber27 ( );
    void PutEnterpriseNumber27 (
        double retval );
    double GetEnterpriseNumber28 ( );
    void PutEnterpriseNumber28 (
        double retval );
    double GetEnterpriseNumber29 ( );
    void PutEnterpriseNumber29 (
        double retval );
    double GetEnterpriseNumber30 ( );
    void PutEnterpriseNumber30 (
        double retval );
    double GetEnterpriseNumber31 ( );
    void PutEnterpriseNumber31 (
        double retval );
    double GetEnterpriseNumber32 ( );
    void PutEnterpriseNumber32 (
        double retval );
    double GetEnterpriseNumber33 ( );
    void PutEnterpriseNumber33 (
        double retval );
    double GetEnterpriseNumber34 ( );
    void PutEnterpriseNumber34 (
        double retval );
    double GetEnterpriseNumber35 ( );
    void PutEnterpriseNumber35 (
        double retval );
    double GetEnterpriseNumber36 ( );
    void PutEnterpriseNumber36 (
        double retval );
    double GetEnterpriseNumber37 ( );
    void PutEnterpriseNumber37 (
        double retval );
    double GetEnterpriseNumber38 ( );
    void PutEnterpriseNumber38 (
        double retval );
    double GetEnterpriseNumber39 ( );
    void PutEnterpriseNumber39 (
        double retval );
    double GetEnterpriseNumber40 ( );
    void PutEnterpriseNumber40 (
        double retval );
    _bstr_t GetEnterpriseOutlineCode1 ( );
    void PutEnterpriseOutlineCode1 (
        _bstr_t retval );
    _bstr_t GetEnterpriseOutlineCode2 ( );
    void PutEnterpriseOutlineCode2 (
        _bstr_t retval );
    _bstr_t GetEnterpriseOutlineCode3 ( );
    void PutEnterpriseOutlineCode3 (
        _bstr_t retval );
    _bstr_t GetEnterpriseOutlineCode4 ( );
    void PutEnterpriseOutlineCode4 (
        _bstr_t retval );
    _bstr_t GetEnterpriseOutlineCode5 ( );
    void PutEnterpriseOutlineCode5 (
        _bstr_t retval );
    _bstr_t GetEnterpriseOutlineCode6 ( );
    void PutEnterpriseOutlineCode6 (
        _bstr_t retval );
    _bstr_t GetEnterpriseOutlineCode7 ( );
    void PutEnterpriseOutlineCode7 (
        _bstr_t retval );
    _bstr_t GetEnterpriseOutlineCode8 ( );
    void PutEnterpriseOutlineCode8 (
        _bstr_t retval );
    _bstr_t GetEnterpriseOutlineCode9 ( );
    void PutEnterpriseOutlineCode9 (
        _bstr_t retval );
    _bstr_t GetEnterpriseOutlineCode10 ( );
    void PutEnterpriseOutlineCode10 (
        _bstr_t retval );
    _bstr_t GetEnterpriseOutlineCode11 ( );
    void PutEnterpriseOutlineCode11 (
        _bstr_t retval );
    _bstr_t GetEnterpriseOutlineCode12 ( );
    void PutEnterpriseOutlineCode12 (
        _bstr_t retval );
    _bstr_t GetEnterpriseOutlineCode13 ( );
    void PutEnterpriseOutlineCode13 (
        _bstr_t retval );
    _bstr_t GetEnterpriseOutlineCode14 ( );
    void PutEnterpriseOutlineCode14 (
        _bstr_t retval );
    _bstr_t GetEnterpriseOutlineCode15 ( );
    void PutEnterpriseOutlineCode15 (
        _bstr_t retval );
    _bstr_t GetEnterpriseOutlineCode16 ( );
    void PutEnterpriseOutlineCode16 (
        _bstr_t retval );
    _bstr_t GetEnterpriseOutlineCode17 ( );
    void PutEnterpriseOutlineCode17 (
        _bstr_t retval );
    _bstr_t GetEnterpriseOutlineCode18 ( );
    void PutEnterpriseOutlineCode18 (
        _bstr_t retval );
    _bstr_t GetEnterpriseOutlineCode19 ( );
    void PutEnterpriseOutlineCode19 (
        _bstr_t retval );
    _bstr_t GetEnterpriseOutlineCode20 ( );
    void PutEnterpriseOutlineCode20 (
        _bstr_t retval );
    _bstr_t GetEnterpriseOutlineCode21 ( );
    void PutEnterpriseOutlineCode21 (
        _bstr_t retval );
    _bstr_t GetEnterpriseOutlineCode22 ( );
    void PutEnterpriseOutlineCode22 (
        _bstr_t retval );
    _bstr_t GetEnterpriseOutlineCode23 ( );
    void PutEnterpriseOutlineCode23 (
        _bstr_t retval );
    _bstr_t GetEnterpriseOutlineCode24 ( );
    void PutEnterpriseOutlineCode24 (
        _bstr_t retval );
    _bstr_t GetEnterpriseOutlineCode25 ( );
    void PutEnterpriseOutlineCode25 (
        _bstr_t retval );
    _bstr_t GetEnterpriseOutlineCode26 ( );
    void PutEnterpriseOutlineCode26 (
        _bstr_t retval );
    _bstr_t GetEnterpriseOutlineCode27 ( );
    void PutEnterpriseOutlineCode27 (
        _bstr_t retval );
    _bstr_t GetEnterpriseOutlineCode28 ( );
    void PutEnterpriseOutlineCode28 (
        _bstr_t retval );
    _bstr_t GetEnterpriseOutlineCode29 ( );
    void PutEnterpriseOutlineCode29 (
        _bstr_t retval );
    _bstr_t GetEnterpriseOutlineCode30 ( );
    void PutEnterpriseOutlineCode30 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText1 ( );
    void PutEnterpriseText1 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText2 ( );
    void PutEnterpriseText2 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText3 ( );
    void PutEnterpriseText3 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText4 ( );
    void PutEnterpriseText4 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText5 ( );
    void PutEnterpriseText5 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText6 ( );
    void PutEnterpriseText6 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText7 ( );
    void PutEnterpriseText7 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText8 ( );
    void PutEnterpriseText8 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText9 ( );
    void PutEnterpriseText9 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText10 ( );
    void PutEnterpriseText10 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText11 ( );
    void PutEnterpriseText11 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText12 ( );
    void PutEnterpriseText12 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText13 ( );
    void PutEnterpriseText13 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText14 ( );
    void PutEnterpriseText14 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText15 ( );
    void PutEnterpriseText15 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText16 ( );
    void PutEnterpriseText16 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText17 ( );
    void PutEnterpriseText17 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText18 ( );
    void PutEnterpriseText18 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText19 ( );
    void PutEnterpriseText19 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText20 ( );
    void PutEnterpriseText20 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText21 ( );
    void PutEnterpriseText21 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText22 ( );
    void PutEnterpriseText22 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText23 ( );
    void PutEnterpriseText23 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText24 ( );
    void PutEnterpriseText24 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText25 ( );
    void PutEnterpriseText25 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText26 ( );
    void PutEnterpriseText26 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText27 ( );
    void PutEnterpriseText27 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText28 ( );
    void PutEnterpriseText28 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText29 ( );
    void PutEnterpriseText29 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText30 ( );
    void PutEnterpriseText30 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText31 ( );
    void PutEnterpriseText31 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText32 ( );
    void PutEnterpriseText32 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText33 ( );
    void PutEnterpriseText33 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText34 ( );
    void PutEnterpriseText34 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText35 ( );
    void PutEnterpriseText35 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText36 ( );
    void PutEnterpriseText36 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText37 ( );
    void PutEnterpriseText37 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText38 ( );
    void PutEnterpriseText38 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText39 ( );
    void PutEnterpriseText39 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText40 ( );
    void PutEnterpriseText40 (
        _bstr_t retval );
    _variant_t GetBaseline1DurationEstimated ( );
    void PutBaseline1DurationEstimated (
        const _variant_t & retval );
    _variant_t GetBaseline2DurationEstimated ( );
    void PutBaseline2DurationEstimated (
        const _variant_t & retval );
    _variant_t GetBaseline3DurationEstimated ( );
    void PutBaseline3DurationEstimated (
        const _variant_t & retval );
    _variant_t GetBaseline4DurationEstimated ( );
    void PutBaseline4DurationEstimated (
        const _variant_t & retval );
    _variant_t GetBaseline5DurationEstimated ( );
    void PutBaseline5DurationEstimated (
        const _variant_t & retval );
    _variant_t GetBaseline6DurationEstimated ( );
    void PutBaseline6DurationEstimated (
        const _variant_t & retval );
    _variant_t GetBaseline7DurationEstimated ( );
    void PutBaseline7DurationEstimated (
        const _variant_t & retval );
    _variant_t GetBaseline8DurationEstimated ( );
    void PutBaseline8DurationEstimated (
        const _variant_t & retval );
    _variant_t GetBaseline9DurationEstimated ( );
    void PutBaseline9DurationEstimated (
        const _variant_t & retval );
    _variant_t GetBaseline10DurationEstimated ( );
    void PutBaseline10DurationEstimated (
        const _variant_t & retval );
    _variant_t GetPhysicalPercentComplete ( );
    void PutPhysicalPercentComplete (
        const _variant_t & retval );
    enum PjEarnedValueMethod GetEarnedValueMethod ( );
    void PutEarnedValueMethod (
        enum PjEarnedValueMethod retval );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Work (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Work (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_BaselineWork (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_BaselineWork (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_ActualWork (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_ActualWork (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_WorkVariance (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall get_RemainingWork (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_RemainingWork (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Cost (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Cost (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_BaselineCost (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_BaselineCost (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_ActualCost (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_ActualCost (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_FixedCost (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_FixedCost (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_CostVariance (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall get_RemainingCost (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall get_BCWP (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall get_BCWS (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall get_SV (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall get_Name (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Name (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Notes (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Notes (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_WBS (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_WBS (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_ConstraintType (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_ConstraintType (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_ConstraintDate (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_ConstraintDate (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Critical (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall get_LevelingDelay (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_LevelingDelay (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_FreeSlack (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall get_TotalSlack (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall get_ID (
        long * retval ) = 0;
    virtual HRESULT __stdcall get_Milestone (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Milestone (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Priority (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Priority (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Subproject (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Subproject (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_BaselineDuration (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_BaselineDuration (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_ActualDuration (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_ActualDuration (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Duration (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Duration (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_DurationVariance (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall get_RemainingDuration (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_RemainingDuration (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_PercentComplete (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_PercentComplete (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_PercentWorkComplete (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_PercentWorkComplete (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_FixedDuration (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_FixedDuration (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Start (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Start (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Finish (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Finish (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EarlyStart (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall get_EarlyFinish (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall get_LateStart (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall get_LateFinish (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall get_ActualStart (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_ActualStart (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_ActualFinish (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_ActualFinish (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_BaselineStart (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_BaselineStart (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_BaselineFinish (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_BaselineFinish (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_StartVariance (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall get_FinishVariance (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall get_Text1 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Text1 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Start1 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Start1 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Finish1 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Finish1 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Text2 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Text2 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Start2 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Start2 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Finish2 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Finish2 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Text3 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Text3 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Start3 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Start3 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Finish3 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Finish3 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Text4 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Text4 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Start4 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Start4 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Finish4 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Finish4 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Text5 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Text5 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Start5 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Start5 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Finish5 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Finish5 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Text6 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Text6 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Text7 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Text7 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Text8 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Text8 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Text9 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Text9 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Text10 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Text10 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Marked (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Marked (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Flag1 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Flag1 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Flag2 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Flag2 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Flag3 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Flag3 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Flag4 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Flag4 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Flag5 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Flag5 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Flag6 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Flag6 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Flag7 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Flag7 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Flag8 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Flag8 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Flag9 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Flag9 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Flag10 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Flag10 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Rollup (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Rollup (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_CV (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall get_Project (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall get_OutlineLevel (
        short * retval ) = 0;
    virtual HRESULT __stdcall get_UniqueID (
        long * retval ) = 0;
    virtual HRESULT __stdcall get_Number1 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_Number1 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_Number2 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_Number2 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_Number3 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_Number3 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_Number4 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_Number4 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_Number5 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_Number5 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_Summary (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall get_Created (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall get_UniqueIDPredecessors (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_UniqueIDPredecessors (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_UniqueIDSuccessors (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_UniqueIDSuccessors (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Objects (
        long * retval ) = 0;
    virtual HRESULT __stdcall get_LinkedFields (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall get_Resume (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Resume (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Stop (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Stop (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_ResumeNoEarlierThan (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_ResumeNoEarlierThan (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_OutlineNumber (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall get_Duration1 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Duration1 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Duration2 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Duration2 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Duration3 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Duration3 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Cost1 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Cost1 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Cost2 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Cost2 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Cost3 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Cost3 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_HideBar (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_HideBar (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Confirmed (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall get_UpdateNeeded (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall get_Contact (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Contact (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_ResourceGroup (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall get_ACWP (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall get_Type (
        enum PjTaskFixedType * retval ) = 0;
    virtual HRESULT __stdcall put_Type (
        enum PjTaskFixedType retval ) = 0;
    virtual HRESULT __stdcall get_Recurring (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall get_EffortDriven (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EffortDriven (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_OutlineChildren (
        struct Tasks * * retval ) = 0;
    virtual HRESULT __stdcall get_PredecessorTasks (
        struct Tasks * * retval ) = 0;
    virtual HRESULT __stdcall get_SuccessorTasks (
        struct Tasks * * retval ) = 0;
    virtual HRESULT __stdcall get_OvertimeWork (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall get_ActualOvertimeWork (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall get_RemainingOvertimeWork (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall get_RegularWork (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall get_OvertimeCost (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall get_ActualOvertimeCost (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall get_RemainingOvertimeCost (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall get_FixedCostAccrual (
        enum PjAccrueAt * retval ) = 0;
    virtual HRESULT __stdcall put_FixedCostAccrual (
        enum PjAccrueAt retval ) = 0;
    virtual HRESULT __stdcall get_Assignments (
        struct Assignments * * retval ) = 0;
    virtual HRESULT __stdcall get_Parent (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall put_Parent (
        IDispatch * retval ) = 0;
    virtual HRESULT __stdcall get_Application (
        struct _MSProject * * retval ) = 0;
    virtual HRESULT __stdcall get_Hyperlink (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Hyperlink (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_HyperlinkAddress (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_HyperlinkAddress (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_HyperlinkSubAddress (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_HyperlinkSubAddress (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_HyperlinkHREF (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_HyperlinkHREF (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Overallocated (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall get_SplitParts (
        struct SplitParts * * retval ) = 0;
    virtual HRESULT __stdcall raw_GetField (
        enum PjField FieldID,
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall raw_SetField (
        enum PjField FieldID,
        BSTR Value ) = 0;
    virtual HRESULT __stdcall get_ExternalTask (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall raw_Delete ( ) = 0;
    virtual HRESULT __stdcall raw_AppendNotes (
        BSTR Value ) = 0;
    virtual HRESULT __stdcall get_OutlineParent (
        struct Task * * retval ) = 0;
    virtual HRESULT __stdcall get_Resources (
        struct Resources * * retval ) = 0;
    virtual HRESULT __stdcall raw_TimeScaleData (
        VARIANT StartDate,
        VARIANT EndDate,
        enum PjTaskTimescaledData Type,
        enum PjTimescaleUnit TimeScaleUnit,
        long Count,
        struct TimeScaleValues * * retval ) = 0;
    virtual HRESULT __stdcall get_SubProjectReadOnly (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_SubProjectReadOnly (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_ResponsePending (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall get_TeamStatusPending (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall get_LevelingCanSplit (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_LevelingCanSplit (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_LevelIndividualAssignments (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_LevelIndividualAssignments (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Cost4 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Cost4 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Cost5 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Cost5 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Cost6 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Cost6 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Cost7 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Cost7 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Cost8 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Cost8 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Cost9 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Cost9 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Cost10 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Cost10 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Date1 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Date1 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Date2 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Date2 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Date3 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Date3 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Date4 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Date4 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Date5 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Date5 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Date6 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Date6 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Date7 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Date7 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Date8 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Date8 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Date9 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Date9 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Date10 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Date10 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Duration4 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Duration4 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Duration5 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Duration5 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Duration6 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Duration6 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Duration7 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Duration7 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Duration8 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Duration8 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Duration9 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Duration9 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Duration10 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Duration10 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Start6 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Start6 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Finish6 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Finish6 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Start7 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Start7 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Finish7 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Finish7 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Start8 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Start8 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Finish8 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Finish8 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Start9 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Start9 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Finish9 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Finish9 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Start10 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Start10 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Finish10 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Finish10 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Flag11 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Flag11 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Flag12 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Flag12 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Flag13 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Flag13 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Flag14 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Flag14 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Flag15 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Flag15 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Flag16 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Flag16 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Flag17 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Flag17 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Flag18 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Flag18 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Flag19 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Flag19 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Flag20 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Flag20 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Number6 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_Number6 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_Number7 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_Number7 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_Number8 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_Number8 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_Number9 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_Number9 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_Number10 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_Number10 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_Number11 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_Number11 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_Number12 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_Number12 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_Number13 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_Number13 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_Number14 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_Number14 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_Number15 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_Number15 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_Number16 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_Number16 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_Number17 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_Number17 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_Number18 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_Number18 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_Number19 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_Number19 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_Number20 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_Number20 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_Text11 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Text11 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Text12 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Text12 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Text13 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Text13 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Text14 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Text14 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Text15 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Text15 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Text16 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Text16 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Text17 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Text17 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Text18 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Text18 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Text19 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Text19 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Text20 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Text20 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Text21 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Text21 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Text22 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Text22 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Text23 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Text23 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Text24 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Text24 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Text25 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Text25 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Text26 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Text26 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Text27 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Text27 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Text28 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Text28 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Text29 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Text29 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Text30 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Text30 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_ResourcePhonetics (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall raw_LinkPredecessors (
        IDispatch * Tasks,
        enum PjTaskLinkType Link,
        VARIANT Lag = vtMissing ) = 0;
    virtual HRESULT __stdcall raw_LinkSuccessors (
        IDispatch * Tasks,
        enum PjTaskLinkType Link,
        VARIANT Lag = vtMissing ) = 0;
    virtual HRESULT __stdcall raw_UnlinkPredecessors (
        IDispatch * Tasks ) = 0;
    virtual HRESULT __stdcall raw_UnlinkSuccessors (
        IDispatch * Tasks ) = 0;
    virtual HRESULT __stdcall raw_OutlineIndent ( ) = 0;
    virtual HRESULT __stdcall raw_OutlineOutdent ( ) = 0;
    virtual HRESULT __stdcall raw_OutlineHideSubTasks ( ) = 0;
    virtual HRESULT __stdcall raw_OutlineShowSubTasks ( ) = 0;
    virtual HRESULT __stdcall raw_OutlineShowAllTasks ( ) = 0;
    virtual HRESULT __stdcall get_Index (
        long * retval ) = 0;
    virtual HRESULT __stdcall get_PreleveledStart (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall get_PreleveledFinish (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall raw_Split (
        VARIANT StartSplitOn,
        VARIANT EndSplitOn ) = 0;
    virtual HRESULT __stdcall get_Predecessors (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Predecessors (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Successors (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Successors (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_ResourceNames (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_ResourceNames (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_ResourceInitials (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_ResourceInitials (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall put_OutlineLevel (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Estimated (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Estimated (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_IgnoreResourceCalendar (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_IgnoreResourceCalendar (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Calendar (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Calendar (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Duration1Estimated (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Duration1Estimated (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Duration2Estimated (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Duration2Estimated (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Duration3Estimated (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Duration3Estimated (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Duration4Estimated (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Duration4Estimated (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Duration5Estimated (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Duration5Estimated (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Duration6Estimated (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Duration6Estimated (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Duration7Estimated (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Duration7Estimated (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Duration8Estimated (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Duration8Estimated (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Duration9Estimated (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Duration9Estimated (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Duration10Estimated (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Duration10Estimated (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_BaselineDurationEstimated (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_BaselineDurationEstimated (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_OutlineCode1 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_OutlineCode1 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_OutlineCode2 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_OutlineCode2 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_OutlineCode3 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_OutlineCode3 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_OutlineCode4 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_OutlineCode4 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_OutlineCode5 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_OutlineCode5 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_OutlineCode6 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_OutlineCode6 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_OutlineCode7 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_OutlineCode7 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_OutlineCode8 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_OutlineCode8 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_OutlineCode9 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_OutlineCode9 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_OutlineCode10 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_OutlineCode10 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Deadline (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Deadline (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_StartSlack (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall get_FinishSlack (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall get_VAC (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall get_TaskDependencies (
        struct TaskDependencies * * retval ) = 0;
    virtual HRESULT __stdcall get_GroupBySummary (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall get_WBSPredecessors (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall get_WBSSuccessors (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall get_HyperlinkScreenTip (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_HyperlinkScreenTip (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Baseline1Start (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline1Start (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline1Finish (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline1Finish (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline1Cost (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline1Cost (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline1Work (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline1Work (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline1Duration (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline1Duration (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline2Start (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline2Start (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline2Finish (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline2Finish (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline2Cost (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline2Cost (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline2Work (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline2Work (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline2Duration (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline2Duration (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline3Start (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline3Start (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline3Finish (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline3Finish (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline3Cost (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline3Cost (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline3Work (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline3Work (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline3Duration (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline3Duration (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline4Start (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline4Start (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline4Finish (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline4Finish (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline4Cost (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline4Cost (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline4Work (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline4Work (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline4Duration (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline4Duration (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline5Start (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline5Start (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline5Finish (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline5Finish (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline5Cost (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline5Cost (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline5Work (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline5Work (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline5Duration (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline5Duration (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_CPI (
        double * retval ) = 0;
    virtual HRESULT __stdcall get_SPI (
        double * retval ) = 0;
    virtual HRESULT __stdcall get_CVPercent (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall get_SVPercent (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall get_EAC (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall get_TCPI (
        double * retval ) = 0;
    virtual HRESULT __stdcall get_Status (
        enum PjStatusType * retval ) = 0;
    virtual HRESULT __stdcall get_Baseline6Start (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline6Start (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline6Finish (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline6Finish (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline6Cost (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline6Cost (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline6Work (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline6Work (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline6Duration (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline6Duration (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline7Start (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline7Start (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline7Finish (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline7Finish (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline7Cost (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline7Cost (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline7Work (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline7Work (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline7Duration (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline7Duration (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline8Start (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline8Start (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline8Finish (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline8Finish (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline8Cost (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline8Cost (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline8Work (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline8Work (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline8Duration (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline8Duration (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline9Start (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline9Start (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline9Finish (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline9Finish (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline9Cost (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline9Cost (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline9Work (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline9Work (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline9Duration (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline9Duration (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline10Start (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline10Start (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline10Finish (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline10Finish (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline10Cost (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline10Cost (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline10Work (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline10Work (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline10Duration (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline10Duration (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseCost1 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseCost1 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseCost2 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseCost2 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseCost3 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseCost3 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseCost4 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseCost4 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseCost5 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseCost5 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseCost6 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseCost6 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseCost7 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseCost7 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseCost8 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseCost8 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseCost9 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseCost9 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseCost10 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseCost10 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDate1 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDate1 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDate2 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDate2 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDate3 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDate3 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDate4 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDate4 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDate5 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDate5 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDate6 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDate6 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDate7 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDate7 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDate8 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDate8 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDate9 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDate9 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDate10 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDate10 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDate11 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDate11 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDate12 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDate12 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDate13 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDate13 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDate14 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDate14 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDate15 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDate15 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDate16 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDate16 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDate17 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDate17 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDate18 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDate18 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDate19 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDate19 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDate20 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDate20 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDate21 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDate21 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDate22 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDate22 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDate23 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDate23 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDate24 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDate24 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDate25 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDate25 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDate26 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDate26 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDate27 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDate27 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDate28 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDate28 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDate29 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDate29 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDate30 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDate30 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDuration1 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDuration1 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDuration2 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDuration2 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDuration3 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDuration3 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDuration4 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDuration4 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDuration5 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDuration5 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDuration6 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDuration6 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDuration7 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDuration7 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDuration8 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDuration8 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDuration9 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDuration9 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDuration10 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDuration10 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseFlag1 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseFlag1 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseFlag2 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseFlag2 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseFlag3 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseFlag3 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseFlag4 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseFlag4 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseFlag5 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseFlag5 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseFlag6 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseFlag6 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseFlag7 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseFlag7 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseFlag8 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseFlag8 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseFlag9 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseFlag9 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseFlag10 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseFlag10 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseFlag11 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseFlag11 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseFlag12 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseFlag12 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseFlag13 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseFlag13 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseFlag14 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseFlag14 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseFlag15 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseFlag15 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseFlag16 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseFlag16 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseFlag17 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseFlag17 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseFlag18 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseFlag18 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseFlag19 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseFlag19 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseFlag20 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseFlag20 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber1 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber1 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber2 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber2 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber3 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber3 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber4 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber4 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber5 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber5 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber6 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber6 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber7 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber7 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber8 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber8 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber9 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber9 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber10 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber10 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber11 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber11 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber12 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber12 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber13 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber13 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber14 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber14 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber15 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber15 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber16 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber16 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber17 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber17 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber18 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber18 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber19 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber19 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber20 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber20 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber21 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber21 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber22 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber22 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber23 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber23 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber24 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber24 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber25 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber25 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber26 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber26 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber27 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber27 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber28 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber28 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber29 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber29 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber30 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber30 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber31 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber31 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber32 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber32 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber33 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber33 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber34 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber34 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber35 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber35 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber36 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber36 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber37 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber37 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber38 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber38 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber39 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber39 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber40 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber40 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseOutlineCode1 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseOutlineCode1 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseOutlineCode2 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseOutlineCode2 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseOutlineCode3 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseOutlineCode3 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseOutlineCode4 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseOutlineCode4 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseOutlineCode5 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseOutlineCode5 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseOutlineCode6 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseOutlineCode6 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseOutlineCode7 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseOutlineCode7 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseOutlineCode8 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseOutlineCode8 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseOutlineCode9 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseOutlineCode9 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseOutlineCode10 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseOutlineCode10 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseOutlineCode11 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseOutlineCode11 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseOutlineCode12 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseOutlineCode12 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseOutlineCode13 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseOutlineCode13 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseOutlineCode14 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseOutlineCode14 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseOutlineCode15 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseOutlineCode15 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseOutlineCode16 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseOutlineCode16 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseOutlineCode17 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseOutlineCode17 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseOutlineCode18 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseOutlineCode18 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseOutlineCode19 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseOutlineCode19 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseOutlineCode20 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseOutlineCode20 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseOutlineCode21 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseOutlineCode21 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseOutlineCode22 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseOutlineCode22 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseOutlineCode23 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseOutlineCode23 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseOutlineCode24 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseOutlineCode24 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseOutlineCode25 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseOutlineCode25 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseOutlineCode26 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseOutlineCode26 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseOutlineCode27 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseOutlineCode27 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseOutlineCode28 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseOutlineCode28 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseOutlineCode29 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseOutlineCode29 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseOutlineCode30 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseOutlineCode30 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText1 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText1 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText2 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText2 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText3 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText3 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText4 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText4 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText5 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText5 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText6 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText6 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText7 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText7 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText8 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText8 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText9 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText9 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText10 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText10 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText11 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText11 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText12 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText12 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText13 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText13 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText14 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText14 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText15 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText15 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText16 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText16 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText17 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText17 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText18 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText18 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText19 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText19 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText20 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText20 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText21 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText21 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText22 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText22 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText23 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText23 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText24 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText24 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText25 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText25 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText26 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText26 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText27 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText27 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText28 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText28 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText29 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText29 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText30 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText30 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText31 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText31 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText32 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText32 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText33 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText33 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText34 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText34 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText35 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText35 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText36 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText36 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText37 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText37 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText38 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText38 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText39 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText39 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText40 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText40 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Baseline1DurationEstimated (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline1DurationEstimated (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline2DurationEstimated (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline2DurationEstimated (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline3DurationEstimated (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline3DurationEstimated (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline4DurationEstimated (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline4DurationEstimated (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline5DurationEstimated (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline5DurationEstimated (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline6DurationEstimated (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline6DurationEstimated (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline7DurationEstimated (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline7DurationEstimated (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline8DurationEstimated (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline8DurationEstimated (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline9DurationEstimated (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline9DurationEstimated (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline10DurationEstimated (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline10DurationEstimated (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_PhysicalPercentComplete (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_PhysicalPercentComplete (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EarnedValueMethod (
        enum PjEarnedValueMethod * retval ) = 0;
    virtual HRESULT __stdcall put_EarnedValueMethod (
        enum PjEarnedValueMethod retval ) = 0;
};

struct __declspec(uuid("000c0c41-0000-0000-c000-000000000046"))
Resource : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetID))
    long ID;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetInitials,put=PutInitials))
    _bstr_t Initials;
    __declspec(property(get=GetGroup,put=PutGroup))
    _bstr_t Group;
    __declspec(property(get=GetMaxUnits,put=PutMaxUnits))
    _variant_t MaxUnits;
    __declspec(property(get=GetBaseCalendar,put=PutBaseCalendar))
    _bstr_t BaseCalendar;
    __declspec(property(get=GetStandardRate,put=PutStandardRate))
    _variant_t StandardRate;
    __declspec(property(get=GetOvertimeRate,put=PutOvertimeRate))
    _variant_t OvertimeRate;
    __declspec(property(get=GetText1,put=PutText1))
    _bstr_t Text1;
    __declspec(property(get=GetText2,put=PutText2))
    _bstr_t Text2;
    __declspec(property(get=GetCode,put=PutCode))
    _bstr_t Code;
    __declspec(property(get=GetActualCost))
    _variant_t ActualCost;
    __declspec(property(get=GetCost))
    _variant_t Cost;
    __declspec(property(get=GetWork))
    _variant_t Work;
    __declspec(property(get=GetActualWork))
    _variant_t ActualWork;
    __declspec(property(get=GetBaselineWork,put=PutBaselineWork))
    _variant_t BaselineWork;
    __declspec(property(get=GetOvertimeWork))
    _variant_t OvertimeWork;
    __declspec(property(get=GetBaselineCost,put=PutBaselineCost))
    _variant_t BaselineCost;
    __declspec(property(get=GetCostPerUse,put=PutCostPerUse))
    _variant_t CostPerUse;
    __declspec(property(get=GetAccrueAt,put=PutAccrueAt))
    _variant_t AccrueAt;
    __declspec(property(get=GetNotes,put=PutNotes))
    _bstr_t Notes;
    __declspec(property(get=GetRemainingCost))
    _variant_t RemainingCost;
    __declspec(property(get=GetRemainingWork))
    _variant_t RemainingWork;
    __declspec(property(get=GetWorkVariance))
    _variant_t WorkVariance;
    __declspec(property(get=GetCostVariance))
    _variant_t CostVariance;
    __declspec(property(get=GetOverallocated))
    _variant_t Overallocated;
    __declspec(property(get=GetPeakUnits))
    _variant_t PeakUnits;
    __declspec(property(get=GetUniqueID))
    long UniqueID;
    __declspec(property(get=GetEnterpriseOutlineCode26,put=PutEnterpriseOutlineCode26))
    _bstr_t EnterpriseOutlineCode26;
    __declspec(property(get=GetPercentWorkComplete))
    _variant_t PercentWorkComplete;
    __declspec(property(get=GetText3,put=PutText3))
    _bstr_t Text3;
    __declspec(property(get=GetText4,put=PutText4))
    _bstr_t Text4;
    __declspec(property(get=GetText5,put=PutText5))
    _bstr_t Text5;
    __declspec(property(get=GetObjects))
    long Objects;
    __declspec(property(get=GetLinkedFields))
    _variant_t LinkedFields;
    __declspec(property(get=GetEMailAddress,put=PutEMailAddress))
    _bstr_t EMailAddress;
    __declspec(property(get=GetEnterpriseOutlineCode27,put=PutEnterpriseOutlineCode27))
    _bstr_t EnterpriseOutlineCode27;
    __declspec(property(get=GetEnterpriseOutlineCode28,put=PutEnterpriseOutlineCode28))
    _bstr_t EnterpriseOutlineCode28;
    __declspec(property(get=GetRegularWork))
    _variant_t RegularWork;
    __declspec(property(get=GetActualOvertimeWork))
    _variant_t ActualOvertimeWork;
    __declspec(property(get=GetRemainingOvertimeWork))
    _variant_t RemainingOvertimeWork;
    __declspec(property(get=GetEnterpriseOutlineCode29,put=PutEnterpriseOutlineCode29))
    _bstr_t EnterpriseOutlineCode29;
    __declspec(property(get=GetEnterpriseRBS,put=PutEnterpriseRBS))
    _bstr_t EnterpriseRBS;
    __declspec(property(get=GetEnterpriseText1,put=PutEnterpriseText1))
    _bstr_t EnterpriseText1;
    __declspec(property(get=GetEnterpriseText2,put=PutEnterpriseText2))
    _bstr_t EnterpriseText2;
    __declspec(property(get=GetEnterpriseText3,put=PutEnterpriseText3))
    _bstr_t EnterpriseText3;
    __declspec(property(get=GetEnterpriseText4,put=PutEnterpriseText4))
    _bstr_t EnterpriseText4;
    __declspec(property(get=GetOvertimeCost))
    _variant_t OvertimeCost;
    __declspec(property(get=GetActualOvertimeCost))
    _variant_t ActualOvertimeCost;
    __declspec(property(get=GetRemainingOvertimeCost))
    _variant_t RemainingOvertimeCost;
    __declspec(property(get=GetEnterpriseText5,put=PutEnterpriseText5))
    _bstr_t EnterpriseText5;
    __declspec(property(get=GetBCWS))
    _variant_t BCWS;
    __declspec(property(get=GetBCWP))
    _variant_t BCWP;
    __declspec(property(get=GetACWP))
    _variant_t ACWP;
    __declspec(property(get=GetSV))
    _variant_t SV;
    __declspec(property(get=GetAssignments))
    AssignmentsPtr Assignments;
    __declspec(property(get=GetEnterpriseText6,put=PutEnterpriseText6))
    _bstr_t EnterpriseText6;
    __declspec(property(get=GetAvailableFrom,put=PutAvailableFrom))
    _variant_t AvailableFrom;
    __declspec(property(get=GetAvailableTo,put=PutAvailableTo))
    _variant_t AvailableTo;
    __declspec(property(get=GetEnterpriseText7,put=PutEnterpriseText7))
    _bstr_t EnterpriseText7;
    __declspec(property(get=GetEnterpriseText8,put=PutEnterpriseText8))
    _bstr_t EnterpriseText8;
    __declspec(property(get=GetEnterpriseText9,put=PutEnterpriseText9))
    _bstr_t EnterpriseText9;
    __declspec(property(get=GetEnterpriseText10,put=PutEnterpriseText10))
    _bstr_t EnterpriseText10;
    __declspec(property(get=GetEnterpriseText11,put=PutEnterpriseText11))
    _bstr_t EnterpriseText11;
    __declspec(property(get=GetEnterpriseText12,put=PutEnterpriseText12))
    _bstr_t EnterpriseText12;
    __declspec(property(get=GetEnterpriseText13,put=PutEnterpriseText13))
    _bstr_t EnterpriseText13;
    __declspec(property(get=GetEnterpriseText14,put=PutEnterpriseText14))
    _bstr_t EnterpriseText14;
    __declspec(property(get=GetEnterpriseText15,put=PutEnterpriseText15))
    _bstr_t EnterpriseText15;
    __declspec(property(get=GetEnterpriseText16,put=PutEnterpriseText16))
    _bstr_t EnterpriseText16;
    __declspec(property(get=GetEnterpriseText17,put=PutEnterpriseText17))
    _bstr_t EnterpriseText17;
    __declspec(property(get=GetEnterpriseText18,put=PutEnterpriseText18))
    _bstr_t EnterpriseText18;
    __declspec(property(get=GetEnterpriseText19,put=PutEnterpriseText19))
    _bstr_t EnterpriseText19;
    __declspec(property(get=GetEnterpriseText20,put=PutEnterpriseText20))
    _bstr_t EnterpriseText20;
    __declspec(property(get=GetEnterpriseText21,put=PutEnterpriseText21))
    _bstr_t EnterpriseText21;
    __declspec(property(get=GetEnterpriseText22,put=PutEnterpriseText22))
    _bstr_t EnterpriseText22;
    __declspec(property(get=GetEnterpriseText23,put=PutEnterpriseText23))
    _bstr_t EnterpriseText23;
    __declspec(property(get=GetEnterpriseText24,put=PutEnterpriseText24))
    _bstr_t EnterpriseText24;
    __declspec(property(get=GetEnterpriseText25,put=PutEnterpriseText25))
    _bstr_t EnterpriseText25;
    __declspec(property(get=GetEnterpriseText26,put=PutEnterpriseText26))
    _bstr_t EnterpriseText26;
    __declspec(property(get=GetEnterpriseText27,put=PutEnterpriseText27))
    _bstr_t EnterpriseText27;
    __declspec(property(get=GetEnterpriseText28,put=PutEnterpriseText28))
    _bstr_t EnterpriseText28;
    __declspec(property(get=GetEnterpriseText29,put=PutEnterpriseText29))
    _bstr_t EnterpriseText29;
    __declspec(property(get=GetEnterpriseText30,put=PutEnterpriseText30))
    _bstr_t EnterpriseText30;
    __declspec(property(get=GetEnterpriseText31,put=PutEnterpriseText31))
    _bstr_t EnterpriseText31;
    __declspec(property(get=GetEnterpriseText32,put=PutEnterpriseText32))
    _bstr_t EnterpriseText32;
    __declspec(property(get=GetEnterpriseText33,put=PutEnterpriseText33))
    _bstr_t EnterpriseText33;
    __declspec(property(get=GetEnterpriseText34,put=PutEnterpriseText34))
    _bstr_t EnterpriseText34;
    __declspec(property(get=GetEnterpriseText35,put=PutEnterpriseText35))
    _bstr_t EnterpriseText35;
    __declspec(property(get=GetEnterpriseText36,put=PutEnterpriseText36))
    _bstr_t EnterpriseText36;
    __declspec(property(get=GetEnterpriseText37,put=PutEnterpriseText37))
    _bstr_t EnterpriseText37;
    __declspec(property(get=GetEnterpriseText38,put=PutEnterpriseText38))
    _bstr_t EnterpriseText38;
    __declspec(property(get=GetEnterpriseText39,put=PutEnterpriseText39))
    _bstr_t EnterpriseText39;
    __declspec(property(get=GetEnterpriseText40,put=PutEnterpriseText40))
    _bstr_t EnterpriseText40;
    __declspec(property(get=GetEnterpriseGeneric,put=PutEnterpriseGeneric))
    _variant_t EnterpriseGeneric;
    __declspec(property(get=GetEnterpriseBaseCalendar))
    _variant_t EnterpriseBaseCalendar;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetApplication))
    _MSProjectPtr Application;
    __declspec(property(get=GetText6,put=PutText6))
    _bstr_t Text6;
    __declspec(property(get=GetText7,put=PutText7))
    _bstr_t Text7;
    __declspec(property(get=GetText8,put=PutText8))
    _bstr_t Text8;
    __declspec(property(get=GetText9,put=PutText9))
    _bstr_t Text9;
    __declspec(property(get=GetText10,put=PutText10))
    _bstr_t Text10;
    __declspec(property(get=GetStart1,put=PutStart1))
    _variant_t Start1;
    __declspec(property(get=GetStart2,put=PutStart2))
    _variant_t Start2;
    __declspec(property(get=GetStart3,put=PutStart3))
    _variant_t Start3;
    __declspec(property(get=GetStart4,put=PutStart4))
    _variant_t Start4;
    __declspec(property(get=GetStart5,put=PutStart5))
    _variant_t Start5;
    __declspec(property(get=GetFinish1,put=PutFinish1))
    _variant_t Finish1;
    __declspec(property(get=GetFinish2,put=PutFinish2))
    _variant_t Finish2;
    __declspec(property(get=GetFinish3,put=PutFinish3))
    _variant_t Finish3;
    __declspec(property(get=GetFinish4,put=PutFinish4))
    _variant_t Finish4;
    __declspec(property(get=GetFinish5,put=PutFinish5))
    _variant_t Finish5;
    __declspec(property(get=GetNumber1,put=PutNumber1))
    double Number1;
    __declspec(property(get=GetNumber2,put=PutNumber2))
    double Number2;
    __declspec(property(get=GetNumber3,put=PutNumber3))
    double Number3;
    __declspec(property(get=GetNumber4,put=PutNumber4))
    double Number4;
    __declspec(property(get=GetNumber5,put=PutNumber5))
    double Number5;
    __declspec(property(get=GetDuration1,put=PutDuration1))
    _variant_t Duration1;
    __declspec(property(get=GetDuration2,put=PutDuration2))
    _variant_t Duration2;
    __declspec(property(get=GetDuration3,put=PutDuration3))
    _variant_t Duration3;
    __declspec(property(get=GetEnterpriseRequiredValues))
    _variant_t EnterpriseRequiredValues;
    __declspec(property(get=GetEnterpriseNameUsed))
    _variant_t EnterpriseNameUsed;
    __declspec(property(get=GetEnterprise))
    _variant_t Enterprise;
    __declspec(property(get=GetCost1,put=PutCost1))
    _variant_t Cost1;
    __declspec(property(get=GetCost2,put=PutCost2))
    _variant_t Cost2;
    __declspec(property(get=GetCost3,put=PutCost3))
    _variant_t Cost3;
    __declspec(property(get=GetFlag10,put=PutFlag10))
    _variant_t Flag10;
    __declspec(property(get=GetFlag1,put=PutFlag1))
    _variant_t Flag1;
    __declspec(property(get=GetFlag2,put=PutFlag2))
    _variant_t Flag2;
    __declspec(property(get=GetFlag3,put=PutFlag3))
    _variant_t Flag3;
    __declspec(property(get=GetFlag4,put=PutFlag4))
    _variant_t Flag4;
    __declspec(property(get=GetFlag5,put=PutFlag5))
    _variant_t Flag5;
    __declspec(property(get=GetFlag6,put=PutFlag6))
    _variant_t Flag6;
    __declspec(property(get=GetFlag7,put=PutFlag7))
    _variant_t Flag7;
    __declspec(property(get=GetFlag8,put=PutFlag8))
    _variant_t Flag8;
    __declspec(property(get=GetFlag9,put=PutFlag9))
    _variant_t Flag9;
    __declspec(property(get=GetEnterpriseIsCheckedOut))
    _variant_t EnterpriseIsCheckedOut;
    __declspec(property(get=GetEnterpriseCheckedOutBy))
    _bstr_t EnterpriseCheckedOutBy;
    __declspec(property(get=GetHyperlink,put=PutHyperlink))
    _bstr_t Hyperlink;
    __declspec(property(get=GetHyperlinkAddress,put=PutHyperlinkAddress))
    _bstr_t HyperlinkAddress;
    __declspec(property(get=GetHyperlinkSubAddress,put=PutHyperlinkSubAddress))
    _bstr_t HyperlinkSubAddress;
    __declspec(property(get=GetHyperlinkHREF,put=PutHyperlinkHREF))
    _bstr_t HyperlinkHREF;
    __declspec(property(get=GetEnterpriseLastModifiedDate))
    _variant_t EnterpriseLastModifiedDate;
    __declspec(property(get=GetEnterpriseInactive,put=PutEnterpriseInactive))
    _variant_t EnterpriseInactive;
    __declspec(property(get=GetCalendar))
    CalendarPtr Calendar;
    __declspec(property(get=GetCostRateTables))
    CostRateTablesPtr CostRateTables;
    __declspec(property(get=GetPayRates))
    PayRatesPtr PayRates;
    __declspec(property(get=GetCanLevel,put=PutCanLevel))
    _variant_t CanLevel;
    __declspec(property(get=GetCost4,put=PutCost4))
    _variant_t Cost4;
    __declspec(property(get=GetCost5,put=PutCost5))
    _variant_t Cost5;
    __declspec(property(get=GetCost6,put=PutCost6))
    _variant_t Cost6;
    __declspec(property(get=GetCost7,put=PutCost7))
    _variant_t Cost7;
    __declspec(property(get=GetCost8,put=PutCost8))
    _variant_t Cost8;
    __declspec(property(get=GetCost9,put=PutCost9))
    _variant_t Cost9;
    __declspec(property(get=GetCost10,put=PutCost10))
    _variant_t Cost10;
    __declspec(property(get=GetDate1,put=PutDate1))
    _variant_t Date1;
    __declspec(property(get=GetDate2,put=PutDate2))
    _variant_t Date2;
    __declspec(property(get=GetDate3,put=PutDate3))
    _variant_t Date3;
    __declspec(property(get=GetDate4,put=PutDate4))
    _variant_t Date4;
    __declspec(property(get=GetDate5,put=PutDate5))
    _variant_t Date5;
    __declspec(property(get=GetDate6,put=PutDate6))
    _variant_t Date6;
    __declspec(property(get=GetDate7,put=PutDate7))
    _variant_t Date7;
    __declspec(property(get=GetDate8,put=PutDate8))
    _variant_t Date8;
    __declspec(property(get=GetDate9,put=PutDate9))
    _variant_t Date9;
    __declspec(property(get=GetDate10,put=PutDate10))
    _variant_t Date10;
    __declspec(property(get=GetDuration4,put=PutDuration4))
    _variant_t Duration4;
    __declspec(property(get=GetDuration5,put=PutDuration5))
    _variant_t Duration5;
    __declspec(property(get=GetDuration6,put=PutDuration6))
    _variant_t Duration6;
    __declspec(property(get=GetDuration7,put=PutDuration7))
    _variant_t Duration7;
    __declspec(property(get=GetDuration8,put=PutDuration8))
    _variant_t Duration8;
    __declspec(property(get=GetDuration9,put=PutDuration9))
    _variant_t Duration9;
    __declspec(property(get=GetDuration10,put=PutDuration10))
    _variant_t Duration10;
    __declspec(property(get=GetFinish6,put=PutFinish6))
    _variant_t Finish6;
    __declspec(property(get=GetFinish7,put=PutFinish7))
    _variant_t Finish7;
    __declspec(property(get=GetFinish8,put=PutFinish8))
    _variant_t Finish8;
    __declspec(property(get=GetFinish9,put=PutFinish9))
    _variant_t Finish9;
    __declspec(property(get=GetFinish10,put=PutFinish10))
    _variant_t Finish10;
    __declspec(property(get=GetFlag11,put=PutFlag11))
    _variant_t Flag11;
    __declspec(property(get=GetFlag12,put=PutFlag12))
    _variant_t Flag12;
    __declspec(property(get=GetFlag13,put=PutFlag13))
    _variant_t Flag13;
    __declspec(property(get=GetFlag14,put=PutFlag14))
    _variant_t Flag14;
    __declspec(property(get=GetFlag15,put=PutFlag15))
    _variant_t Flag15;
    __declspec(property(get=GetFlag16,put=PutFlag16))
    _variant_t Flag16;
    __declspec(property(get=GetFlag17,put=PutFlag17))
    _variant_t Flag17;
    __declspec(property(get=GetFlag18,put=PutFlag18))
    _variant_t Flag18;
    __declspec(property(get=GetFlag19,put=PutFlag19))
    _variant_t Flag19;
    __declspec(property(get=GetFlag20,put=PutFlag20))
    _variant_t Flag20;
    __declspec(property(get=GetNumber6,put=PutNumber6))
    double Number6;
    __declspec(property(get=GetNumber7,put=PutNumber7))
    double Number7;
    __declspec(property(get=GetNumber8,put=PutNumber8))
    double Number8;
    __declspec(property(get=GetNumber9,put=PutNumber9))
    double Number9;
    __declspec(property(get=GetNumber10,put=PutNumber10))
    double Number10;
    __declspec(property(get=GetNumber11,put=PutNumber11))
    double Number11;
    __declspec(property(get=GetNumber12,put=PutNumber12))
    double Number12;
    __declspec(property(get=GetNumber13,put=PutNumber13))
    double Number13;
    __declspec(property(get=GetNumber14,put=PutNumber14))
    double Number14;
    __declspec(property(get=GetNumber15,put=PutNumber15))
    double Number15;
    __declspec(property(get=GetNumber16,put=PutNumber16))
    double Number16;
    __declspec(property(get=GetNumber17,put=PutNumber17))
    double Number17;
    __declspec(property(get=GetNumber18,put=PutNumber18))
    double Number18;
    __declspec(property(get=GetNumber19,put=PutNumber19))
    double Number19;
    __declspec(property(get=GetNumber20,put=PutNumber20))
    double Number20;
    __declspec(property(get=GetStart6,put=PutStart6))
    _variant_t Start6;
    __declspec(property(get=GetStart7,put=PutStart7))
    _variant_t Start7;
    __declspec(property(get=GetStart8,put=PutStart8))
    _variant_t Start8;
    __declspec(property(get=GetStart9,put=PutStart9))
    _variant_t Start9;
    __declspec(property(get=GetStart10,put=PutStart10))
    _variant_t Start10;
    __declspec(property(get=GetText11,put=PutText11))
    _bstr_t Text11;
    __declspec(property(get=GetText12,put=PutText12))
    _bstr_t Text12;
    __declspec(property(get=GetText13,put=PutText13))
    _bstr_t Text13;
    __declspec(property(get=GetText14,put=PutText14))
    _bstr_t Text14;
    __declspec(property(get=GetText15,put=PutText15))
    _bstr_t Text15;
    __declspec(property(get=GetText16,put=PutText16))
    _bstr_t Text16;
    __declspec(property(get=GetText17,put=PutText17))
    _bstr_t Text17;
    __declspec(property(get=GetText18,put=PutText18))
    _bstr_t Text18;
    __declspec(property(get=GetText19,put=PutText19))
    _bstr_t Text19;
    __declspec(property(get=GetText20,put=PutText20))
    _bstr_t Text20;
    __declspec(property(get=GetText21,put=PutText21))
    _bstr_t Text21;
    __declspec(property(get=GetText22,put=PutText22))
    _bstr_t Text22;
    __declspec(property(get=GetText23,put=PutText23))
    _bstr_t Text23;
    __declspec(property(get=GetText24,put=PutText24))
    _bstr_t Text24;
    __declspec(property(get=GetText25,put=PutText25))
    _bstr_t Text25;
    __declspec(property(get=GetText26,put=PutText26))
    _bstr_t Text26;
    __declspec(property(get=GetText27,put=PutText27))
    _bstr_t Text27;
    __declspec(property(get=GetText28,put=PutText28))
    _bstr_t Text28;
    __declspec(property(get=GetText29,put=PutText29))
    _bstr_t Text29;
    __declspec(property(get=GetText30,put=PutText30))
    _bstr_t Text30;
    __declspec(property(get=GetPhonetics,put=PutPhonetics))
    _bstr_t Phonetics;
    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetConfirmed))
    _variant_t Confirmed;
    __declspec(property(get=GetResponsePending))
    _variant_t ResponsePending;
    __declspec(property(get=GetTeamStatusPending))
    _variant_t TeamStatusPending;
    __declspec(property(get=GetUpdateNeeded))
    _variant_t UpdateNeeded;
    __declspec(property(get=GetCV))
    _variant_t CV;
    __declspec(property(get=GetWorkgroup,put=PutWorkgroup))
    enum PjWorkgroupMessages Workgroup;
    __declspec(property(get=GetProject))
    _bstr_t Project;
    __declspec(property(get=GetAvailabilities))
    AvailabilitiesPtr Availabilities;
    __declspec(property(get=GetOutlineCode1,put=PutOutlineCode1))
    _bstr_t OutlineCode1;
    __declspec(property(get=GetOutlineCode2,put=PutOutlineCode2))
    _bstr_t OutlineCode2;
    __declspec(property(get=GetOutlineCode3,put=PutOutlineCode3))
    _bstr_t OutlineCode3;
    __declspec(property(get=GetOutlineCode4,put=PutOutlineCode4))
    _bstr_t OutlineCode4;
    __declspec(property(get=GetOutlineCode5,put=PutOutlineCode5))
    _bstr_t OutlineCode5;
    __declspec(property(get=GetOutlineCode6,put=PutOutlineCode6))
    _bstr_t OutlineCode6;
    __declspec(property(get=GetOutlineCode7,put=PutOutlineCode7))
    _bstr_t OutlineCode7;
    __declspec(property(get=GetOutlineCode8,put=PutOutlineCode8))
    _bstr_t OutlineCode8;
    __declspec(property(get=GetOutlineCode9,put=PutOutlineCode9))
    _bstr_t OutlineCode9;
    __declspec(property(get=GetOutlineCode10,put=PutOutlineCode10))
    _bstr_t OutlineCode10;
    __declspec(property(get=GetMaterialLabel,put=PutMaterialLabel))
    _bstr_t MaterialLabel;
    __declspec(property(get=GetType,put=PutType))
    enum PjResourceTypes Type;
    __declspec(property(get=GetVAC))
    _variant_t VAC;
    __declspec(property(get=GetGroupBySummary))
    _variant_t GroupBySummary;
    __declspec(property(get=GetWindowsUserAccount,put=PutWindowsUserAccount))
    _bstr_t WindowsUserAccount;
    __declspec(property(get=GetHyperlinkScreenTip,put=PutHyperlinkScreenTip))
    _bstr_t HyperlinkScreenTip;
    __declspec(property(get=GetBaseline1Work,put=PutBaseline1Work))
    _variant_t Baseline1Work;
    __declspec(property(get=GetBaseline1Cost,put=PutBaseline1Cost))
    _variant_t Baseline1Cost;
    __declspec(property(get=GetBaseline2Work,put=PutBaseline2Work))
    _variant_t Baseline2Work;
    __declspec(property(get=GetBaseline2Cost,put=PutBaseline2Cost))
    _variant_t Baseline2Cost;
    __declspec(property(get=GetBaseline3Work,put=PutBaseline3Work))
    _variant_t Baseline3Work;
    __declspec(property(get=GetBaseline3Cost,put=PutBaseline3Cost))
    _variant_t Baseline3Cost;
    __declspec(property(get=GetBaseline4Work,put=PutBaseline4Work))
    _variant_t Baseline4Work;
    __declspec(property(get=GetBaseline4Cost,put=PutBaseline4Cost))
    _variant_t Baseline4Cost;
    __declspec(property(get=GetBaseline5Work,put=PutBaseline5Work))
    _variant_t Baseline5Work;
    __declspec(property(get=GetBaseline5Cost,put=PutBaseline5Cost))
    _variant_t Baseline5Cost;
    __declspec(property(get=GetBaseline6Work,put=PutBaseline6Work))
    _variant_t Baseline6Work;
    __declspec(property(get=GetBaseline6Cost,put=PutBaseline6Cost))
    _variant_t Baseline6Cost;
    __declspec(property(get=GetBaseline7Work,put=PutBaseline7Work))
    _variant_t Baseline7Work;
    __declspec(property(get=GetBaseline7Cost,put=PutBaseline7Cost))
    _variant_t Baseline7Cost;
    __declspec(property(get=GetBaseline8Work,put=PutBaseline8Work))
    _variant_t Baseline8Work;
    __declspec(property(get=GetBaseline8Cost,put=PutBaseline8Cost))
    _variant_t Baseline8Cost;
    __declspec(property(get=GetBaseline9Work,put=PutBaseline9Work))
    _variant_t Baseline9Work;
    __declspec(property(get=GetBaseline9Cost,put=PutBaseline9Cost))
    _variant_t Baseline9Cost;
    __declspec(property(get=GetBaseline10Work,put=PutBaseline10Work))
    _variant_t Baseline10Work;
    __declspec(property(get=GetBaseline10Cost,put=PutBaseline10Cost))
    _variant_t Baseline10Cost;
    __declspec(property(get=GetEnterpriseUniqueID))
    long EnterpriseUniqueID;
    __declspec(property(get=GetEnterpriseCost1,put=PutEnterpriseCost1))
    _variant_t EnterpriseCost1;
    __declspec(property(get=GetEnterpriseCost2,put=PutEnterpriseCost2))
    _variant_t EnterpriseCost2;
    __declspec(property(get=GetEnterpriseCost3,put=PutEnterpriseCost3))
    _variant_t EnterpriseCost3;
    __declspec(property(get=GetEnterpriseCost4,put=PutEnterpriseCost4))
    _variant_t EnterpriseCost4;
    __declspec(property(get=GetEnterpriseCost5,put=PutEnterpriseCost5))
    _variant_t EnterpriseCost5;
    __declspec(property(get=GetEnterpriseCost6,put=PutEnterpriseCost6))
    _variant_t EnterpriseCost6;
    __declspec(property(get=GetEnterpriseCost7,put=PutEnterpriseCost7))
    _variant_t EnterpriseCost7;
    __declspec(property(get=GetEnterpriseCost8,put=PutEnterpriseCost8))
    _variant_t EnterpriseCost8;
    __declspec(property(get=GetEnterpriseCost9,put=PutEnterpriseCost9))
    _variant_t EnterpriseCost9;
    __declspec(property(get=GetEnterpriseCost10,put=PutEnterpriseCost10))
    _variant_t EnterpriseCost10;
    __declspec(property(get=GetEnterpriseDate1,put=PutEnterpriseDate1))
    _variant_t EnterpriseDate1;
    __declspec(property(get=GetEnterpriseDate2,put=PutEnterpriseDate2))
    _variant_t EnterpriseDate2;
    __declspec(property(get=GetEnterpriseDate3,put=PutEnterpriseDate3))
    _variant_t EnterpriseDate3;
    __declspec(property(get=GetEnterpriseDate4,put=PutEnterpriseDate4))
    _variant_t EnterpriseDate4;
    __declspec(property(get=GetEnterpriseDate5,put=PutEnterpriseDate5))
    _variant_t EnterpriseDate5;
    __declspec(property(get=GetEnterpriseDate6,put=PutEnterpriseDate6))
    _variant_t EnterpriseDate6;
    __declspec(property(get=GetEnterpriseDate7,put=PutEnterpriseDate7))
    _variant_t EnterpriseDate7;
    __declspec(property(get=GetEnterpriseDate8,put=PutEnterpriseDate8))
    _variant_t EnterpriseDate8;
    __declspec(property(get=GetEnterpriseDate9,put=PutEnterpriseDate9))
    _variant_t EnterpriseDate9;
    __declspec(property(get=GetEnterpriseDate10,put=PutEnterpriseDate10))
    _variant_t EnterpriseDate10;
    __declspec(property(get=GetEnterpriseDate11,put=PutEnterpriseDate11))
    _variant_t EnterpriseDate11;
    __declspec(property(get=GetEnterpriseDate12,put=PutEnterpriseDate12))
    _variant_t EnterpriseDate12;
    __declspec(property(get=GetEnterpriseDate13,put=PutEnterpriseDate13))
    _variant_t EnterpriseDate13;
    __declspec(property(get=GetEnterpriseDate14,put=PutEnterpriseDate14))
    _variant_t EnterpriseDate14;
    __declspec(property(get=GetEnterpriseDate15,put=PutEnterpriseDate15))
    _variant_t EnterpriseDate15;
    __declspec(property(get=GetEnterpriseDate16,put=PutEnterpriseDate16))
    _variant_t EnterpriseDate16;
    __declspec(property(get=GetEnterpriseDate17,put=PutEnterpriseDate17))
    _variant_t EnterpriseDate17;
    __declspec(property(get=GetEnterpriseDate18,put=PutEnterpriseDate18))
    _variant_t EnterpriseDate18;
    __declspec(property(get=GetEnterpriseDate19,put=PutEnterpriseDate19))
    _variant_t EnterpriseDate19;
    __declspec(property(get=GetEnterpriseDate20,put=PutEnterpriseDate20))
    _variant_t EnterpriseDate20;
    __declspec(property(get=GetEnterpriseDate21,put=PutEnterpriseDate21))
    _variant_t EnterpriseDate21;
    __declspec(property(get=GetEnterpriseDate22,put=PutEnterpriseDate22))
    _variant_t EnterpriseDate22;
    __declspec(property(get=GetEnterpriseDate23,put=PutEnterpriseDate23))
    _variant_t EnterpriseDate23;
    __declspec(property(get=GetEnterpriseDate24,put=PutEnterpriseDate24))
    _variant_t EnterpriseDate24;
    __declspec(property(get=GetEnterpriseDate25,put=PutEnterpriseDate25))
    _variant_t EnterpriseDate25;
    __declspec(property(get=GetEnterpriseDate26,put=PutEnterpriseDate26))
    _variant_t EnterpriseDate26;
    __declspec(property(get=GetEnterpriseDate27,put=PutEnterpriseDate27))
    _variant_t EnterpriseDate27;
    __declspec(property(get=GetEnterpriseDate28,put=PutEnterpriseDate28))
    _variant_t EnterpriseDate28;
    __declspec(property(get=GetEnterpriseDate29,put=PutEnterpriseDate29))
    _variant_t EnterpriseDate29;
    __declspec(property(get=GetEnterpriseDate30,put=PutEnterpriseDate30))
    _variant_t EnterpriseDate30;
    __declspec(property(get=GetEnterpriseDuration1,put=PutEnterpriseDuration1))
    _variant_t EnterpriseDuration1;
    __declspec(property(get=GetEnterpriseDuration2,put=PutEnterpriseDuration2))
    _variant_t EnterpriseDuration2;
    __declspec(property(get=GetEnterpriseDuration3,put=PutEnterpriseDuration3))
    _variant_t EnterpriseDuration3;
    __declspec(property(get=GetEnterpriseDuration4,put=PutEnterpriseDuration4))
    _variant_t EnterpriseDuration4;
    __declspec(property(get=GetEnterpriseDuration5,put=PutEnterpriseDuration5))
    _variant_t EnterpriseDuration5;
    __declspec(property(get=GetEnterpriseDuration6,put=PutEnterpriseDuration6))
    _variant_t EnterpriseDuration6;
    __declspec(property(get=GetEnterpriseDuration7,put=PutEnterpriseDuration7))
    _variant_t EnterpriseDuration7;
    __declspec(property(get=GetEnterpriseDuration8,put=PutEnterpriseDuration8))
    _variant_t EnterpriseDuration8;
    __declspec(property(get=GetEnterpriseDuration9,put=PutEnterpriseDuration9))
    _variant_t EnterpriseDuration9;
    __declspec(property(get=GetEnterpriseDuration10,put=PutEnterpriseDuration10))
    _variant_t EnterpriseDuration10;
    __declspec(property(get=GetEnterpriseFlag1,put=PutEnterpriseFlag1))
    _variant_t EnterpriseFlag1;
    __declspec(property(get=GetEnterpriseFlag2,put=PutEnterpriseFlag2))
    _variant_t EnterpriseFlag2;
    __declspec(property(get=GetEnterpriseFlag3,put=PutEnterpriseFlag3))
    _variant_t EnterpriseFlag3;
    __declspec(property(get=GetEnterpriseFlag4,put=PutEnterpriseFlag4))
    _variant_t EnterpriseFlag4;
    __declspec(property(get=GetEnterpriseFlag5,put=PutEnterpriseFlag5))
    _variant_t EnterpriseFlag5;
    __declspec(property(get=GetEnterpriseFlag6,put=PutEnterpriseFlag6))
    _variant_t EnterpriseFlag6;
    __declspec(property(get=GetEnterpriseFlag7,put=PutEnterpriseFlag7))
    _variant_t EnterpriseFlag7;
    __declspec(property(get=GetEnterpriseFlag8,put=PutEnterpriseFlag8))
    _variant_t EnterpriseFlag8;
    __declspec(property(get=GetEnterpriseFlag9,put=PutEnterpriseFlag9))
    _variant_t EnterpriseFlag9;
    __declspec(property(get=GetEnterpriseFlag10,put=PutEnterpriseFlag10))
    _variant_t EnterpriseFlag10;
    __declspec(property(get=GetEnterpriseFlag11,put=PutEnterpriseFlag11))
    _variant_t EnterpriseFlag11;
    __declspec(property(get=GetEnterpriseFlag12,put=PutEnterpriseFlag12))
    _variant_t EnterpriseFlag12;
    __declspec(property(get=GetEnterpriseFlag13,put=PutEnterpriseFlag13))
    _variant_t EnterpriseFlag13;
    __declspec(property(get=GetEnterpriseFlag14,put=PutEnterpriseFlag14))
    _variant_t EnterpriseFlag14;
    __declspec(property(get=GetEnterpriseFlag15,put=PutEnterpriseFlag15))
    _variant_t EnterpriseFlag15;
    __declspec(property(get=GetEnterpriseFlag16,put=PutEnterpriseFlag16))
    _variant_t EnterpriseFlag16;
    __declspec(property(get=GetEnterpriseFlag17,put=PutEnterpriseFlag17))
    _variant_t EnterpriseFlag17;
    __declspec(property(get=GetEnterpriseFlag18,put=PutEnterpriseFlag18))
    _variant_t EnterpriseFlag18;
    __declspec(property(get=GetEnterpriseFlag19,put=PutEnterpriseFlag19))
    _variant_t EnterpriseFlag19;
    __declspec(property(get=GetEnterpriseFlag20,put=PutEnterpriseFlag20))
    _variant_t EnterpriseFlag20;
    __declspec(property(get=GetEnterpriseNumber1,put=PutEnterpriseNumber1))
    double EnterpriseNumber1;
    __declspec(property(get=GetEnterpriseNumber2,put=PutEnterpriseNumber2))
    double EnterpriseNumber2;
    __declspec(property(get=GetEnterpriseNumber3,put=PutEnterpriseNumber3))
    double EnterpriseNumber3;
    __declspec(property(get=GetEnterpriseNumber4,put=PutEnterpriseNumber4))
    double EnterpriseNumber4;
    __declspec(property(get=GetEnterpriseNumber5,put=PutEnterpriseNumber5))
    double EnterpriseNumber5;
    __declspec(property(get=GetEnterpriseNumber6,put=PutEnterpriseNumber6))
    double EnterpriseNumber6;
    __declspec(property(get=GetEnterpriseNumber7,put=PutEnterpriseNumber7))
    double EnterpriseNumber7;
    __declspec(property(get=GetEnterpriseNumber8,put=PutEnterpriseNumber8))
    double EnterpriseNumber8;
    __declspec(property(get=GetEnterpriseNumber9,put=PutEnterpriseNumber9))
    double EnterpriseNumber9;
    __declspec(property(get=GetEnterpriseNumber10,put=PutEnterpriseNumber10))
    double EnterpriseNumber10;
    __declspec(property(get=GetEnterpriseNumber11,put=PutEnterpriseNumber11))
    double EnterpriseNumber11;
    __declspec(property(get=GetEnterpriseNumber12,put=PutEnterpriseNumber12))
    double EnterpriseNumber12;
    __declspec(property(get=GetEnterpriseNumber13,put=PutEnterpriseNumber13))
    double EnterpriseNumber13;
    __declspec(property(get=GetEnterpriseNumber14,put=PutEnterpriseNumber14))
    double EnterpriseNumber14;
    __declspec(property(get=GetEnterpriseNumber15,put=PutEnterpriseNumber15))
    double EnterpriseNumber15;
    __declspec(property(get=GetEnterpriseNumber16,put=PutEnterpriseNumber16))
    double EnterpriseNumber16;
    __declspec(property(get=GetEnterpriseNumber17,put=PutEnterpriseNumber17))
    double EnterpriseNumber17;
    __declspec(property(get=GetEnterpriseNumber18,put=PutEnterpriseNumber18))
    double EnterpriseNumber18;
    __declspec(property(get=GetEnterpriseNumber19,put=PutEnterpriseNumber19))
    double EnterpriseNumber19;
    __declspec(property(get=GetEnterpriseNumber20,put=PutEnterpriseNumber20))
    double EnterpriseNumber20;
    __declspec(property(get=GetEnterpriseNumber21,put=PutEnterpriseNumber21))
    double EnterpriseNumber21;
    __declspec(property(get=GetEnterpriseNumber22,put=PutEnterpriseNumber22))
    double EnterpriseNumber22;
    __declspec(property(get=GetEnterpriseNumber23,put=PutEnterpriseNumber23))
    double EnterpriseNumber23;
    __declspec(property(get=GetEnterpriseNumber24,put=PutEnterpriseNumber24))
    double EnterpriseNumber24;
    __declspec(property(get=GetEnterpriseNumber25,put=PutEnterpriseNumber25))
    double EnterpriseNumber25;
    __declspec(property(get=GetEnterpriseNumber26,put=PutEnterpriseNumber26))
    double EnterpriseNumber26;
    __declspec(property(get=GetEnterpriseNumber27,put=PutEnterpriseNumber27))
    double EnterpriseNumber27;
    __declspec(property(get=GetEnterpriseNumber28,put=PutEnterpriseNumber28))
    double EnterpriseNumber28;
    __declspec(property(get=GetEnterpriseNumber29,put=PutEnterpriseNumber29))
    double EnterpriseNumber29;
    __declspec(property(get=GetEnterpriseNumber30,put=PutEnterpriseNumber30))
    double EnterpriseNumber30;
    __declspec(property(get=GetEnterpriseNumber31,put=PutEnterpriseNumber31))
    double EnterpriseNumber31;
    __declspec(property(get=GetEnterpriseNumber32,put=PutEnterpriseNumber32))
    double EnterpriseNumber32;
    __declspec(property(get=GetEnterpriseNumber33,put=PutEnterpriseNumber33))
    double EnterpriseNumber33;
    __declspec(property(get=GetEnterpriseNumber34,put=PutEnterpriseNumber34))
    double EnterpriseNumber34;
    __declspec(property(get=GetEnterpriseNumber35,put=PutEnterpriseNumber35))
    double EnterpriseNumber35;
    __declspec(property(get=GetEnterpriseNumber36,put=PutEnterpriseNumber36))
    double EnterpriseNumber36;
    __declspec(property(get=GetEnterpriseNumber37,put=PutEnterpriseNumber37))
    double EnterpriseNumber37;
    __declspec(property(get=GetEnterpriseNumber38,put=PutEnterpriseNumber38))
    double EnterpriseNumber38;
    __declspec(property(get=GetEnterpriseNumber39,put=PutEnterpriseNumber39))
    double EnterpriseNumber39;
    __declspec(property(get=GetEnterpriseNumber40,put=PutEnterpriseNumber40))
    double EnterpriseNumber40;
    __declspec(property(get=GetEnterpriseOutlineCode1,put=PutEnterpriseOutlineCode1))
    _bstr_t EnterpriseOutlineCode1;
    __declspec(property(get=GetEnterpriseOutlineCode2,put=PutEnterpriseOutlineCode2))
    _bstr_t EnterpriseOutlineCode2;
    __declspec(property(get=GetEnterpriseOutlineCode3,put=PutEnterpriseOutlineCode3))
    _bstr_t EnterpriseOutlineCode3;
    __declspec(property(get=GetEnterpriseOutlineCode4,put=PutEnterpriseOutlineCode4))
    _bstr_t EnterpriseOutlineCode4;
    __declspec(property(get=GetEnterpriseOutlineCode5,put=PutEnterpriseOutlineCode5))
    _bstr_t EnterpriseOutlineCode5;
    __declspec(property(get=GetEnterpriseOutlineCode6,put=PutEnterpriseOutlineCode6))
    _bstr_t EnterpriseOutlineCode6;
    __declspec(property(get=GetEnterpriseOutlineCode7,put=PutEnterpriseOutlineCode7))
    _bstr_t EnterpriseOutlineCode7;
    __declspec(property(get=GetEnterpriseOutlineCode8,put=PutEnterpriseOutlineCode8))
    _bstr_t EnterpriseOutlineCode8;
    __declspec(property(get=GetEnterpriseOutlineCode9,put=PutEnterpriseOutlineCode9))
    _bstr_t EnterpriseOutlineCode9;
    __declspec(property(get=GetEnterpriseOutlineCode10,put=PutEnterpriseOutlineCode10))
    _bstr_t EnterpriseOutlineCode10;
    __declspec(property(get=GetEnterpriseOutlineCode11,put=PutEnterpriseOutlineCode11))
    _bstr_t EnterpriseOutlineCode11;
    __declspec(property(get=GetEnterpriseOutlineCode12,put=PutEnterpriseOutlineCode12))
    _bstr_t EnterpriseOutlineCode12;
    __declspec(property(get=GetEnterpriseOutlineCode13,put=PutEnterpriseOutlineCode13))
    _bstr_t EnterpriseOutlineCode13;
    __declspec(property(get=GetEnterpriseOutlineCode14,put=PutEnterpriseOutlineCode14))
    _bstr_t EnterpriseOutlineCode14;
    __declspec(property(get=GetEnterpriseOutlineCode15,put=PutEnterpriseOutlineCode15))
    _bstr_t EnterpriseOutlineCode15;
    __declspec(property(get=GetEnterpriseOutlineCode16,put=PutEnterpriseOutlineCode16))
    _bstr_t EnterpriseOutlineCode16;
    __declspec(property(get=GetEnterpriseOutlineCode17,put=PutEnterpriseOutlineCode17))
    _bstr_t EnterpriseOutlineCode17;
    __declspec(property(get=GetEnterpriseOutlineCode18,put=PutEnterpriseOutlineCode18))
    _bstr_t EnterpriseOutlineCode18;
    __declspec(property(get=GetEnterpriseOutlineCode19,put=PutEnterpriseOutlineCode19))
    _bstr_t EnterpriseOutlineCode19;
    __declspec(property(get=GetEnterpriseOutlineCode20,put=PutEnterpriseOutlineCode20))
    _bstr_t EnterpriseOutlineCode20;
    __declspec(property(get=GetEnterpriseOutlineCode21,put=PutEnterpriseOutlineCode21))
    _bstr_t EnterpriseOutlineCode21;
    __declspec(property(get=GetEnterpriseOutlineCode22,put=PutEnterpriseOutlineCode22))
    _bstr_t EnterpriseOutlineCode22;
    __declspec(property(get=GetEnterpriseOutlineCode23,put=PutEnterpriseOutlineCode23))
    _bstr_t EnterpriseOutlineCode23;
    __declspec(property(get=GetEnterpriseOutlineCode24,put=PutEnterpriseOutlineCode24))
    _bstr_t EnterpriseOutlineCode24;
    __declspec(property(get=GetEnterpriseOutlineCode25,put=PutEnterpriseOutlineCode25))
    _bstr_t EnterpriseOutlineCode25;

    //
    // Wrapper methods for error-handling
    //

    long GetID ( );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t retval );
    _bstr_t GetInitials ( );
    void PutInitials (
        _bstr_t retval );
    _bstr_t GetGroup ( );
    void PutGroup (
        _bstr_t retval );
    _variant_t GetMaxUnits ( );
    void PutMaxUnits (
        const _variant_t & retval );
    _bstr_t GetBaseCalendar ( );
    void PutBaseCalendar (
        _bstr_t retval );
    _variant_t GetStandardRate ( );
    void PutStandardRate (
        const _variant_t & retval );
    _variant_t GetOvertimeRate ( );
    void PutOvertimeRate (
        const _variant_t & retval );
    _bstr_t GetText1 ( );
    void PutText1 (
        _bstr_t retval );
    _bstr_t GetText2 ( );
    void PutText2 (
        _bstr_t retval );
    _bstr_t GetCode ( );
    void PutCode (
        _bstr_t retval );
    _variant_t GetActualCost ( );
    _variant_t GetCost ( );
    _variant_t GetWork ( );
    _variant_t GetActualWork ( );
    _variant_t GetBaselineWork ( );
    void PutBaselineWork (
        const _variant_t & retval );
    _variant_t GetOvertimeWork ( );
    _variant_t GetBaselineCost ( );
    void PutBaselineCost (
        const _variant_t & retval );
    _variant_t GetCostPerUse ( );
    void PutCostPerUse (
        const _variant_t & retval );
    _variant_t GetAccrueAt ( );
    void PutAccrueAt (
        const _variant_t & retval );
    _bstr_t GetNotes ( );
    void PutNotes (
        _bstr_t retval );
    _variant_t GetRemainingCost ( );
    _variant_t GetRemainingWork ( );
    _variant_t GetWorkVariance ( );
    _variant_t GetCostVariance ( );
    _variant_t GetOverallocated ( );
    _variant_t GetPeakUnits ( );
    long GetUniqueID ( );
    _variant_t GetPercentWorkComplete ( );
    _bstr_t GetText3 ( );
    void PutText3 (
        _bstr_t retval );
    _bstr_t GetText4 ( );
    void PutText4 (
        _bstr_t retval );
    _bstr_t GetText5 ( );
    void PutText5 (
        _bstr_t retval );
    long GetObjects ( );
    _variant_t GetLinkedFields ( );
    _bstr_t GetEMailAddress ( );
    void PutEMailAddress (
        _bstr_t retval );
    _variant_t GetRegularWork ( );
    _variant_t GetActualOvertimeWork ( );
    _variant_t GetRemainingOvertimeWork ( );
    _variant_t GetOvertimeCost ( );
    _variant_t GetActualOvertimeCost ( );
    _variant_t GetRemainingOvertimeCost ( );
    _variant_t GetBCWS ( );
    _variant_t GetBCWP ( );
    _variant_t GetACWP ( );
    _variant_t GetSV ( );
    AssignmentsPtr GetAssignments ( );
    _variant_t GetAvailableFrom ( );
    void PutAvailableFrom (
        const _variant_t & retval );
    _variant_t GetAvailableTo ( );
    void PutAvailableTo (
        const _variant_t & retval );
    IDispatchPtr GetParent ( );
    _MSProjectPtr GetApplication ( );
    _bstr_t GetText6 ( );
    void PutText6 (
        _bstr_t retval );
    _bstr_t GetText7 ( );
    void PutText7 (
        _bstr_t retval );
    _bstr_t GetText8 ( );
    void PutText8 (
        _bstr_t retval );
    _bstr_t GetText9 ( );
    void PutText9 (
        _bstr_t retval );
    _bstr_t GetText10 ( );
    void PutText10 (
        _bstr_t retval );
    _variant_t GetStart1 ( );
    void PutStart1 (
        const _variant_t & retval );
    _variant_t GetStart2 ( );
    void PutStart2 (
        const _variant_t & retval );
    _variant_t GetStart3 ( );
    void PutStart3 (
        const _variant_t & retval );
    _variant_t GetStart4 ( );
    void PutStart4 (
        const _variant_t & retval );
    _variant_t GetStart5 ( );
    void PutStart5 (
        const _variant_t & retval );
    _variant_t GetFinish1 ( );
    void PutFinish1 (
        const _variant_t & retval );
    _variant_t GetFinish2 ( );
    void PutFinish2 (
        const _variant_t & retval );
    _variant_t GetFinish3 ( );
    void PutFinish3 (
        const _variant_t & retval );
    _variant_t GetFinish4 ( );
    void PutFinish4 (
        const _variant_t & retval );
    _variant_t GetFinish5 ( );
    void PutFinish5 (
        const _variant_t & retval );
    double GetNumber1 ( );
    void PutNumber1 (
        double retval );
    double GetNumber2 ( );
    void PutNumber2 (
        double retval );
    double GetNumber3 ( );
    void PutNumber3 (
        double retval );
    double GetNumber4 ( );
    void PutNumber4 (
        double retval );
    double GetNumber5 ( );
    void PutNumber5 (
        double retval );
    _variant_t GetDuration1 ( );
    void PutDuration1 (
        const _variant_t & retval );
    _variant_t GetDuration2 ( );
    void PutDuration2 (
        const _variant_t & retval );
    _variant_t GetDuration3 ( );
    void PutDuration3 (
        const _variant_t & retval );
    _variant_t GetCost1 ( );
    void PutCost1 (
        const _variant_t & retval );
    _variant_t GetCost2 ( );
    void PutCost2 (
        const _variant_t & retval );
    _variant_t GetCost3 ( );
    void PutCost3 (
        const _variant_t & retval );
    _variant_t GetFlag10 ( );
    void PutFlag10 (
        const _variant_t & retval );
    _variant_t GetFlag1 ( );
    void PutFlag1 (
        const _variant_t & retval );
    _variant_t GetFlag2 ( );
    void PutFlag2 (
        const _variant_t & retval );
    _variant_t GetFlag3 ( );
    void PutFlag3 (
        const _variant_t & retval );
    _variant_t GetFlag4 ( );
    void PutFlag4 (
        const _variant_t & retval );
    _variant_t GetFlag5 ( );
    void PutFlag5 (
        const _variant_t & retval );
    _variant_t GetFlag6 ( );
    void PutFlag6 (
        const _variant_t & retval );
    _variant_t GetFlag7 ( );
    void PutFlag7 (
        const _variant_t & retval );
    _variant_t GetFlag8 ( );
    void PutFlag8 (
        const _variant_t & retval );
    _variant_t GetFlag9 ( );
    void PutFlag9 (
        const _variant_t & retval );
    _bstr_t GetHyperlink ( );
    void PutHyperlink (
        _bstr_t retval );
    _bstr_t GetHyperlinkAddress ( );
    void PutHyperlinkAddress (
        _bstr_t retval );
    _bstr_t GetHyperlinkSubAddress ( );
    void PutHyperlinkSubAddress (
        _bstr_t retval );
    _bstr_t GetHyperlinkHREF ( );
    void PutHyperlinkHREF (
        _bstr_t retval );
    _bstr_t GetField (
        enum PjField FieldID );
    HRESULT SetField (
        enum PjField FieldID,
        _bstr_t Value );
    CalendarPtr GetCalendar ( );
    HRESULT Delete ( );
    HRESULT AppendNotes (
        _bstr_t Value );
    TimeScaleValuesPtr TimeScaleData (
        const _variant_t & StartDate,
        const _variant_t & EndDate,
        enum PjResourceTimescaledData Type,
        enum PjTimescaleUnit TimeScaleUnit,
        long Count );
    CostRateTablesPtr GetCostRateTables ( );
    PayRatesPtr GetPayRates ( );
    _variant_t GetCanLevel ( );
    void PutCanLevel (
        const _variant_t & retval );
    _variant_t GetCost4 ( );
    void PutCost4 (
        const _variant_t & retval );
    _variant_t GetCost5 ( );
    void PutCost5 (
        const _variant_t & retval );
    _variant_t GetCost6 ( );
    void PutCost6 (
        const _variant_t & retval );
    _variant_t GetCost7 ( );
    void PutCost7 (
        const _variant_t & retval );
    _variant_t GetCost8 ( );
    void PutCost8 (
        const _variant_t & retval );
    _variant_t GetCost9 ( );
    void PutCost9 (
        const _variant_t & retval );
    _variant_t GetCost10 ( );
    void PutCost10 (
        const _variant_t & retval );
    _variant_t GetDate1 ( );
    void PutDate1 (
        const _variant_t & retval );
    _variant_t GetDate2 ( );
    void PutDate2 (
        const _variant_t & retval );
    _variant_t GetDate3 ( );
    void PutDate3 (
        const _variant_t & retval );
    _variant_t GetDate4 ( );
    void PutDate4 (
        const _variant_t & retval );
    _variant_t GetDate5 ( );
    void PutDate5 (
        const _variant_t & retval );
    _variant_t GetDate6 ( );
    void PutDate6 (
        const _variant_t & retval );
    _variant_t GetDate7 ( );
    void PutDate7 (
        const _variant_t & retval );
    _variant_t GetDate8 ( );
    void PutDate8 (
        const _variant_t & retval );
    _variant_t GetDate9 ( );
    void PutDate9 (
        const _variant_t & retval );
    _variant_t GetDate10 ( );
    void PutDate10 (
        const _variant_t & retval );
    _variant_t GetDuration4 ( );
    void PutDuration4 (
        const _variant_t & retval );
    _variant_t GetDuration5 ( );
    void PutDuration5 (
        const _variant_t & retval );
    _variant_t GetDuration6 ( );
    void PutDuration6 (
        const _variant_t & retval );
    _variant_t GetDuration7 ( );
    void PutDuration7 (
        const _variant_t & retval );
    _variant_t GetDuration8 ( );
    void PutDuration8 (
        const _variant_t & retval );
    _variant_t GetDuration9 ( );
    void PutDuration9 (
        const _variant_t & retval );
    _variant_t GetDuration10 ( );
    void PutDuration10 (
        const _variant_t & retval );
    _variant_t GetFinish6 ( );
    void PutFinish6 (
        const _variant_t & retval );
    _variant_t GetFinish7 ( );
    void PutFinish7 (
        const _variant_t & retval );
    _variant_t GetFinish8 ( );
    void PutFinish8 (
        const _variant_t & retval );
    _variant_t GetFinish9 ( );
    void PutFinish9 (
        const _variant_t & retval );
    _variant_t GetFinish10 ( );
    void PutFinish10 (
        const _variant_t & retval );
    _variant_t GetFlag11 ( );
    void PutFlag11 (
        const _variant_t & retval );
    _variant_t GetFlag12 ( );
    void PutFlag12 (
        const _variant_t & retval );
    _variant_t GetFlag13 ( );
    void PutFlag13 (
        const _variant_t & retval );
    _variant_t GetFlag14 ( );
    void PutFlag14 (
        const _variant_t & retval );
    _variant_t GetFlag15 ( );
    void PutFlag15 (
        const _variant_t & retval );
    _variant_t GetFlag16 ( );
    void PutFlag16 (
        const _variant_t & retval );
    _variant_t GetFlag17 ( );
    void PutFlag17 (
        const _variant_t & retval );
    _variant_t GetFlag18 ( );
    void PutFlag18 (
        const _variant_t & retval );
    _variant_t GetFlag19 ( );
    void PutFlag19 (
        const _variant_t & retval );
    _variant_t GetFlag20 ( );
    void PutFlag20 (
        const _variant_t & retval );
    double GetNumber6 ( );
    void PutNumber6 (
        double retval );
    double GetNumber7 ( );
    void PutNumber7 (
        double retval );
    double GetNumber8 ( );
    void PutNumber8 (
        double retval );
    double GetNumber9 ( );
    void PutNumber9 (
        double retval );
    double GetNumber10 ( );
    void PutNumber10 (
        double retval );
    double GetNumber11 ( );
    void PutNumber11 (
        double retval );
    double GetNumber12 ( );
    void PutNumber12 (
        double retval );
    double GetNumber13 ( );
    void PutNumber13 (
        double retval );
    double GetNumber14 ( );
    void PutNumber14 (
        double retval );
    double GetNumber15 ( );
    void PutNumber15 (
        double retval );
    double GetNumber16 ( );
    void PutNumber16 (
        double retval );
    double GetNumber17 ( );
    void PutNumber17 (
        double retval );
    double GetNumber18 ( );
    void PutNumber18 (
        double retval );
    double GetNumber19 ( );
    void PutNumber19 (
        double retval );
    double GetNumber20 ( );
    void PutNumber20 (
        double retval );
    _variant_t GetStart6 ( );
    void PutStart6 (
        const _variant_t & retval );
    _variant_t GetStart7 ( );
    void PutStart7 (
        const _variant_t & retval );
    _variant_t GetStart8 ( );
    void PutStart8 (
        const _variant_t & retval );
    _variant_t GetStart9 ( );
    void PutStart9 (
        const _variant_t & retval );
    _variant_t GetStart10 ( );
    void PutStart10 (
        const _variant_t & retval );
    _bstr_t GetText11 ( );
    void PutText11 (
        _bstr_t retval );
    _bstr_t GetText12 ( );
    void PutText12 (
        _bstr_t retval );
    _bstr_t GetText13 ( );
    void PutText13 (
        _bstr_t retval );
    _bstr_t GetText14 ( );
    void PutText14 (
        _bstr_t retval );
    _bstr_t GetText15 ( );
    void PutText15 (
        _bstr_t retval );
    _bstr_t GetText16 ( );
    void PutText16 (
        _bstr_t retval );
    _bstr_t GetText17 ( );
    void PutText17 (
        _bstr_t retval );
    _bstr_t GetText18 ( );
    void PutText18 (
        _bstr_t retval );
    _bstr_t GetText19 ( );
    void PutText19 (
        _bstr_t retval );
    _bstr_t GetText20 ( );
    void PutText20 (
        _bstr_t retval );
    _bstr_t GetText21 ( );
    void PutText21 (
        _bstr_t retval );
    _bstr_t GetText22 ( );
    void PutText22 (
        _bstr_t retval );
    _bstr_t GetText23 ( );
    void PutText23 (
        _bstr_t retval );
    _bstr_t GetText24 ( );
    void PutText24 (
        _bstr_t retval );
    _bstr_t GetText25 ( );
    void PutText25 (
        _bstr_t retval );
    _bstr_t GetText26 ( );
    void PutText26 (
        _bstr_t retval );
    _bstr_t GetText27 ( );
    void PutText27 (
        _bstr_t retval );
    _bstr_t GetText28 ( );
    void PutText28 (
        _bstr_t retval );
    _bstr_t GetText29 ( );
    void PutText29 (
        _bstr_t retval );
    _bstr_t GetText30 ( );
    void PutText30 (
        _bstr_t retval );
    _bstr_t GetPhonetics ( );
    void PutPhonetics (
        _bstr_t retval );
    long GetIndex ( );
    HRESULT Level ( );
    _variant_t GetConfirmed ( );
    _variant_t GetResponsePending ( );
    _variant_t GetTeamStatusPending ( );
    _variant_t GetUpdateNeeded ( );
    _variant_t GetCV ( );
    enum PjWorkgroupMessages GetWorkgroup ( );
    void PutWorkgroup (
        enum PjWorkgroupMessages retval );
    _bstr_t GetProject ( );
    AvailabilitiesPtr GetAvailabilities ( );
    _bstr_t GetOutlineCode1 ( );
    void PutOutlineCode1 (
        _bstr_t retval );
    _bstr_t GetOutlineCode2 ( );
    void PutOutlineCode2 (
        _bstr_t retval );
    _bstr_t GetOutlineCode3 ( );
    void PutOutlineCode3 (
        _bstr_t retval );
    _bstr_t GetOutlineCode4 ( );
    void PutOutlineCode4 (
        _bstr_t retval );
    _bstr_t GetOutlineCode5 ( );
    void PutOutlineCode5 (
        _bstr_t retval );
    _bstr_t GetOutlineCode6 ( );
    void PutOutlineCode6 (
        _bstr_t retval );
    _bstr_t GetOutlineCode7 ( );
    void PutOutlineCode7 (
        _bstr_t retval );
    _bstr_t GetOutlineCode8 ( );
    void PutOutlineCode8 (
        _bstr_t retval );
    _bstr_t GetOutlineCode9 ( );
    void PutOutlineCode9 (
        _bstr_t retval );
    _bstr_t GetOutlineCode10 ( );
    void PutOutlineCode10 (
        _bstr_t retval );
    _bstr_t GetMaterialLabel ( );
    void PutMaterialLabel (
        _bstr_t retval );
    enum PjResourceTypes GetType ( );
    void PutType (
        enum PjResourceTypes retval );
    _variant_t GetVAC ( );
    _variant_t GetGroupBySummary ( );
    _bstr_t GetWindowsUserAccount ( );
    void PutWindowsUserAccount (
        _bstr_t retval );
    _bstr_t GetHyperlinkScreenTip ( );
    void PutHyperlinkScreenTip (
        _bstr_t retval );
    _variant_t GetBaseline1Work ( );
    void PutBaseline1Work (
        const _variant_t & retval );
    _variant_t GetBaseline1Cost ( );
    void PutBaseline1Cost (
        const _variant_t & retval );
    _variant_t GetBaseline2Work ( );
    void PutBaseline2Work (
        const _variant_t & retval );
    _variant_t GetBaseline2Cost ( );
    void PutBaseline2Cost (
        const _variant_t & retval );
    _variant_t GetBaseline3Work ( );
    void PutBaseline3Work (
        const _variant_t & retval );
    _variant_t GetBaseline3Cost ( );
    void PutBaseline3Cost (
        const _variant_t & retval );
    _variant_t GetBaseline4Work ( );
    void PutBaseline4Work (
        const _variant_t & retval );
    _variant_t GetBaseline4Cost ( );
    void PutBaseline4Cost (
        const _variant_t & retval );
    _variant_t GetBaseline5Work ( );
    void PutBaseline5Work (
        const _variant_t & retval );
    _variant_t GetBaseline5Cost ( );
    void PutBaseline5Cost (
        const _variant_t & retval );
    _variant_t GetBaseline6Work ( );
    void PutBaseline6Work (
        const _variant_t & retval );
    _variant_t GetBaseline6Cost ( );
    void PutBaseline6Cost (
        const _variant_t & retval );
    _variant_t GetBaseline7Work ( );
    void PutBaseline7Work (
        const _variant_t & retval );
    _variant_t GetBaseline7Cost ( );
    void PutBaseline7Cost (
        const _variant_t & retval );
    _variant_t GetBaseline8Work ( );
    void PutBaseline8Work (
        const _variant_t & retval );
    _variant_t GetBaseline8Cost ( );
    void PutBaseline8Cost (
        const _variant_t & retval );
    _variant_t GetBaseline9Work ( );
    void PutBaseline9Work (
        const _variant_t & retval );
    _variant_t GetBaseline9Cost ( );
    void PutBaseline9Cost (
        const _variant_t & retval );
    _variant_t GetBaseline10Work ( );
    void PutBaseline10Work (
        const _variant_t & retval );
    _variant_t GetBaseline10Cost ( );
    void PutBaseline10Cost (
        const _variant_t & retval );
    long GetEnterpriseUniqueID ( );
    _variant_t GetEnterpriseCost1 ( );
    void PutEnterpriseCost1 (
        const _variant_t & retval );
    _variant_t GetEnterpriseCost2 ( );
    void PutEnterpriseCost2 (
        const _variant_t & retval );
    _variant_t GetEnterpriseCost3 ( );
    void PutEnterpriseCost3 (
        const _variant_t & retval );
    _variant_t GetEnterpriseCost4 ( );
    void PutEnterpriseCost4 (
        const _variant_t & retval );
    _variant_t GetEnterpriseCost5 ( );
    void PutEnterpriseCost5 (
        const _variant_t & retval );
    _variant_t GetEnterpriseCost6 ( );
    void PutEnterpriseCost6 (
        const _variant_t & retval );
    _variant_t GetEnterpriseCost7 ( );
    void PutEnterpriseCost7 (
        const _variant_t & retval );
    _variant_t GetEnterpriseCost8 ( );
    void PutEnterpriseCost8 (
        const _variant_t & retval );
    _variant_t GetEnterpriseCost9 ( );
    void PutEnterpriseCost9 (
        const _variant_t & retval );
    _variant_t GetEnterpriseCost10 ( );
    void PutEnterpriseCost10 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDate1 ( );
    void PutEnterpriseDate1 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDate2 ( );
    void PutEnterpriseDate2 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDate3 ( );
    void PutEnterpriseDate3 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDate4 ( );
    void PutEnterpriseDate4 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDate5 ( );
    void PutEnterpriseDate5 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDate6 ( );
    void PutEnterpriseDate6 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDate7 ( );
    void PutEnterpriseDate7 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDate8 ( );
    void PutEnterpriseDate8 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDate9 ( );
    void PutEnterpriseDate9 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDate10 ( );
    void PutEnterpriseDate10 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDate11 ( );
    void PutEnterpriseDate11 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDate12 ( );
    void PutEnterpriseDate12 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDate13 ( );
    void PutEnterpriseDate13 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDate14 ( );
    void PutEnterpriseDate14 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDate15 ( );
    void PutEnterpriseDate15 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDate16 ( );
    void PutEnterpriseDate16 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDate17 ( );
    void PutEnterpriseDate17 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDate18 ( );
    void PutEnterpriseDate18 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDate19 ( );
    void PutEnterpriseDate19 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDate20 ( );
    void PutEnterpriseDate20 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDate21 ( );
    void PutEnterpriseDate21 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDate22 ( );
    void PutEnterpriseDate22 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDate23 ( );
    void PutEnterpriseDate23 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDate24 ( );
    void PutEnterpriseDate24 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDate25 ( );
    void PutEnterpriseDate25 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDate26 ( );
    void PutEnterpriseDate26 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDate27 ( );
    void PutEnterpriseDate27 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDate28 ( );
    void PutEnterpriseDate28 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDate29 ( );
    void PutEnterpriseDate29 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDate30 ( );
    void PutEnterpriseDate30 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDuration1 ( );
    void PutEnterpriseDuration1 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDuration2 ( );
    void PutEnterpriseDuration2 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDuration3 ( );
    void PutEnterpriseDuration3 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDuration4 ( );
    void PutEnterpriseDuration4 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDuration5 ( );
    void PutEnterpriseDuration5 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDuration6 ( );
    void PutEnterpriseDuration6 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDuration7 ( );
    void PutEnterpriseDuration7 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDuration8 ( );
    void PutEnterpriseDuration8 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDuration9 ( );
    void PutEnterpriseDuration9 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDuration10 ( );
    void PutEnterpriseDuration10 (
        const _variant_t & retval );
    _variant_t GetEnterpriseFlag1 ( );
    void PutEnterpriseFlag1 (
        const _variant_t & retval );
    _variant_t GetEnterpriseFlag2 ( );
    void PutEnterpriseFlag2 (
        const _variant_t & retval );
    _variant_t GetEnterpriseFlag3 ( );
    void PutEnterpriseFlag3 (
        const _variant_t & retval );
    _variant_t GetEnterpriseFlag4 ( );
    void PutEnterpriseFlag4 (
        const _variant_t & retval );
    _variant_t GetEnterpriseFlag5 ( );
    void PutEnterpriseFlag5 (
        const _variant_t & retval );
    _variant_t GetEnterpriseFlag6 ( );
    void PutEnterpriseFlag6 (
        const _variant_t & retval );
    _variant_t GetEnterpriseFlag7 ( );
    void PutEnterpriseFlag7 (
        const _variant_t & retval );
    _variant_t GetEnterpriseFlag8 ( );
    void PutEnterpriseFlag8 (
        const _variant_t & retval );
    _variant_t GetEnterpriseFlag9 ( );
    void PutEnterpriseFlag9 (
        const _variant_t & retval );
    _variant_t GetEnterpriseFlag10 ( );
    void PutEnterpriseFlag10 (
        const _variant_t & retval );
    _variant_t GetEnterpriseFlag11 ( );
    void PutEnterpriseFlag11 (
        const _variant_t & retval );
    _variant_t GetEnterpriseFlag12 ( );
    void PutEnterpriseFlag12 (
        const _variant_t & retval );
    _variant_t GetEnterpriseFlag13 ( );
    void PutEnterpriseFlag13 (
        const _variant_t & retval );
    _variant_t GetEnterpriseFlag14 ( );
    void PutEnterpriseFlag14 (
        const _variant_t & retval );
    _variant_t GetEnterpriseFlag15 ( );
    void PutEnterpriseFlag15 (
        const _variant_t & retval );
    _variant_t GetEnterpriseFlag16 ( );
    void PutEnterpriseFlag16 (
        const _variant_t & retval );
    _variant_t GetEnterpriseFlag17 ( );
    void PutEnterpriseFlag17 (
        const _variant_t & retval );
    _variant_t GetEnterpriseFlag18 ( );
    void PutEnterpriseFlag18 (
        const _variant_t & retval );
    _variant_t GetEnterpriseFlag19 ( );
    void PutEnterpriseFlag19 (
        const _variant_t & retval );
    _variant_t GetEnterpriseFlag20 ( );
    void PutEnterpriseFlag20 (
        const _variant_t & retval );
    double GetEnterpriseNumber1 ( );
    void PutEnterpriseNumber1 (
        double retval );
    double GetEnterpriseNumber2 ( );
    void PutEnterpriseNumber2 (
        double retval );
    double GetEnterpriseNumber3 ( );
    void PutEnterpriseNumber3 (
        double retval );
    double GetEnterpriseNumber4 ( );
    void PutEnterpriseNumber4 (
        double retval );
    double GetEnterpriseNumber5 ( );
    void PutEnterpriseNumber5 (
        double retval );
    double GetEnterpriseNumber6 ( );
    void PutEnterpriseNumber6 (
        double retval );
    double GetEnterpriseNumber7 ( );
    void PutEnterpriseNumber7 (
        double retval );
    double GetEnterpriseNumber8 ( );
    void PutEnterpriseNumber8 (
        double retval );
    double GetEnterpriseNumber9 ( );
    void PutEnterpriseNumber9 (
        double retval );
    double GetEnterpriseNumber10 ( );
    void PutEnterpriseNumber10 (
        double retval );
    double GetEnterpriseNumber11 ( );
    void PutEnterpriseNumber11 (
        double retval );
    double GetEnterpriseNumber12 ( );
    void PutEnterpriseNumber12 (
        double retval );
    double GetEnterpriseNumber13 ( );
    void PutEnterpriseNumber13 (
        double retval );
    double GetEnterpriseNumber14 ( );
    void PutEnterpriseNumber14 (
        double retval );
    double GetEnterpriseNumber15 ( );
    void PutEnterpriseNumber15 (
        double retval );
    double GetEnterpriseNumber16 ( );
    void PutEnterpriseNumber16 (
        double retval );
    double GetEnterpriseNumber17 ( );
    void PutEnterpriseNumber17 (
        double retval );
    double GetEnterpriseNumber18 ( );
    void PutEnterpriseNumber18 (
        double retval );
    double GetEnterpriseNumber19 ( );
    void PutEnterpriseNumber19 (
        double retval );
    double GetEnterpriseNumber20 ( );
    void PutEnterpriseNumber20 (
        double retval );
    double GetEnterpriseNumber21 ( );
    void PutEnterpriseNumber21 (
        double retval );
    double GetEnterpriseNumber22 ( );
    void PutEnterpriseNumber22 (
        double retval );
    double GetEnterpriseNumber23 ( );
    void PutEnterpriseNumber23 (
        double retval );
    double GetEnterpriseNumber24 ( );
    void PutEnterpriseNumber24 (
        double retval );
    double GetEnterpriseNumber25 ( );
    void PutEnterpriseNumber25 (
        double retval );
    double GetEnterpriseNumber26 ( );
    void PutEnterpriseNumber26 (
        double retval );
    double GetEnterpriseNumber27 ( );
    void PutEnterpriseNumber27 (
        double retval );
    double GetEnterpriseNumber28 ( );
    void PutEnterpriseNumber28 (
        double retval );
    double GetEnterpriseNumber29 ( );
    void PutEnterpriseNumber29 (
        double retval );
    double GetEnterpriseNumber30 ( );
    void PutEnterpriseNumber30 (
        double retval );
    double GetEnterpriseNumber31 ( );
    void PutEnterpriseNumber31 (
        double retval );
    double GetEnterpriseNumber32 ( );
    void PutEnterpriseNumber32 (
        double retval );
    double GetEnterpriseNumber33 ( );
    void PutEnterpriseNumber33 (
        double retval );
    double GetEnterpriseNumber34 ( );
    void PutEnterpriseNumber34 (
        double retval );
    double GetEnterpriseNumber35 ( );
    void PutEnterpriseNumber35 (
        double retval );
    double GetEnterpriseNumber36 ( );
    void PutEnterpriseNumber36 (
        double retval );
    double GetEnterpriseNumber37 ( );
    void PutEnterpriseNumber37 (
        double retval );
    double GetEnterpriseNumber38 ( );
    void PutEnterpriseNumber38 (
        double retval );
    double GetEnterpriseNumber39 ( );
    void PutEnterpriseNumber39 (
        double retval );
    double GetEnterpriseNumber40 ( );
    void PutEnterpriseNumber40 (
        double retval );
    _bstr_t GetEnterpriseOutlineCode1 ( );
    void PutEnterpriseOutlineCode1 (
        _bstr_t retval );
    _bstr_t GetEnterpriseOutlineCode2 ( );
    void PutEnterpriseOutlineCode2 (
        _bstr_t retval );
    _bstr_t GetEnterpriseOutlineCode3 ( );
    void PutEnterpriseOutlineCode3 (
        _bstr_t retval );
    _bstr_t GetEnterpriseOutlineCode4 ( );
    void PutEnterpriseOutlineCode4 (
        _bstr_t retval );
    _bstr_t GetEnterpriseOutlineCode5 ( );
    void PutEnterpriseOutlineCode5 (
        _bstr_t retval );
    _bstr_t GetEnterpriseOutlineCode6 ( );
    void PutEnterpriseOutlineCode6 (
        _bstr_t retval );
    _bstr_t GetEnterpriseOutlineCode7 ( );
    void PutEnterpriseOutlineCode7 (
        _bstr_t retval );
    _bstr_t GetEnterpriseOutlineCode8 ( );
    void PutEnterpriseOutlineCode8 (
        _bstr_t retval );
    _bstr_t GetEnterpriseOutlineCode9 ( );
    void PutEnterpriseOutlineCode9 (
        _bstr_t retval );
    _bstr_t GetEnterpriseOutlineCode10 ( );
    void PutEnterpriseOutlineCode10 (
        _bstr_t retval );
    _bstr_t GetEnterpriseOutlineCode11 ( );
    void PutEnterpriseOutlineCode11 (
        _bstr_t retval );
    _bstr_t GetEnterpriseOutlineCode12 ( );
    void PutEnterpriseOutlineCode12 (
        _bstr_t retval );
    _bstr_t GetEnterpriseOutlineCode13 ( );
    void PutEnterpriseOutlineCode13 (
        _bstr_t retval );
    _bstr_t GetEnterpriseOutlineCode14 ( );
    void PutEnterpriseOutlineCode14 (
        _bstr_t retval );
    _bstr_t GetEnterpriseOutlineCode15 ( );
    void PutEnterpriseOutlineCode15 (
        _bstr_t retval );
    _bstr_t GetEnterpriseOutlineCode16 ( );
    void PutEnterpriseOutlineCode16 (
        _bstr_t retval );
    _bstr_t GetEnterpriseOutlineCode17 ( );
    void PutEnterpriseOutlineCode17 (
        _bstr_t retval );
    _bstr_t GetEnterpriseOutlineCode18 ( );
    void PutEnterpriseOutlineCode18 (
        _bstr_t retval );
    _bstr_t GetEnterpriseOutlineCode19 ( );
    void PutEnterpriseOutlineCode19 (
        _bstr_t retval );
    _bstr_t GetEnterpriseOutlineCode20 ( );
    void PutEnterpriseOutlineCode20 (
        _bstr_t retval );
    _bstr_t GetEnterpriseOutlineCode21 ( );
    void PutEnterpriseOutlineCode21 (
        _bstr_t retval );
    _bstr_t GetEnterpriseOutlineCode22 ( );
    void PutEnterpriseOutlineCode22 (
        _bstr_t retval );
    _bstr_t GetEnterpriseOutlineCode23 ( );
    void PutEnterpriseOutlineCode23 (
        _bstr_t retval );
    _bstr_t GetEnterpriseOutlineCode24 ( );
    void PutEnterpriseOutlineCode24 (
        _bstr_t retval );
    _bstr_t GetEnterpriseOutlineCode25 ( );
    void PutEnterpriseOutlineCode25 (
        _bstr_t retval );
    _bstr_t GetEnterpriseOutlineCode26 ( );
    void PutEnterpriseOutlineCode26 (
        _bstr_t retval );
    _bstr_t GetEnterpriseOutlineCode27 ( );
    void PutEnterpriseOutlineCode27 (
        _bstr_t retval );
    _bstr_t GetEnterpriseOutlineCode28 ( );
    void PutEnterpriseOutlineCode28 (
        _bstr_t retval );
    _bstr_t GetEnterpriseOutlineCode29 ( );
    void PutEnterpriseOutlineCode29 (
        _bstr_t retval );
    _bstr_t GetEnterpriseRBS ( );
    void PutEnterpriseRBS (
        _bstr_t retval );
    _bstr_t GetEnterpriseText1 ( );
    void PutEnterpriseText1 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText2 ( );
    void PutEnterpriseText2 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText3 ( );
    void PutEnterpriseText3 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText4 ( );
    void PutEnterpriseText4 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText5 ( );
    void PutEnterpriseText5 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText6 ( );
    void PutEnterpriseText6 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText7 ( );
    void PutEnterpriseText7 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText8 ( );
    void PutEnterpriseText8 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText9 ( );
    void PutEnterpriseText9 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText10 ( );
    void PutEnterpriseText10 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText11 ( );
    void PutEnterpriseText11 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText12 ( );
    void PutEnterpriseText12 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText13 ( );
    void PutEnterpriseText13 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText14 ( );
    void PutEnterpriseText14 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText15 ( );
    void PutEnterpriseText15 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText16 ( );
    void PutEnterpriseText16 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText17 ( );
    void PutEnterpriseText17 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText18 ( );
    void PutEnterpriseText18 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText19 ( );
    void PutEnterpriseText19 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText20 ( );
    void PutEnterpriseText20 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText21 ( );
    void PutEnterpriseText21 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText22 ( );
    void PutEnterpriseText22 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText23 ( );
    void PutEnterpriseText23 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText24 ( );
    void PutEnterpriseText24 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText25 ( );
    void PutEnterpriseText25 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText26 ( );
    void PutEnterpriseText26 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText27 ( );
    void PutEnterpriseText27 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText28 ( );
    void PutEnterpriseText28 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText29 ( );
    void PutEnterpriseText29 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText30 ( );
    void PutEnterpriseText30 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText31 ( );
    void PutEnterpriseText31 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText32 ( );
    void PutEnterpriseText32 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText33 ( );
    void PutEnterpriseText33 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText34 ( );
    void PutEnterpriseText34 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText35 ( );
    void PutEnterpriseText35 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText36 ( );
    void PutEnterpriseText36 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText37 ( );
    void PutEnterpriseText37 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText38 ( );
    void PutEnterpriseText38 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText39 ( );
    void PutEnterpriseText39 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText40 ( );
    void PutEnterpriseText40 (
        _bstr_t retval );
    _variant_t GetEnterpriseGeneric ( );
    void PutEnterpriseGeneric (
        const _variant_t & retval );
    _variant_t GetEnterpriseBaseCalendar ( );
    _variant_t GetEnterpriseRequiredValues ( );
    _variant_t GetEnterpriseNameUsed ( );
    _variant_t GetEnterprise ( );
    _variant_t GetEnterpriseIsCheckedOut ( );
    _bstr_t GetEnterpriseCheckedOutBy ( );
    _variant_t GetEnterpriseLastModifiedDate ( );
    _variant_t GetEnterpriseInactive ( );
    void PutEnterpriseInactive (
        const _variant_t & retval );
    VARIANT_BOOL EnterpriseTeamMember (
        IDispatch * Project );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_ID (
        long * retval ) = 0;
    virtual HRESULT __stdcall get_Name (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Name (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Initials (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Initials (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Group (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Group (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_MaxUnits (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_MaxUnits (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_BaseCalendar (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_BaseCalendar (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_StandardRate (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_StandardRate (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_OvertimeRate (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_OvertimeRate (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Text1 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Text1 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Text2 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Text2 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Code (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Code (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_ActualCost (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall get_Cost (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall get_Work (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall get_ActualWork (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall get_BaselineWork (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_BaselineWork (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_OvertimeWork (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall get_BaselineCost (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_BaselineCost (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_CostPerUse (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_CostPerUse (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_AccrueAt (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_AccrueAt (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Notes (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Notes (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_RemainingCost (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall get_RemainingWork (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall get_WorkVariance (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall get_CostVariance (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall get_Overallocated (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall get_PeakUnits (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall get_UniqueID (
        long * retval ) = 0;
    virtual HRESULT __stdcall get_PercentWorkComplete (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall get_Text3 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Text3 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Text4 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Text4 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Text5 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Text5 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Objects (
        long * retval ) = 0;
    virtual HRESULT __stdcall get_LinkedFields (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall get_EMailAddress (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EMailAddress (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_RegularWork (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall get_ActualOvertimeWork (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall get_RemainingOvertimeWork (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall get_OvertimeCost (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall get_ActualOvertimeCost (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall get_RemainingOvertimeCost (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall get_BCWS (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall get_BCWP (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall get_ACWP (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall get_SV (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall get_Assignments (
        struct Assignments * * retval ) = 0;
    virtual HRESULT __stdcall get_AvailableFrom (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_AvailableFrom (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_AvailableTo (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_AvailableTo (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Parent (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall get_Application (
        struct _MSProject * * retval ) = 0;
    virtual HRESULT __stdcall get_Text6 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Text6 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Text7 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Text7 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Text8 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Text8 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Text9 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Text9 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Text10 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Text10 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Start1 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Start1 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Start2 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Start2 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Start3 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Start3 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Start4 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Start4 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Start5 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Start5 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Finish1 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Finish1 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Finish2 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Finish2 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Finish3 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Finish3 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Finish4 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Finish4 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Finish5 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Finish5 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Number1 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_Number1 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_Number2 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_Number2 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_Number3 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_Number3 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_Number4 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_Number4 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_Number5 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_Number5 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_Duration1 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Duration1 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Duration2 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Duration2 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Duration3 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Duration3 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Cost1 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Cost1 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Cost2 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Cost2 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Cost3 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Cost3 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Flag10 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Flag10 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Flag1 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Flag1 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Flag2 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Flag2 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Flag3 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Flag3 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Flag4 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Flag4 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Flag5 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Flag5 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Flag6 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Flag6 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Flag7 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Flag7 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Flag8 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Flag8 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Flag9 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Flag9 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Hyperlink (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Hyperlink (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_HyperlinkAddress (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_HyperlinkAddress (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_HyperlinkSubAddress (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_HyperlinkSubAddress (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_HyperlinkHREF (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_HyperlinkHREF (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall raw_GetField (
        enum PjField FieldID,
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall raw_SetField (
        enum PjField FieldID,
        BSTR Value ) = 0;
    virtual HRESULT __stdcall get_Calendar (
        struct Calendar * * retval ) = 0;
    virtual HRESULT __stdcall raw_Delete ( ) = 0;
    virtual HRESULT __stdcall raw_AppendNotes (
        BSTR Value ) = 0;
    virtual HRESULT __stdcall raw_TimeScaleData (
        VARIANT StartDate,
        VARIANT EndDate,
        enum PjResourceTimescaledData Type,
        enum PjTimescaleUnit TimeScaleUnit,
        long Count,
        struct TimeScaleValues * * retval ) = 0;
    virtual HRESULT __stdcall get_CostRateTables (
        struct CostRateTables * * retval ) = 0;
    virtual HRESULT __stdcall get_PayRates (
        struct PayRates * * retval ) = 0;
    virtual HRESULT __stdcall get_CanLevel (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_CanLevel (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Cost4 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Cost4 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Cost5 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Cost5 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Cost6 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Cost6 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Cost7 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Cost7 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Cost8 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Cost8 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Cost9 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Cost9 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Cost10 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Cost10 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Date1 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Date1 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Date2 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Date2 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Date3 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Date3 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Date4 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Date4 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Date5 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Date5 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Date6 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Date6 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Date7 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Date7 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Date8 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Date8 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Date9 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Date9 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Date10 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Date10 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Duration4 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Duration4 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Duration5 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Duration5 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Duration6 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Duration6 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Duration7 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Duration7 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Duration8 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Duration8 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Duration9 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Duration9 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Duration10 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Duration10 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Finish6 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Finish6 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Finish7 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Finish7 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Finish8 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Finish8 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Finish9 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Finish9 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Finish10 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Finish10 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Flag11 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Flag11 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Flag12 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Flag12 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Flag13 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Flag13 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Flag14 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Flag14 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Flag15 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Flag15 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Flag16 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Flag16 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Flag17 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Flag17 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Flag18 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Flag18 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Flag19 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Flag19 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Flag20 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Flag20 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Number6 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_Number6 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_Number7 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_Number7 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_Number8 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_Number8 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_Number9 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_Number9 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_Number10 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_Number10 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_Number11 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_Number11 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_Number12 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_Number12 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_Number13 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_Number13 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_Number14 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_Number14 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_Number15 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_Number15 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_Number16 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_Number16 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_Number17 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_Number17 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_Number18 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_Number18 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_Number19 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_Number19 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_Number20 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_Number20 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_Start6 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Start6 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Start7 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Start7 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Start8 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Start8 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Start9 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Start9 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Start10 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Start10 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Text11 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Text11 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Text12 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Text12 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Text13 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Text13 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Text14 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Text14 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Text15 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Text15 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Text16 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Text16 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Text17 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Text17 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Text18 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Text18 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Text19 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Text19 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Text20 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Text20 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Text21 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Text21 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Text22 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Text22 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Text23 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Text23 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Text24 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Text24 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Text25 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Text25 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Text26 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Text26 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Text27 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Text27 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Text28 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Text28 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Text29 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Text29 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Text30 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Text30 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Phonetics (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Phonetics (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Index (
        long * retval ) = 0;
    virtual HRESULT __stdcall raw_Level ( ) = 0;
    virtual HRESULT __stdcall get_Confirmed (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall get_ResponsePending (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall get_TeamStatusPending (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall get_UpdateNeeded (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall get_CV (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall get_Workgroup (
        enum PjWorkgroupMessages * retval ) = 0;
    virtual HRESULT __stdcall put_Workgroup (
        enum PjWorkgroupMessages retval ) = 0;
    virtual HRESULT __stdcall get_Project (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall get_Availabilities (
        struct Availabilities * * retval ) = 0;
    virtual HRESULT __stdcall get_OutlineCode1 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_OutlineCode1 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_OutlineCode2 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_OutlineCode2 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_OutlineCode3 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_OutlineCode3 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_OutlineCode4 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_OutlineCode4 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_OutlineCode5 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_OutlineCode5 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_OutlineCode6 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_OutlineCode6 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_OutlineCode7 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_OutlineCode7 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_OutlineCode8 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_OutlineCode8 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_OutlineCode9 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_OutlineCode9 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_OutlineCode10 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_OutlineCode10 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_MaterialLabel (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_MaterialLabel (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Type (
        enum PjResourceTypes * retval ) = 0;
    virtual HRESULT __stdcall put_Type (
        enum PjResourceTypes retval ) = 0;
    virtual HRESULT __stdcall get_VAC (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall get_GroupBySummary (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall get_WindowsUserAccount (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_WindowsUserAccount (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_HyperlinkScreenTip (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_HyperlinkScreenTip (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Baseline1Work (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline1Work (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline1Cost (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline1Cost (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline2Work (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline2Work (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline2Cost (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline2Cost (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline3Work (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline3Work (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline3Cost (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline3Cost (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline4Work (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline4Work (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline4Cost (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline4Cost (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline5Work (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline5Work (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline5Cost (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline5Cost (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline6Work (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline6Work (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline6Cost (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline6Cost (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline7Work (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline7Work (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline7Cost (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline7Cost (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline8Work (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline8Work (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline8Cost (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline8Cost (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline9Work (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline9Work (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline9Cost (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline9Cost (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline10Work (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline10Work (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline10Cost (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline10Cost (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseUniqueID (
        long * retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseCost1 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseCost1 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseCost2 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseCost2 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseCost3 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseCost3 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseCost4 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseCost4 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseCost5 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseCost5 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseCost6 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseCost6 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseCost7 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseCost7 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseCost8 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseCost8 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseCost9 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseCost9 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseCost10 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseCost10 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDate1 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDate1 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDate2 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDate2 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDate3 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDate3 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDate4 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDate4 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDate5 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDate5 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDate6 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDate6 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDate7 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDate7 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDate8 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDate8 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDate9 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDate9 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDate10 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDate10 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDate11 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDate11 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDate12 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDate12 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDate13 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDate13 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDate14 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDate14 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDate15 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDate15 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDate16 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDate16 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDate17 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDate17 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDate18 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDate18 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDate19 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDate19 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDate20 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDate20 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDate21 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDate21 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDate22 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDate22 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDate23 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDate23 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDate24 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDate24 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDate25 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDate25 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDate26 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDate26 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDate27 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDate27 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDate28 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDate28 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDate29 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDate29 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDate30 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDate30 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDuration1 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDuration1 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDuration2 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDuration2 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDuration3 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDuration3 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDuration4 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDuration4 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDuration5 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDuration5 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDuration6 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDuration6 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDuration7 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDuration7 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDuration8 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDuration8 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDuration9 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDuration9 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDuration10 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDuration10 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseFlag1 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseFlag1 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseFlag2 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseFlag2 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseFlag3 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseFlag3 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseFlag4 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseFlag4 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseFlag5 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseFlag5 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseFlag6 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseFlag6 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseFlag7 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseFlag7 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseFlag8 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseFlag8 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseFlag9 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseFlag9 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseFlag10 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseFlag10 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseFlag11 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseFlag11 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseFlag12 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseFlag12 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseFlag13 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseFlag13 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseFlag14 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseFlag14 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseFlag15 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseFlag15 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseFlag16 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseFlag16 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseFlag17 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseFlag17 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseFlag18 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseFlag18 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseFlag19 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseFlag19 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseFlag20 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseFlag20 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber1 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber1 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber2 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber2 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber3 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber3 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber4 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber4 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber5 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber5 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber6 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber6 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber7 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber7 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber8 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber8 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber9 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber9 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber10 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber10 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber11 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber11 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber12 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber12 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber13 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber13 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber14 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber14 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber15 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber15 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber16 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber16 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber17 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber17 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber18 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber18 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber19 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber19 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber20 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber20 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber21 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber21 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber22 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber22 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber23 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber23 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber24 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber24 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber25 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber25 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber26 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber26 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber27 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber27 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber28 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber28 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber29 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber29 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber30 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber30 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber31 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber31 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber32 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber32 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber33 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber33 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber34 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber34 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber35 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber35 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber36 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber36 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber37 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber37 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber38 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber38 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber39 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber39 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber40 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber40 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseOutlineCode1 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseOutlineCode1 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseOutlineCode2 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseOutlineCode2 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseOutlineCode3 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseOutlineCode3 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseOutlineCode4 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseOutlineCode4 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseOutlineCode5 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseOutlineCode5 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseOutlineCode6 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseOutlineCode6 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseOutlineCode7 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseOutlineCode7 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseOutlineCode8 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseOutlineCode8 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseOutlineCode9 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseOutlineCode9 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseOutlineCode10 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseOutlineCode10 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseOutlineCode11 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseOutlineCode11 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseOutlineCode12 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseOutlineCode12 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseOutlineCode13 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseOutlineCode13 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseOutlineCode14 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseOutlineCode14 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseOutlineCode15 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseOutlineCode15 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseOutlineCode16 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseOutlineCode16 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseOutlineCode17 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseOutlineCode17 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseOutlineCode18 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseOutlineCode18 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseOutlineCode19 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseOutlineCode19 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseOutlineCode20 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseOutlineCode20 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseOutlineCode21 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseOutlineCode21 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseOutlineCode22 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseOutlineCode22 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseOutlineCode23 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseOutlineCode23 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseOutlineCode24 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseOutlineCode24 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseOutlineCode25 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseOutlineCode25 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseOutlineCode26 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseOutlineCode26 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseOutlineCode27 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseOutlineCode27 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseOutlineCode28 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseOutlineCode28 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseOutlineCode29 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseOutlineCode29 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseRBS (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseRBS (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText1 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText1 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText2 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText2 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText3 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText3 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText4 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText4 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText5 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText5 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText6 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText6 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText7 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText7 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText8 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText8 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText9 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText9 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText10 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText10 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText11 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText11 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText12 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText12 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText13 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText13 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText14 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText14 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText15 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText15 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText16 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText16 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText17 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText17 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText18 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText18 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText19 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText19 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText20 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText20 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText21 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText21 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText22 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText22 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText23 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText23 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText24 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText24 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText25 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText25 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText26 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText26 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText27 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText27 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText28 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText28 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText29 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText29 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText30 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText30 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText31 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText31 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText32 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText32 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText33 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText33 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText34 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText34 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText35 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText35 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText36 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText36 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText37 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText37 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText38 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText38 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText39 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText39 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText40 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText40 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseGeneric (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseGeneric (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseBaseCalendar (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseRequiredValues (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNameUsed (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall get_Enterprise (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseIsCheckedOut (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseCheckedOutBy (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseLastModifiedDate (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseInactive (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseInactive (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall raw_EnterpriseTeamMember (
        IDispatch * Project,
        VARIANT_BOOL * retval ) = 0;
};

struct __declspec(uuid("000c0c43-0000-0000-c000-000000000046"))
Calendar : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetApplication))
    _MSProjectPtr Application;
    __declspec(property(get=GetYears))
    YearsPtr Years;
    __declspec(property(get=GetWeekDays))
    WeekDaysPtr WeekDays;
    __declspec(property(get=GetBaseCalendar))
    CalendarPtr BaseCalendar;
    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetEnterprise))
    _variant_t Enterprise;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t retval );
    IDispatchPtr GetParent ( );
    _MSProjectPtr GetApplication ( );
    PeriodPtr Period (
        const _variant_t & Start,
        const _variant_t & Finish = vtMissing );
    YearsPtr GetYears ( );
    WeekDaysPtr GetWeekDays ( );
    HRESULT Reset ( );
    CalendarPtr GetBaseCalendar ( );
    HRESULT Delete ( );
    long GetIndex ( );
    _variant_t GetEnterprise ( );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Name (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Name (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Parent (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall get_Application (
        struct _MSProject * * retval ) = 0;
    virtual HRESULT __stdcall raw_Period (
        VARIANT Start,
        VARIANT Finish,
        struct Period * * retval ) = 0;
    virtual HRESULT __stdcall get_Years (
        struct Years * * retval ) = 0;
    virtual HRESULT __stdcall get_WeekDays (
        struct WeekDays * * retval ) = 0;
    virtual HRESULT __stdcall raw_Reset ( ) = 0;
    virtual HRESULT __stdcall get_BaseCalendar (
        struct Calendar * * retval ) = 0;
    virtual HRESULT __stdcall raw_Delete ( ) = 0;
    virtual HRESULT __stdcall get_Index (
        long * retval ) = 0;
    virtual HRESULT __stdcall get_Enterprise (
        VARIANT * retval ) = 0;
};

struct __declspec(uuid("000c0c45-0000-0000-c000-000000000046"))
Assignment : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetUniqueID))
    long UniqueID;
    __declspec(property(get=GetTaskUniqueID,put=PutTaskUniqueID))
    long TaskUniqueID;
    __declspec(property(get=GetResourceUniqueID,put=PutResourceUniqueID))
    long ResourceUniqueID;
    __declspec(property(get=GetTaskID,put=PutTaskID))
    long TaskID;
    __declspec(property(get=GetResourceID,put=PutResourceID))
    long ResourceID;
    __declspec(property(get=GetTaskName,put=PutTaskName))
    _bstr_t TaskName;
    __declspec(property(get=GetResourceName,put=PutResourceName))
    _bstr_t ResourceName;
    __declspec(property(get=GetUnits,put=PutUnits))
    _variant_t Units;
    __declspec(property(get=GetWork,put=PutWork))
    _variant_t Work;
    __declspec(property(get=GetOvertimeWork,put=PutOvertimeWork))
    _variant_t OvertimeWork;
    __declspec(property(get=GetActualWork,put=PutActualWork))
    _variant_t ActualWork;
    __declspec(property(get=GetRegularWork,put=PutRegularWork))
    _variant_t RegularWork;
    __declspec(property(get=GetRemainingWork,put=PutRemainingWork))
    _variant_t RemainingWork;
    __declspec(property(get=GetActualOvertimeWork,put=PutActualOvertimeWork))
    _variant_t ActualOvertimeWork;
    __declspec(property(get=GetRemainingOvertimeWork,put=PutRemainingOvertimeWork))
    _variant_t RemainingOvertimeWork;
    __declspec(property(get=GetBaselineWork,put=PutBaselineWork))
    _variant_t BaselineWork;
    __declspec(property(get=GetPeak))
    _variant_t Peak;
    __declspec(property(get=GetStart,put=PutStart))
    _variant_t Start;
    __declspec(property(get=GetFinish,put=PutFinish))
    _variant_t Finish;
    __declspec(property(get=GetActualStart,put=PutActualStart))
    _variant_t ActualStart;
    __declspec(property(get=GetActualFinish,put=PutActualFinish))
    _variant_t ActualFinish;
    __declspec(property(get=GetDelay,put=PutDelay))
    _variant_t Delay;
    __declspec(property(get=GetCost,put=PutCost))
    _variant_t Cost;
    __declspec(property(get=GetOvertimeCost))
    _variant_t OvertimeCost;
    __declspec(property(get=GetActualCost,put=PutActualCost))
    _variant_t ActualCost;
    __declspec(property(get=GetRemainingCost))
    _variant_t RemainingCost;
    __declspec(property(get=GetActualOvertimeCost))
    _variant_t ActualOvertimeCost;
    __declspec(property(get=GetRemainingOvertimeCost))
    _variant_t RemainingOvertimeCost;
    __declspec(property(get=GetBaselineCost,put=PutBaselineCost))
    _variant_t BaselineCost;
    __declspec(property(get=GetBCWS))
    _variant_t BCWS;
    __declspec(property(get=GetBCWP))
    _variant_t BCWP;
    __declspec(property(get=GetACWP))
    _variant_t ACWP;
    __declspec(property(get=GetSV))
    _variant_t SV;
    __declspec(property(get=GetCostVariance))
    _variant_t CostVariance;
    __declspec(property(get=GetWorkContour,put=PutWorkContour))
    enum PjWorkContourType WorkContour;
    __declspec(property(get=GetPercentWorkComplete,put=PutPercentWorkComplete))
    _variant_t PercentWorkComplete;
    __declspec(property(get=GetProject))
    _bstr_t Project;
    __declspec(property(get=GetNotes,put=PutNotes))
    _bstr_t Notes;
    __declspec(property(get=GetConfirmed,put=PutConfirmed))
    _variant_t Confirmed;
    __declspec(property(get=GetResponsePending,put=PutResponsePending))
    _variant_t ResponsePending;
    __declspec(property(get=GetUpdateNeeded))
    _variant_t UpdateNeeded;
    __declspec(property(get=GetTeamStatusPending,put=PutTeamStatusPending))
    _variant_t TeamStatusPending;
    __declspec(property(get=GetCostRateTable,put=PutCostRateTable))
    _variant_t CostRateTable;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetApplication))
    _MSProjectPtr Application;
    __declspec(property(get=GetText1,put=PutText1))
    _bstr_t Text1;
    __declspec(property(get=GetText2,put=PutText2))
    _bstr_t Text2;
    __declspec(property(get=GetText3,put=PutText3))
    _bstr_t Text3;
    __declspec(property(get=GetText4,put=PutText4))
    _bstr_t Text4;
    __declspec(property(get=GetText5,put=PutText5))
    _bstr_t Text5;
    __declspec(property(get=GetText6,put=PutText6))
    _bstr_t Text6;
    __declspec(property(get=GetText7,put=PutText7))
    _bstr_t Text7;
    __declspec(property(get=GetText8,put=PutText8))
    _bstr_t Text8;
    __declspec(property(get=GetText9,put=PutText9))
    _bstr_t Text9;
    __declspec(property(get=GetText10,put=PutText10))
    _bstr_t Text10;
    __declspec(property(get=GetStart1,put=PutStart1))
    _variant_t Start1;
    __declspec(property(get=GetStart2,put=PutStart2))
    _variant_t Start2;
    __declspec(property(get=GetStart3,put=PutStart3))
    _variant_t Start3;
    __declspec(property(get=GetStart4,put=PutStart4))
    _variant_t Start4;
    __declspec(property(get=GetStart5,put=PutStart5))
    _variant_t Start5;
    __declspec(property(get=GetFinish1,put=PutFinish1))
    _variant_t Finish1;
    __declspec(property(get=GetFinish2,put=PutFinish2))
    _variant_t Finish2;
    __declspec(property(get=GetFinish3,put=PutFinish3))
    _variant_t Finish3;
    __declspec(property(get=GetFinish4,put=PutFinish4))
    _variant_t Finish4;
    __declspec(property(get=GetFinish5,put=PutFinish5))
    _variant_t Finish5;
    __declspec(property(get=GetNumber1,put=PutNumber1))
    double Number1;
    __declspec(property(get=GetNumber2,put=PutNumber2))
    double Number2;
    __declspec(property(get=GetNumber3,put=PutNumber3))
    double Number3;
    __declspec(property(get=GetNumber4,put=PutNumber4))
    double Number4;
    __declspec(property(get=GetNumber5,put=PutNumber5))
    double Number5;
    __declspec(property(get=GetDuration1,put=PutDuration1))
    _variant_t Duration1;
    __declspec(property(get=GetDuration2,put=PutDuration2))
    _variant_t Duration2;
    __declspec(property(get=GetDuration3,put=PutDuration3))
    _variant_t Duration3;
    __declspec(property(get=GetCost1,put=PutCost1))
    _variant_t Cost1;
    __declspec(property(get=GetCost2,put=PutCost2))
    _variant_t Cost2;
    __declspec(property(get=GetCost3,put=PutCost3))
    _variant_t Cost3;
    __declspec(property(get=GetFlag10,put=PutFlag10))
    _variant_t Flag10;
    __declspec(property(get=GetFlag1,put=PutFlag1))
    _variant_t Flag1;
    __declspec(property(get=GetFlag2,put=PutFlag2))
    _variant_t Flag2;
    __declspec(property(get=GetFlag3,put=PutFlag3))
    _variant_t Flag3;
    __declspec(property(get=GetFlag4,put=PutFlag4))
    _variant_t Flag4;
    __declspec(property(get=GetFlag5,put=PutFlag5))
    _variant_t Flag5;
    __declspec(property(get=GetFlag6,put=PutFlag6))
    _variant_t Flag6;
    __declspec(property(get=GetFlag7,put=PutFlag7))
    _variant_t Flag7;
    __declspec(property(get=GetFlag8,put=PutFlag8))
    _variant_t Flag8;
    __declspec(property(get=GetFlag9,put=PutFlag9))
    _variant_t Flag9;
    __declspec(property(get=GetLinkedFields))
    _variant_t LinkedFields;
    __declspec(property(get=GetOverallocated))
    _variant_t Overallocated;
    __declspec(property(get=GetTaskSummaryName))
    _bstr_t TaskSummaryName;
    __declspec(property(get=GetLevelingDelay,put=PutLevelingDelay))
    _variant_t LevelingDelay;
    __declspec(property(get=GetBaselineStart,put=PutBaselineStart))
    _variant_t BaselineStart;
    __declspec(property(get=GetBaselineFinish,put=PutBaselineFinish))
    _variant_t BaselineFinish;
    __declspec(property(get=GetHyperlink,put=PutHyperlink))
    _bstr_t Hyperlink;
    __declspec(property(get=GetHyperlinkAddress,put=PutHyperlinkAddress))
    _bstr_t HyperlinkAddress;
    __declspec(property(get=GetHyperlinkSubAddress,put=PutHyperlinkSubAddress))
    _bstr_t HyperlinkSubAddress;
    __declspec(property(get=GetHyperlinkHREF,put=PutHyperlinkHREF))
    _bstr_t HyperlinkHREF;
    __declspec(property(get=GetCost4,put=PutCost4))
    _variant_t Cost4;
    __declspec(property(get=GetCost5,put=PutCost5))
    _variant_t Cost5;
    __declspec(property(get=GetCost6,put=PutCost6))
    _variant_t Cost6;
    __declspec(property(get=GetCost7,put=PutCost7))
    _variant_t Cost7;
    __declspec(property(get=GetCost8,put=PutCost8))
    _variant_t Cost8;
    __declspec(property(get=GetCost9,put=PutCost9))
    _variant_t Cost9;
    __declspec(property(get=GetCost10,put=PutCost10))
    _variant_t Cost10;
    __declspec(property(get=GetDate1,put=PutDate1))
    _variant_t Date1;
    __declspec(property(get=GetDate2,put=PutDate2))
    _variant_t Date2;
    __declspec(property(get=GetDate3,put=PutDate3))
    _variant_t Date3;
    __declspec(property(get=GetDate4,put=PutDate4))
    _variant_t Date4;
    __declspec(property(get=GetDate5,put=PutDate5))
    _variant_t Date5;
    __declspec(property(get=GetDate6,put=PutDate6))
    _variant_t Date6;
    __declspec(property(get=GetDate7,put=PutDate7))
    _variant_t Date7;
    __declspec(property(get=GetDate8,put=PutDate8))
    _variant_t Date8;
    __declspec(property(get=GetDate9,put=PutDate9))
    _variant_t Date9;
    __declspec(property(get=GetDate10,put=PutDate10))
    _variant_t Date10;
    __declspec(property(get=GetDuration4,put=PutDuration4))
    _variant_t Duration4;
    __declspec(property(get=GetDuration5,put=PutDuration5))
    _variant_t Duration5;
    __declspec(property(get=GetDuration6,put=PutDuration6))
    _variant_t Duration6;
    __declspec(property(get=GetDuration7,put=PutDuration7))
    _variant_t Duration7;
    __declspec(property(get=GetDuration8,put=PutDuration8))
    _variant_t Duration8;
    __declspec(property(get=GetDuration9,put=PutDuration9))
    _variant_t Duration9;
    __declspec(property(get=GetDuration10,put=PutDuration10))
    _variant_t Duration10;
    __declspec(property(get=GetFinish6,put=PutFinish6))
    _variant_t Finish6;
    __declspec(property(get=GetFinish7,put=PutFinish7))
    _variant_t Finish7;
    __declspec(property(get=GetFinish8,put=PutFinish8))
    _variant_t Finish8;
    __declspec(property(get=GetFinish9,put=PutFinish9))
    _variant_t Finish9;
    __declspec(property(get=GetFinish10,put=PutFinish10))
    _variant_t Finish10;
    __declspec(property(get=GetFlag11,put=PutFlag11))
    _variant_t Flag11;
    __declspec(property(get=GetFlag12,put=PutFlag12))
    _variant_t Flag12;
    __declspec(property(get=GetFlag13,put=PutFlag13))
    _variant_t Flag13;
    __declspec(property(get=GetFlag14,put=PutFlag14))
    _variant_t Flag14;
    __declspec(property(get=GetFlag15,put=PutFlag15))
    _variant_t Flag15;
    __declspec(property(get=GetFlag16,put=PutFlag16))
    _variant_t Flag16;
    __declspec(property(get=GetFlag17,put=PutFlag17))
    _variant_t Flag17;
    __declspec(property(get=GetFlag18,put=PutFlag18))
    _variant_t Flag18;
    __declspec(property(get=GetFlag19,put=PutFlag19))
    _variant_t Flag19;
    __declspec(property(get=GetFlag20,put=PutFlag20))
    _variant_t Flag20;
    __declspec(property(get=GetNumber6,put=PutNumber6))
    double Number6;
    __declspec(property(get=GetNumber7,put=PutNumber7))
    double Number7;
    __declspec(property(get=GetNumber8,put=PutNumber8))
    double Number8;
    __declspec(property(get=GetNumber9,put=PutNumber9))
    double Number9;
    __declspec(property(get=GetNumber10,put=PutNumber10))
    double Number10;
    __declspec(property(get=GetNumber11,put=PutNumber11))
    double Number11;
    __declspec(property(get=GetNumber12,put=PutNumber12))
    double Number12;
    __declspec(property(get=GetNumber13,put=PutNumber13))
    double Number13;
    __declspec(property(get=GetNumber14,put=PutNumber14))
    double Number14;
    __declspec(property(get=GetNumber15,put=PutNumber15))
    double Number15;
    __declspec(property(get=GetNumber16,put=PutNumber16))
    double Number16;
    __declspec(property(get=GetNumber17,put=PutNumber17))
    double Number17;
    __declspec(property(get=GetNumber18,put=PutNumber18))
    double Number18;
    __declspec(property(get=GetNumber19,put=PutNumber19))
    double Number19;
    __declspec(property(get=GetNumber20,put=PutNumber20))
    double Number20;
    __declspec(property(get=GetStart6,put=PutStart6))
    _variant_t Start6;
    __declspec(property(get=GetStart7,put=PutStart7))
    _variant_t Start7;
    __declspec(property(get=GetStart8,put=PutStart8))
    _variant_t Start8;
    __declspec(property(get=GetStart9,put=PutStart9))
    _variant_t Start9;
    __declspec(property(get=GetStart10,put=PutStart10))
    _variant_t Start10;
    __declspec(property(get=GetText11,put=PutText11))
    _bstr_t Text11;
    __declspec(property(get=GetText12,put=PutText12))
    _bstr_t Text12;
    __declspec(property(get=GetText13,put=PutText13))
    _bstr_t Text13;
    __declspec(property(get=GetText14,put=PutText14))
    _bstr_t Text14;
    __declspec(property(get=GetText15,put=PutText15))
    _bstr_t Text15;
    __declspec(property(get=GetText16,put=PutText16))
    _bstr_t Text16;
    __declspec(property(get=GetText17,put=PutText17))
    _bstr_t Text17;
    __declspec(property(get=GetText18,put=PutText18))
    _bstr_t Text18;
    __declspec(property(get=GetText19,put=PutText19))
    _bstr_t Text19;
    __declspec(property(get=GetText20,put=PutText20))
    _bstr_t Text20;
    __declspec(property(get=GetText21,put=PutText21))
    _bstr_t Text21;
    __declspec(property(get=GetText22,put=PutText22))
    _bstr_t Text22;
    __declspec(property(get=GetText23,put=PutText23))
    _bstr_t Text23;
    __declspec(property(get=GetText24,put=PutText24))
    _bstr_t Text24;
    __declspec(property(get=GetText25,put=PutText25))
    _bstr_t Text25;
    __declspec(property(get=GetText26,put=PutText26))
    _bstr_t Text26;
    __declspec(property(get=GetText27,put=PutText27))
    _bstr_t Text27;
    __declspec(property(get=GetText28,put=PutText28))
    _bstr_t Text28;
    __declspec(property(get=GetText29,put=PutText29))
    _bstr_t Text29;
    __declspec(property(get=GetText30,put=PutText30))
    _bstr_t Text30;
    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetCV))
    _variant_t CV;
    __declspec(property(get=GetWorkVariance))
    _variant_t WorkVariance;
    __declspec(property(get=GetStartVariance))
    _variant_t StartVariance;
    __declspec(property(get=GetFinishVariance))
    _variant_t FinishVariance;
    __declspec(property(get=GetVAC))
    _variant_t VAC;
    __declspec(property(get=GetFixedMaterialAssignment))
    _variant_t FixedMaterialAssignment;
    __declspec(property(get=GetResourceType))
    enum PjResourceTypes ResourceType;
    __declspec(property(get=GetHyperlinkScreenTip,put=PutHyperlinkScreenTip))
    _bstr_t HyperlinkScreenTip;
    __declspec(property(get=GetBaseline1Work,put=PutBaseline1Work))
    _variant_t Baseline1Work;
    __declspec(property(get=GetBaseline1Cost,put=PutBaseline1Cost))
    _variant_t Baseline1Cost;
    __declspec(property(get=GetBaseline1Start,put=PutBaseline1Start))
    _variant_t Baseline1Start;
    __declspec(property(get=GetBaseline1Finish,put=PutBaseline1Finish))
    _variant_t Baseline1Finish;
    __declspec(property(get=GetBaseline2Work,put=PutBaseline2Work))
    _variant_t Baseline2Work;
    __declspec(property(get=GetBaseline2Cost,put=PutBaseline2Cost))
    _variant_t Baseline2Cost;
    __declspec(property(get=GetBaseline2Start,put=PutBaseline2Start))
    _variant_t Baseline2Start;
    __declspec(property(get=GetBaseline2Finish,put=PutBaseline2Finish))
    _variant_t Baseline2Finish;
    __declspec(property(get=GetBaseline3Work,put=PutBaseline3Work))
    _variant_t Baseline3Work;
    __declspec(property(get=GetBaseline3Cost,put=PutBaseline3Cost))
    _variant_t Baseline3Cost;
    __declspec(property(get=GetBaseline3Start,put=PutBaseline3Start))
    _variant_t Baseline3Start;
    __declspec(property(get=GetBaseline3Finish,put=PutBaseline3Finish))
    _variant_t Baseline3Finish;
    __declspec(property(get=GetBaseline4Work,put=PutBaseline4Work))
    _variant_t Baseline4Work;
    __declspec(property(get=GetBaseline4Cost,put=PutBaseline4Cost))
    _variant_t Baseline4Cost;
    __declspec(property(get=GetBaseline4Start,put=PutBaseline4Start))
    _variant_t Baseline4Start;
    __declspec(property(get=GetBaseline4Finish,put=PutBaseline4Finish))
    _variant_t Baseline4Finish;
    __declspec(property(get=GetBaseline5Work,put=PutBaseline5Work))
    _variant_t Baseline5Work;
    __declspec(property(get=GetBaseline5Cost,put=PutBaseline5Cost))
    _variant_t Baseline5Cost;
    __declspec(property(get=GetBaseline5Start,put=PutBaseline5Start))
    _variant_t Baseline5Start;
    __declspec(property(get=GetBaseline5Finish,put=PutBaseline5Finish))
    _variant_t Baseline5Finish;
    __declspec(property(get=GetBaseline6Work,put=PutBaseline6Work))
    _variant_t Baseline6Work;
    __declspec(property(get=GetBaseline6Cost,put=PutBaseline6Cost))
    _variant_t Baseline6Cost;
    __declspec(property(get=GetBaseline6Start,put=PutBaseline6Start))
    _variant_t Baseline6Start;
    __declspec(property(get=GetBaseline6Finish,put=PutBaseline6Finish))
    _variant_t Baseline6Finish;
    __declspec(property(get=GetBaseline7Work,put=PutBaseline7Work))
    _variant_t Baseline7Work;
    __declspec(property(get=GetBaseline7Cost,put=PutBaseline7Cost))
    _variant_t Baseline7Cost;
    __declspec(property(get=GetBaseline7Start,put=PutBaseline7Start))
    _variant_t Baseline7Start;
    __declspec(property(get=GetBaseline7Finish,put=PutBaseline7Finish))
    _variant_t Baseline7Finish;
    __declspec(property(get=GetBaseline8Work,put=PutBaseline8Work))
    _variant_t Baseline8Work;
    __declspec(property(get=GetBaseline8Cost,put=PutBaseline8Cost))
    _variant_t Baseline8Cost;
    __declspec(property(get=GetBaseline8Start,put=PutBaseline8Start))
    _variant_t Baseline8Start;
    __declspec(property(get=GetBaseline8Finish,put=PutBaseline8Finish))
    _variant_t Baseline8Finish;
    __declspec(property(get=GetBaseline9Work,put=PutBaseline9Work))
    _variant_t Baseline9Work;
    __declspec(property(get=GetBaseline9Cost,put=PutBaseline9Cost))
    _variant_t Baseline9Cost;
    __declspec(property(get=GetBaseline9Start,put=PutBaseline9Start))
    _variant_t Baseline9Start;
    __declspec(property(get=GetBaseline9Finish,put=PutBaseline9Finish))
    _variant_t Baseline9Finish;
    __declspec(property(get=GetBaseline10Work,put=PutBaseline10Work))
    _variant_t Baseline10Work;
    __declspec(property(get=GetBaseline10Cost,put=PutBaseline10Cost))
    _variant_t Baseline10Cost;
    __declspec(property(get=GetBaseline10Start,put=PutBaseline10Start))
    _variant_t Baseline10Start;
    __declspec(property(get=GetBaseline10Finish,put=PutBaseline10Finish))
    _variant_t Baseline10Finish;
    __declspec(property(get=GetTaskOutlineNumber))
    _bstr_t TaskOutlineNumber;
    __declspec(property(get=GetEnterpriseCost1,put=PutEnterpriseCost1))
    _variant_t EnterpriseCost1;
    __declspec(property(get=GetEnterpriseCost2,put=PutEnterpriseCost2))
    _variant_t EnterpriseCost2;
    __declspec(property(get=GetEnterpriseCost3,put=PutEnterpriseCost3))
    _variant_t EnterpriseCost3;
    __declspec(property(get=GetEnterpriseCost4,put=PutEnterpriseCost4))
    _variant_t EnterpriseCost4;
    __declspec(property(get=GetEnterpriseCost5,put=PutEnterpriseCost5))
    _variant_t EnterpriseCost5;
    __declspec(property(get=GetEnterpriseCost6,put=PutEnterpriseCost6))
    _variant_t EnterpriseCost6;
    __declspec(property(get=GetEnterpriseCost7,put=PutEnterpriseCost7))
    _variant_t EnterpriseCost7;
    __declspec(property(get=GetEnterpriseCost8,put=PutEnterpriseCost8))
    _variant_t EnterpriseCost8;
    __declspec(property(get=GetEnterpriseCost9,put=PutEnterpriseCost9))
    _variant_t EnterpriseCost9;
    __declspec(property(get=GetEnterpriseCost10,put=PutEnterpriseCost10))
    _variant_t EnterpriseCost10;
    __declspec(property(get=GetEnterpriseDate1,put=PutEnterpriseDate1))
    _variant_t EnterpriseDate1;
    __declspec(property(get=GetEnterpriseDate2,put=PutEnterpriseDate2))
    _variant_t EnterpriseDate2;
    __declspec(property(get=GetEnterpriseDate3,put=PutEnterpriseDate3))
    _variant_t EnterpriseDate3;
    __declspec(property(get=GetEnterpriseDate4,put=PutEnterpriseDate4))
    _variant_t EnterpriseDate4;
    __declspec(property(get=GetEnterpriseDate5,put=PutEnterpriseDate5))
    _variant_t EnterpriseDate5;
    __declspec(property(get=GetEnterpriseDate6,put=PutEnterpriseDate6))
    _variant_t EnterpriseDate6;
    __declspec(property(get=GetEnterpriseDate7,put=PutEnterpriseDate7))
    _variant_t EnterpriseDate7;
    __declspec(property(get=GetEnterpriseDate8,put=PutEnterpriseDate8))
    _variant_t EnterpriseDate8;
    __declspec(property(get=GetEnterpriseDate9,put=PutEnterpriseDate9))
    _variant_t EnterpriseDate9;
    __declspec(property(get=GetEnterpriseDate10,put=PutEnterpriseDate10))
    _variant_t EnterpriseDate10;
    __declspec(property(get=GetEnterpriseDate11,put=PutEnterpriseDate11))
    _variant_t EnterpriseDate11;
    __declspec(property(get=GetEnterpriseDate12,put=PutEnterpriseDate12))
    _variant_t EnterpriseDate12;
    __declspec(property(get=GetEnterpriseDate13,put=PutEnterpriseDate13))
    _variant_t EnterpriseDate13;
    __declspec(property(get=GetEnterpriseDate14,put=PutEnterpriseDate14))
    _variant_t EnterpriseDate14;
    __declspec(property(get=GetEnterpriseDate15,put=PutEnterpriseDate15))
    _variant_t EnterpriseDate15;
    __declspec(property(get=GetEnterpriseDate16,put=PutEnterpriseDate16))
    _variant_t EnterpriseDate16;
    __declspec(property(get=GetEnterpriseDate17,put=PutEnterpriseDate17))
    _variant_t EnterpriseDate17;
    __declspec(property(get=GetEnterpriseDate18,put=PutEnterpriseDate18))
    _variant_t EnterpriseDate18;
    __declspec(property(get=GetEnterpriseDate19,put=PutEnterpriseDate19))
    _variant_t EnterpriseDate19;
    __declspec(property(get=GetEnterpriseDate20,put=PutEnterpriseDate20))
    _variant_t EnterpriseDate20;
    __declspec(property(get=GetEnterpriseDate21,put=PutEnterpriseDate21))
    _variant_t EnterpriseDate21;
    __declspec(property(get=GetEnterpriseDate22,put=PutEnterpriseDate22))
    _variant_t EnterpriseDate22;
    __declspec(property(get=GetEnterpriseDate23,put=PutEnterpriseDate23))
    _variant_t EnterpriseDate23;
    __declspec(property(get=GetEnterpriseDate24,put=PutEnterpriseDate24))
    _variant_t EnterpriseDate24;
    __declspec(property(get=GetEnterpriseDate25,put=PutEnterpriseDate25))
    _variant_t EnterpriseDate25;
    __declspec(property(get=GetEnterpriseDate26,put=PutEnterpriseDate26))
    _variant_t EnterpriseDate26;
    __declspec(property(get=GetEnterpriseDate27,put=PutEnterpriseDate27))
    _variant_t EnterpriseDate27;
    __declspec(property(get=GetEnterpriseDate28,put=PutEnterpriseDate28))
    _variant_t EnterpriseDate28;
    __declspec(property(get=GetEnterpriseDate29,put=PutEnterpriseDate29))
    _variant_t EnterpriseDate29;
    __declspec(property(get=GetEnterpriseDate30,put=PutEnterpriseDate30))
    _variant_t EnterpriseDate30;
    __declspec(property(get=GetEnterpriseDuration1,put=PutEnterpriseDuration1))
    _variant_t EnterpriseDuration1;
    __declspec(property(get=GetEnterpriseDuration2,put=PutEnterpriseDuration2))
    _variant_t EnterpriseDuration2;
    __declspec(property(get=GetEnterpriseDuration3,put=PutEnterpriseDuration3))
    _variant_t EnterpriseDuration3;
    __declspec(property(get=GetEnterpriseDuration4,put=PutEnterpriseDuration4))
    _variant_t EnterpriseDuration4;
    __declspec(property(get=GetEnterpriseDuration5,put=PutEnterpriseDuration5))
    _variant_t EnterpriseDuration5;
    __declspec(property(get=GetEnterpriseDuration6,put=PutEnterpriseDuration6))
    _variant_t EnterpriseDuration6;
    __declspec(property(get=GetEnterpriseDuration7,put=PutEnterpriseDuration7))
    _variant_t EnterpriseDuration7;
    __declspec(property(get=GetEnterpriseDuration8,put=PutEnterpriseDuration8))
    _variant_t EnterpriseDuration8;
    __declspec(property(get=GetEnterpriseDuration9,put=PutEnterpriseDuration9))
    _variant_t EnterpriseDuration9;
    __declspec(property(get=GetEnterpriseDuration10,put=PutEnterpriseDuration10))
    _variant_t EnterpriseDuration10;
    __declspec(property(get=GetEnterpriseFlag1,put=PutEnterpriseFlag1))
    _variant_t EnterpriseFlag1;
    __declspec(property(get=GetEnterpriseFlag2,put=PutEnterpriseFlag2))
    _variant_t EnterpriseFlag2;
    __declspec(property(get=GetEnterpriseFlag3,put=PutEnterpriseFlag3))
    _variant_t EnterpriseFlag3;
    __declspec(property(get=GetEnterpriseFlag4,put=PutEnterpriseFlag4))
    _variant_t EnterpriseFlag4;
    __declspec(property(get=GetEnterpriseFlag5,put=PutEnterpriseFlag5))
    _variant_t EnterpriseFlag5;
    __declspec(property(get=GetEnterpriseFlag6,put=PutEnterpriseFlag6))
    _variant_t EnterpriseFlag6;
    __declspec(property(get=GetEnterpriseFlag7,put=PutEnterpriseFlag7))
    _variant_t EnterpriseFlag7;
    __declspec(property(get=GetEnterpriseFlag8,put=PutEnterpriseFlag8))
    _variant_t EnterpriseFlag8;
    __declspec(property(get=GetEnterpriseFlag9,put=PutEnterpriseFlag9))
    _variant_t EnterpriseFlag9;
    __declspec(property(get=GetEnterpriseFlag10,put=PutEnterpriseFlag10))
    _variant_t EnterpriseFlag10;
    __declspec(property(get=GetEnterpriseFlag11,put=PutEnterpriseFlag11))
    _variant_t EnterpriseFlag11;
    __declspec(property(get=GetEnterpriseFlag12,put=PutEnterpriseFlag12))
    _variant_t EnterpriseFlag12;
    __declspec(property(get=GetEnterpriseFlag13,put=PutEnterpriseFlag13))
    _variant_t EnterpriseFlag13;
    __declspec(property(get=GetEnterpriseFlag14,put=PutEnterpriseFlag14))
    _variant_t EnterpriseFlag14;
    __declspec(property(get=GetEnterpriseFlag15,put=PutEnterpriseFlag15))
    _variant_t EnterpriseFlag15;
    __declspec(property(get=GetEnterpriseFlag16,put=PutEnterpriseFlag16))
    _variant_t EnterpriseFlag16;
    __declspec(property(get=GetEnterpriseFlag17,put=PutEnterpriseFlag17))
    _variant_t EnterpriseFlag17;
    __declspec(property(get=GetEnterpriseFlag18,put=PutEnterpriseFlag18))
    _variant_t EnterpriseFlag18;
    __declspec(property(get=GetEnterpriseFlag19,put=PutEnterpriseFlag19))
    _variant_t EnterpriseFlag19;
    __declspec(property(get=GetEnterpriseFlag20,put=PutEnterpriseFlag20))
    _variant_t EnterpriseFlag20;
    __declspec(property(get=GetEnterpriseNumber1,put=PutEnterpriseNumber1))
    double EnterpriseNumber1;
    __declspec(property(get=GetEnterpriseNumber2,put=PutEnterpriseNumber2))
    double EnterpriseNumber2;
    __declspec(property(get=GetEnterpriseNumber3,put=PutEnterpriseNumber3))
    double EnterpriseNumber3;
    __declspec(property(get=GetEnterpriseNumber4,put=PutEnterpriseNumber4))
    double EnterpriseNumber4;
    __declspec(property(get=GetEnterpriseNumber5,put=PutEnterpriseNumber5))
    double EnterpriseNumber5;
    __declspec(property(get=GetEnterpriseNumber6,put=PutEnterpriseNumber6))
    double EnterpriseNumber6;
    __declspec(property(get=GetEnterpriseNumber7,put=PutEnterpriseNumber7))
    double EnterpriseNumber7;
    __declspec(property(get=GetEnterpriseNumber8,put=PutEnterpriseNumber8))
    double EnterpriseNumber8;
    __declspec(property(get=GetEnterpriseNumber9,put=PutEnterpriseNumber9))
    double EnterpriseNumber9;
    __declspec(property(get=GetEnterpriseNumber10,put=PutEnterpriseNumber10))
    double EnterpriseNumber10;
    __declspec(property(get=GetEnterpriseNumber11,put=PutEnterpriseNumber11))
    double EnterpriseNumber11;
    __declspec(property(get=GetEnterpriseNumber12,put=PutEnterpriseNumber12))
    double EnterpriseNumber12;
    __declspec(property(get=GetEnterpriseNumber13,put=PutEnterpriseNumber13))
    double EnterpriseNumber13;
    __declspec(property(get=GetEnterpriseNumber14,put=PutEnterpriseNumber14))
    double EnterpriseNumber14;
    __declspec(property(get=GetEnterpriseNumber15,put=PutEnterpriseNumber15))
    double EnterpriseNumber15;
    __declspec(property(get=GetEnterpriseNumber16,put=PutEnterpriseNumber16))
    double EnterpriseNumber16;
    __declspec(property(get=GetEnterpriseNumber17,put=PutEnterpriseNumber17))
    double EnterpriseNumber17;
    __declspec(property(get=GetEnterpriseNumber18,put=PutEnterpriseNumber18))
    double EnterpriseNumber18;
    __declspec(property(get=GetEnterpriseNumber19,put=PutEnterpriseNumber19))
    double EnterpriseNumber19;
    __declspec(property(get=GetEnterpriseNumber20,put=PutEnterpriseNumber20))
    double EnterpriseNumber20;
    __declspec(property(get=GetEnterpriseNumber21,put=PutEnterpriseNumber21))
    double EnterpriseNumber21;
    __declspec(property(get=GetEnterpriseNumber22,put=PutEnterpriseNumber22))
    double EnterpriseNumber22;
    __declspec(property(get=GetEnterpriseNumber23,put=PutEnterpriseNumber23))
    double EnterpriseNumber23;
    __declspec(property(get=GetEnterpriseNumber24,put=PutEnterpriseNumber24))
    double EnterpriseNumber24;
    __declspec(property(get=GetEnterpriseNumber25,put=PutEnterpriseNumber25))
    double EnterpriseNumber25;
    __declspec(property(get=GetEnterpriseNumber26,put=PutEnterpriseNumber26))
    double EnterpriseNumber26;
    __declspec(property(get=GetEnterpriseNumber27,put=PutEnterpriseNumber27))
    double EnterpriseNumber27;
    __declspec(property(get=GetEnterpriseNumber28,put=PutEnterpriseNumber28))
    double EnterpriseNumber28;
    __declspec(property(get=GetEnterpriseNumber29,put=PutEnterpriseNumber29))
    double EnterpriseNumber29;
    __declspec(property(get=GetEnterpriseNumber30,put=PutEnterpriseNumber30))
    double EnterpriseNumber30;
    __declspec(property(get=GetEnterpriseNumber31,put=PutEnterpriseNumber31))
    double EnterpriseNumber31;
    __declspec(property(get=GetEnterpriseNumber32,put=PutEnterpriseNumber32))
    double EnterpriseNumber32;
    __declspec(property(get=GetEnterpriseNumber33,put=PutEnterpriseNumber33))
    double EnterpriseNumber33;
    __declspec(property(get=GetEnterpriseNumber34,put=PutEnterpriseNumber34))
    double EnterpriseNumber34;
    __declspec(property(get=GetEnterpriseNumber35,put=PutEnterpriseNumber35))
    double EnterpriseNumber35;
    __declspec(property(get=GetEnterpriseNumber36,put=PutEnterpriseNumber36))
    double EnterpriseNumber36;
    __declspec(property(get=GetEnterpriseNumber37,put=PutEnterpriseNumber37))
    double EnterpriseNumber37;
    __declspec(property(get=GetEnterpriseNumber38,put=PutEnterpriseNumber38))
    double EnterpriseNumber38;
    __declspec(property(get=GetEnterpriseNumber39,put=PutEnterpriseNumber39))
    double EnterpriseNumber39;
    __declspec(property(get=GetEnterpriseNumber40,put=PutEnterpriseNumber40))
    double EnterpriseNumber40;
    __declspec(property(get=GetEnterpriseText1,put=PutEnterpriseText1))
    _bstr_t EnterpriseText1;
    __declspec(property(get=GetEnterpriseText2,put=PutEnterpriseText2))
    _bstr_t EnterpriseText2;
    __declspec(property(get=GetEnterpriseText3,put=PutEnterpriseText3))
    _bstr_t EnterpriseText3;
    __declspec(property(get=GetEnterpriseText4,put=PutEnterpriseText4))
    _bstr_t EnterpriseText4;
    __declspec(property(get=GetEnterpriseText5,put=PutEnterpriseText5))
    _bstr_t EnterpriseText5;
    __declspec(property(get=GetEnterpriseText6,put=PutEnterpriseText6))
    _bstr_t EnterpriseText6;
    __declspec(property(get=GetEnterpriseText7,put=PutEnterpriseText7))
    _bstr_t EnterpriseText7;
    __declspec(property(get=GetEnterpriseText8,put=PutEnterpriseText8))
    _bstr_t EnterpriseText8;
    __declspec(property(get=GetEnterpriseText9,put=PutEnterpriseText9))
    _bstr_t EnterpriseText9;
    __declspec(property(get=GetEnterpriseText10,put=PutEnterpriseText10))
    _bstr_t EnterpriseText10;
    __declspec(property(get=GetEnterpriseText11,put=PutEnterpriseText11))
    _bstr_t EnterpriseText11;
    __declspec(property(get=GetEnterpriseText12,put=PutEnterpriseText12))
    _bstr_t EnterpriseText12;
    __declspec(property(get=GetEnterpriseText13,put=PutEnterpriseText13))
    _bstr_t EnterpriseText13;
    __declspec(property(get=GetEnterpriseText14,put=PutEnterpriseText14))
    _bstr_t EnterpriseText14;
    __declspec(property(get=GetEnterpriseText15,put=PutEnterpriseText15))
    _bstr_t EnterpriseText15;
    __declspec(property(get=GetEnterpriseText16,put=PutEnterpriseText16))
    _bstr_t EnterpriseText16;
    __declspec(property(get=GetEnterpriseText17,put=PutEnterpriseText17))
    _bstr_t EnterpriseText17;
    __declspec(property(get=GetEnterpriseText18,put=PutEnterpriseText18))
    _bstr_t EnterpriseText18;
    __declspec(property(get=GetEnterpriseText19,put=PutEnterpriseText19))
    _bstr_t EnterpriseText19;
    __declspec(property(get=GetEnterpriseText20,put=PutEnterpriseText20))
    _bstr_t EnterpriseText20;
    __declspec(property(get=GetEnterpriseText21,put=PutEnterpriseText21))
    _bstr_t EnterpriseText21;
    __declspec(property(get=GetEnterpriseText22,put=PutEnterpriseText22))
    _bstr_t EnterpriseText22;
    __declspec(property(get=GetEnterpriseText23,put=PutEnterpriseText23))
    _bstr_t EnterpriseText23;
    __declspec(property(get=GetEnterpriseText24,put=PutEnterpriseText24))
    _bstr_t EnterpriseText24;
    __declspec(property(get=GetEnterpriseText25,put=PutEnterpriseText25))
    _bstr_t EnterpriseText25;
    __declspec(property(get=GetEnterpriseText26,put=PutEnterpriseText26))
    _bstr_t EnterpriseText26;
    __declspec(property(get=GetEnterpriseText27,put=PutEnterpriseText27))
    _bstr_t EnterpriseText27;
    __declspec(property(get=GetEnterpriseText28,put=PutEnterpriseText28))
    _bstr_t EnterpriseText28;
    __declspec(property(get=GetEnterpriseText29,put=PutEnterpriseText29))
    _bstr_t EnterpriseText29;
    __declspec(property(get=GetEnterpriseText30,put=PutEnterpriseText30))
    _bstr_t EnterpriseText30;
    __declspec(property(get=GetEnterpriseText31,put=PutEnterpriseText31))
    _bstr_t EnterpriseText31;
    __declspec(property(get=GetEnterpriseText32,put=PutEnterpriseText32))
    _bstr_t EnterpriseText32;
    __declspec(property(get=GetEnterpriseText33,put=PutEnterpriseText33))
    _bstr_t EnterpriseText33;
    __declspec(property(get=GetEnterpriseText34,put=PutEnterpriseText34))
    _bstr_t EnterpriseText34;
    __declspec(property(get=GetEnterpriseText35,put=PutEnterpriseText35))
    _bstr_t EnterpriseText35;
    __declspec(property(get=GetEnterpriseText36,put=PutEnterpriseText36))
    _bstr_t EnterpriseText36;
    __declspec(property(get=GetEnterpriseText37,put=PutEnterpriseText37))
    _bstr_t EnterpriseText37;
    __declspec(property(get=GetEnterpriseText38,put=PutEnterpriseText38))
    _bstr_t EnterpriseText38;
    __declspec(property(get=GetEnterpriseText39,put=PutEnterpriseText39))
    _bstr_t EnterpriseText39;
    __declspec(property(get=GetEnterpriseText40,put=PutEnterpriseText40))
    _bstr_t EnterpriseText40;
    __declspec(property(get=GetEnterpriseResourceOutlineCode1,put=PutEnterpriseResourceOutlineCode1))
    _bstr_t EnterpriseResourceOutlineCode1;
    __declspec(property(get=GetEnterpriseResourceOutlineCode2,put=PutEnterpriseResourceOutlineCode2))
    _bstr_t EnterpriseResourceOutlineCode2;
    __declspec(property(get=GetEnterpriseResourceOutlineCode3,put=PutEnterpriseResourceOutlineCode3))
    _bstr_t EnterpriseResourceOutlineCode3;
    __declspec(property(get=GetEnterpriseResourceOutlineCode4,put=PutEnterpriseResourceOutlineCode4))
    _bstr_t EnterpriseResourceOutlineCode4;
    __declspec(property(get=GetEnterpriseResourceOutlineCode5,put=PutEnterpriseResourceOutlineCode5))
    _bstr_t EnterpriseResourceOutlineCode5;
    __declspec(property(get=GetEnterpriseResourceOutlineCode6,put=PutEnterpriseResourceOutlineCode6))
    _bstr_t EnterpriseResourceOutlineCode6;
    __declspec(property(get=GetEnterpriseResourceOutlineCode7,put=PutEnterpriseResourceOutlineCode7))
    _bstr_t EnterpriseResourceOutlineCode7;
    __declspec(property(get=GetEnterpriseResourceOutlineCode8,put=PutEnterpriseResourceOutlineCode8))
    _bstr_t EnterpriseResourceOutlineCode8;
    __declspec(property(get=GetEnterpriseResourceOutlineCode9,put=PutEnterpriseResourceOutlineCode9))
    _bstr_t EnterpriseResourceOutlineCode9;
    __declspec(property(get=GetEnterpriseResourceOutlineCode10,put=PutEnterpriseResourceOutlineCode10))
    _bstr_t EnterpriseResourceOutlineCode10;
    __declspec(property(get=GetEnterpriseResourceOutlineCode11,put=PutEnterpriseResourceOutlineCode11))
    _bstr_t EnterpriseResourceOutlineCode11;
    __declspec(property(get=GetEnterpriseResourceOutlineCode12,put=PutEnterpriseResourceOutlineCode12))
    _bstr_t EnterpriseResourceOutlineCode12;
    __declspec(property(get=GetEnterpriseResourceOutlineCode13,put=PutEnterpriseResourceOutlineCode13))
    _bstr_t EnterpriseResourceOutlineCode13;
    __declspec(property(get=GetEnterpriseResourceOutlineCode14,put=PutEnterpriseResourceOutlineCode14))
    _bstr_t EnterpriseResourceOutlineCode14;
    __declspec(property(get=GetEnterpriseResourceOutlineCode15,put=PutEnterpriseResourceOutlineCode15))
    _bstr_t EnterpriseResourceOutlineCode15;
    __declspec(property(get=GetEnterpriseResourceOutlineCode16,put=PutEnterpriseResourceOutlineCode16))
    _bstr_t EnterpriseResourceOutlineCode16;
    __declspec(property(get=GetEnterpriseResourceOutlineCode17,put=PutEnterpriseResourceOutlineCode17))
    _bstr_t EnterpriseResourceOutlineCode17;
    __declspec(property(get=GetEnterpriseResourceOutlineCode18,put=PutEnterpriseResourceOutlineCode18))
    _bstr_t EnterpriseResourceOutlineCode18;
    __declspec(property(get=GetEnterpriseResourceOutlineCode19,put=PutEnterpriseResourceOutlineCode19))
    _bstr_t EnterpriseResourceOutlineCode19;
    __declspec(property(get=GetEnterpriseResourceOutlineCode20,put=PutEnterpriseResourceOutlineCode20))
    _bstr_t EnterpriseResourceOutlineCode20;
    __declspec(property(get=GetEnterpriseResourceOutlineCode21,put=PutEnterpriseResourceOutlineCode21))
    _bstr_t EnterpriseResourceOutlineCode21;
    __declspec(property(get=GetEnterpriseResourceOutlineCode22,put=PutEnterpriseResourceOutlineCode22))
    _bstr_t EnterpriseResourceOutlineCode22;
    __declspec(property(get=GetEnterpriseResourceOutlineCode23,put=PutEnterpriseResourceOutlineCode23))
    _bstr_t EnterpriseResourceOutlineCode23;
    __declspec(property(get=GetEnterpriseResourceOutlineCode24,put=PutEnterpriseResourceOutlineCode24))
    _bstr_t EnterpriseResourceOutlineCode24;
    __declspec(property(get=GetEnterpriseResourceOutlineCode25,put=PutEnterpriseResourceOutlineCode25))
    _bstr_t EnterpriseResourceOutlineCode25;
    __declspec(property(get=GetEnterpriseResourceOutlineCode26,put=PutEnterpriseResourceOutlineCode26))
    _bstr_t EnterpriseResourceOutlineCode26;
    __declspec(property(get=GetEnterpriseResourceOutlineCode27,put=PutEnterpriseResourceOutlineCode27))
    _bstr_t EnterpriseResourceOutlineCode27;
    __declspec(property(get=GetEnterpriseResourceOutlineCode28,put=PutEnterpriseResourceOutlineCode28))
    _bstr_t EnterpriseResourceOutlineCode28;
    __declspec(property(get=GetEnterpriseResourceOutlineCode29,put=PutEnterpriseResourceOutlineCode29))
    _bstr_t EnterpriseResourceOutlineCode29;
    __declspec(property(get=GetEnterpriseResourceRBS,put=PutEnterpriseResourceRBS))
    _bstr_t EnterpriseResourceRBS;
    __declspec(property(get=GetResourceRequestType,put=PutResourceRequestType))
    enum PjResourceRequestType ResourceRequestType;

    //
    // Wrapper methods for error-handling
    //

    long GetUniqueID ( );
    long GetTaskUniqueID ( );
    void PutTaskUniqueID (
        long retval );
    long GetResourceUniqueID ( );
    void PutResourceUniqueID (
        long retval );
    long GetTaskID ( );
    void PutTaskID (
        long retval );
    long GetResourceID ( );
    void PutResourceID (
        long retval );
    _bstr_t GetTaskName ( );
    void PutTaskName (
        _bstr_t retval );
    _bstr_t GetResourceName ( );
    void PutResourceName (
        _bstr_t retval );
    _variant_t GetUnits ( );
    void PutUnits (
        const _variant_t & retval );
    _variant_t GetWork ( );
    void PutWork (
        const _variant_t & retval );
    _variant_t GetOvertimeWork ( );
    void PutOvertimeWork (
        const _variant_t & retval );
    _variant_t GetActualWork ( );
    void PutActualWork (
        const _variant_t & retval );
    _variant_t GetRegularWork ( );
    void PutRegularWork (
        const _variant_t & retval );
    _variant_t GetRemainingWork ( );
    void PutRemainingWork (
        const _variant_t & retval );
    _variant_t GetActualOvertimeWork ( );
    void PutActualOvertimeWork (
        const _variant_t & retval );
    _variant_t GetRemainingOvertimeWork ( );
    void PutRemainingOvertimeWork (
        const _variant_t & retval );
    _variant_t GetBaselineWork ( );
    void PutBaselineWork (
        const _variant_t & retval );
    _variant_t GetPeak ( );
    _variant_t GetStart ( );
    void PutStart (
        const _variant_t & retval );
    _variant_t GetFinish ( );
    void PutFinish (
        const _variant_t & retval );
    _variant_t GetActualStart ( );
    void PutActualStart (
        const _variant_t & retval );
    _variant_t GetActualFinish ( );
    void PutActualFinish (
        const _variant_t & retval );
    _variant_t GetDelay ( );
    void PutDelay (
        const _variant_t & retval );
    _variant_t GetCost ( );
    void PutCost (
        const _variant_t & retval );
    _variant_t GetOvertimeCost ( );
    _variant_t GetActualCost ( );
    void PutActualCost (
        const _variant_t & retval );
    _variant_t GetRemainingCost ( );
    _variant_t GetActualOvertimeCost ( );
    _variant_t GetRemainingOvertimeCost ( );
    _variant_t GetBaselineCost ( );
    void PutBaselineCost (
        const _variant_t & retval );
    _variant_t GetBCWS ( );
    _variant_t GetBCWP ( );
    _variant_t GetACWP ( );
    _variant_t GetSV ( );
    _variant_t GetCostVariance ( );
    enum PjWorkContourType GetWorkContour ( );
    void PutWorkContour (
        enum PjWorkContourType retval );
    _variant_t GetPercentWorkComplete ( );
    void PutPercentWorkComplete (
        const _variant_t & retval );
    _bstr_t GetProject ( );
    _bstr_t GetNotes ( );
    void PutNotes (
        _bstr_t retval );
    _variant_t GetConfirmed ( );
    void PutConfirmed (
        const _variant_t & retval );
    _variant_t GetResponsePending ( );
    void PutResponsePending (
        const _variant_t & retval );
    _variant_t GetUpdateNeeded ( );
    _variant_t GetTeamStatusPending ( );
    void PutTeamStatusPending (
        const _variant_t & retval );
    _variant_t GetCostRateTable ( );
    void PutCostRateTable (
        const _variant_t & retval );
    IDispatchPtr GetParent ( );
    _MSProjectPtr GetApplication ( );
    _bstr_t GetText1 ( );
    void PutText1 (
        _bstr_t retval );
    _bstr_t GetText2 ( );
    void PutText2 (
        _bstr_t retval );
    _bstr_t GetText3 ( );
    void PutText3 (
        _bstr_t retval );
    _bstr_t GetText4 ( );
    void PutText4 (
        _bstr_t retval );
    _bstr_t GetText5 ( );
    void PutText5 (
        _bstr_t retval );
    _bstr_t GetText6 ( );
    void PutText6 (
        _bstr_t retval );
    _bstr_t GetText7 ( );
    void PutText7 (
        _bstr_t retval );
    _bstr_t GetText8 ( );
    void PutText8 (
        _bstr_t retval );
    _bstr_t GetText9 ( );
    void PutText9 (
        _bstr_t retval );
    _bstr_t GetText10 ( );
    void PutText10 (
        _bstr_t retval );
    _variant_t GetStart1 ( );
    void PutStart1 (
        const _variant_t & retval );
    _variant_t GetStart2 ( );
    void PutStart2 (
        const _variant_t & retval );
    _variant_t GetStart3 ( );
    void PutStart3 (
        const _variant_t & retval );
    _variant_t GetStart4 ( );
    void PutStart4 (
        const _variant_t & retval );
    _variant_t GetStart5 ( );
    void PutStart5 (
        const _variant_t & retval );
    _variant_t GetFinish1 ( );
    void PutFinish1 (
        const _variant_t & retval );
    _variant_t GetFinish2 ( );
    void PutFinish2 (
        const _variant_t & retval );
    _variant_t GetFinish3 ( );
    void PutFinish3 (
        const _variant_t & retval );
    _variant_t GetFinish4 ( );
    void PutFinish4 (
        const _variant_t & retval );
    _variant_t GetFinish5 ( );
    void PutFinish5 (
        const _variant_t & retval );
    double GetNumber1 ( );
    void PutNumber1 (
        double retval );
    double GetNumber2 ( );
    void PutNumber2 (
        double retval );
    double GetNumber3 ( );
    void PutNumber3 (
        double retval );
    double GetNumber4 ( );
    void PutNumber4 (
        double retval );
    double GetNumber5 ( );
    void PutNumber5 (
        double retval );
    _variant_t GetDuration1 ( );
    void PutDuration1 (
        const _variant_t & retval );
    _variant_t GetDuration2 ( );
    void PutDuration2 (
        const _variant_t & retval );
    _variant_t GetDuration3 ( );
    void PutDuration3 (
        const _variant_t & retval );
    _variant_t GetCost1 ( );
    void PutCost1 (
        const _variant_t & retval );
    _variant_t GetCost2 ( );
    void PutCost2 (
        const _variant_t & retval );
    _variant_t GetCost3 ( );
    void PutCost3 (
        const _variant_t & retval );
    _variant_t GetFlag10 ( );
    void PutFlag10 (
        const _variant_t & retval );
    _variant_t GetFlag1 ( );
    void PutFlag1 (
        const _variant_t & retval );
    _variant_t GetFlag2 ( );
    void PutFlag2 (
        const _variant_t & retval );
    _variant_t GetFlag3 ( );
    void PutFlag3 (
        const _variant_t & retval );
    _variant_t GetFlag4 ( );
    void PutFlag4 (
        const _variant_t & retval );
    _variant_t GetFlag5 ( );
    void PutFlag5 (
        const _variant_t & retval );
    _variant_t GetFlag6 ( );
    void PutFlag6 (
        const _variant_t & retval );
    _variant_t GetFlag7 ( );
    void PutFlag7 (
        const _variant_t & retval );
    _variant_t GetFlag8 ( );
    void PutFlag8 (
        const _variant_t & retval );
    _variant_t GetFlag9 ( );
    void PutFlag9 (
        const _variant_t & retval );
    _variant_t GetLinkedFields ( );
    _variant_t GetOverallocated ( );
    HRESULT Delete ( );
    HRESULT AppendNotes (
        _bstr_t Value );
    TimeScaleValuesPtr TimeScaleData (
        const _variant_t & StartDate,
        const _variant_t & EndDate,
        enum PjAssignmentTimescaledData Type,
        enum PjTimescaleUnit TimeScaleUnit,
        long Count );
    _bstr_t GetTaskSummaryName ( );
    _variant_t GetLevelingDelay ( );
    void PutLevelingDelay (
        const _variant_t & retval );
    _variant_t GetBaselineStart ( );
    void PutBaselineStart (
        const _variant_t & retval );
    _variant_t GetBaselineFinish ( );
    void PutBaselineFinish (
        const _variant_t & retval );
    _bstr_t GetHyperlink ( );
    void PutHyperlink (
        _bstr_t retval );
    _bstr_t GetHyperlinkAddress ( );
    void PutHyperlinkAddress (
        _bstr_t retval );
    _bstr_t GetHyperlinkSubAddress ( );
    void PutHyperlinkSubAddress (
        _bstr_t retval );
    _bstr_t GetHyperlinkHREF ( );
    void PutHyperlinkHREF (
        _bstr_t retval );
    _variant_t GetCost4 ( );
    void PutCost4 (
        const _variant_t & retval );
    _variant_t GetCost5 ( );
    void PutCost5 (
        const _variant_t & retval );
    _variant_t GetCost6 ( );
    void PutCost6 (
        const _variant_t & retval );
    _variant_t GetCost7 ( );
    void PutCost7 (
        const _variant_t & retval );
    _variant_t GetCost8 ( );
    void PutCost8 (
        const _variant_t & retval );
    _variant_t GetCost9 ( );
    void PutCost9 (
        const _variant_t & retval );
    _variant_t GetCost10 ( );
    void PutCost10 (
        const _variant_t & retval );
    _variant_t GetDate1 ( );
    void PutDate1 (
        const _variant_t & retval );
    _variant_t GetDate2 ( );
    void PutDate2 (
        const _variant_t & retval );
    _variant_t GetDate3 ( );
    void PutDate3 (
        const _variant_t & retval );
    _variant_t GetDate4 ( );
    void PutDate4 (
        const _variant_t & retval );
    _variant_t GetDate5 ( );
    void PutDate5 (
        const _variant_t & retval );
    _variant_t GetDate6 ( );
    void PutDate6 (
        const _variant_t & retval );
    _variant_t GetDate7 ( );
    void PutDate7 (
        const _variant_t & retval );
    _variant_t GetDate8 ( );
    void PutDate8 (
        const _variant_t & retval );
    _variant_t GetDate9 ( );
    void PutDate9 (
        const _variant_t & retval );
    _variant_t GetDate10 ( );
    void PutDate10 (
        const _variant_t & retval );
    _variant_t GetDuration4 ( );
    void PutDuration4 (
        const _variant_t & retval );
    _variant_t GetDuration5 ( );
    void PutDuration5 (
        const _variant_t & retval );
    _variant_t GetDuration6 ( );
    void PutDuration6 (
        const _variant_t & retval );
    _variant_t GetDuration7 ( );
    void PutDuration7 (
        const _variant_t & retval );
    _variant_t GetDuration8 ( );
    void PutDuration8 (
        const _variant_t & retval );
    _variant_t GetDuration9 ( );
    void PutDuration9 (
        const _variant_t & retval );
    _variant_t GetDuration10 ( );
    void PutDuration10 (
        const _variant_t & retval );
    _variant_t GetFinish6 ( );
    void PutFinish6 (
        const _variant_t & retval );
    _variant_t GetFinish7 ( );
    void PutFinish7 (
        const _variant_t & retval );
    _variant_t GetFinish8 ( );
    void PutFinish8 (
        const _variant_t & retval );
    _variant_t GetFinish9 ( );
    void PutFinish9 (
        const _variant_t & retval );
    _variant_t GetFinish10 ( );
    void PutFinish10 (
        const _variant_t & retval );
    _variant_t GetFlag11 ( );
    void PutFlag11 (
        const _variant_t & retval );
    _variant_t GetFlag12 ( );
    void PutFlag12 (
        const _variant_t & retval );
    _variant_t GetFlag13 ( );
    void PutFlag13 (
        const _variant_t & retval );
    _variant_t GetFlag14 ( );
    void PutFlag14 (
        const _variant_t & retval );
    _variant_t GetFlag15 ( );
    void PutFlag15 (
        const _variant_t & retval );
    _variant_t GetFlag16 ( );
    void PutFlag16 (
        const _variant_t & retval );
    _variant_t GetFlag17 ( );
    void PutFlag17 (
        const _variant_t & retval );
    _variant_t GetFlag18 ( );
    void PutFlag18 (
        const _variant_t & retval );
    _variant_t GetFlag19 ( );
    void PutFlag19 (
        const _variant_t & retval );
    _variant_t GetFlag20 ( );
    void PutFlag20 (
        const _variant_t & retval );
    double GetNumber6 ( );
    void PutNumber6 (
        double retval );
    double GetNumber7 ( );
    void PutNumber7 (
        double retval );
    double GetNumber8 ( );
    void PutNumber8 (
        double retval );
    double GetNumber9 ( );
    void PutNumber9 (
        double retval );
    double GetNumber10 ( );
    void PutNumber10 (
        double retval );
    double GetNumber11 ( );
    void PutNumber11 (
        double retval );
    double GetNumber12 ( );
    void PutNumber12 (
        double retval );
    double GetNumber13 ( );
    void PutNumber13 (
        double retval );
    double GetNumber14 ( );
    void PutNumber14 (
        double retval );
    double GetNumber15 ( );
    void PutNumber15 (
        double retval );
    double GetNumber16 ( );
    void PutNumber16 (
        double retval );
    double GetNumber17 ( );
    void PutNumber17 (
        double retval );
    double GetNumber18 ( );
    void PutNumber18 (
        double retval );
    double GetNumber19 ( );
    void PutNumber19 (
        double retval );
    double GetNumber20 ( );
    void PutNumber20 (
        double retval );
    _variant_t GetStart6 ( );
    void PutStart6 (
        const _variant_t & retval );
    _variant_t GetStart7 ( );
    void PutStart7 (
        const _variant_t & retval );
    _variant_t GetStart8 ( );
    void PutStart8 (
        const _variant_t & retval );
    _variant_t GetStart9 ( );
    void PutStart9 (
        const _variant_t & retval );
    _variant_t GetStart10 ( );
    void PutStart10 (
        const _variant_t & retval );
    _bstr_t GetText11 ( );
    void PutText11 (
        _bstr_t retval );
    _bstr_t GetText12 ( );
    void PutText12 (
        _bstr_t retval );
    _bstr_t GetText13 ( );
    void PutText13 (
        _bstr_t retval );
    _bstr_t GetText14 ( );
    void PutText14 (
        _bstr_t retval );
    _bstr_t GetText15 ( );
    void PutText15 (
        _bstr_t retval );
    _bstr_t GetText16 ( );
    void PutText16 (
        _bstr_t retval );
    _bstr_t GetText17 ( );
    void PutText17 (
        _bstr_t retval );
    _bstr_t GetText18 ( );
    void PutText18 (
        _bstr_t retval );
    _bstr_t GetText19 ( );
    void PutText19 (
        _bstr_t retval );
    _bstr_t GetText20 ( );
    void PutText20 (
        _bstr_t retval );
    _bstr_t GetText21 ( );
    void PutText21 (
        _bstr_t retval );
    _bstr_t GetText22 ( );
    void PutText22 (
        _bstr_t retval );
    _bstr_t GetText23 ( );
    void PutText23 (
        _bstr_t retval );
    _bstr_t GetText24 ( );
    void PutText24 (
        _bstr_t retval );
    _bstr_t GetText25 ( );
    void PutText25 (
        _bstr_t retval );
    _bstr_t GetText26 ( );
    void PutText26 (
        _bstr_t retval );
    _bstr_t GetText27 ( );
    void PutText27 (
        _bstr_t retval );
    _bstr_t GetText28 ( );
    void PutText28 (
        _bstr_t retval );
    _bstr_t GetText29 ( );
    void PutText29 (
        _bstr_t retval );
    _bstr_t GetText30 ( );
    void PutText30 (
        _bstr_t retval );
    long GetIndex ( );
    _variant_t GetCV ( );
    _variant_t GetWorkVariance ( );
    _variant_t GetStartVariance ( );
    _variant_t GetFinishVariance ( );
    _variant_t GetVAC ( );
    _variant_t GetFixedMaterialAssignment ( );
    enum PjResourceTypes GetResourceType ( );
    _bstr_t GetHyperlinkScreenTip ( );
    void PutHyperlinkScreenTip (
        _bstr_t retval );
    _variant_t GetBaseline1Work ( );
    void PutBaseline1Work (
        const _variant_t & retval );
    _variant_t GetBaseline1Cost ( );
    void PutBaseline1Cost (
        const _variant_t & retval );
    _variant_t GetBaseline1Start ( );
    void PutBaseline1Start (
        const _variant_t & retval );
    _variant_t GetBaseline1Finish ( );
    void PutBaseline1Finish (
        const _variant_t & retval );
    _variant_t GetBaseline2Work ( );
    void PutBaseline2Work (
        const _variant_t & retval );
    _variant_t GetBaseline2Cost ( );
    void PutBaseline2Cost (
        const _variant_t & retval );
    _variant_t GetBaseline2Start ( );
    void PutBaseline2Start (
        const _variant_t & retval );
    _variant_t GetBaseline2Finish ( );
    void PutBaseline2Finish (
        const _variant_t & retval );
    _variant_t GetBaseline3Work ( );
    void PutBaseline3Work (
        const _variant_t & retval );
    _variant_t GetBaseline3Cost ( );
    void PutBaseline3Cost (
        const _variant_t & retval );
    _variant_t GetBaseline3Start ( );
    void PutBaseline3Start (
        const _variant_t & retval );
    _variant_t GetBaseline3Finish ( );
    void PutBaseline3Finish (
        const _variant_t & retval );
    _variant_t GetBaseline4Work ( );
    void PutBaseline4Work (
        const _variant_t & retval );
    _variant_t GetBaseline4Cost ( );
    void PutBaseline4Cost (
        const _variant_t & retval );
    _variant_t GetBaseline4Start ( );
    void PutBaseline4Start (
        const _variant_t & retval );
    _variant_t GetBaseline4Finish ( );
    void PutBaseline4Finish (
        const _variant_t & retval );
    _variant_t GetBaseline5Work ( );
    void PutBaseline5Work (
        const _variant_t & retval );
    _variant_t GetBaseline5Cost ( );
    void PutBaseline5Cost (
        const _variant_t & retval );
    _variant_t GetBaseline5Start ( );
    void PutBaseline5Start (
        const _variant_t & retval );
    _variant_t GetBaseline5Finish ( );
    void PutBaseline5Finish (
        const _variant_t & retval );
    _variant_t GetBaseline6Work ( );
    void PutBaseline6Work (
        const _variant_t & retval );
    _variant_t GetBaseline6Cost ( );
    void PutBaseline6Cost (
        const _variant_t & retval );
    _variant_t GetBaseline6Start ( );
    void PutBaseline6Start (
        const _variant_t & retval );
    _variant_t GetBaseline6Finish ( );
    void PutBaseline6Finish (
        const _variant_t & retval );
    _variant_t GetBaseline7Work ( );
    void PutBaseline7Work (
        const _variant_t & retval );
    _variant_t GetBaseline7Cost ( );
    void PutBaseline7Cost (
        const _variant_t & retval );
    _variant_t GetBaseline7Start ( );
    void PutBaseline7Start (
        const _variant_t & retval );
    _variant_t GetBaseline7Finish ( );
    void PutBaseline7Finish (
        const _variant_t & retval );
    _variant_t GetBaseline8Work ( );
    void PutBaseline8Work (
        const _variant_t & retval );
    _variant_t GetBaseline8Cost ( );
    void PutBaseline8Cost (
        const _variant_t & retval );
    _variant_t GetBaseline8Start ( );
    void PutBaseline8Start (
        const _variant_t & retval );
    _variant_t GetBaseline8Finish ( );
    void PutBaseline8Finish (
        const _variant_t & retval );
    _variant_t GetBaseline9Work ( );
    void PutBaseline9Work (
        const _variant_t & retval );
    _variant_t GetBaseline9Cost ( );
    void PutBaseline9Cost (
        const _variant_t & retval );
    _variant_t GetBaseline9Start ( );
    void PutBaseline9Start (
        const _variant_t & retval );
    _variant_t GetBaseline9Finish ( );
    void PutBaseline9Finish (
        const _variant_t & retval );
    _variant_t GetBaseline10Work ( );
    void PutBaseline10Work (
        const _variant_t & retval );
    _variant_t GetBaseline10Cost ( );
    void PutBaseline10Cost (
        const _variant_t & retval );
    _variant_t GetBaseline10Start ( );
    void PutBaseline10Start (
        const _variant_t & retval );
    _variant_t GetBaseline10Finish ( );
    void PutBaseline10Finish (
        const _variant_t & retval );
    _bstr_t GetTaskOutlineNumber ( );
    _variant_t GetEnterpriseCost1 ( );
    void PutEnterpriseCost1 (
        const _variant_t & retval );
    _variant_t GetEnterpriseCost2 ( );
    void PutEnterpriseCost2 (
        const _variant_t & retval );
    _variant_t GetEnterpriseCost3 ( );
    void PutEnterpriseCost3 (
        const _variant_t & retval );
    _variant_t GetEnterpriseCost4 ( );
    void PutEnterpriseCost4 (
        const _variant_t & retval );
    _variant_t GetEnterpriseCost5 ( );
    void PutEnterpriseCost5 (
        const _variant_t & retval );
    _variant_t GetEnterpriseCost6 ( );
    void PutEnterpriseCost6 (
        const _variant_t & retval );
    _variant_t GetEnterpriseCost7 ( );
    void PutEnterpriseCost7 (
        const _variant_t & retval );
    _variant_t GetEnterpriseCost8 ( );
    void PutEnterpriseCost8 (
        const _variant_t & retval );
    _variant_t GetEnterpriseCost9 ( );
    void PutEnterpriseCost9 (
        const _variant_t & retval );
    _variant_t GetEnterpriseCost10 ( );
    void PutEnterpriseCost10 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDate1 ( );
    void PutEnterpriseDate1 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDate2 ( );
    void PutEnterpriseDate2 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDate3 ( );
    void PutEnterpriseDate3 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDate4 ( );
    void PutEnterpriseDate4 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDate5 ( );
    void PutEnterpriseDate5 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDate6 ( );
    void PutEnterpriseDate6 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDate7 ( );
    void PutEnterpriseDate7 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDate8 ( );
    void PutEnterpriseDate8 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDate9 ( );
    void PutEnterpriseDate9 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDate10 ( );
    void PutEnterpriseDate10 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDate11 ( );
    void PutEnterpriseDate11 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDate12 ( );
    void PutEnterpriseDate12 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDate13 ( );
    void PutEnterpriseDate13 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDate14 ( );
    void PutEnterpriseDate14 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDate15 ( );
    void PutEnterpriseDate15 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDate16 ( );
    void PutEnterpriseDate16 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDate17 ( );
    void PutEnterpriseDate17 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDate18 ( );
    void PutEnterpriseDate18 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDate19 ( );
    void PutEnterpriseDate19 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDate20 ( );
    void PutEnterpriseDate20 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDate21 ( );
    void PutEnterpriseDate21 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDate22 ( );
    void PutEnterpriseDate22 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDate23 ( );
    void PutEnterpriseDate23 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDate24 ( );
    void PutEnterpriseDate24 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDate25 ( );
    void PutEnterpriseDate25 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDate26 ( );
    void PutEnterpriseDate26 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDate27 ( );
    void PutEnterpriseDate27 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDate28 ( );
    void PutEnterpriseDate28 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDate29 ( );
    void PutEnterpriseDate29 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDate30 ( );
    void PutEnterpriseDate30 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDuration1 ( );
    void PutEnterpriseDuration1 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDuration2 ( );
    void PutEnterpriseDuration2 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDuration3 ( );
    void PutEnterpriseDuration3 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDuration4 ( );
    void PutEnterpriseDuration4 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDuration5 ( );
    void PutEnterpriseDuration5 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDuration6 ( );
    void PutEnterpriseDuration6 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDuration7 ( );
    void PutEnterpriseDuration7 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDuration8 ( );
    void PutEnterpriseDuration8 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDuration9 ( );
    void PutEnterpriseDuration9 (
        const _variant_t & retval );
    _variant_t GetEnterpriseDuration10 ( );
    void PutEnterpriseDuration10 (
        const _variant_t & retval );
    _variant_t GetEnterpriseFlag1 ( );
    void PutEnterpriseFlag1 (
        const _variant_t & retval );
    _variant_t GetEnterpriseFlag2 ( );
    void PutEnterpriseFlag2 (
        const _variant_t & retval );
    _variant_t GetEnterpriseFlag3 ( );
    void PutEnterpriseFlag3 (
        const _variant_t & retval );
    _variant_t GetEnterpriseFlag4 ( );
    void PutEnterpriseFlag4 (
        const _variant_t & retval );
    _variant_t GetEnterpriseFlag5 ( );
    void PutEnterpriseFlag5 (
        const _variant_t & retval );
    _variant_t GetEnterpriseFlag6 ( );
    void PutEnterpriseFlag6 (
        const _variant_t & retval );
    _variant_t GetEnterpriseFlag7 ( );
    void PutEnterpriseFlag7 (
        const _variant_t & retval );
    _variant_t GetEnterpriseFlag8 ( );
    void PutEnterpriseFlag8 (
        const _variant_t & retval );
    _variant_t GetEnterpriseFlag9 ( );
    void PutEnterpriseFlag9 (
        const _variant_t & retval );
    _variant_t GetEnterpriseFlag10 ( );
    void PutEnterpriseFlag10 (
        const _variant_t & retval );
    _variant_t GetEnterpriseFlag11 ( );
    void PutEnterpriseFlag11 (
        const _variant_t & retval );
    _variant_t GetEnterpriseFlag12 ( );
    void PutEnterpriseFlag12 (
        const _variant_t & retval );
    _variant_t GetEnterpriseFlag13 ( );
    void PutEnterpriseFlag13 (
        const _variant_t & retval );
    _variant_t GetEnterpriseFlag14 ( );
    void PutEnterpriseFlag14 (
        const _variant_t & retval );
    _variant_t GetEnterpriseFlag15 ( );
    void PutEnterpriseFlag15 (
        const _variant_t & retval );
    _variant_t GetEnterpriseFlag16 ( );
    void PutEnterpriseFlag16 (
        const _variant_t & retval );
    _variant_t GetEnterpriseFlag17 ( );
    void PutEnterpriseFlag17 (
        const _variant_t & retval );
    _variant_t GetEnterpriseFlag18 ( );
    void PutEnterpriseFlag18 (
        const _variant_t & retval );
    _variant_t GetEnterpriseFlag19 ( );
    void PutEnterpriseFlag19 (
        const _variant_t & retval );
    _variant_t GetEnterpriseFlag20 ( );
    void PutEnterpriseFlag20 (
        const _variant_t & retval );
    double GetEnterpriseNumber1 ( );
    void PutEnterpriseNumber1 (
        double retval );
    double GetEnterpriseNumber2 ( );
    void PutEnterpriseNumber2 (
        double retval );
    double GetEnterpriseNumber3 ( );
    void PutEnterpriseNumber3 (
        double retval );
    double GetEnterpriseNumber4 ( );
    void PutEnterpriseNumber4 (
        double retval );
    double GetEnterpriseNumber5 ( );
    void PutEnterpriseNumber5 (
        double retval );
    double GetEnterpriseNumber6 ( );
    void PutEnterpriseNumber6 (
        double retval );
    double GetEnterpriseNumber7 ( );
    void PutEnterpriseNumber7 (
        double retval );
    double GetEnterpriseNumber8 ( );
    void PutEnterpriseNumber8 (
        double retval );
    double GetEnterpriseNumber9 ( );
    void PutEnterpriseNumber9 (
        double retval );
    double GetEnterpriseNumber10 ( );
    void PutEnterpriseNumber10 (
        double retval );
    double GetEnterpriseNumber11 ( );
    void PutEnterpriseNumber11 (
        double retval );
    double GetEnterpriseNumber12 ( );
    void PutEnterpriseNumber12 (
        double retval );
    double GetEnterpriseNumber13 ( );
    void PutEnterpriseNumber13 (
        double retval );
    double GetEnterpriseNumber14 ( );
    void PutEnterpriseNumber14 (
        double retval );
    double GetEnterpriseNumber15 ( );
    void PutEnterpriseNumber15 (
        double retval );
    double GetEnterpriseNumber16 ( );
    void PutEnterpriseNumber16 (
        double retval );
    double GetEnterpriseNumber17 ( );
    void PutEnterpriseNumber17 (
        double retval );
    double GetEnterpriseNumber18 ( );
    void PutEnterpriseNumber18 (
        double retval );
    double GetEnterpriseNumber19 ( );
    void PutEnterpriseNumber19 (
        double retval );
    double GetEnterpriseNumber20 ( );
    void PutEnterpriseNumber20 (
        double retval );
    double GetEnterpriseNumber21 ( );
    void PutEnterpriseNumber21 (
        double retval );
    double GetEnterpriseNumber22 ( );
    void PutEnterpriseNumber22 (
        double retval );
    double GetEnterpriseNumber23 ( );
    void PutEnterpriseNumber23 (
        double retval );
    double GetEnterpriseNumber24 ( );
    void PutEnterpriseNumber24 (
        double retval );
    double GetEnterpriseNumber25 ( );
    void PutEnterpriseNumber25 (
        double retval );
    double GetEnterpriseNumber26 ( );
    void PutEnterpriseNumber26 (
        double retval );
    double GetEnterpriseNumber27 ( );
    void PutEnterpriseNumber27 (
        double retval );
    double GetEnterpriseNumber28 ( );
    void PutEnterpriseNumber28 (
        double retval );
    double GetEnterpriseNumber29 ( );
    void PutEnterpriseNumber29 (
        double retval );
    double GetEnterpriseNumber30 ( );
    void PutEnterpriseNumber30 (
        double retval );
    double GetEnterpriseNumber31 ( );
    void PutEnterpriseNumber31 (
        double retval );
    double GetEnterpriseNumber32 ( );
    void PutEnterpriseNumber32 (
        double retval );
    double GetEnterpriseNumber33 ( );
    void PutEnterpriseNumber33 (
        double retval );
    double GetEnterpriseNumber34 ( );
    void PutEnterpriseNumber34 (
        double retval );
    double GetEnterpriseNumber35 ( );
    void PutEnterpriseNumber35 (
        double retval );
    double GetEnterpriseNumber36 ( );
    void PutEnterpriseNumber36 (
        double retval );
    double GetEnterpriseNumber37 ( );
    void PutEnterpriseNumber37 (
        double retval );
    double GetEnterpriseNumber38 ( );
    void PutEnterpriseNumber38 (
        double retval );
    double GetEnterpriseNumber39 ( );
    void PutEnterpriseNumber39 (
        double retval );
    double GetEnterpriseNumber40 ( );
    void PutEnterpriseNumber40 (
        double retval );
    _bstr_t GetEnterpriseText1 ( );
    void PutEnterpriseText1 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText2 ( );
    void PutEnterpriseText2 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText3 ( );
    void PutEnterpriseText3 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText4 ( );
    void PutEnterpriseText4 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText5 ( );
    void PutEnterpriseText5 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText6 ( );
    void PutEnterpriseText6 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText7 ( );
    void PutEnterpriseText7 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText8 ( );
    void PutEnterpriseText8 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText9 ( );
    void PutEnterpriseText9 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText10 ( );
    void PutEnterpriseText10 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText11 ( );
    void PutEnterpriseText11 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText12 ( );
    void PutEnterpriseText12 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText13 ( );
    void PutEnterpriseText13 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText14 ( );
    void PutEnterpriseText14 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText15 ( );
    void PutEnterpriseText15 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText16 ( );
    void PutEnterpriseText16 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText17 ( );
    void PutEnterpriseText17 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText18 ( );
    void PutEnterpriseText18 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText19 ( );
    void PutEnterpriseText19 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText20 ( );
    void PutEnterpriseText20 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText21 ( );
    void PutEnterpriseText21 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText22 ( );
    void PutEnterpriseText22 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText23 ( );
    void PutEnterpriseText23 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText24 ( );
    void PutEnterpriseText24 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText25 ( );
    void PutEnterpriseText25 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText26 ( );
    void PutEnterpriseText26 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText27 ( );
    void PutEnterpriseText27 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText28 ( );
    void PutEnterpriseText28 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText29 ( );
    void PutEnterpriseText29 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText30 ( );
    void PutEnterpriseText30 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText31 ( );
    void PutEnterpriseText31 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText32 ( );
    void PutEnterpriseText32 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText33 ( );
    void PutEnterpriseText33 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText34 ( );
    void PutEnterpriseText34 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText35 ( );
    void PutEnterpriseText35 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText36 ( );
    void PutEnterpriseText36 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText37 ( );
    void PutEnterpriseText37 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText38 ( );
    void PutEnterpriseText38 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText39 ( );
    void PutEnterpriseText39 (
        _bstr_t retval );
    _bstr_t GetEnterpriseText40 ( );
    void PutEnterpriseText40 (
        _bstr_t retval );
    _bstr_t GetEnterpriseResourceOutlineCode1 ( );
    void PutEnterpriseResourceOutlineCode1 (
        _bstr_t retval );
    _bstr_t GetEnterpriseResourceOutlineCode2 ( );
    void PutEnterpriseResourceOutlineCode2 (
        _bstr_t retval );
    _bstr_t GetEnterpriseResourceOutlineCode3 ( );
    void PutEnterpriseResourceOutlineCode3 (
        _bstr_t retval );
    _bstr_t GetEnterpriseResourceOutlineCode4 ( );
    void PutEnterpriseResourceOutlineCode4 (
        _bstr_t retval );
    _bstr_t GetEnterpriseResourceOutlineCode5 ( );
    void PutEnterpriseResourceOutlineCode5 (
        _bstr_t retval );
    _bstr_t GetEnterpriseResourceOutlineCode6 ( );
    void PutEnterpriseResourceOutlineCode6 (
        _bstr_t retval );
    _bstr_t GetEnterpriseResourceOutlineCode7 ( );
    void PutEnterpriseResourceOutlineCode7 (
        _bstr_t retval );
    _bstr_t GetEnterpriseResourceOutlineCode8 ( );
    void PutEnterpriseResourceOutlineCode8 (
        _bstr_t retval );
    _bstr_t GetEnterpriseResourceOutlineCode9 ( );
    void PutEnterpriseResourceOutlineCode9 (
        _bstr_t retval );
    _bstr_t GetEnterpriseResourceOutlineCode10 ( );
    void PutEnterpriseResourceOutlineCode10 (
        _bstr_t retval );
    _bstr_t GetEnterpriseResourceOutlineCode11 ( );
    void PutEnterpriseResourceOutlineCode11 (
        _bstr_t retval );
    _bstr_t GetEnterpriseResourceOutlineCode12 ( );
    void PutEnterpriseResourceOutlineCode12 (
        _bstr_t retval );
    _bstr_t GetEnterpriseResourceOutlineCode13 ( );
    void PutEnterpriseResourceOutlineCode13 (
        _bstr_t retval );
    _bstr_t GetEnterpriseResourceOutlineCode14 ( );
    void PutEnterpriseResourceOutlineCode14 (
        _bstr_t retval );
    _bstr_t GetEnterpriseResourceOutlineCode15 ( );
    void PutEnterpriseResourceOutlineCode15 (
        _bstr_t retval );
    _bstr_t GetEnterpriseResourceOutlineCode16 ( );
    void PutEnterpriseResourceOutlineCode16 (
        _bstr_t retval );
    _bstr_t GetEnterpriseResourceOutlineCode17 ( );
    void PutEnterpriseResourceOutlineCode17 (
        _bstr_t retval );
    _bstr_t GetEnterpriseResourceOutlineCode18 ( );
    void PutEnterpriseResourceOutlineCode18 (
        _bstr_t retval );
    _bstr_t GetEnterpriseResourceOutlineCode19 ( );
    void PutEnterpriseResourceOutlineCode19 (
        _bstr_t retval );
    _bstr_t GetEnterpriseResourceOutlineCode20 ( );
    void PutEnterpriseResourceOutlineCode20 (
        _bstr_t retval );
    _bstr_t GetEnterpriseResourceOutlineCode21 ( );
    void PutEnterpriseResourceOutlineCode21 (
        _bstr_t retval );
    _bstr_t GetEnterpriseResourceOutlineCode22 ( );
    void PutEnterpriseResourceOutlineCode22 (
        _bstr_t retval );
    _bstr_t GetEnterpriseResourceOutlineCode23 ( );
    void PutEnterpriseResourceOutlineCode23 (
        _bstr_t retval );
    _bstr_t GetEnterpriseResourceOutlineCode24 ( );
    void PutEnterpriseResourceOutlineCode24 (
        _bstr_t retval );
    _bstr_t GetEnterpriseResourceOutlineCode25 ( );
    void PutEnterpriseResourceOutlineCode25 (
        _bstr_t retval );
    _bstr_t GetEnterpriseResourceOutlineCode26 ( );
    void PutEnterpriseResourceOutlineCode26 (
        _bstr_t retval );
    _bstr_t GetEnterpriseResourceOutlineCode27 ( );
    void PutEnterpriseResourceOutlineCode27 (
        _bstr_t retval );
    _bstr_t GetEnterpriseResourceOutlineCode28 ( );
    void PutEnterpriseResourceOutlineCode28 (
        _bstr_t retval );
    _bstr_t GetEnterpriseResourceOutlineCode29 ( );
    void PutEnterpriseResourceOutlineCode29 (
        _bstr_t retval );
    _bstr_t GetEnterpriseResourceRBS ( );
    void PutEnterpriseResourceRBS (
        _bstr_t retval );
    enum PjResourceRequestType GetResourceRequestType ( );
    void PutResourceRequestType (
        enum PjResourceRequestType retval );
    VARIANT_BOOL EnterpriseTeamMember (
        IDispatch * Project );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_UniqueID (
        long * retval ) = 0;
    virtual HRESULT __stdcall get_TaskUniqueID (
        long * retval ) = 0;
    virtual HRESULT __stdcall put_TaskUniqueID (
        long retval ) = 0;
    virtual HRESULT __stdcall get_ResourceUniqueID (
        long * retval ) = 0;
    virtual HRESULT __stdcall put_ResourceUniqueID (
        long retval ) = 0;
    virtual HRESULT __stdcall get_TaskID (
        long * retval ) = 0;
    virtual HRESULT __stdcall put_TaskID (
        long retval ) = 0;
    virtual HRESULT __stdcall get_ResourceID (
        long * retval ) = 0;
    virtual HRESULT __stdcall put_ResourceID (
        long retval ) = 0;
    virtual HRESULT __stdcall get_TaskName (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_TaskName (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_ResourceName (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_ResourceName (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Units (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Units (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Work (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Work (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_OvertimeWork (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_OvertimeWork (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_ActualWork (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_ActualWork (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_RegularWork (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_RegularWork (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_RemainingWork (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_RemainingWork (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_ActualOvertimeWork (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_ActualOvertimeWork (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_RemainingOvertimeWork (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_RemainingOvertimeWork (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_BaselineWork (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_BaselineWork (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Peak (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall get_Start (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Start (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Finish (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Finish (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_ActualStart (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_ActualStart (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_ActualFinish (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_ActualFinish (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Delay (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Delay (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Cost (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Cost (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_OvertimeCost (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall get_ActualCost (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_ActualCost (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_RemainingCost (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall get_ActualOvertimeCost (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall get_RemainingOvertimeCost (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall get_BaselineCost (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_BaselineCost (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_BCWS (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall get_BCWP (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall get_ACWP (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall get_SV (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall get_CostVariance (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall get_WorkContour (
        enum PjWorkContourType * retval ) = 0;
    virtual HRESULT __stdcall put_WorkContour (
        enum PjWorkContourType retval ) = 0;
    virtual HRESULT __stdcall get_PercentWorkComplete (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_PercentWorkComplete (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Project (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall get_Notes (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Notes (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Confirmed (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Confirmed (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_ResponsePending (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_ResponsePending (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_UpdateNeeded (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall get_TeamStatusPending (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_TeamStatusPending (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_CostRateTable (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_CostRateTable (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Parent (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall get_Application (
        struct _MSProject * * retval ) = 0;
    virtual HRESULT __stdcall get_Text1 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Text1 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Text2 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Text2 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Text3 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Text3 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Text4 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Text4 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Text5 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Text5 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Text6 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Text6 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Text7 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Text7 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Text8 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Text8 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Text9 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Text9 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Text10 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Text10 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Start1 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Start1 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Start2 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Start2 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Start3 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Start3 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Start4 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Start4 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Start5 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Start5 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Finish1 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Finish1 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Finish2 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Finish2 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Finish3 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Finish3 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Finish4 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Finish4 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Finish5 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Finish5 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Number1 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_Number1 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_Number2 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_Number2 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_Number3 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_Number3 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_Number4 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_Number4 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_Number5 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_Number5 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_Duration1 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Duration1 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Duration2 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Duration2 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Duration3 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Duration3 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Cost1 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Cost1 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Cost2 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Cost2 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Cost3 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Cost3 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Flag10 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Flag10 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Flag1 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Flag1 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Flag2 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Flag2 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Flag3 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Flag3 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Flag4 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Flag4 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Flag5 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Flag5 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Flag6 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Flag6 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Flag7 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Flag7 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Flag8 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Flag8 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Flag9 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Flag9 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_LinkedFields (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall get_Overallocated (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall raw_Delete ( ) = 0;
    virtual HRESULT __stdcall raw_AppendNotes (
        BSTR Value ) = 0;
    virtual HRESULT __stdcall raw_TimeScaleData (
        VARIANT StartDate,
        VARIANT EndDate,
        enum PjAssignmentTimescaledData Type,
        enum PjTimescaleUnit TimeScaleUnit,
        long Count,
        struct TimeScaleValues * * retval ) = 0;
    virtual HRESULT __stdcall get_TaskSummaryName (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall get_LevelingDelay (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_LevelingDelay (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_BaselineStart (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_BaselineStart (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_BaselineFinish (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_BaselineFinish (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Hyperlink (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Hyperlink (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_HyperlinkAddress (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_HyperlinkAddress (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_HyperlinkSubAddress (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_HyperlinkSubAddress (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_HyperlinkHREF (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_HyperlinkHREF (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Cost4 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Cost4 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Cost5 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Cost5 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Cost6 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Cost6 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Cost7 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Cost7 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Cost8 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Cost8 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Cost9 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Cost9 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Cost10 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Cost10 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Date1 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Date1 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Date2 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Date2 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Date3 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Date3 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Date4 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Date4 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Date5 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Date5 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Date6 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Date6 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Date7 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Date7 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Date8 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Date8 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Date9 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Date9 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Date10 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Date10 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Duration4 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Duration4 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Duration5 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Duration5 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Duration6 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Duration6 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Duration7 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Duration7 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Duration8 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Duration8 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Duration9 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Duration9 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Duration10 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Duration10 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Finish6 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Finish6 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Finish7 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Finish7 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Finish8 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Finish8 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Finish9 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Finish9 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Finish10 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Finish10 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Flag11 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Flag11 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Flag12 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Flag12 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Flag13 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Flag13 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Flag14 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Flag14 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Flag15 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Flag15 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Flag16 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Flag16 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Flag17 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Flag17 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Flag18 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Flag18 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Flag19 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Flag19 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Flag20 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Flag20 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Number6 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_Number6 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_Number7 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_Number7 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_Number8 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_Number8 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_Number9 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_Number9 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_Number10 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_Number10 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_Number11 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_Number11 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_Number12 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_Number12 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_Number13 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_Number13 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_Number14 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_Number14 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_Number15 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_Number15 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_Number16 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_Number16 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_Number17 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_Number17 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_Number18 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_Number18 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_Number19 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_Number19 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_Number20 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_Number20 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_Start6 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Start6 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Start7 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Start7 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Start8 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Start8 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Start9 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Start9 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Start10 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Start10 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Text11 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Text11 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Text12 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Text12 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Text13 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Text13 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Text14 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Text14 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Text15 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Text15 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Text16 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Text16 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Text17 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Text17 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Text18 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Text18 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Text19 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Text19 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Text20 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Text20 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Text21 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Text21 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Text22 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Text22 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Text23 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Text23 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Text24 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Text24 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Text25 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Text25 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Text26 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Text26 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Text27 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Text27 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Text28 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Text28 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Text29 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Text29 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Text30 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Text30 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Index (
        long * retval ) = 0;
    virtual HRESULT __stdcall get_CV (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall get_WorkVariance (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall get_StartVariance (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall get_FinishVariance (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall get_VAC (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall get_FixedMaterialAssignment (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall get_ResourceType (
        enum PjResourceTypes * retval ) = 0;
    virtual HRESULT __stdcall get_HyperlinkScreenTip (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_HyperlinkScreenTip (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Baseline1Work (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline1Work (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline1Cost (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline1Cost (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline1Start (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline1Start (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline1Finish (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline1Finish (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline2Work (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline2Work (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline2Cost (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline2Cost (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline2Start (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline2Start (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline2Finish (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline2Finish (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline3Work (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline3Work (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline3Cost (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline3Cost (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline3Start (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline3Start (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline3Finish (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline3Finish (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline4Work (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline4Work (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline4Cost (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline4Cost (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline4Start (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline4Start (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline4Finish (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline4Finish (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline5Work (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline5Work (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline5Cost (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline5Cost (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline5Start (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline5Start (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline5Finish (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline5Finish (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline6Work (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline6Work (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline6Cost (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline6Cost (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline6Start (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline6Start (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline6Finish (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline6Finish (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline7Work (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline7Work (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline7Cost (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline7Cost (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline7Start (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline7Start (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline7Finish (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline7Finish (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline8Work (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline8Work (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline8Cost (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline8Cost (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline8Start (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline8Start (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline8Finish (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline8Finish (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline9Work (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline9Work (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline9Cost (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline9Cost (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline9Start (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline9Start (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline9Finish (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline9Finish (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline10Work (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline10Work (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline10Cost (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline10Cost (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline10Start (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline10Start (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Baseline10Finish (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Baseline10Finish (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_TaskOutlineNumber (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseCost1 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseCost1 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseCost2 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseCost2 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseCost3 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseCost3 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseCost4 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseCost4 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseCost5 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseCost5 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseCost6 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseCost6 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseCost7 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseCost7 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseCost8 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseCost8 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseCost9 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseCost9 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseCost10 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseCost10 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDate1 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDate1 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDate2 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDate2 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDate3 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDate3 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDate4 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDate4 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDate5 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDate5 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDate6 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDate6 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDate7 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDate7 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDate8 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDate8 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDate9 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDate9 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDate10 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDate10 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDate11 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDate11 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDate12 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDate12 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDate13 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDate13 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDate14 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDate14 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDate15 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDate15 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDate16 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDate16 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDate17 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDate17 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDate18 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDate18 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDate19 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDate19 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDate20 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDate20 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDate21 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDate21 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDate22 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDate22 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDate23 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDate23 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDate24 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDate24 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDate25 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDate25 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDate26 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDate26 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDate27 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDate27 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDate28 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDate28 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDate29 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDate29 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDate30 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDate30 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDuration1 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDuration1 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDuration2 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDuration2 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDuration3 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDuration3 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDuration4 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDuration4 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDuration5 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDuration5 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDuration6 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDuration6 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDuration7 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDuration7 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDuration8 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDuration8 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDuration9 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDuration9 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseDuration10 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseDuration10 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseFlag1 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseFlag1 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseFlag2 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseFlag2 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseFlag3 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseFlag3 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseFlag4 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseFlag4 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseFlag5 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseFlag5 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseFlag6 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseFlag6 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseFlag7 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseFlag7 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseFlag8 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseFlag8 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseFlag9 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseFlag9 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseFlag10 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseFlag10 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseFlag11 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseFlag11 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseFlag12 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseFlag12 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseFlag13 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseFlag13 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseFlag14 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseFlag14 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseFlag15 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseFlag15 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseFlag16 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseFlag16 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseFlag17 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseFlag17 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseFlag18 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseFlag18 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseFlag19 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseFlag19 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseFlag20 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseFlag20 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber1 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber1 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber2 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber2 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber3 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber3 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber4 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber4 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber5 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber5 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber6 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber6 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber7 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber7 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber8 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber8 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber9 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber9 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber10 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber10 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber11 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber11 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber12 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber12 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber13 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber13 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber14 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber14 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber15 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber15 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber16 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber16 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber17 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber17 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber18 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber18 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber19 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber19 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber20 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber20 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber21 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber21 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber22 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber22 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber23 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber23 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber24 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber24 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber25 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber25 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber26 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber26 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber27 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber27 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber28 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber28 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber29 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber29 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber30 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber30 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber31 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber31 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber32 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber32 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber33 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber33 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber34 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber34 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber35 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber35 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber36 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber36 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber37 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber37 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber38 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber38 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber39 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber39 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseNumber40 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseNumber40 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText1 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText1 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText2 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText2 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText3 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText3 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText4 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText4 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText5 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText5 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText6 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText6 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText7 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText7 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText8 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText8 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText9 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText9 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText10 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText10 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText11 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText11 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText12 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText12 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText13 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText13 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText14 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText14 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText15 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText15 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText16 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText16 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText17 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText17 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText18 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText18 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText19 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText19 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText20 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText20 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText21 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText21 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText22 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText22 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText23 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText23 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText24 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText24 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText25 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText25 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText26 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText26 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText27 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText27 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText28 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText28 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText29 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText29 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText30 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText30 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText31 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText31 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText32 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText32 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText33 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText33 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText34 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText34 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText35 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText35 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText36 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText36 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText37 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText37 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText38 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText38 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText39 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText39 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseText40 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseText40 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseResourceOutlineCode1 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseResourceOutlineCode1 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseResourceOutlineCode2 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseResourceOutlineCode2 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseResourceOutlineCode3 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseResourceOutlineCode3 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseResourceOutlineCode4 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseResourceOutlineCode4 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseResourceOutlineCode5 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseResourceOutlineCode5 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseResourceOutlineCode6 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseResourceOutlineCode6 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseResourceOutlineCode7 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseResourceOutlineCode7 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseResourceOutlineCode8 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseResourceOutlineCode8 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseResourceOutlineCode9 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseResourceOutlineCode9 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseResourceOutlineCode10 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseResourceOutlineCode10 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseResourceOutlineCode11 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseResourceOutlineCode11 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseResourceOutlineCode12 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseResourceOutlineCode12 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseResourceOutlineCode13 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseResourceOutlineCode13 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseResourceOutlineCode14 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseResourceOutlineCode14 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseResourceOutlineCode15 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseResourceOutlineCode15 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseResourceOutlineCode16 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseResourceOutlineCode16 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseResourceOutlineCode17 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseResourceOutlineCode17 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseResourceOutlineCode18 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseResourceOutlineCode18 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseResourceOutlineCode19 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseResourceOutlineCode19 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseResourceOutlineCode20 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseResourceOutlineCode20 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseResourceOutlineCode21 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseResourceOutlineCode21 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseResourceOutlineCode22 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseResourceOutlineCode22 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseResourceOutlineCode23 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseResourceOutlineCode23 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseResourceOutlineCode24 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseResourceOutlineCode24 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseResourceOutlineCode25 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseResourceOutlineCode25 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseResourceOutlineCode26 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseResourceOutlineCode26 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseResourceOutlineCode27 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseResourceOutlineCode27 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseResourceOutlineCode28 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseResourceOutlineCode28 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseResourceOutlineCode29 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseResourceOutlineCode29 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_EnterpriseResourceRBS (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_EnterpriseResourceRBS (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_ResourceRequestType (
        enum PjResourceRequestType * retval ) = 0;
    virtual HRESULT __stdcall put_ResourceRequestType (
        enum PjResourceRequestType retval ) = 0;
    virtual HRESULT __stdcall raw_EnterpriseTeamMember (
        IDispatch * Project,
        VARIANT_BOOL * retval ) = 0;
};

struct __declspec(uuid("000c0c4a-0000-0000-c000-000000000046"))
Years : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetItem))
    YearPtr Item[];
    __declspec(property(get=GetParent))
    CalendarPtr Parent;
    __declspec(property(get=GetApplication))
    _MSProjectPtr Application;
    __declspec(property(get=GetCount))
    short Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    short GetCount ( );
    _MSProjectPtr GetApplication ( );
    CalendarPtr GetParent ( );
    IUnknownPtr Get_NewEnum ( );
    YearPtr GetItem (
        const _variant_t & Index );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Count (
        short * wCount ) = 0;
    virtual HRESULT __stdcall get_Application (
        struct _MSProject * * ppDispatch ) = 0;
    virtual HRESULT __stdcall get_Parent (
        struct Calendar * * ppDispatch ) = 0;
    virtual HRESULT __stdcall get__NewEnum (
        IUnknown * * ppEnumVar ) = 0;
    virtual HRESULT __stdcall get_Item (
        VARIANT Index,
        struct Year * * ppDispatch ) = 0;
};

struct __declspec(uuid("000c0c4c-0000-0000-c000-000000000046"))
Months : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetItem))
    MonthPtr Item[];
    __declspec(property(get=GetParent))
    YearPtr Parent;
    __declspec(property(get=GetApplication))
    _MSProjectPtr Application;
    __declspec(property(get=GetCount))
    short Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    short GetCount ( );
    _MSProjectPtr GetApplication ( );
    YearPtr GetParent ( );
    IUnknownPtr Get_NewEnum ( );
    MonthPtr GetItem (
        const _variant_t & Index );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Count (
        short * wCount ) = 0;
    virtual HRESULT __stdcall get_Application (
        struct _MSProject * * ppDispatch ) = 0;
    virtual HRESULT __stdcall get_Parent (
        struct Year * * ppDispatch ) = 0;
    virtual HRESULT __stdcall get__NewEnum (
        IUnknown * * ppEnumVar ) = 0;
    virtual HRESULT __stdcall get_Item (
        VARIANT Index,
        struct Month * * ppDispatch ) = 0;
};

struct __declspec(uuid("000c0c51-0000-0000-c000-000000000046"))
Days : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetItem))
    DayPtr Item[];
    __declspec(property(get=GetParent))
    MonthPtr Parent;
    __declspec(property(get=GetApplication))
    _MSProjectPtr Application;
    __declspec(property(get=GetCount))
    short Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    short GetCount ( );
    _MSProjectPtr GetApplication ( );
    MonthPtr GetParent ( );
    IUnknownPtr Get_NewEnum ( );
    DayPtr GetItem (
        const _variant_t & Index );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Count (
        short * wCount ) = 0;
    virtual HRESULT __stdcall get_Application (
        struct _MSProject * * ppDispatch ) = 0;
    virtual HRESULT __stdcall get_Parent (
        struct Month * * ppDispatch ) = 0;
    virtual HRESULT __stdcall get__NewEnum (
        IUnknown * * ppEnumVar ) = 0;
    virtual HRESULT __stdcall get_Item (
        VARIANT Index,
        struct Day * * ppDispatch ) = 0;
};

struct __declspec(uuid("00020b17-0000-0000-c000-000000000046"))
List : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetItem))
    _bstr_t Item[];
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetApplication))
    _MSProjectPtr Application;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _MSProjectPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    _bstr_t GetItem (
        const _variant_t & Index );
    IUnknownPtr Get_NewEnum ( );
};

struct __declspec(uuid("00020b18-0000-0000-c000-000000000046"))
Selection : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetTasks))
    TasksPtr Tasks;
    __declspec(property(get=GetResources))
    ResourcesPtr Resources;
    __declspec(property(get=GetFieldNameList))
    ListPtr FieldNameList;
    __declspec(property(get=GetFieldIDList))
    ListPtr FieldIDList;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetApplication))
    _MSProjectPtr Application;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _MSProjectPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    TasksPtr GetTasks ( );
    ResourcesPtr GetResources ( );
    ListPtr GetFieldNameList ( );
    ListPtr GetFieldIDList ( );
};

struct __declspec(uuid("00020b19-0000-0000-c000-000000000046"))
Cell : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetText))
    _bstr_t Text;
    __declspec(property(get=GetTask))
    TaskPtr Task;
    __declspec(property(get=GetResource))
    ResourcePtr Resource;
    __declspec(property(get=GetFieldName))
    _bstr_t FieldName;
    __declspec(property(get=GetFieldID))
    enum PjField FieldID;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetApplication))
    _MSProjectPtr Application;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _MSProjectPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    TaskPtr GetTask ( );
    ResourcePtr GetResource ( );
    _bstr_t GetFieldName ( );
    enum PjField GetFieldID ( );
    _bstr_t GetText ( );
};

struct __declspec(uuid("00020b1c-0000-0000-c000-000000000046"))
Subproject : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetLinkToSource,put=PutLinkToSource))
    VARIANT_BOOL LinkToSource;
    __declspec(property(get=GetPath,put=PutPath))
    _bstr_t Path;
    __declspec(property(get=GetReadOnly,put=PutReadOnly))
    VARIANT_BOOL ReadOnly;
    __declspec(property(get=GetSourceProject))
    _IProjectDocPtr SourceProject;
    __declspec(property(get=GetInsertedProjectSummary))
    TaskPtr InsertedProjectSummary;
    __declspec(property(get=GetParent))
    _IProjectDocPtr Parent;
    __declspec(property(get=GetApplication))
    _MSProjectPtr Application;
    __declspec(property(get=GetIndex))
    long Index;

    //
    // Wrapper methods for error-handling
    //

    VARIANT_BOOL GetLinkToSource ( );
    void PutLinkToSource (
        VARIANT_BOOL fLinkToSource );
    _bstr_t GetPath ( );
    void PutPath (
        _bstr_t szPath );
    VARIANT_BOOL GetReadOnly ( );
    void PutReadOnly (
        VARIANT_BOOL fReadOnly );
    _IProjectDocPtr GetParent ( );
    _MSProjectPtr GetApplication ( );
    _IProjectDocPtr GetSourceProject ( );
    TaskPtr GetInsertedProjectSummary ( );
    long GetIndex ( );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_LinkToSource (
        VARIANT_BOOL * fLinkToSource ) = 0;
    virtual HRESULT __stdcall put_LinkToSource (
        VARIANT_BOOL fLinkToSource ) = 0;
    virtual HRESULT __stdcall get_Path (
        BSTR * szPath ) = 0;
    virtual HRESULT __stdcall put_Path (
        BSTR szPath ) = 0;
    virtual HRESULT __stdcall get_ReadOnly (
        VARIANT_BOOL * fReadOnly ) = 0;
    virtual HRESULT __stdcall put_ReadOnly (
        VARIANT_BOOL fReadOnly ) = 0;
    virtual HRESULT __stdcall get_Parent (
        struct _IProjectDoc * * ppDispatch ) = 0;
    virtual HRESULT __stdcall get_Application (
        struct _MSProject * * ppDispatch ) = 0;
    virtual HRESULT __stdcall get_SourceProject (
        struct _IProjectDoc * * ppProject ) = 0;
    virtual HRESULT __stdcall get_InsertedProjectSummary (
        struct Task * * ppTask ) = 0;
    virtual HRESULT __stdcall get_Index (
        long * lIndex ) = 0;
};

struct __declspec(uuid("00020b1b-0000-0000-c000-000000000046"))
Subprojects : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetItem))
    SubprojectPtr Item[];
    __declspec(property(get=GetParent))
    _IProjectDocPtr Parent;
    __declspec(property(get=GetApplication))
    _MSProjectPtr Application;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IUnknownPtr Get_NewEnum ( );
    SubprojectPtr GetItem (
        const _variant_t & Index );
    _IProjectDocPtr GetParent ( );
    _MSProjectPtr GetApplication ( );
    long GetCount ( );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get__NewEnum (
        IUnknown * * ppEnumVar ) = 0;
    virtual HRESULT __stdcall get_Item (
        VARIANT Index,
        struct Subproject * * ppdisp ) = 0;
    virtual HRESULT __stdcall get_Parent (
        struct _IProjectDoc * * ppDispatch ) = 0;
    virtual HRESULT __stdcall get_Application (
        struct _MSProject * * ppDispatch ) = 0;
    virtual HRESULT __stdcall get_Count (
        long * pwIndx ) = 0;
};

struct __declspec(uuid("11589051-69f0-11d2-b889-00c04fb90729"))
Group : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetGroupCriteria,put=PutGroupCriteria))
    GroupCriteriaPtr GroupCriteria;
    __declspec(property(get=GetShowSummary,put=PutShowSummary))
    VARIANT_BOOL ShowSummary;
    __declspec(property(get=GetGroupAssignments,put=PutGroupAssignments))
    VARIANT_BOOL GroupAssignments;
    __declspec(property(get=GetParent))
    _IProjectDocPtr Parent;
    __declspec(property(get=GetApplication))
    _MSProjectPtr Application;
    __declspec(property(get=GetIndex))
    long Index;

    //
    // Wrapper methods for error-handling
    //

    _MSProjectPtr GetApplication ( );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t szName );
    long GetIndex ( );
    _IProjectDocPtr GetParent ( );
    GroupCriteriaPtr GetGroupCriteria ( );
    void PutGroupCriteria (
        struct GroupCriteria * ppDispatch );
    VARIANT_BOOL GetShowSummary ( );
    void PutShowSummary (
        VARIANT_BOOL fShowSummary );
    HRESULT Delete ( );
    VARIANT_BOOL GetGroupAssignments ( );
    void PutGroupAssignments (
        VARIANT_BOOL fGroupAssignments );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Application (
        struct _MSProject * * ppDispatch ) = 0;
    virtual HRESULT __stdcall get_Name (
        BSTR * szName ) = 0;
    virtual HRESULT __stdcall put_Name (
        BSTR szName ) = 0;
    virtual HRESULT __stdcall get_Index (
        long * lIndex ) = 0;
    virtual HRESULT __stdcall get_Parent (
        struct _IProjectDoc * * ppDispatch ) = 0;
    virtual HRESULT __stdcall get_GroupCriteria (
        struct GroupCriteria * * ppDispatch ) = 0;
    virtual HRESULT __stdcall put_GroupCriteria (
        struct GroupCriteria * ppDispatch ) = 0;
    virtual HRESULT __stdcall get_ShowSummary (
        VARIANT_BOOL * fShowSummary ) = 0;
    virtual HRESULT __stdcall put_ShowSummary (
        VARIANT_BOOL fShowSummary ) = 0;
    virtual HRESULT __stdcall raw_Delete ( ) = 0;
    virtual HRESULT __stdcall get_GroupAssignments (
        VARIANT_BOOL * fGroupAssignments ) = 0;
    virtual HRESULT __stdcall put_GroupAssignments (
        VARIANT_BOOL fGroupAssignments ) = 0;
};

struct __declspec(uuid("11589052-69f0-11d2-b889-00c04fb90729"))
GroupCriteria : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetItem))
    GroupCriterionPtr Item[];
    __declspec(property(get=GetParent))
    GroupPtr Parent;
    __declspec(property(get=GetApplication))
    _MSProjectPtr Application;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IUnknownPtr Get_NewEnum ( );
    GroupCriterionPtr GetItem (
        long Index );
    long GetCount ( );
    GroupCriterionPtr Add (
        _bstr_t FieldName,
        VARIANT_BOOL Ascending,
        _bstr_t FontName,
        int FontSize,
        VARIANT_BOOL FontBold,
        VARIANT_BOOL FontItalic,
        VARIANT_BOOL FontUnderLine,
        enum PjColor FontColor,
        enum PjColor CellColor,
        enum PjBackgroundPattern Pattern,
        enum PjGroupOn GroupOn,
        const _variant_t & StartAt,
        const _variant_t & GroupInterval );
    GroupPtr GetParent ( );
    _MSProjectPtr GetApplication ( );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get__NewEnum (
        IUnknown * * ppEnumVar ) = 0;
    virtual HRESULT __stdcall get_Item (
        long Index,
        struct GroupCriterion * * ppdisp ) = 0;
    virtual HRESULT __stdcall get_Count (
        long * pwIndx ) = 0;
    virtual HRESULT __stdcall raw_Add (
        BSTR FieldName,
        VARIANT_BOOL Ascending,
        BSTR FontName,
        int FontSize,
        VARIANT_BOOL FontBold,
        VARIANT_BOOL FontItalic,
        VARIANT_BOOL FontUnderLine,
        enum PjColor FontColor,
        enum PjColor CellColor,
        enum PjBackgroundPattern Pattern,
        enum PjGroupOn GroupOn,
        VARIANT StartAt,
        VARIANT GroupInterval,
        struct GroupCriterion * * ppdisp ) = 0;
    virtual HRESULT __stdcall get_Parent (
        struct Group * * ppDispatch ) = 0;
    virtual HRESULT __stdcall get_Application (
        struct _MSProject * * ppDispatch ) = 0;
};

struct __declspec(uuid("11589053-69f0-11d2-b889-00c04fb90729"))
GroupCriterion : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetFieldName,put=PutFieldName))
    _bstr_t FieldName;
    __declspec(property(get=GetAscending,put=PutAscending))
    VARIANT_BOOL Ascending;
    __declspec(property(get=GetFontName,put=PutFontName))
    _bstr_t FontName;
    __declspec(property(get=GetFontSize,put=PutFontSize))
    int FontSize;
    __declspec(property(get=GetFontBold,put=PutFontBold))
    VARIANT_BOOL FontBold;
    __declspec(property(get=GetFontItalic,put=PutFontItalic))
    VARIANT_BOOL FontItalic;
    __declspec(property(get=GetFontUnderLine,put=PutFontUnderLine))
    VARIANT_BOOL FontUnderLine;
    __declspec(property(get=GetFontColor,put=PutFontColor))
    enum PjColor FontColor;
    __declspec(property(get=GetCellColor,put=PutCellColor))
    enum PjColor CellColor;
    __declspec(property(get=GetPattern,put=PutPattern))
    enum PjBackgroundPattern Pattern;
    __declspec(property(get=GetGroupOn,put=PutGroupOn))
    enum PjGroupOn GroupOn;
    __declspec(property(get=GetStartAt,put=PutStartAt))
    _variant_t StartAt;
    __declspec(property(get=GetGroupInterval,put=PutGroupInterval))
    _variant_t GroupInterval;
    __declspec(property(get=GetAssignment,put=PutAssignment))
    VARIANT_BOOL Assignment;
    __declspec(property(get=GetParent))
    GroupPtr Parent;
    __declspec(property(get=GetApplication))
    _MSProjectPtr Application;
    __declspec(property(get=GetIndex))
    long Index;

    //
    // Wrapper methods for error-handling
    //

    _MSProjectPtr GetApplication ( );
    _bstr_t GetFieldName ( );
    void PutFieldName (
        _bstr_t szName );
    long GetIndex ( );
    GroupPtr GetParent ( );
    VARIANT_BOOL GetAscending ( );
    void PutAscending (
        VARIANT_BOOL fAscending );
    _bstr_t GetFontName ( );
    void PutFontName (
        _bstr_t FontName );
    int GetFontSize ( );
    void PutFontSize (
        int FontSize );
    VARIANT_BOOL GetFontBold ( );
    void PutFontBold (
        VARIANT_BOOL FontBold );
    VARIANT_BOOL GetFontItalic ( );
    void PutFontItalic (
        VARIANT_BOOL FontItalic );
    VARIANT_BOOL GetFontUnderLine ( );
    void PutFontUnderLine (
        VARIANT_BOOL FontUnderLine );
    enum PjColor GetFontColor ( );
    void PutFontColor (
        enum PjColor FontColor );
    enum PjColor GetCellColor ( );
    void PutCellColor (
        enum PjColor CellColor );
    enum PjBackgroundPattern GetPattern ( );
    void PutPattern (
        enum PjBackgroundPattern CellColor );
    enum PjGroupOn GetGroupOn ( );
    void PutGroupOn (
        enum PjGroupOn GroupOn );
    _variant_t GetStartAt ( );
    void PutStartAt (
        const _variant_t & StartAt );
    _variant_t GetGroupInterval ( );
    void PutGroupInterval (
        const _variant_t & GroupInterval );
    HRESULT Delete ( );
    VARIANT_BOOL GetAssignment ( );
    void PutAssignment (
        VARIANT_BOOL fAssignment );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Application (
        struct _MSProject * * ppDispatch ) = 0;
    virtual HRESULT __stdcall get_FieldName (
        BSTR * szName ) = 0;
    virtual HRESULT __stdcall put_FieldName (
        BSTR szName ) = 0;
    virtual HRESULT __stdcall get_Index (
        long * lIndex ) = 0;
    virtual HRESULT __stdcall get_Parent (
        struct Group * * ppDispatch ) = 0;
    virtual HRESULT __stdcall get_Ascending (
        VARIANT_BOOL * fAscending ) = 0;
    virtual HRESULT __stdcall put_Ascending (
        VARIANT_BOOL fAscending ) = 0;
    virtual HRESULT __stdcall get_FontName (
        BSTR * FontName ) = 0;
    virtual HRESULT __stdcall put_FontName (
        BSTR FontName ) = 0;
    virtual HRESULT __stdcall get_FontSize (
        int * FontSize ) = 0;
    virtual HRESULT __stdcall put_FontSize (
        int FontSize ) = 0;
    virtual HRESULT __stdcall get_FontBold (
        VARIANT_BOOL * FontBold ) = 0;
    virtual HRESULT __stdcall put_FontBold (
        VARIANT_BOOL FontBold ) = 0;
    virtual HRESULT __stdcall get_FontItalic (
        VARIANT_BOOL * FontItalic ) = 0;
    virtual HRESULT __stdcall put_FontItalic (
        VARIANT_BOOL FontItalic ) = 0;
    virtual HRESULT __stdcall get_FontUnderLine (
        VARIANT_BOOL * FontUnderLine ) = 0;
    virtual HRESULT __stdcall put_FontUnderLine (
        VARIANT_BOOL FontUnderLine ) = 0;
    virtual HRESULT __stdcall get_FontColor (
        enum PjColor * FontColor ) = 0;
    virtual HRESULT __stdcall put_FontColor (
        enum PjColor FontColor ) = 0;
    virtual HRESULT __stdcall get_CellColor (
        enum PjColor * CellColor ) = 0;
    virtual HRESULT __stdcall put_CellColor (
        enum PjColor CellColor ) = 0;
    virtual HRESULT __stdcall get_Pattern (
        enum PjBackgroundPattern * CellColor ) = 0;
    virtual HRESULT __stdcall put_Pattern (
        enum PjBackgroundPattern CellColor ) = 0;
    virtual HRESULT __stdcall get_GroupOn (
        enum PjGroupOn * GroupOn ) = 0;
    virtual HRESULT __stdcall put_GroupOn (
        enum PjGroupOn GroupOn ) = 0;
    virtual HRESULT __stdcall get_StartAt (
        VARIANT * StartAt ) = 0;
    virtual HRESULT __stdcall put_StartAt (
        VARIANT StartAt ) = 0;
    virtual HRESULT __stdcall get_GroupInterval (
        VARIANT * GroupInterval ) = 0;
    virtual HRESULT __stdcall put_GroupInterval (
        VARIANT GroupInterval ) = 0;
    virtual HRESULT __stdcall raw_Delete ( ) = 0;
    virtual HRESULT __stdcall get_Assignment (
        VARIANT_BOOL * fAssignment ) = 0;
    virtual HRESULT __stdcall put_Assignment (
        VARIANT_BOOL fAssignment ) = 0;
};

struct __declspec(uuid("000c0c4e-0000-0000-c000-000000000046"))
WeekDays : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetItem))
    WeekDayPtr Item[];
    __declspec(property(get=GetParent))
    CalendarPtr Parent;
    __declspec(property(get=GetApplication))
    _MSProjectPtr Application;
    __declspec(property(get=GetCount))
    short Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    short GetCount ( );
    _MSProjectPtr GetApplication ( );
    CalendarPtr GetParent ( );
    IUnknownPtr Get_NewEnum ( );
    WeekDayPtr GetItem (
        const _variant_t & Index );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Count (
        short * wCount ) = 0;
    virtual HRESULT __stdcall get_Application (
        struct _MSProject * * ppDispatch ) = 0;
    virtual HRESULT __stdcall get_Parent (
        struct Calendar * * ppDispatch ) = 0;
    virtual HRESULT __stdcall get__NewEnum (
        IUnknown * * ppEnumVar ) = 0;
    virtual HRESULT __stdcall get_Item (
        VARIANT Index,
        struct WeekDay * * ppDispatch ) = 0;
};

struct __declspec(uuid("000c0c4f-0000-0000-c000-000000000046"))
WeekDay : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetCalendar))
    CalendarPtr Calendar;
    __declspec(property(get=GetShift1))
    ShiftPtr Shift1;
    __declspec(property(get=GetShift2))
    ShiftPtr Shift2;
    __declspec(property(get=GetShift3))
    ShiftPtr Shift3;
    __declspec(property(get=GetShift4))
    ShiftPtr Shift4;
    __declspec(property(get=GetShift5))
    ShiftPtr Shift5;
    __declspec(property(get=GetParent))
    CalendarPtr Parent;
    __declspec(property(get=GetApplication))
    _MSProjectPtr Application;
    __declspec(property(get=GetCount))
    short Count;
    __declspec(property(get=GetIndex))
    short Index;

    //
    // Wrapper methods for error-handling
    //

    CalendarPtr GetCalendar ( );
    ShiftPtr GetShift1 ( );
    ShiftPtr GetShift2 ( );
    ShiftPtr GetShift3 ( );
    VARIANT_BOOL GetWorking ( );
    void PutWorking (
        const _variant_t & fWorking );
    HRESULT Default ( );
    short GetCount ( );
    _MSProjectPtr GetApplication ( );
    CalendarPtr GetParent ( );
    short GetIndex ( );
    _bstr_t GetName ( );
    ShiftPtr GetShift4 ( );
    ShiftPtr GetShift5 ( );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Calendar (
        struct Calendar * * ppDispatch ) = 0;
    virtual HRESULT __stdcall get_Shift1 (
        struct Shift * * ppDispatch ) = 0;
    virtual HRESULT __stdcall get_Shift2 (
        struct Shift * * ppDispatch ) = 0;
    virtual HRESULT __stdcall get_Shift3 (
        struct Shift * * ppDispatch ) = 0;
    virtual HRESULT __stdcall get_Working (
        VARIANT_BOOL * fWorking ) = 0;
    virtual HRESULT __stdcall put_Working (
        VARIANT fWorking ) = 0;
    virtual HRESULT __stdcall raw_Default ( ) = 0;
    virtual HRESULT __stdcall get_Count (
        short * wCount ) = 0;
    virtual HRESULT __stdcall get_Application (
        struct _MSProject * * ppDispatch ) = 0;
    virtual HRESULT __stdcall get_Parent (
        struct Calendar * * ppDispatch ) = 0;
    virtual HRESULT __stdcall get_Index (
        short * pwIndx ) = 0;
    virtual HRESULT __stdcall get_Name (
        BSTR * pbstrVal ) = 0;
    virtual HRESULT __stdcall get_Shift4 (
        struct Shift * * ppDispatch ) = 0;
    virtual HRESULT __stdcall get_Shift5 (
        struct Shift * * ppDispatch ) = 0;
};

struct __declspec(uuid("000c0c50-0000-0000-c000-000000000046"))
Shift : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetIndex))
    short Index;
    __declspec(property(get=GetStart,put=PutStart))
    _variant_t Start;
    __declspec(property(get=GetFinish,put=PutFinish))
    _variant_t Finish;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetApplication))
    _MSProjectPtr Application;

    //
    // Wrapper methods for error-handling
    //

    _variant_t GetStart ( );
    void PutStart (
        const _variant_t & pdt );
    _variant_t GetFinish ( );
    void PutFinish (
        const _variant_t & pdt );
    HRESULT Clear ( );
    short GetIndex ( );
    _MSProjectPtr GetApplication ( );
    IDispatchPtr GetParent ( );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Start (
        VARIANT * pdt ) = 0;
    virtual HRESULT __stdcall put_Start (
        VARIANT pdt ) = 0;
    virtual HRESULT __stdcall get_Finish (
        VARIANT * pdt ) = 0;
    virtual HRESULT __stdcall put_Finish (
        VARIANT pdt ) = 0;
    virtual HRESULT __stdcall raw_Clear ( ) = 0;
    virtual HRESULT __stdcall get_Index (
        short * pIndx ) = 0;
    virtual HRESULT __stdcall get_Application (
        struct _MSProject * * ppDispatch ) = 0;
    virtual HRESULT __stdcall get_Parent (
        IDispatch * * ppDispatch ) = 0;
};

struct __declspec(uuid("000c0c49-0000-0000-c000-000000000046"))
Period : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    short Count;
    __declspec(property(get=GetCalendar))
    CalendarPtr Calendar;
    __declspec(property(get=GetShift1))
    ShiftPtr Shift1;
    __declspec(property(get=GetShift2))
    ShiftPtr Shift2;
    __declspec(property(get=GetShift3))
    ShiftPtr Shift3;
    __declspec(property(get=GetShift4))
    ShiftPtr Shift4;
    __declspec(property(get=GetShift5))
    ShiftPtr Shift5;
    __declspec(property(get=GetParent))
    CalendarPtr Parent;
    __declspec(property(get=GetApplication))
    _MSProjectPtr Application;

    //
    // Wrapper methods for error-handling
    //

    CalendarPtr GetCalendar ( );
    ShiftPtr GetShift1 ( );
    ShiftPtr GetShift2 ( );
    ShiftPtr GetShift3 ( );
    VARIANT_BOOL GetWorking ( );
    void PutWorking (
        const _variant_t & fWorking );
    HRESULT Default ( );
    short GetCount ( );
    _MSProjectPtr GetApplication ( );
    CalendarPtr GetParent ( );
    ShiftPtr GetShift4 ( );
    ShiftPtr GetShift5 ( );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Calendar (
        struct Calendar * * ppDispatch ) = 0;
    virtual HRESULT __stdcall get_Shift1 (
        struct Shift * * ppDispatch ) = 0;
    virtual HRESULT __stdcall get_Shift2 (
        struct Shift * * ppDispatch ) = 0;
    virtual HRESULT __stdcall get_Shift3 (
        struct Shift * * ppDispatch ) = 0;
    virtual HRESULT __stdcall get_Working (
        VARIANT_BOOL * fWorking ) = 0;
    virtual HRESULT __stdcall put_Working (
        VARIANT fWorking ) = 0;
    virtual HRESULT __stdcall raw_Default ( ) = 0;
    virtual HRESULT __stdcall get_Count (
        short * wCount ) = 0;
    virtual HRESULT __stdcall get_Application (
        struct _MSProject * * ppDispatch ) = 0;
    virtual HRESULT __stdcall get_Parent (
        struct Calendar * * ppDispatch ) = 0;
    virtual HRESULT __stdcall get_Shift4 (
        struct Shift * * ppDispatch ) = 0;
    virtual HRESULT __stdcall get_Shift5 (
        struct Shift * * ppDispatch ) = 0;
};

struct __declspec(uuid("000c0c4b-0000-0000-c000-000000000046"))
Year : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetCalendar))
    CalendarPtr Calendar;
    __declspec(property(get=GetShift1))
    ShiftPtr Shift1;
    __declspec(property(get=GetShift2))
    ShiftPtr Shift2;
    __declspec(property(get=GetShift3))
    ShiftPtr Shift3;
    __declspec(property(get=GetMonths))
    MonthsPtr Months;
    __declspec(property(get=GetShift4))
    ShiftPtr Shift4;
    __declspec(property(get=GetShift5))
    ShiftPtr Shift5;
    __declspec(property(get=GetParent))
    CalendarPtr Parent;
    __declspec(property(get=GetApplication))
    _MSProjectPtr Application;
    __declspec(property(get=GetCount))
    short Count;
    __declspec(property(get=GetIndex))
    short Index;

    //
    // Wrapper methods for error-handling
    //

    CalendarPtr GetCalendar ( );
    ShiftPtr GetShift1 ( );
    ShiftPtr GetShift2 ( );
    ShiftPtr GetShift3 ( );
    VARIANT_BOOL GetWorking ( );
    void PutWorking (
        const _variant_t & fWorking );
    HRESULT Default ( );
    short GetCount ( );
    _MSProjectPtr GetApplication ( );
    CalendarPtr GetParent ( );
    short GetIndex ( );
    _bstr_t GetName ( );
    MonthsPtr GetMonths ( );
    ShiftPtr GetShift4 ( );
    ShiftPtr GetShift5 ( );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Calendar (
        struct Calendar * * ppDispatch ) = 0;
    virtual HRESULT __stdcall get_Shift1 (
        struct Shift * * ppDispatch ) = 0;
    virtual HRESULT __stdcall get_Shift2 (
        struct Shift * * ppDispatch ) = 0;
    virtual HRESULT __stdcall get_Shift3 (
        struct Shift * * ppDispatch ) = 0;
    virtual HRESULT __stdcall get_Working (
        VARIANT_BOOL * fWorking ) = 0;
    virtual HRESULT __stdcall put_Working (
        VARIANT fWorking ) = 0;
    virtual HRESULT __stdcall raw_Default ( ) = 0;
    virtual HRESULT __stdcall get_Count (
        short * wCount ) = 0;
    virtual HRESULT __stdcall get_Application (
        struct _MSProject * * ppDispatch ) = 0;
    virtual HRESULT __stdcall get_Parent (
        struct Calendar * * ppDispatch ) = 0;
    virtual HRESULT __stdcall get_Index (
        short * pwIndx ) = 0;
    virtual HRESULT __stdcall get_Name (
        BSTR * pbstrVal ) = 0;
    virtual HRESULT __stdcall get_Months (
        struct Months * * ppDispatch ) = 0;
    virtual HRESULT __stdcall get_Shift4 (
        struct Shift * * ppDispatch ) = 0;
    virtual HRESULT __stdcall get_Shift5 (
        struct Shift * * ppDispatch ) = 0;
};

struct __declspec(uuid("000c0c4d-0000-0000-c000-000000000046"))
Month : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetCalendar))
    CalendarPtr Calendar;
    __declspec(property(get=GetShift1))
    ShiftPtr Shift1;
    __declspec(property(get=GetShift2))
    ShiftPtr Shift2;
    __declspec(property(get=GetShift3))
    ShiftPtr Shift3;
    __declspec(property(get=GetDays))
    DaysPtr Days;
    __declspec(property(get=GetShift4))
    ShiftPtr Shift4;
    __declspec(property(get=GetShift5))
    ShiftPtr Shift5;
    __declspec(property(get=GetParent))
    YearPtr Parent;
    __declspec(property(get=GetApplication))
    _MSProjectPtr Application;
    __declspec(property(get=GetCount))
    short Count;
    __declspec(property(get=GetIndex))
    short Index;

    //
    // Wrapper methods for error-handling
    //

    CalendarPtr GetCalendar ( );
    ShiftPtr GetShift1 ( );
    ShiftPtr GetShift2 ( );
    ShiftPtr GetShift3 ( );
    VARIANT_BOOL GetWorking ( );
    void PutWorking (
        const _variant_t & fWorking );
    HRESULT Default ( );
    short GetCount ( );
    _MSProjectPtr GetApplication ( );
    YearPtr GetParent ( );
    short GetIndex ( );
    _bstr_t GetName ( );
    DaysPtr GetDays ( );
    ShiftPtr GetShift4 ( );
    ShiftPtr GetShift5 ( );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Calendar (
        struct Calendar * * ppDispatch ) = 0;
    virtual HRESULT __stdcall get_Shift1 (
        struct Shift * * ppDispatch ) = 0;
    virtual HRESULT __stdcall get_Shift2 (
        struct Shift * * ppDispatch ) = 0;
    virtual HRESULT __stdcall get_Shift3 (
        struct Shift * * ppDispatch ) = 0;
    virtual HRESULT __stdcall get_Working (
        VARIANT_BOOL * fWorking ) = 0;
    virtual HRESULT __stdcall put_Working (
        VARIANT fWorking ) = 0;
    virtual HRESULT __stdcall raw_Default ( ) = 0;
    virtual HRESULT __stdcall get_Count (
        short * wCount ) = 0;
    virtual HRESULT __stdcall get_Application (
        struct _MSProject * * ppDispatch ) = 0;
    virtual HRESULT __stdcall get_Parent (
        struct Year * * ppDispatch ) = 0;
    virtual HRESULT __stdcall get_Index (
        short * pwIndx ) = 0;
    virtual HRESULT __stdcall get_Name (
        BSTR * pbstrVal ) = 0;
    virtual HRESULT __stdcall get_Days (
        struct Days * * ppDispatch ) = 0;
    virtual HRESULT __stdcall get_Shift4 (
        struct Shift * * ppDispatch ) = 0;
    virtual HRESULT __stdcall get_Shift5 (
        struct Shift * * ppDispatch ) = 0;
};

struct __declspec(uuid("000c0c52-0000-0000-c000-000000000046"))
Day : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetCalendar))
    CalendarPtr Calendar;
    __declspec(property(get=GetShift1))
    ShiftPtr Shift1;
    __declspec(property(get=GetShift2))
    ShiftPtr Shift2;
    __declspec(property(get=GetShift3))
    ShiftPtr Shift3;
    __declspec(property(get=GetShift4))
    ShiftPtr Shift4;
    __declspec(property(get=GetShift5))
    ShiftPtr Shift5;
    __declspec(property(get=GetParent))
    MonthPtr Parent;
    __declspec(property(get=GetApplication))
    _MSProjectPtr Application;
    __declspec(property(get=GetCount))
    short Count;
    __declspec(property(get=GetIndex))
    short Index;

    //
    // Wrapper methods for error-handling
    //

    CalendarPtr GetCalendar ( );
    ShiftPtr GetShift1 ( );
    ShiftPtr GetShift2 ( );
    ShiftPtr GetShift3 ( );
    VARIANT_BOOL GetWorking ( );
    void PutWorking (
        const _variant_t & fWorking );
    HRESULT Default ( );
    short GetCount ( );
    _MSProjectPtr GetApplication ( );
    MonthPtr GetParent ( );
    short GetIndex ( );
    _bstr_t GetName ( );
    ShiftPtr GetShift4 ( );
    ShiftPtr GetShift5 ( );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Calendar (
        struct Calendar * * ppDispatch ) = 0;
    virtual HRESULT __stdcall get_Shift1 (
        struct Shift * * ppDispatch ) = 0;
    virtual HRESULT __stdcall get_Shift2 (
        struct Shift * * ppDispatch ) = 0;
    virtual HRESULT __stdcall get_Shift3 (
        struct Shift * * ppDispatch ) = 0;
    virtual HRESULT __stdcall get_Working (
        VARIANT_BOOL * fWorking ) = 0;
    virtual HRESULT __stdcall put_Working (
        VARIANT fWorking ) = 0;
    virtual HRESULT __stdcall raw_Default ( ) = 0;
    virtual HRESULT __stdcall get_Count (
        short * wCount ) = 0;
    virtual HRESULT __stdcall get_Application (
        struct _MSProject * * ppDispatch ) = 0;
    virtual HRESULT __stdcall get_Parent (
        struct Month * * ppDispatch ) = 0;
    virtual HRESULT __stdcall get_Index (
        short * pwIndx ) = 0;
    virtual HRESULT __stdcall get_Name (
        BSTR * pbstrVal ) = 0;
    virtual HRESULT __stdcall get_Shift4 (
        struct Shift * * ppDispatch ) = 0;
    virtual HRESULT __stdcall get_Shift5 (
        struct Shift * * ppDispatch ) = 0;
};

struct __declspec(uuid("000c0c54-0000-0000-c000-000000000046"))
TimeScaleValue : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetValue,put=PutValue))
    _variant_t Value;
    __declspec(property(get=GetStartDate))
    _variant_t StartDate;
    __declspec(property(get=GetEndDate))
    _variant_t EndDate;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetApplication))
    _MSProjectPtr Application;
    __declspec(property(get=GetIndex))
    long Index;

    //
    // Wrapper methods for error-handling
    //

    _variant_t GetStartDate ( );
    _variant_t GetEndDate ( );
    _variant_t GetValue ( );
    void PutValue (
        const _variant_t & pvar );
    long GetIndex ( );
    HRESULT Clear ( );
    HRESULT Delete ( );
    _MSProjectPtr GetApplication ( );
    IDispatchPtr GetParent ( );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_StartDate (
        VARIANT * pvar ) = 0;
    virtual HRESULT __stdcall get_EndDate (
        VARIANT * pvar ) = 0;
    virtual HRESULT __stdcall get_Value (
        VARIANT * pvar ) = 0;
    virtual HRESULT __stdcall put_Value (
        VARIANT pvar ) = 0;
    virtual HRESULT __stdcall get_Index (
        long * pwIndx ) = 0;
    virtual HRESULT __stdcall raw_Clear ( ) = 0;
    virtual HRESULT __stdcall raw_Delete ( ) = 0;
    virtual HRESULT __stdcall get_Application (
        struct _MSProject * * ppDispatch ) = 0;
    virtual HRESULT __stdcall get_Parent (
        IDispatch * * ppDispatch ) = 0;
};

struct __declspec(uuid("000c0c53-0000-0000-c000-000000000046"))
TimeScaleValues : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetItem))
    TimeScaleValuePtr Item[];
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetApplication))
    _MSProjectPtr Application;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IUnknownPtr Get_NewEnum ( );
    TimeScaleValuePtr GetItem (
        long Index );
    long GetCount ( );
    TimeScaleValuePtr Add (
        const _variant_t & Value,
        const _variant_t & Position = vtMissing );
    _MSProjectPtr GetApplication ( );
    IDispatchPtr GetParent ( );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get__NewEnum (
        IUnknown * * ppEnumVar ) = 0;
    virtual HRESULT __stdcall get_Item (
        long Index,
        struct TimeScaleValue * * ppdisp ) = 0;
    virtual HRESULT __stdcall get_Count (
        long * pwIndx ) = 0;
    virtual HRESULT __stdcall raw_Add (
        VARIANT Value,
        VARIANT Position,
        struct TimeScaleValue * * pdisp ) = 0;
    virtual HRESULT __stdcall get_Application (
        struct _MSProject * * ppDispatch ) = 0;
    virtual HRESULT __stdcall get_Parent (
        IDispatch * * ppDispatch ) = 0;
};

struct __declspec(uuid("000c0c56-0000-0000-c000-000000000046"))
CostRateTable : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetPayRates))
    PayRatesPtr PayRates;
    __declspec(property(get=GetParent))
    ResourcePtr Parent;
    __declspec(property(get=GetApplication))
    _MSProjectPtr Application;

    //
    // Wrapper methods for error-handling
    //

    long GetIndex ( );
    _bstr_t GetName ( );
    PayRatesPtr GetPayRates ( );
    ResourcePtr GetParent ( );
    _MSProjectPtr GetApplication ( );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Index (
        long * pwIndx ) = 0;
    virtual HRESULT __stdcall get_Name (
        BSTR * tblName ) = 0;
    virtual HRESULT __stdcall get_PayRates (
        struct PayRates * * ppDispatch ) = 0;
    virtual HRESULT __stdcall get_Parent (
        struct Resource * * ppDispatch ) = 0;
    virtual HRESULT __stdcall get_Application (
        struct _MSProject * * ppDispatch ) = 0;
};

struct __declspec(uuid("000c0c55-0000-0000-c000-000000000046"))
CostRateTables : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetItem))
    CostRateTablePtr Item[];
    __declspec(property(get=GetParent))
    ResourcePtr Parent;
    __declspec(property(get=GetApplication))
    _MSProjectPtr Application;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IUnknownPtr Get_NewEnum ( );
    CostRateTablePtr GetItem (
        const _variant_t & Index );
    long GetCount ( );
    ResourcePtr GetParent ( );
    _MSProjectPtr GetApplication ( );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get__NewEnum (
        IUnknown * * ppEnumVar ) = 0;
    virtual HRESULT __stdcall get_Item (
        VARIANT Index,
        struct CostRateTable * * ppdisp ) = 0;
    virtual HRESULT __stdcall get_Count (
        long * pwIndx ) = 0;
    virtual HRESULT __stdcall get_Parent (
        struct Resource * * ppDispatch ) = 0;
    virtual HRESULT __stdcall get_Application (
        struct _MSProject * * ppDispatch ) = 0;
};

struct __declspec(uuid("000c0c58-0000-0000-c000-000000000046"))
PayRate : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetEffectiveDate))
    _variant_t EffectiveDate;
    __declspec(property(get=GetStandardRate,put=PutStandardRate))
    _variant_t StandardRate;
    __declspec(property(get=GetOvertimeRate,put=PutOvertimeRate))
    _variant_t OvertimeRate;
    __declspec(property(get=GetCostPerUse,put=PutCostPerUse))
    _variant_t CostPerUse;
    __declspec(property(get=GetParent))
    ResourcePtr Parent;
    __declspec(property(get=GetApplication))
    _MSProjectPtr Application;

    //
    // Wrapper methods for error-handling
    //

    long GetIndex ( );
    _variant_t GetEffectiveDate ( );
    _variant_t GetStandardRate ( );
    void PutStandardRate (
        const _variant_t & pvar );
    _variant_t GetOvertimeRate ( );
    void PutOvertimeRate (
        const _variant_t & pvar );
    _variant_t GetCostPerUse ( );
    void PutCostPerUse (
        const _variant_t & pvar );
    HRESULT Delete ( );
    ResourcePtr GetParent ( );
    _MSProjectPtr GetApplication ( );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Index (
        long * pwIndx ) = 0;
    virtual HRESULT __stdcall get_EffectiveDate (
        VARIANT * pvar ) = 0;
    virtual HRESULT __stdcall get_StandardRate (
        VARIANT * pvar ) = 0;
    virtual HRESULT __stdcall put_StandardRate (
        VARIANT pvar ) = 0;
    virtual HRESULT __stdcall get_OvertimeRate (
        VARIANT * pvar ) = 0;
    virtual HRESULT __stdcall put_OvertimeRate (
        VARIANT pvar ) = 0;
    virtual HRESULT __stdcall get_CostPerUse (
        VARIANT * pvar ) = 0;
    virtual HRESULT __stdcall put_CostPerUse (
        VARIANT pvar ) = 0;
    virtual HRESULT __stdcall raw_Delete ( ) = 0;
    virtual HRESULT __stdcall get_Parent (
        struct Resource * * ppDispatch ) = 0;
    virtual HRESULT __stdcall get_Application (
        struct _MSProject * * ppDispatch ) = 0;
};

struct __declspec(uuid("000c0c57-0000-0000-c000-000000000046"))
PayRates : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetItem))
    PayRatePtr Item[];
    __declspec(property(get=GetParent))
    ResourcePtr Parent;
    __declspec(property(get=GetApplication))
    _MSProjectPtr Application;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IUnknownPtr Get_NewEnum ( );
    PayRatePtr GetItem (
        const _variant_t & Index );
    long GetCount ( );
    PayRatePtr Add (
        const _variant_t & EffectiveDate,
        const _variant_t & StdRate = vtMissing,
        const _variant_t & OvtRate = vtMissing,
        const _variant_t & CostPerUse = vtMissing );
    ResourcePtr GetParent ( );
    _MSProjectPtr GetApplication ( );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get__NewEnum (
        IUnknown * * ppEnumVar ) = 0;
    virtual HRESULT __stdcall get_Item (
        VARIANT Index,
        struct PayRate * * ppdisp ) = 0;
    virtual HRESULT __stdcall get_Count (
        long * pwIndx ) = 0;
    virtual HRESULT __stdcall raw_Add (
        VARIANT EffectiveDate,
        VARIANT StdRate,
        VARIANT OvtRate,
        VARIANT CostPerUse,
        struct PayRate * * pDispatch ) = 0;
    virtual HRESULT __stdcall get_Parent (
        struct Resource * * ppDispatch ) = 0;
    virtual HRESULT __stdcall get_Application (
        struct _MSProject * * ppDispatch ) = 0;
};

struct __declspec(uuid("1251566d-2bdf-11d2-9eac-00c04fb92e6f"))
Availability : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetAvailableFrom,put=PutAvailableFrom))
    _variant_t AvailableFrom;
    __declspec(property(get=GetAvailableTo,put=PutAvailableTo))
    _variant_t AvailableTo;
    __declspec(property(get=GetAvailableUnit,put=PutAvailableUnit))
    double AvailableUnit;
    __declspec(property(get=GetParent))
    ResourcePtr Parent;
    __declspec(property(get=GetApplication))
    _MSProjectPtr Application;
    __declspec(property(get=GetIndex))
    long Index;

    //
    // Wrapper methods for error-handling
    //

    long GetIndex ( );
    _variant_t GetAvailableFrom ( );
    void PutAvailableFrom (
        const _variant_t & pFromDate );
    _variant_t GetAvailableTo ( );
    void PutAvailableTo (
        const _variant_t & pToDate );
    double GetAvailableUnit ( );
    void PutAvailableUnit (
        double pUnit );
    HRESULT Delete ( );
    ResourcePtr GetParent ( );
    _MSProjectPtr GetApplication ( );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Index (
        long * pwIndx ) = 0;
    virtual HRESULT __stdcall get_AvailableFrom (
        VARIANT * pFromDate ) = 0;
    virtual HRESULT __stdcall put_AvailableFrom (
        VARIANT pFromDate ) = 0;
    virtual HRESULT __stdcall get_AvailableTo (
        VARIANT * pToDate ) = 0;
    virtual HRESULT __stdcall put_AvailableTo (
        VARIANT pToDate ) = 0;
    virtual HRESULT __stdcall get_AvailableUnit (
        double * pUnit ) = 0;
    virtual HRESULT __stdcall put_AvailableUnit (
        double pUnit ) = 0;
    virtual HRESULT __stdcall raw_Delete ( ) = 0;
    virtual HRESULT __stdcall get_Parent (
        struct Resource * * ppDispatch ) = 0;
    virtual HRESULT __stdcall get_Application (
        struct _MSProject * * ppDispatch ) = 0;
};

struct __declspec(uuid("1251566c-2bdf-11d2-9eac-00c04fb92e6f"))
Availabilities : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetItem))
    AvailabilityPtr Item[];
    __declspec(property(get=GetParent))
    ResourcePtr Parent;
    __declspec(property(get=GetApplication))
    _MSProjectPtr Application;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IUnknownPtr Get_NewEnum ( );
    AvailabilityPtr GetItem (
        const _variant_t & Index );
    long GetCount ( );
    AvailabilityPtr Add (
        const _variant_t & AvailableFrom,
        const _variant_t & AvailableTo,
        double AvailableUnit );
    ResourcePtr GetParent ( );
    _MSProjectPtr GetApplication ( );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get__NewEnum (
        IUnknown * * ppEnumVar ) = 0;
    virtual HRESULT __stdcall get_Item (
        VARIANT Index,
        struct Availability * * ppdisp ) = 0;
    virtual HRESULT __stdcall get_Count (
        long * pwIndx ) = 0;
    virtual HRESULT __stdcall raw_Add (
        VARIANT AvailableFrom,
        VARIANT AvailableTo,
        double AvailableUnit,
        struct Availability * * pDispatch ) = 0;
    virtual HRESULT __stdcall get_Parent (
        struct Resource * * ppDispatch ) = 0;
    virtual HRESULT __stdcall get_Application (
        struct _MSProject * * ppDispatch ) = 0;
};

struct __declspec(uuid("a7c6acb0-58c6-11d2-ae5a-00c04fb6f701"))
TaskDependency : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetFrom))
    TaskPtr From;
    __declspec(property(get=GetTo))
    TaskPtr To;
    __declspec(property(get=GetType,put=PutType))
    enum PjTaskLinkType Type;
    __declspec(property(get=GetLag,put=PutLag))
    _variant_t Lag;
    __declspec(property(get=GetParent))
    TaskPtr Parent;
    __declspec(property(get=GetApplication))
    _MSProjectPtr Application;
    __declspec(property(get=GetIndex))
    long Index;

    //
    // Wrapper methods for error-handling
    //

    HRESULT Delete ( );
    TaskPtr GetFrom ( );
    TaskPtr GetTo ( );
    enum PjTaskLinkType GetType ( );
    void PutType (
        enum PjTaskLinkType retval );
    _variant_t GetLag ( );
    void PutLag (
        const _variant_t & retval );
    _bstr_t GetPath ( );
    void PutPath (
        const _variant_t & pbstrVal );
    long GetIndex ( );
    TaskPtr GetParent ( );
    _MSProjectPtr GetApplication ( );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall raw_Delete ( ) = 0;
    virtual HRESULT __stdcall get_From (
        struct Task * * pdisp ) = 0;
    virtual HRESULT __stdcall get_To (
        struct Task * * pdisp ) = 0;
    virtual HRESULT __stdcall get_Type (
        enum PjTaskLinkType * retval ) = 0;
    virtual HRESULT __stdcall put_Type (
        enum PjTaskLinkType retval ) = 0;
    virtual HRESULT __stdcall get_Lag (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Lag (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Path (
        BSTR * pbstrVal ) = 0;
    virtual HRESULT __stdcall put_Path (
        VARIANT pbstrVal ) = 0;
    virtual HRESULT __stdcall get_Index (
        long * pwIndx ) = 0;
    virtual HRESULT __stdcall get_Parent (
        struct Task * * ppDispatch ) = 0;
    virtual HRESULT __stdcall get_Application (
        struct _MSProject * * ppDispatch ) = 0;
};

struct __declspec(uuid("a7c6acb1-58c6-11d2-ae5a-00c04fb6f701"))
TaskDependencies : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetItem))
    TaskDependencyPtr Item[];
    __declspec(property(get=GetParent))
    TaskPtr Parent;
    __declspec(property(get=GetApplication))
    _MSProjectPtr Application;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IUnknownPtr Get_NewEnum ( );
    TaskDependencyPtr GetItem (
        long Index );
    long GetCount ( );
    TaskDependencyPtr Add (
        struct Task * From,
        enum PjTaskLinkType Type,
        const _variant_t & Lag = vtMissing );
    TaskPtr GetParent ( );
    _MSProjectPtr GetApplication ( );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get__NewEnum (
        IUnknown * * ppEnumVar ) = 0;
    virtual HRESULT __stdcall get_Item (
        long Index,
        struct TaskDependency * * ppdisp ) = 0;
    virtual HRESULT __stdcall get_Count (
        long * pwIndx ) = 0;
    virtual HRESULT __stdcall raw_Add (
        struct Task * From,
        enum PjTaskLinkType Type,
        VARIANT Lag,
        struct TaskDependency * * pdisp ) = 0;
    virtual HRESULT __stdcall get_Parent (
        struct Task * * ppDispatch ) = 0;
    virtual HRESULT __stdcall get_Application (
        struct _MSProject * * ppDispatch ) = 0;
};

struct __declspec(uuid("00020b04-0000-0000-c000-000000000046"))
Pane : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetIndex))
    _variant_t Index;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetApplication))
    _MSProjectPtr Application;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _MSProjectPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    _variant_t GetIndex ( );
    HRESULT Activate ( );
    HRESULT Close ( );
    ViewPtr View ( );
};

struct __declspec(uuid("00020b02-0000-0000-c000-000000000046"))
Window : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetActivePane))
    PanePtr ActivePane;
    __declspec(property(get=GetTopPane))
    PanePtr TopPane;
    __declspec(property(get=GetBottomPane))
    PanePtr BottomPane;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetApplication))
    _MSProjectPtr Application;
    __declspec(property(get=GetIndex))
    _variant_t Index;
    __declspec(property(get=GetCaption,put=PutCaption))
    _bstr_t Caption;
    __declspec(property(get=GetVisible,put=PutVisible))
    VARIANT_BOOL Visible;
    __declspec(property(get=GetWindowState,put=PutWindowState))
    enum PjWindowState WindowState;
    __declspec(property(get=GetLeft,put=PutLeft))
    long Left;
    __declspec(property(get=GetTop,put=PutTop))
    long Top;
    __declspec(property(get=GetWidth,put=PutWidth))
    long Width;
    __declspec(property(get=GetHeight,put=PutHeight))
    long Height;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _MSProjectPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    _variant_t GetIndex ( );
    PanePtr GetActivePane ( );
    PanePtr GetTopPane ( );
    PanePtr GetBottomPane ( );
    HRESULT Close ( );
    HRESULT Activate ( );
//     IHTMLDocument2Ptr WebBrowserControlWindow ( );
//     IHTMLDocument2Ptr WebBrowserControlFrame (
//         const _variant_t & FrameName );
    HRESULT Refresh ( );

    // Properties:
    _bstr_t GetCaption ( );
    void PutCaption ( _bstr_t _val );
    VARIANT_BOOL GetVisible ( );
    void PutVisible ( VARIANT_BOOL _val );
    enum PjWindowState GetWindowState ( );
    void PutWindowState ( enum PjWindowState _val );
    long GetLeft ( );
    void PutLeft ( long _val );
    long GetTop ( );
    void PutTop ( long _val );
    long GetWidth ( );
    void PutWidth ( long _val );
    long GetHeight ( );
    void PutHeight ( long _val );
};

struct __declspec(uuid("00020b03-0000-0000-c000-000000000046"))
Windows : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetItem))
    WindowPtr Item[];
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetApplication))
    _MSProjectPtr Application;
    __declspec(property(get=GetActiveWindow))
    WindowPtr ActiveWindow;
    __declspec(property(get=GetCount))
    long Count;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _MSProjectPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    WindowPtr GetActiveWindow ( );
    long GetCount ( );
    WindowPtr GetItem (
        const _variant_t & Index );
};

struct __declspec(uuid("000c0c48-0000-0000-c000-000000000046"))
SplitPart : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetStart,put=PutStart))
    _variant_t Start;
    __declspec(property(get=GetFinish,put=PutFinish))
    _variant_t Finish;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetApplication))
    _MSProjectPtr Application;

    //
    // Wrapper methods for error-handling
    //

    _variant_t GetStart ( );
    void PutStart (
        const _variant_t & retval );
    _variant_t GetFinish ( );
    void PutFinish (
        const _variant_t & retval );
    long GetIndex ( );
    IDispatchPtr GetParent ( );
    _MSProjectPtr GetApplication ( );
    HRESULT Delete ( );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Start (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Start (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Finish (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Finish (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Index (
        long * retval ) = 0;
    virtual HRESULT __stdcall get_Parent (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall get_Application (
        struct _MSProject * * retval ) = 0;
    virtual HRESULT __stdcall raw_Delete ( ) = 0;
};

struct __declspec(uuid("000c0c47-0000-0000-c000-000000000046"))
SplitParts : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetItem))
    SplitPartPtr Item[];
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetApplication))
    _MSProjectPtr Application;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    long GetCount ( );
    HRESULT Add (
        const _variant_t & StartSplitPartOn,
        const _variant_t & EndSplitPartOn );
    IUnknownPtr Get_NewEnum ( );
    SplitPartPtr GetItem (
        long Index );
    IDispatchPtr GetParent ( );
    _MSProjectPtr GetApplication ( );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Count (
        long * retval ) = 0;
    virtual HRESULT __stdcall raw_Add (
        VARIANT StartSplitPartOn,
        VARIANT EndSplitPartOn ) = 0;
    virtual HRESULT __stdcall get__NewEnum (
        IUnknown * * retval ) = 0;
    virtual HRESULT __stdcall get_Item (
        long Index,
        struct SplitPart * * retval ) = 0;
    virtual HRESULT __stdcall get_Parent (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall get_Application (
        struct _MSProject * * retval ) = 0;
};

struct __declspec(uuid("000c0c40-0000-0000-c000-000000000046"))
Tasks : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetItem))
    TaskPtr Item[];
    __declspec(property(get=GetUniqueID))
    TaskPtr UniqueID[];
    __declspec(property(get=GetParent))
    _IProjectDocPtr Parent;
    __declspec(property(get=GetApplication))
    _MSProjectPtr Application;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    _MSProjectPtr GetApplication ( );
    _IProjectDocPtr GetParent ( );
    long GetCount ( );
    TaskPtr GetUniqueID (
        long Index );
    TaskPtr Add (
        const _variant_t & Name = vtMissing,
        const _variant_t & Before = vtMissing );
    TaskPtr GetItem (
        const _variant_t & Index );
    IUnknownPtr Get_NewEnum ( );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Application (
        struct _MSProject * * retval ) = 0;
    virtual HRESULT __stdcall get_Parent (
        struct _IProjectDoc * * retval ) = 0;
    virtual HRESULT __stdcall get_Count (
        long * retval ) = 0;
    virtual HRESULT __stdcall get_UniqueID (
        long Index,
        struct Task * * retval ) = 0;
    virtual HRESULT __stdcall raw_Add (
        VARIANT Name,
        VARIANT Before,
        struct Task * * retval ) = 0;
    virtual HRESULT __stdcall get_Item (
        VARIANT Index,
        struct Task * * retval ) = 0;
    virtual HRESULT __stdcall get__NewEnum (
        IUnknown * * ppEnumVar ) = 0;
};

struct __declspec(uuid("000c0c42-0000-0000-c000-000000000046"))
Resources : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetItem))
    ResourcePtr Item[];
    __declspec(property(get=GetUniqueID))
    ResourcePtr UniqueID[];
    __declspec(property(get=GetParent))
    _IProjectDocPtr Parent;
    __declspec(property(get=GetApplication))
    _MSProjectPtr Application;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    _MSProjectPtr GetApplication ( );
    _IProjectDocPtr GetParent ( );
    long GetCount ( );
    ResourcePtr GetUniqueID (
        long Index );
    ResourcePtr Add (
        const _variant_t & Name = vtMissing,
        const _variant_t & Before = vtMissing );
    ResourcePtr GetItem (
        const _variant_t & Index );
    IUnknownPtr Get_NewEnum ( );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Application (
        struct _MSProject * * retval ) = 0;
    virtual HRESULT __stdcall get_Parent (
        struct _IProjectDoc * * retval ) = 0;
    virtual HRESULT __stdcall get_Count (
        long * retval ) = 0;
    virtual HRESULT __stdcall get_UniqueID (
        long Index,
        struct Resource * * retval ) = 0;
    virtual HRESULT __stdcall raw_Add (
        VARIANT Name,
        VARIANT Before,
        struct Resource * * retval ) = 0;
    virtual HRESULT __stdcall get_Item (
        VARIANT Index,
        struct Resource * * retval ) = 0;
    virtual HRESULT __stdcall get__NewEnum (
        IUnknown * * ppEnumVar ) = 0;
};

struct __declspec(uuid("000c0c46-0000-0000-c000-000000000046"))
Assignments : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetItem))
    AssignmentPtr Item[];
    __declspec(property(get=GetUniqueID))
    AssignmentPtr UniqueID[];
    __declspec(property(get=GetParent))
    _IProjectDocPtr Parent;
    __declspec(property(get=GetApplication))
    _MSProjectPtr Application;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    _MSProjectPtr GetApplication ( );
    _IProjectDocPtr GetParent ( );
    long GetCount ( );
    AssignmentPtr GetUniqueID (
        long Index );
    AssignmentPtr Add (
        const _variant_t & TaskID = vtMissing,
        const _variant_t & ResourceID = vtMissing,
        const _variant_t & Units = vtMissing );
    AssignmentPtr GetItem (
        const _variant_t & Index );
    IUnknownPtr Get_NewEnum ( );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Application (
        struct _MSProject * * retval ) = 0;
    virtual HRESULT __stdcall get_Parent (
        struct _IProjectDoc * * retval ) = 0;
    virtual HRESULT __stdcall get_Count (
        long * retval ) = 0;
    virtual HRESULT __stdcall get_UniqueID (
        long Index,
        struct Assignment * * retval ) = 0;
    virtual HRESULT __stdcall raw_Add (
        VARIANT TaskID,
        VARIANT ResourceID,
        VARIANT Units,
        struct Assignment * * retval ) = 0;
    virtual HRESULT __stdcall get_Item (
        VARIANT Index,
        struct Assignment * * retval ) = 0;
    virtual HRESULT __stdcall get__NewEnum (
        IUnknown * * ppEnumVar ) = 0;
};

struct __declspec(uuid("000c0c44-0000-0000-c000-000000000046"))
Calendars : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetItem))
    CalendarPtr Item[];
    __declspec(property(get=GetParent))
    _IProjectDocPtr Parent;
    __declspec(property(get=GetApplication))
    _MSProjectPtr Application;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    _MSProjectPtr GetApplication ( );
    _IProjectDocPtr GetParent ( );
    long GetCount ( );
    CalendarPtr GetItem (
        const _variant_t & Index );
    IUnknownPtr Get_NewEnum ( );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Application (
        struct _MSProject * * retval ) = 0;
    virtual HRESULT __stdcall get_Parent (
        struct _IProjectDoc * * retval ) = 0;
    virtual HRESULT __stdcall get_Count (
        long * retval ) = 0;
    virtual HRESULT __stdcall get_Item (
        VARIANT Index,
        struct Calendar * * retval ) = 0;
    virtual HRESULT __stdcall get__NewEnum (
        IUnknown * * ppEnumVar ) = 0;
};

struct __declspec(uuid("00020b00-0000-0000-c000-000000000046"))
_IProjectDoc : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetTasks))
    TasksPtr Tasks;
    __declspec(property(get=GetResources))
    ResourcesPtr Resources;
    __declspec(property(get=GetLinkedFields))
    _variant_t LinkedFields;
    __declspec(property(get=GetResume))
    _variant_t Resume;
    __declspec(property(get=GetStop))
    _variant_t Stop;
    __declspec(property(get=GetResumeNoEarlierThan))
    _variant_t ResumeNoEarlierThan;
    __declspec(property(get=GetOutlineNumber))
    _bstr_t OutlineNumber;
    __declspec(property(get=GetBaseCalendars))
    CalendarsPtr BaseCalendars;
    __declspec(property(get=GetPath))
    _bstr_t Path;
    __declspec(property(get=GetConfirmed))
    _variant_t Confirmed;
    __declspec(property(get=GetUpdateNeeded))
    _variant_t UpdateNeeded;
    __declspec(property(get=GetResourceGroup))
    _variant_t ResourceGroup;
    __declspec(property(get=GetCreationDate))
    _variant_t CreationDate;
    __declspec(property(get=GetLastPrintedDate))
    _variant_t LastPrintedDate;
    __declspec(property(get=GetLastSaveDate))
    _variant_t LastSaveDate;
    __declspec(property(get=GetLastSavedBy))
    _bstr_t LastSavedBy;
    __declspec(property(get=GetRevisionNumber))
    _bstr_t RevisionNumber;
    __declspec(property(get=GetTemplate))
    _bstr_t Template;
    __declspec(property(get=GetViewList))
    ListPtr ViewList;
    __declspec(property(get=GetReportList))
    ListPtr ReportList;
    __declspec(property(get=GetTaskFilterList))
    ListPtr TaskFilterList;
    __declspec(property(get=GetResourceFilterList))
    ListPtr ResourceFilterList;
    __declspec(property(get=GetTaskTableList))
    ListPtr TaskTableList;
    __declspec(property(get=GetResourceTableList))
    ListPtr ResourceTableList;
    __declspec(property(get=GetCurrentView))
    _bstr_t CurrentView;
    __declspec(property(get=GetCurrentTable))
    _bstr_t CurrentTable;
    __declspec(property(get=GetCurrentFilter))
    _bstr_t CurrentFilter;
    __declspec(property(get=GetNumberOfTasks))
    long NumberOfTasks;
    __declspec(property(get=GetNumberOfResources))
    long NumberOfResources;
    __declspec(property(get=GetFullName))
    _bstr_t FullName;
    __declspec(property(get=GetResourcePoolName))
    _bstr_t ResourcePoolName;
    __declspec(property(get=GetTaskViewList))
    ListPtr TaskViewList;
    __declspec(property(get=GetResourceViewList))
    ListPtr ResourceViewList;
    __declspec(property(get=GetReadOnlyRecommended))
    VARIANT_BOOL ReadOnlyRecommended;
    __declspec(property(get=GetID))
    long ID;
    __declspec(property(get=GetSaved))
    VARIANT_BOOL Saved;
    __declspec(property(get=GetCalendar))
    CalendarPtr Calendar;
    __declspec(property(get=GetOutlineChildren))
    TasksPtr OutlineChildren;
    __declspec(property(get=GetBuiltinDocumentProperties))
    IDispatchPtr BuiltinDocumentProperties;
    __declspec(property(get=GetCustomDocumentProperties))
    IDispatchPtr CustomDocumentProperties;
    __declspec(property(get=GetContainer))
    IDispatchPtr Container;
    __declspec(property(get=GetMapList))
    ListPtr MapList;
    __declspec(property(get=GetSubprojects))
    SubprojectsPtr Subprojects;
    __declspec(property(get=GetCommandBars))
//    _CommandBarsPtr CommandBars;
//    __declspec(property(get=GetVBProject))
//    _VBProjectPtr VBProject;
//    __declspec(property(get=GetUserControl))
    VARIANT_BOOL UserControl;
    __declspec(property(get=GetCurrentGroup))
    _bstr_t CurrentGroup;
    __declspec(property(get=GetCodeName))
    _bstr_t CodeName;
    __declspec(property(get=GetTaskGroupList))
    ListPtr TaskGroupList;
    __declspec(property(get=GetResourceGroupList))
    ListPtr ResourceGroupList;
    __declspec(property(get=GetTaskGroups))
    TaskGroupsPtr TaskGroups;
    __declspec(property(get=GetResourceGroups))
    ResourceGroupsPtr ResourceGroups;
    __declspec(property(get=GetProjectSummaryTask))
    TaskPtr ProjectSummaryTask;
    __declspec(property(get=GetViews))
    ViewsPtr Views;
    __declspec(property(get=GetBaselineSavedDate))
    _variant_t BaselineSavedDate[];
    __declspec(property(get=GetTaskTables))
    TablesPtr TaskTables;
    __declspec(property(get=GetResourceTables))
    TablesPtr ResourceTables;
    __declspec(property(get=GetViewsSingle))
    ViewsSinglePtr ViewsSingle;
    __declspec(property(get=GetViewsCombination))
    ViewsCombinationPtr ViewsCombination;
    __declspec(property(get=GetTaskFilters))
    FiltersPtr TaskFilters;
    __declspec(property(get=GetResourceFilters))
    FiltersPtr ResourceFilters;
    __declspec(property(get=GetProjectNamePrefix))
    _bstr_t ProjectNamePrefix;
    __declspec(property(get=GetVersionName))
    _bstr_t VersionName;
    __declspec(property(get=GetType))
    enum PjProjectType Type;
    __declspec(property(get=GetWork))
    _variant_t Work;
    __declspec(property(get=GetWorkVariance))
    _variant_t WorkVariance;
    __declspec(property(get=GetRemainingWork))
    _variant_t RemainingWork;
    __declspec(property(get=GetCost))
    _variant_t Cost;
    __declspec(property(get=GetActualCost))
    _variant_t ActualCost;
    __declspec(property(get=GetCostVariance))
    _variant_t CostVariance;
    __declspec(property(get=GetRemainingCost))
    _variant_t RemainingCost;
    __declspec(property(get=GetBCWP))
    _variant_t BCWP;
    __declspec(property(get=GetBCWS))
    _variant_t BCWS;
    __declspec(property(get=GetSV))
    _variant_t SV;
    __declspec(property(get=GetConstraintType))
    _variant_t ConstraintType;
    __declspec(property(get=GetConstraintDate))
    _variant_t ConstraintDate;
    __declspec(property(get=GetCritical))
    _variant_t Critical;
    __declspec(property(get=GetFreeSlack))
    _variant_t FreeSlack;
    __declspec(property(get=GetTotalSlack))
    _variant_t TotalSlack;
    __declspec(property(get=GetMilestone))
    _variant_t Milestone;
    __declspec(property(get=GetBaselineDuration))
    _variant_t BaselineDuration;
    __declspec(property(get=GetActualDuration))
    _variant_t ActualDuration;
    __declspec(property(get=GetDuration))
    _variant_t Duration;
    __declspec(property(get=GetDurationVariance))
    _variant_t DurationVariance;
    __declspec(property(get=GetRemainingDuration))
    _variant_t RemainingDuration;
    __declspec(property(get=GetPercentComplete))
    _variant_t PercentComplete;
    __declspec(property(get=GetStart))
    _variant_t Start;
    __declspec(property(get=GetFinish))
    _variant_t Finish;
    __declspec(property(get=GetEarlyStart))
    _variant_t EarlyStart;
    __declspec(property(get=GetEarlyFinish))
    _variant_t EarlyFinish;
    __declspec(property(get=GetLateStart))
    _variant_t LateStart;
    __declspec(property(get=GetLateFinish))
    _variant_t LateFinish;
    __declspec(property(get=GetActualStart))
    _variant_t ActualStart;
    __declspec(property(get=GetActualFinish))
    _variant_t ActualFinish;
    __declspec(property(get=GetStartVariance))
    _variant_t StartVariance;
    __declspec(property(get=GetFinishVariance))
    _variant_t FinishVariance;
    __declspec(property(get=GetResourceNames))
    _variant_t ResourceNames;
    __declspec(property(get=GetResourceInitials))
    _variant_t ResourceInitials;
    __declspec(property(get=GetReadOnly))
    VARIANT_BOOL ReadOnly;
    __declspec(property(get=GetHasPassword))
    VARIANT_BOOL HasPassword;
    __declspec(property(get=GetWriteReserved))
    VARIANT_BOOL WriteReserved;
    __declspec(property(get=GetCV))
    _variant_t CV;
    __declspec(property(get=GetProject))
    _variant_t Project;
    __declspec(property(get=GetOutlineLevel))
    int OutlineLevel;
    __declspec(property(get=GetUniqueID))
    long UniqueID;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetApplication))
    _MSProjectPtr Application;
    __declspec(property(get=GetIndex))
    _variant_t Index;
    __declspec(property(get=GetSummary))
    _variant_t Summary;
    __declspec(property(get=GetCreated))
    _variant_t Created;
    __declspec(property(get=GetObjects))
    long Objects;
    __declspec(property(get=GetManager,put=PutManager))
    _variant_t Manager;
    __declspec(property(get=GetCompany,put=PutCompany))
    _variant_t Company;
    __declspec(property(get=GetAuthor,put=PutAuthor))
    _variant_t Author;
    __declspec(property(get=GetKeywords,put=PutKeywords))
    _variant_t Keywords;
    __declspec(property(get=GetProjectNotes,put=PutProjectNotes))
    _bstr_t ProjectNotes;
    __declspec(property(get=GetProjectStart,put=PutProjectStart))
    _variant_t ProjectStart;
    __declspec(property(get=GetProjectFinish,put=PutProjectFinish))
    _variant_t ProjectFinish;
    __declspec(property(get=GetCurrentDate,put=PutCurrentDate))
    _variant_t CurrentDate;
    __declspec(property(get=GetStatusDate,put=PutStatusDate))
    _variant_t StatusDate;
    __declspec(property(get=GetScheduleFromStart,put=PutScheduleFromStart))
    VARIANT_BOOL ScheduleFromStart;
    __declspec(property(get=GetComments,put=PutComments))
    _variant_t Comments;
    __declspec(property(get=GetTitle,put=PutTitle))
    _variant_t Title;
    __declspec(property(get=GetSubject,put=PutSubject))
    _variant_t Subject;
    __declspec(property(get=GetWindows,put=PutWindows))
    WindowsPtr Windows;
    __declspec(property(get=GetMinuteLabelDisplay,put=PutMinuteLabelDisplay))
    short MinuteLabelDisplay;
    __declspec(property(get=GetHourLabelDisplay,put=PutHourLabelDisplay))
    short HourLabelDisplay;
    __declspec(property(get=GetDayLabelDisplay,put=PutDayLabelDisplay))
    short DayLabelDisplay;
    __declspec(property(get=GetWeekLabelDisplay,put=PutWeekLabelDisplay))
    short WeekLabelDisplay;
    __declspec(property(get=GetYearLabelDisplay,put=PutYearLabelDisplay))
    short YearLabelDisplay;
    __declspec(property(get=GetMonthLabelDisplay,put=PutMonthLabelDisplay))
    short MonthLabelDisplay;
    __declspec(property(get=GetSpaceBeforeTimeLabels,put=PutSpaceBeforeTimeLabels))
    VARIANT_BOOL SpaceBeforeTimeLabels;
    __declspec(property(get=GetDefaultTaskType,put=PutDefaultTaskType))
    enum PjTaskFixedType DefaultTaskType;
    __declspec(property(get=GetDefaultEffortDriven,put=PutDefaultEffortDriven))
    VARIANT_BOOL DefaultEffortDriven;
    __declspec(property(get=GetUseFYStartYear,put=PutUseFYStartYear))
    VARIANT_BOOL UseFYStartYear;
    __declspec(property(get=GetAutoFilter,put=PutAutoFilter))
    VARIANT_BOOL AutoFilter;
    __declspec(property(get=GetHonorConstraints,put=PutHonorConstraints))
    VARIANT_BOOL HonorConstraints;
    __declspec(property(get=GetMultipleCriticalPaths,put=PutMultipleCriticalPaths))
    VARIANT_BOOL MultipleCriticalPaths;
    __declspec(property(get=GetLevelFromDate,put=PutLevelFromDate))
    _variant_t LevelFromDate;
    __declspec(property(get=GetLevelToDate,put=PutLevelToDate))
    _variant_t LevelToDate;
    __declspec(property(get=GetLevelEntireProject,put=PutLevelEntireProject))
    VARIANT_BOOL LevelEntireProject;
    __declspec(property(get=GetDefaultFixedCostAccrual,put=PutDefaultFixedCostAccrual))
    enum PjAccrueAt DefaultFixedCostAccrual;
    __declspec(property(get=GetSpreadCostsToStatusDate,put=PutSpreadCostsToStatusDate))
    VARIANT_BOOL SpreadCostsToStatusDate;
    __declspec(property(get=GetSpreadPercentCompleteToStatusDate,put=PutSpreadPercentCompleteToStatusDate))
    VARIANT_BOOL SpreadPercentCompleteToStatusDate;
    __declspec(property(get=GetAutoCalcCosts,put=PutAutoCalcCosts))
    VARIANT_BOOL AutoCalcCosts;
    __declspec(property(get=GetShowExternalSuccessors,put=PutShowExternalSuccessors))
    VARIANT_BOOL ShowExternalSuccessors;
    __declspec(property(get=GetShowExternalPredecessors,put=PutShowExternalPredecessors))
    VARIANT_BOOL ShowExternalPredecessors;
    __declspec(property(get=GetShowCrossProjectLinksInfo,put=PutShowCrossProjectLinksInfo))
    VARIANT_BOOL ShowCrossProjectLinksInfo;
    __declspec(property(get=GetAcceptNewExternalData,put=PutAcceptNewExternalData))
    VARIANT_BOOL AcceptNewExternalData;
    __declspec(property(get=GetPhoneticType,put=PutPhoneticType))
    enum PjPhoneticType PhoneticType;
    __declspec(property(get=GetWorkgroupMessages,put=PutWorkgroupMessages))
    enum PjWorkgroupMessages WorkgroupMessages;
    __declspec(property(get=GetServerURL,put=PutServerURL))
    _bstr_t ServerURL;
    __declspec(property(get=GetServerPath,put=PutServerPath))
    _bstr_t ServerPath;
    __declspec(property(get=GetReceiveNotifications,put=PutReceiveNotifications))
    VARIANT_BOOL ReceiveNotifications;
    __declspec(property(get=GetSendHyperlinkNote,put=PutSendHyperlinkNote))
    VARIANT_BOOL SendHyperlinkNote;
    __declspec(property(get=GetHyperlinkColor,put=PutHyperlinkColor))
    enum PjColor HyperlinkColor;
    __declspec(property(get=GetFollowedHyperlinkColor,put=PutFollowedHyperlinkColor))
    enum PjColor FollowedHyperlinkColor;
    __declspec(property(get=GetUnderlineHyperlinks,put=PutUnderlineHyperlinks))
    VARIANT_BOOL UnderlineHyperlinks;
    __declspec(property(get=GetAskForCompletedWork,put=PutAskForCompletedWork))
    enum PjTeamStatusCompletedWork AskForCompletedWork;
    __declspec(property(get=GetTrackOvertimeWork,put=PutTrackOvertimeWork))
    VARIANT_BOOL TrackOvertimeWork;
    __declspec(property(get=GetTeamMembersCanDeclineTasks,put=PutTeamMembersCanDeclineTasks))
    VARIANT_BOOL TeamMembersCanDeclineTasks;
    __declspec(property(get=GetShowEstimatedDuration,put=PutShowEstimatedDuration))
    VARIANT_BOOL ShowEstimatedDuration;
    __declspec(property(get=GetNewTasksEstimated,put=PutNewTasksEstimated))
    VARIANT_BOOL NewTasksEstimated;
    __declspec(property(get=GetWBSCodeGenerate,put=PutWBSCodeGenerate))
    VARIANT_BOOL WBSCodeGenerate;
    __declspec(property(get=GetWBSVerifyUniqueness,put=PutWBSVerifyUniqueness))
    VARIANT_BOOL WBSVerifyUniqueness;
    __declspec(property(get=GetUpdateProjOnSave,put=PutUpdateProjOnSave))
    VARIANT_BOOL UpdateProjOnSave;
    __declspec(property(get=GetServerIdentification,put=PutServerIdentification))
    enum PjAuthentication ServerIdentification;
    __declspec(property(get=GetVBASigned,put=PutVBASigned))
    VARIANT_BOOL VBASigned;
    __declspec(property(get=GetExpandDatabaseTimephasedData,put=PutExpandDatabaseTimephasedData))
    VARIANT_BOOL ExpandDatabaseTimephasedData;
    __declspec(property(get=GetDatabaseProjectUniqueID,put=PutDatabaseProjectUniqueID))
    _variant_t DatabaseProjectUniqueID;
    __declspec(property(get=GetActualWork,put=PutActualWork))
    _variant_t ActualWork;
    __declspec(property(get=GetCost1,put=PutCost1))
    _variant_t Cost1;
    __declspec(property(get=GetCost2,put=PutCost2))
    _variant_t Cost2;
    __declspec(property(get=GetCost3,put=PutCost3))
    _variant_t Cost3;
    __declspec(property(get=GetBaselineWork,put=PutBaselineWork))
    _variant_t BaselineWork;
    __declspec(property(get=GetBaselineCost,put=PutBaselineCost))
    _variant_t BaselineCost;
    __declspec(property(get=GetFixedCost,put=PutFixedCost))
    _variant_t FixedCost;
    __declspec(property(get=GetWBS,put=PutWBS))
    _bstr_t WBS;
    __declspec(property(get=GetDelay,put=PutDelay))
    _variant_t Delay;
    __declspec(property(get=GetPriority,put=PutPriority))
    _variant_t Priority;
    __declspec(property(get=GetDuration1,put=PutDuration1))
    _variant_t Duration1;
    __declspec(property(get=GetDuration2,put=PutDuration2))
    _variant_t Duration2;
    __declspec(property(get=GetDuration3,put=PutDuration3))
    _variant_t Duration3;
    __declspec(property(get=GetPercentWorkComplete,put=PutPercentWorkComplete))
    _variant_t PercentWorkComplete;
    __declspec(property(get=GetFixedDuration,put=PutFixedDuration))
    _variant_t FixedDuration;
    __declspec(property(get=GetBaselineStart,put=PutBaselineStart))
    _variant_t BaselineStart;
    __declspec(property(get=GetBaselineFinish,put=PutBaselineFinish))
    _variant_t BaselineFinish;
    __declspec(property(get=GetText1,put=PutText1))
    _bstr_t Text1;
    __declspec(property(get=GetStart1,put=PutStart1))
    _variant_t Start1;
    __declspec(property(get=GetFinish1,put=PutFinish1))
    _variant_t Finish1;
    __declspec(property(get=GetText2,put=PutText2))
    _bstr_t Text2;
    __declspec(property(get=GetStart2,put=PutStart2))
    _variant_t Start2;
    __declspec(property(get=GetFinish2,put=PutFinish2))
    _variant_t Finish2;
    __declspec(property(get=GetText3,put=PutText3))
    _bstr_t Text3;
    __declspec(property(get=GetStart3,put=PutStart3))
    _variant_t Start3;
    __declspec(property(get=GetFinish3,put=PutFinish3))
    _variant_t Finish3;
    __declspec(property(get=GetText4,put=PutText4))
    _bstr_t Text4;
    __declspec(property(get=GetStart4,put=PutStart4))
    _variant_t Start4;
    __declspec(property(get=GetFinish4,put=PutFinish4))
    _variant_t Finish4;
    __declspec(property(get=GetText5,put=PutText5))
    _bstr_t Text5;
    __declspec(property(get=GetStart5,put=PutStart5))
    _variant_t Start5;
    __declspec(property(get=GetFinish5,put=PutFinish5))
    _variant_t Finish5;
    __declspec(property(get=GetText6,put=PutText6))
    _bstr_t Text6;
    __declspec(property(get=GetText7,put=PutText7))
    _bstr_t Text7;
    __declspec(property(get=GetText8,put=PutText8))
    _bstr_t Text8;
    __declspec(property(get=GetText9,put=PutText9))
    _bstr_t Text9;
    __declspec(property(get=GetText10,put=PutText10))
    _bstr_t Text10;
    __declspec(property(get=GetMarked,put=PutMarked))
    _variant_t Marked;
    __declspec(property(get=GetFlag1,put=PutFlag1))
    _variant_t Flag1;
    __declspec(property(get=GetFlag2,put=PutFlag2))
    _variant_t Flag2;
    __declspec(property(get=GetFlag3,put=PutFlag3))
    _variant_t Flag3;
    __declspec(property(get=GetFlag4,put=PutFlag4))
    _variant_t Flag4;
    __declspec(property(get=GetFlag5,put=PutFlag5))
    _variant_t Flag5;
    __declspec(property(get=GetFlag6,put=PutFlag6))
    _variant_t Flag6;
    __declspec(property(get=GetFlag7,put=PutFlag7))
    _variant_t Flag7;
    __declspec(property(get=GetFlag8,put=PutFlag8))
    _variant_t Flag8;
    __declspec(property(get=GetFlag9,put=PutFlag9))
    _variant_t Flag9;
    __declspec(property(get=GetFlag10,put=PutFlag10))
    _variant_t Flag10;
    __declspec(property(get=GetRollup,put=PutRollup))
    _variant_t Rollup;
    __declspec(property(get=GetNumber1,put=PutNumber1))
    double Number1;
    __declspec(property(get=GetNumber2,put=PutNumber2))
    double Number2;
    __declspec(property(get=GetNumber3,put=PutNumber3))
    double Number3;
    __declspec(property(get=GetNumber4,put=PutNumber4))
    double Number4;
    __declspec(property(get=GetNumber5,put=PutNumber5))
    double Number5;
    __declspec(property(get=GetNotes,put=PutNotes))
    _bstr_t Notes;
    __declspec(property(get=GetContact,put=PutContact))
    _bstr_t Contact;
    __declspec(property(get=GetHideBar,put=PutHideBar))
    _variant_t HideBar;
    __declspec(property(get=GetCurrencySymbol,put=PutCurrencySymbol))
    _bstr_t CurrencySymbol;
    __declspec(property(get=GetCurrencySymbolPosition,put=PutCurrencySymbolPosition))
    enum PjPlacement CurrencySymbolPosition;
    __declspec(property(get=GetCurrencyDigits,put=PutCurrencyDigits))
    short CurrencyDigits;
    __declspec(property(get=GetShowCriticalSlack,put=PutShowCriticalSlack))
    long ShowCriticalSlack;
    __declspec(property(get=GetDefaultDurationUnits,put=PutDefaultDurationUnits))
    enum PjUnit DefaultDurationUnits;
    __declspec(property(get=GetDefaultWorkUnits,put=PutDefaultWorkUnits))
    enum PjUnit DefaultWorkUnits;
    __declspec(property(get=GetStartOnCurrentDate,put=PutStartOnCurrentDate))
    VARIANT_BOOL StartOnCurrentDate;
    __declspec(property(get=GetAutoTrack,put=PutAutoTrack))
    VARIANT_BOOL AutoTrack;
    __declspec(property(get=GetAutoSplitTasks,put=PutAutoSplitTasks))
    VARIANT_BOOL AutoSplitTasks;
    __declspec(property(get=GetAutoLinkTasks,put=PutAutoLinkTasks))
    VARIANT_BOOL AutoLinkTasks;
    __declspec(property(get=GetDefaultStartTime,put=PutDefaultStartTime))
    _variant_t DefaultStartTime;
    __declspec(property(get=GetDefaultFinishTime,put=PutDefaultFinishTime))
    _variant_t DefaultFinishTime;
    __declspec(property(get=GetHoursPerDay,put=PutHoursPerDay))
    double HoursPerDay;
    __declspec(property(get=GetHoursPerWeek,put=PutHoursPerWeek))
    double HoursPerWeek;
    __declspec(property(get=GetDaysPerMonth,put=PutDaysPerMonth))
    double DaysPerMonth;
    __declspec(property(get=GetDefaultResourceStandardRate,put=PutDefaultResourceStandardRate))
    _variant_t DefaultResourceStandardRate;
    __declspec(property(get=GetDefaultResourceOvertimeRate,put=PutDefaultResourceOvertimeRate))
    _variant_t DefaultResourceOvertimeRate;
    __declspec(property(get=GetDisplayProjectSummaryTask,put=PutDisplayProjectSummaryTask))
    VARIANT_BOOL DisplayProjectSummaryTask;
    __declspec(property(get=GetAutoAddResources,put=PutAutoAddResources))
    VARIANT_BOOL AutoAddResources;
    __declspec(property(get=GetStartWeekOn,put=PutStartWeekOn))
    enum PjWeekday StartWeekOn;
    __declspec(property(get=GetStartYearIn,put=PutStartYearIn))
    enum PjMonth StartYearIn;
    __declspec(property(get=GetAllowTaskDelegation,put=PutAllowTaskDelegation))
    VARIANT_BOOL AllowTaskDelegation;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetPublishInformationOnSave,put=PutPublishInformationOnSave))
    enum PjPublishInformationOnSave PublishInformationOnSave;
    __declspec(property(get=GetProjectGuideFunctionalLayoutPage,put=PutProjectGuideFunctionalLayoutPage))
    _bstr_t ProjectGuideFunctionalLayoutPage;
    __declspec(property(get=GetProjectGuideSaveBuffer,put=PutProjectGuideSaveBuffer))
    _bstr_t ProjectGuideSaveBuffer;
    __declspec(property(get=GetProjectGuideContent,put=PutProjectGuideContent))
    _bstr_t ProjectGuideContent;
    __declspec(property(get=GetProjectServerUsedForTracking,put=PutProjectServerUsedForTracking))
    VARIANT_BOOL ProjectServerUsedForTracking;
    __declspec(property(get=GetTrackingMethod,put=PutTrackingMethod))
    enum PjProjectServerTrackingMethod TrackingMethod;
    __declspec(property(get=GetMoveCompleted,put=PutMoveCompleted))
    VARIANT_BOOL MoveCompleted;
    __declspec(property(get=GetAndMoveRemaining,put=PutAndMoveRemaining))
    VARIANT_BOOL AndMoveRemaining;
    __declspec(property(get=GetMoveRemaining,put=PutMoveRemaining))
    VARIANT_BOOL MoveRemaining;
    __declspec(property(get=GetAndMoveCompleted,put=PutAndMoveCompleted))
    VARIANT_BOOL AndMoveCompleted;
    __declspec(property(get=GetDefaultEarnedValueMethod,put=PutDefaultEarnedValueMethod))
    enum PjEarnedValueMethod DefaultEarnedValueMethod;
    __declspec(property(get=GetEarnedValueBaseline,put=PutEarnedValueBaseline))
    enum PjBaselines EarnedValueBaseline;
    __declspec(property(get=GetProjectGuideUseDefaultFunctionalLayoutPage,put=PutProjectGuideUseDefaultFunctionalLayoutPage))
    VARIANT_BOOL ProjectGuideUseDefaultFunctionalLayoutPage;
    __declspec(property(get=GetProjectGuideUseDefaultContent,put=PutProjectGuideUseDefaultContent))
    VARIANT_BOOL ProjectGuideUseDefaultContent;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _bstr_t Get_CodeName ( );
    HRESULT Put_CodeName (
        _bstr_t _arg1 );
    _bstr_t GetCodeName ( );
    TasksPtr GetOutlineChildren ( );
    _variant_t GetCostVariance ( );
    TaskPtr GetProjectSummaryTask ( );
    _variant_t GetRemainingCost ( );
    _variant_t GetBCWP ( );
    _variant_t GetBCWS ( );
    _variant_t GetSV ( );
    _variant_t GetCV ( );
    _bstr_t GetOutlineNumber ( );
    _variant_t GetCritical ( );
    _variant_t GetFreeSlack ( );
    _variant_t GetTotalSlack ( );
    long GetUniqueID ( );
    int GetOutlineLevel ( );
    _variant_t GetBaselineDuration ( );
    _variant_t GetDurationVariance ( );
    _variant_t GetEarlyStart ( );
    _variant_t GetEarlyFinish ( );
    _variant_t GetLateStart ( );
    _variant_t GetStartVariance ( );
    _variant_t GetFinishVariance ( );
    _variant_t GetProject ( );
    _variant_t GetMilestone ( );
    _variant_t GetRemainingDuration ( );
    _variant_t GetPercentComplete ( );
    _variant_t GetStart ( );
    _variant_t GetFinish ( );
    _variant_t GetResourceNames ( );
    _variant_t GetResourceInitials ( );
    _variant_t GetResume ( );
    _variant_t GetStop ( );
    _variant_t GetResumeNoEarlierThan ( );
    _variant_t GetConstraintType ( );
    _variant_t GetConstraintDate ( );
    _variant_t GetActualCost ( );
    _variant_t GetCost ( );
    _variant_t GetCreated ( );
    _variant_t GetActualDuration ( );
    _variant_t GetDuration ( );
    _variant_t GetLateFinish ( );
    _variant_t GetActualFinish ( );
    long GetObjects ( );
    _variant_t GetRemainingWork ( );
    _variant_t GetResourceGroup ( );
    _variant_t GetActualStart ( );
    _variant_t GetSummary ( );
    _bstr_t GetTemplate ( );
    _variant_t GetUpdateNeeded ( );
    _variant_t GetWork ( );
    _variant_t GetWorkVariance ( );
    _variant_t GetLinkedFields ( );
    _variant_t GetConfirmed ( );
    VARIANT_BOOL GetReadOnly ( );
    VARIANT_BOOL GetHasPassword ( );
    VARIANT_BOOL GetWriteReserved ( );
    _MSProjectPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    _variant_t GetIndex ( );
    HRESULT SaveAs (
        const _variant_t & Name,
        enum PjFileFormat Format,
        const _variant_t & Backup = vtMissing,
        const _variant_t & ReadOnly = vtMissing,
        const _variant_t & TaskInformation = vtMissing,
        const _variant_t & Filtered = vtMissing,
        const _variant_t & Table = vtMissing,
        const _variant_t & UserID = vtMissing,
        const _variant_t & DatabasePassWord = vtMissing,
        const _variant_t & FormatID = vtMissing,
        const _variant_t & Map = vtMissing,
        const _variant_t & ClearBaseline = vtMissing,
        const _variant_t & ClearActuals = vtMissing,
        const _variant_t & ClearResourceRates = vtMissing,
        const _variant_t & ClearFixedCosts = vtMissing );
    ListPtr GetMapList ( );
    TasksPtr GetTasks ( );
    ResourcesPtr GetResources ( );
    CalendarsPtr GetBaseCalendars ( );
    IDispatchPtr GetBuiltinDocumentProperties ( );
    IDispatchPtr GetCustomDocumentProperties ( );
    IDispatchPtr GetContainer ( );
    CalendarPtr GetCalendar ( );
    long GetNumberOfTasks ( );
    long GetNumberOfResources ( );
    _bstr_t GetFullName ( );
    _bstr_t GetPath ( );
    _bstr_t GetResourcePoolName ( );
    VARIANT_BOOL GetSaved ( );
    _variant_t GetCreationDate ( );
    _variant_t GetLastPrintedDate ( );
    _variant_t GetLastSaveDate ( );
    _bstr_t GetLastSavedBy ( );
    _bstr_t GetRevisionNumber ( );
    ListPtr GetViewList ( );
    ListPtr GetTaskViewList ( );
    ListPtr GetResourceViewList ( );
    VARIANT_BOOL GetReadOnlyRecommended ( );
    ListPtr GetReportList ( );
    ListPtr GetTaskFilterList ( );
    ListPtr GetResourceFilterList ( );
    ListPtr GetTaskTableList ( );
    ListPtr GetResourceTableList ( );
    _bstr_t GetCurrentView ( );
    _bstr_t GetCurrentTable ( );
    _bstr_t GetCurrentFilter ( );
    long GetID ( );
//    _CommandBarsPtr GetCommandBars ( );
    VARIANT_BOOL GetUserControl ( );
//   _VBProjectPtr GetVBProject ( );
    HRESULT Activate ( );
    HRESULT LevelClearDates ( );
    HRESULT AppendNotes (
        _bstr_t Value );
    SubprojectsPtr GetSubprojects ( );
    _bstr_t GetCurrentGroup ( );
    ListPtr GetTaskGroupList ( );
    ListPtr GetResourceGroupList ( );
    TaskGroupsPtr GetTaskGroups ( );
    ResourceGroupsPtr GetResourceGroups ( );
    enum PjProjectType GetType ( );
    ViewsPtr GetViews ( );
    TablesPtr GetTaskTables ( );
    TablesPtr GetResourceTables ( );
    FiltersPtr GetTaskFilters ( );
    FiltersPtr GetResourceFilters ( );
    ViewsSinglePtr GetViewsSingle ( );
    ViewsCombinationPtr GetViewsCombination ( );
    _variant_t GetBaselineSavedDate (
        enum PjBaselines Baseline );
    _bstr_t GetProjectNamePrefix ( );
    _bstr_t GetVersionName ( );
    HRESULT MakeServerURLTrusted ( );
    long GetTempToDoList ( );
    HRESULT PutTempToDoList (
        long _arg1 );

    // Properties:
    _variant_t GetManager ( );
    void PutManager ( const _variant_t & _val );
    _variant_t GetCompany ( );
    void PutCompany ( const _variant_t & _val );
    _variant_t GetAuthor ( );
    void PutAuthor ( const _variant_t & _val );
    _variant_t GetKeywords ( );
    void PutKeywords ( const _variant_t & _val );
    _bstr_t GetProjectNotes ( );
    void PutProjectNotes ( _bstr_t _val );
    _variant_t GetProjectStart ( );
    void PutProjectStart ( const _variant_t & _val );
    _variant_t GetProjectFinish ( );
    void PutProjectFinish ( const _variant_t & _val );
    _variant_t GetCurrentDate ( );
    void PutCurrentDate ( const _variant_t & _val );
    _variant_t GetStatusDate ( );
    void PutStatusDate ( const _variant_t & _val );
    VARIANT_BOOL GetScheduleFromStart ( );
    void PutScheduleFromStart ( VARIANT_BOOL _val );
    _variant_t GetComments ( );
    void PutComments ( const _variant_t & _val );
    _variant_t GetTitle ( );
    void PutTitle ( const _variant_t & _val );
    _variant_t GetSubject ( );
    void PutSubject ( const _variant_t & _val );
    WindowsPtr GetWindows ( );
    void PutWindows ( struct Windows * _val );
    short GetMinuteLabelDisplay ( );
    void PutMinuteLabelDisplay ( short _val );
    short GetHourLabelDisplay ( );
    void PutHourLabelDisplay ( short _val );
    short GetDayLabelDisplay ( );
    void PutDayLabelDisplay ( short _val );
    short GetWeekLabelDisplay ( );
    void PutWeekLabelDisplay ( short _val );
    short GetYearLabelDisplay ( );
    void PutYearLabelDisplay ( short _val );
    short GetMonthLabelDisplay ( );
    void PutMonthLabelDisplay ( short _val );
    VARIANT_BOOL GetSpaceBeforeTimeLabels ( );
    void PutSpaceBeforeTimeLabels ( VARIANT_BOOL _val );
    enum PjTaskFixedType GetDefaultTaskType ( );
    void PutDefaultTaskType ( enum PjTaskFixedType _val );
    VARIANT_BOOL GetDefaultEffortDriven ( );
    void PutDefaultEffortDriven ( VARIANT_BOOL _val );
    VARIANT_BOOL GetUseFYStartYear ( );
    void PutUseFYStartYear ( VARIANT_BOOL _val );
    VARIANT_BOOL GetAutoFilter ( );
    void PutAutoFilter ( VARIANT_BOOL _val );
    VARIANT_BOOL GetHonorConstraints ( );
    void PutHonorConstraints ( VARIANT_BOOL _val );
    VARIANT_BOOL GetMultipleCriticalPaths ( );
    void PutMultipleCriticalPaths ( VARIANT_BOOL _val );
    _variant_t GetLevelFromDate ( );
    void PutLevelFromDate ( const _variant_t & _val );
    _variant_t GetLevelToDate ( );
    void PutLevelToDate ( const _variant_t & _val );
    VARIANT_BOOL GetLevelEntireProject ( );
    void PutLevelEntireProject ( VARIANT_BOOL _val );
    enum PjAccrueAt GetDefaultFixedCostAccrual ( );
    void PutDefaultFixedCostAccrual ( enum PjAccrueAt _val );
    VARIANT_BOOL GetSpreadCostsToStatusDate ( );
    void PutSpreadCostsToStatusDate ( VARIANT_BOOL _val );
    VARIANT_BOOL GetSpreadPercentCompleteToStatusDate ( );
    void PutSpreadPercentCompleteToStatusDate ( VARIANT_BOOL _val );
    VARIANT_BOOL GetAutoCalcCosts ( );
    void PutAutoCalcCosts ( VARIANT_BOOL _val );
    VARIANT_BOOL GetShowExternalSuccessors ( );
    void PutShowExternalSuccessors ( VARIANT_BOOL _val );
    VARIANT_BOOL GetShowExternalPredecessors ( );
    void PutShowExternalPredecessors ( VARIANT_BOOL _val );
    VARIANT_BOOL GetShowCrossProjectLinksInfo ( );
    void PutShowCrossProjectLinksInfo ( VARIANT_BOOL _val );
    VARIANT_BOOL GetAcceptNewExternalData ( );
    void PutAcceptNewExternalData ( VARIANT_BOOL _val );
    enum PjPhoneticType GetPhoneticType ( );
    void PutPhoneticType ( enum PjPhoneticType _val );
    enum PjWorkgroupMessages GetWorkgroupMessages ( );
    void PutWorkgroupMessages ( enum PjWorkgroupMessages _val );
    _bstr_t GetServerURL ( );
    void PutServerURL ( _bstr_t _val );
    _bstr_t GetServerPath ( );
    void PutServerPath ( _bstr_t _val );
    VARIANT_BOOL GetReceiveNotifications ( );
    void PutReceiveNotifications ( VARIANT_BOOL _val );
    VARIANT_BOOL GetSendHyperlinkNote ( );
    void PutSendHyperlinkNote ( VARIANT_BOOL _val );
    enum PjColor GetHyperlinkColor ( );
    void PutHyperlinkColor ( enum PjColor _val );
    enum PjColor GetFollowedHyperlinkColor ( );
    void PutFollowedHyperlinkColor ( enum PjColor _val );
    VARIANT_BOOL GetUnderlineHyperlinks ( );
    void PutUnderlineHyperlinks ( VARIANT_BOOL _val );
    enum PjTeamStatusCompletedWork GetAskForCompletedWork ( );
    void PutAskForCompletedWork ( enum PjTeamStatusCompletedWork _val );
    VARIANT_BOOL GetTrackOvertimeWork ( );
    void PutTrackOvertimeWork ( VARIANT_BOOL _val );
    VARIANT_BOOL GetTeamMembersCanDeclineTasks ( );
    void PutTeamMembersCanDeclineTasks ( VARIANT_BOOL _val );
    VARIANT_BOOL GetShowEstimatedDuration ( );
    void PutShowEstimatedDuration ( VARIANT_BOOL _val );
    VARIANT_BOOL GetNewTasksEstimated ( );
    void PutNewTasksEstimated ( VARIANT_BOOL _val );
    VARIANT_BOOL GetWBSCodeGenerate ( );
    void PutWBSCodeGenerate ( VARIANT_BOOL _val );
    VARIANT_BOOL GetWBSVerifyUniqueness ( );
    void PutWBSVerifyUniqueness ( VARIANT_BOOL _val );
    VARIANT_BOOL GetUpdateProjOnSave ( );
    void PutUpdateProjOnSave ( VARIANT_BOOL _val );
    enum PjAuthentication GetServerIdentification ( );
    void PutServerIdentification ( enum PjAuthentication _val );
    VARIANT_BOOL GetVBASigned ( );
    void PutVBASigned ( VARIANT_BOOL _val );
    VARIANT_BOOL GetExpandDatabaseTimephasedData ( );
    void PutExpandDatabaseTimephasedData ( VARIANT_BOOL _val );
    _variant_t GetDatabaseProjectUniqueID ( );
    void PutDatabaseProjectUniqueID ( const _variant_t & _val );
    _variant_t GetActualWork ( );
    void PutActualWork ( const _variant_t & _val );
    _variant_t GetCost1 ( );
    void PutCost1 ( const _variant_t & _val );
    _variant_t GetCost2 ( );
    void PutCost2 ( const _variant_t & _val );
    _variant_t GetCost3 ( );
    void PutCost3 ( const _variant_t & _val );
    _variant_t GetBaselineWork ( );
    void PutBaselineWork ( const _variant_t & _val );
    _variant_t GetBaselineCost ( );
    void PutBaselineCost ( const _variant_t & _val );
    _variant_t GetFixedCost ( );
    void PutFixedCost ( const _variant_t & _val );
    _bstr_t GetWBS ( );
    void PutWBS ( _bstr_t _val );
    _variant_t GetDelay ( );
    void PutDelay ( const _variant_t & _val );
    _variant_t GetPriority ( );
    void PutPriority ( const _variant_t & _val );
    _variant_t GetDuration1 ( );
    void PutDuration1 ( const _variant_t & _val );
    _variant_t GetDuration2 ( );
    void PutDuration2 ( const _variant_t & _val );
    _variant_t GetDuration3 ( );
    void PutDuration3 ( const _variant_t & _val );
    _variant_t GetPercentWorkComplete ( );
    void PutPercentWorkComplete ( const _variant_t & _val );
    _variant_t GetFixedDuration ( );
    void PutFixedDuration ( const _variant_t & _val );
    _variant_t GetBaselineStart ( );
    void PutBaselineStart ( const _variant_t & _val );
    _variant_t GetBaselineFinish ( );
    void PutBaselineFinish ( const _variant_t & _val );
    _bstr_t GetText1 ( );
    void PutText1 ( _bstr_t _val );
    _variant_t GetStart1 ( );
    void PutStart1 ( const _variant_t & _val );
    _variant_t GetFinish1 ( );
    void PutFinish1 ( const _variant_t & _val );
    _bstr_t GetText2 ( );
    void PutText2 ( _bstr_t _val );
    _variant_t GetStart2 ( );
    void PutStart2 ( const _variant_t & _val );
    _variant_t GetFinish2 ( );
    void PutFinish2 ( const _variant_t & _val );
    _bstr_t GetText3 ( );
    void PutText3 ( _bstr_t _val );
    _variant_t GetStart3 ( );
    void PutStart3 ( const _variant_t & _val );
    _variant_t GetFinish3 ( );
    void PutFinish3 ( const _variant_t & _val );
    _bstr_t GetText4 ( );
    void PutText4 ( _bstr_t _val );
    _variant_t GetStart4 ( );
    void PutStart4 ( const _variant_t & _val );
    _variant_t GetFinish4 ( );
    void PutFinish4 ( const _variant_t & _val );
    _bstr_t GetText5 ( );
    void PutText5 ( _bstr_t _val );
    _variant_t GetStart5 ( );
    void PutStart5 ( const _variant_t & _val );
    _variant_t GetFinish5 ( );
    void PutFinish5 ( const _variant_t & _val );
    _bstr_t GetText6 ( );
    void PutText6 ( _bstr_t _val );
    _bstr_t GetText7 ( );
    void PutText7 ( _bstr_t _val );
    _bstr_t GetText8 ( );
    void PutText8 ( _bstr_t _val );
    _bstr_t GetText9 ( );
    void PutText9 ( _bstr_t _val );
    _bstr_t GetText10 ( );
    void PutText10 ( _bstr_t _val );
    _variant_t GetMarked ( );
    void PutMarked ( const _variant_t & _val );
    _variant_t GetFlag1 ( );
    void PutFlag1 ( const _variant_t & _val );
    _variant_t GetFlag2 ( );
    void PutFlag2 ( const _variant_t & _val );
    _variant_t GetFlag3 ( );
    void PutFlag3 ( const _variant_t & _val );
    _variant_t GetFlag4 ( );
    void PutFlag4 ( const _variant_t & _val );
    _variant_t GetFlag5 ( );
    void PutFlag5 ( const _variant_t & _val );
    _variant_t GetFlag6 ( );
    void PutFlag6 ( const _variant_t & _val );
    _variant_t GetFlag7 ( );
    void PutFlag7 ( const _variant_t & _val );
    _variant_t GetFlag8 ( );
    void PutFlag8 ( const _variant_t & _val );
    _variant_t GetFlag9 ( );
    void PutFlag9 ( const _variant_t & _val );
    _variant_t GetFlag10 ( );
    void PutFlag10 ( const _variant_t & _val );
    _variant_t GetRollup ( );
    void PutRollup ( const _variant_t & _val );
    double GetNumber1 ( );
    void PutNumber1 ( double _val );
    double GetNumber2 ( );
    void PutNumber2 ( double _val );
    double GetNumber3 ( );
    void PutNumber3 ( double _val );
    double GetNumber4 ( );
    void PutNumber4 ( double _val );
    double GetNumber5 ( );
    void PutNumber5 ( double _val );
    _bstr_t GetNotes ( );
    void PutNotes ( _bstr_t _val );
    _bstr_t GetContact ( );
    void PutContact ( _bstr_t _val );
    _variant_t GetHideBar ( );
    void PutHideBar ( const _variant_t & _val );
    _bstr_t GetCurrencySymbol ( );
    void PutCurrencySymbol ( _bstr_t _val );
    enum PjPlacement GetCurrencySymbolPosition ( );
    void PutCurrencySymbolPosition ( enum PjPlacement _val );
    short GetCurrencyDigits ( );
    void PutCurrencyDigits ( short _val );
    long GetShowCriticalSlack ( );
    void PutShowCriticalSlack ( long _val );
    enum PjUnit GetDefaultDurationUnits ( );
    void PutDefaultDurationUnits ( enum PjUnit _val );
    enum PjUnit GetDefaultWorkUnits ( );
    void PutDefaultWorkUnits ( enum PjUnit _val );
    VARIANT_BOOL GetStartOnCurrentDate ( );
    void PutStartOnCurrentDate ( VARIANT_BOOL _val );
    VARIANT_BOOL GetAutoTrack ( );
    void PutAutoTrack ( VARIANT_BOOL _val );
    VARIANT_BOOL GetAutoSplitTasks ( );
    void PutAutoSplitTasks ( VARIANT_BOOL _val );
    VARIANT_BOOL GetAutoLinkTasks ( );
    void PutAutoLinkTasks ( VARIANT_BOOL _val );
    _variant_t GetDefaultStartTime ( );
    void PutDefaultStartTime ( const _variant_t & _val );
    _variant_t GetDefaultFinishTime ( );
    void PutDefaultFinishTime ( const _variant_t & _val );
    double GetHoursPerDay ( );
    void PutHoursPerDay ( double _val );
    double GetHoursPerWeek ( );
    void PutHoursPerWeek ( double _val );
    double GetDaysPerMonth ( );
    void PutDaysPerMonth ( double _val );
    _variant_t GetDefaultResourceStandardRate ( );
    void PutDefaultResourceStandardRate ( const _variant_t & _val );
    _variant_t GetDefaultResourceOvertimeRate ( );
    void PutDefaultResourceOvertimeRate ( const _variant_t & _val );
    VARIANT_BOOL GetDisplayProjectSummaryTask ( );
    void PutDisplayProjectSummaryTask ( VARIANT_BOOL _val );
    VARIANT_BOOL GetAutoAddResources ( );
    void PutAutoAddResources ( VARIANT_BOOL _val );
    enum PjWeekday GetStartWeekOn ( );
    void PutStartWeekOn ( enum PjWeekday _val );
    enum PjMonth GetStartYearIn ( );
    void PutStartYearIn ( enum PjMonth _val );
    VARIANT_BOOL GetAllowTaskDelegation ( );
    void PutAllowTaskDelegation ( VARIANT_BOOL _val );
    _bstr_t GetName ( );
    void PutName ( _bstr_t _val );
    enum PjPublishInformationOnSave GetPublishInformationOnSave ( );
    void PutPublishInformationOnSave ( enum PjPublishInformationOnSave _val );
    _bstr_t GetProjectGuideFunctionalLayoutPage ( );
    void PutProjectGuideFunctionalLayoutPage ( _bstr_t _val );
    _bstr_t GetProjectGuideSaveBuffer ( );
    void PutProjectGuideSaveBuffer ( _bstr_t _val );
    _bstr_t GetProjectGuideContent ( );
    void PutProjectGuideContent ( _bstr_t _val );
    VARIANT_BOOL GetProjectServerUsedForTracking ( );
    void PutProjectServerUsedForTracking ( VARIANT_BOOL _val );
    enum PjProjectServerTrackingMethod GetTrackingMethod ( );
    void PutTrackingMethod ( enum PjProjectServerTrackingMethod _val );
    VARIANT_BOOL GetMoveCompleted ( );
    void PutMoveCompleted ( VARIANT_BOOL _val );
    VARIANT_BOOL GetAndMoveRemaining ( );
    void PutAndMoveRemaining ( VARIANT_BOOL _val );
    VARIANT_BOOL GetMoveRemaining ( );
    void PutMoveRemaining ( VARIANT_BOOL _val );
    VARIANT_BOOL GetAndMoveCompleted ( );
    void PutAndMoveCompleted ( VARIANT_BOOL _val );
    enum PjEarnedValueMethod GetDefaultEarnedValueMethod ( );
    void PutDefaultEarnedValueMethod ( enum PjEarnedValueMethod _val );
    enum PjBaselines GetEarnedValueBaseline ( );
    void PutEarnedValueBaseline ( enum PjBaselines _val );
    VARIANT_BOOL GetProjectGuideUseDefaultFunctionalLayoutPage ( );
    void PutProjectGuideUseDefaultFunctionalLayoutPage ( VARIANT_BOOL _val );
    VARIANT_BOOL GetProjectGuideUseDefaultContent ( );
    void PutProjectGuideUseDefaultContent ( VARIANT_BOOL _val );
};

struct __declspec(uuid("f81dd3c0-5089-11cf-a49d-00aa00574c74"))
_EProjectDoc : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    // Methods:
    HRESULT Open (
        struct _IProjectDoc * pj );
    HRESULT BeforeClose (
        struct _IProjectDoc * pj );
    HRESULT BeforeSave (
        struct _IProjectDoc * pj );
    HRESULT BeforePrint (
        struct _IProjectDoc * pj );
    HRESULT Calculate (
        struct _IProjectDoc * pj );
    HRESULT Change (
        struct _IProjectDoc * pj );
    HRESULT Activate (
        struct _IProjectDoc * pj );
    HRESULT Deactivate (
        struct _IProjectDoc * pj );
};

struct __declspec(uuid("1019a320-508a-11cf-a49d-00aa00574c74"))
Project;
    // [ default ] dispinterface _IProjectDoc
    // [ default, source ] dispinterface _EProjectDoc

struct __declspec(uuid("00020b01-0000-0000-c000-000000000046"))
Projects : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetItem))
    _IProjectDocPtr Item[];
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetApplication))
    _MSProjectPtr Application;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _MSProjectPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    _IProjectDocPtr Add (
        const _variant_t & DisplayProjectInfo = vtMissing,
        const _variant_t & Template = vtMissing,
        const _variant_t & FileNewDialog = vtMissing );
    _IProjectDocPtr GetItem (
        const _variant_t & Index );
    IUnknownPtr Get_NewEnum ( );
};

struct __declspec(uuid("78e9f620-ebc0-11cf-a523-00a0c904de55"))
_Global : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetAnswerWizard))
 //   AnswerWizardPtr AnswerWizard;
//    __declspec(property(get=GetOperatingSystem))
    _bstr_t OperatingSystem;
    __declspec(property(get=GetProjects))
    ProjectsPtr Projects;
    __declspec(property(get=GetWindows))
    WindowsPtr Windows;
    __declspec(property(get=GetCommandBars))
 //   _CommandBarsPtr CommandBars;
//    __declspec(property(get=GetFileFormatID))
    _bstr_t FileFormatID[][][];
    __declspec(property(get=GetFileBuildID))
    _bstr_t FileBuildID[][][];
    __declspec(property(get=GetCOMAddIns))
 //   COMAddInsPtr COMAddIns;
//    __declspec(property(get=GetApplication,put=PutApplication))
    _MSProjectPtr Application;
    __declspec(property(get=GetParent,put=PutParent))
    _MSProjectPtr Parent;
    __declspec(property(get=GetActiveSelection,put=PutActiveSelection))
    SelectionPtr ActiveSelection;
    __declspec(property(get=GetActiveCell,put=PutActiveCell))
    CellPtr ActiveCell;
    __declspec(property(get=GetActiveProject,put=PutActiveProject))
    _IProjectDocPtr ActiveProject;
    __declspec(property(get=GetActiveWindow,put=PutActiveWindow))
    WindowPtr ActiveWindow;
    __declspec(property(get=GetSupportsMultipleDocuments,put=PutSupportsMultipleDocuments))
    VARIANT_BOOL SupportsMultipleDocuments;
    __declspec(property(get=GetSupportsMultipleWindows,put=PutSupportsMultipleWindows))
    VARIANT_BOOL SupportsMultipleWindows;
    __declspec(property(get=GetVisible,put=PutVisible))
    VARIANT_BOOL Visible;
    __declspec(property(get=GetPathSeparator,put=PutPathSeparator))
    _bstr_t PathSeparator;
    __declspec(property(get=GetCaption,put=PutCaption))
    _bstr_t Caption;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetPath,put=PutPath))
    _bstr_t Path;
    __declspec(property(get=GetVersion,put=PutVersion))
    _bstr_t Version;
    __declspec(property(get=GetWindowState,put=PutWindowState))
    enum PjWindowState WindowState;
    __declspec(property(get=GetDateOrder,put=PutDateOrder))
    enum PjDateOrder DateOrder;
    __declspec(property(get=GetDateSeparator,put=PutDateSeparator))
    _bstr_t DateSeparator;
    __declspec(property(get=GetThousandSeparator,put=PutThousandSeparator))
    _bstr_t ThousandSeparator;
    __declspec(property(get=GetDecimalSeparator,put=PutDecimalSeparator))
    _bstr_t DecimalSeparator;
    __declspec(property(get=GetListSeparator,put=PutListSeparator))
    _bstr_t ListSeparator;
    __declspec(property(get=GetTimeSeparator,put=PutTimeSeparator))
    _bstr_t TimeSeparator;
    __declspec(property(get=GetTwelveHourTimeFormat,put=PutTwelveHourTimeFormat))
    VARIANT_BOOL TwelveHourTimeFormat;
    __declspec(property(get=GetAMText,put=PutAMText))
    _bstr_t AMText;
    __declspec(property(get=GetPMText,put=PutPMText))
    _bstr_t PMText;
    __declspec(property(get=GetDefaultView,put=PutDefaultView))
    _bstr_t DefaultView;
    __declspec(property(get=GetDisplayStatusBar,put=PutDisplayStatusBar))
    VARIANT_BOOL DisplayStatusBar;
    __declspec(property(get=GetDisplayAlerts,put=PutDisplayAlerts))
    VARIANT_BOOL DisplayAlerts;
    __declspec(property(get=GetDisplayEntryBar,put=PutDisplayEntryBar))
    VARIANT_BOOL DisplayEntryBar;
    __declspec(property(get=GetDisplayScrollBars,put=PutDisplayScrollBars))
    VARIANT_BOOL DisplayScrollBars;
    __declspec(property(get=GetDisplayWindowsInTaskbar,put=PutDisplayWindowsInTaskbar))
    VARIANT_BOOL DisplayWindowsInTaskbar;
    __declspec(property(get=GetCalculation,put=PutCalculation))
    enum PjCalculation Calculation;
    __declspec(property(get=GetAutoLevel,put=PutAutoLevel))
    VARIANT_BOOL AutoLevel;
    __declspec(property(get=GetAutoClearLeveling,put=PutAutoClearLeveling))
    VARIANT_BOOL AutoClearLeveling;
    __declspec(property(get=GetLevelWithinSlack,put=PutLevelWithinSlack))
    VARIANT_BOOL LevelWithinSlack;
    __declspec(property(get=GetLevelOrder,put=PutLevelOrder))
    enum PjLevelOrder LevelOrder;
    __declspec(property(get=GetLevelPeriodBasis,put=PutLevelPeriodBasis))
    enum PjLevelPeriodBasis LevelPeriodBasis;
    __declspec(property(get=GetLevelIndividualAssignments,put=PutLevelIndividualAssignments))
    VARIANT_BOOL LevelIndividualAssignments;
    __declspec(property(get=GetLevelingCanSplit,put=PutLevelingCanSplit))
    VARIANT_BOOL LevelingCanSplit;
    __declspec(property(get=GetMoveAfterReturn,put=PutMoveAfterReturn))
    VARIANT_BOOL MoveAfterReturn;
    __declspec(property(get=GetDisplayScheduleMessages,put=PutDisplayScheduleMessages))
    VARIANT_BOOL DisplayScheduleMessages;
    __declspec(property(get=GetStartWeekOn,put=PutStartWeekOn))
    enum PjWeekday StartWeekOn;
    __declspec(property(get=GetStartYearIn,put=PutStartYearIn))
    enum PjMonth StartYearIn;
    __declspec(property(get=GetCellDragAndDrop,put=PutCellDragAndDrop))
    VARIANT_BOOL CellDragAndDrop;
    __declspec(property(get=GetUserName,put=PutUserName))
    _bstr_t UserName;
    __declspec(property(get=GetDisplayNotesIndicator,put=PutDisplayNotesIndicator))
    VARIANT_BOOL DisplayNotesIndicator;
    __declspec(property(get=GetAskToUpdateLinks,put=PutAskToUpdateLinks))
    VARIANT_BOOL AskToUpdateLinks;
    __declspec(property(get=GetDisplayPlanningWizard,put=PutDisplayPlanningWizard))
    VARIANT_BOOL DisplayPlanningWizard;
    __declspec(property(get=GetDisplayWizardUsage,put=PutDisplayWizardUsage))
    VARIANT_BOOL DisplayWizardUsage;
    __declspec(property(get=GetDisplayWizardErrors,put=PutDisplayWizardErrors))
    VARIANT_BOOL DisplayWizardErrors;
    __declspec(property(get=GetDisplayWizardScheduling,put=PutDisplayWizardScheduling))
    VARIANT_BOOL DisplayWizardScheduling;
    __declspec(property(get=GetShowTipOfDay,put=PutShowTipOfDay))
    VARIANT_BOOL ShowTipOfDay;
    __declspec(property(get=GetShowToolTips,put=PutShowToolTips))
    VARIANT_BOOL ShowToolTips;
    __declspec(property(get=GetShowWelcome,put=PutShowWelcome))
    VARIANT_BOOL ShowWelcome;
    __declspec(property(get=GetLoadLastFile,put=PutLoadLastFile))
    VARIANT_BOOL LoadLastFile;
    __declspec(property(get=GetPromptForSummaryInfo,put=PutPromptForSummaryInfo))
    VARIANT_BOOL PromptForSummaryInfo;
    __declspec(property(get=GetDisplayOLEIndicator,put=PutDisplayOLEIndicator))
    VARIANT_BOOL DisplayOLEIndicator;
    __declspec(property(get=GetDefaultDateFormat,put=PutDefaultDateFormat))
    enum PjDateFormat DefaultDateFormat;
    __declspec(property(get=GetDayLeadingZero,put=PutDayLeadingZero))
    VARIANT_BOOL DayLeadingZero;
    __declspec(property(get=GetMonthLeadingZero,put=PutMonthLeadingZero))
    VARIANT_BOOL MonthLeadingZero;
    __declspec(property(get=GetTimeLeadingZero,put=PutTimeLeadingZero))
    VARIANT_BOOL TimeLeadingZero;
    __declspec(property(get=GetCopyResourceUsageHeader,put=PutCopyResourceUsageHeader))
    VARIANT_BOOL CopyResourceUsageHeader;
    __declspec(property(get=GetRecentFilesMaximum,put=PutRecentFilesMaximum))
    long RecentFilesMaximum;
    __declspec(property(get=GetDisplayRecentFiles,put=PutDisplayRecentFiles))
    VARIANT_BOOL DisplayRecentFiles;
    __declspec(property(get=GetMacroVirusProtection,put=PutMacroVirusProtection))
    VARIANT_BOOL MacroVirusProtection;
    __declspec(property(get=GetShowAssignmentUnitsAs,put=PutShowAssignmentUnitsAs))
    enum PjAssignmentUnits ShowAssignmentUnitsAs;
    __declspec(property(get=GetAutomaticallyFillPhoneticFields,put=PutAutomaticallyFillPhoneticFields))
    VARIANT_BOOL AutomaticallyFillPhoneticFields;
    __declspec(property(get=GetDefaultAutoFilter,put=PutDefaultAutoFilter))
    VARIANT_BOOL DefaultAutoFilter;
    __declspec(property(get=GetShowEstimatedDuration,put=PutShowEstimatedDuration))
    VARIANT_BOOL ShowEstimatedDuration;
    __declspec(property(get=GetNewTasksEstimated,put=PutNewTasksEstimated))
    VARIANT_BOOL NewTasksEstimated;
    __declspec(property(get=GetAssistant,put=PutAssistant))
//    AssistantPtr Assistant;
//    __declspec(property(get=GetDisplayViewBar,put=PutDisplayViewBar))
    VARIANT_BOOL DisplayViewBar;
    __declspec(property(get=GetVBE,put=PutVBE))
//    VBEPtr VBE;
//    __declspec(property(get=GetEnableCancelKey,put=PutEnableCancelKey))
    enum PjEnableCancelKey EnableCancelKey;
    __declspec(property(get=GetUserControl,put=PutUserControl))
    VARIANT_BOOL UserControl;
    __declspec(property(get=GetUsableWidth,put=PutUsableWidth))
    double UsableWidth;
    __declspec(property(get=GetUsableHeight,put=PutUsableHeight))
    double UsableHeight;
    __declspec(property(get=GetScreenUpdating,put=PutScreenUpdating))
    VARIANT_BOOL ScreenUpdating;
    __declspec(property(get=GetDisplayProjectGuide,put=PutDisplayProjectGuide))
    VARIANT_BOOL DisplayProjectGuide;
    __declspec(property(get=GetEnterpriseAllowLocalBaseCalendars,put=PutEnterpriseAllowLocalBaseCalendars))
    VARIANT_BOOL EnterpriseAllowLocalBaseCalendars;
    __declspec(property(get=GetEdition,put=PutEdition))
    enum PjEditionType Edition;
    __declspec(property(get=GetProfiles,put=PutProfiles))
    ProfilesPtr Profiles;
    __declspec(property(get=GetGlobalBaseCalendars,put=PutGlobalBaseCalendars))
    CalendarsPtr GlobalBaseCalendars;
    __declspec(property(get=GetGlobalViews,put=PutGlobalViews))
    ViewsPtr GlobalViews;
    __declspec(property(get=GetGlobalViewsSingle,put=PutGlobalViewsSingle))
    ViewsSinglePtr GlobalViewsSingle;
    __declspec(property(get=GetGlobalViewsCombination,put=PutGlobalViewsCombination))
    ViewsCombinationPtr GlobalViewsCombination;
    __declspec(property(get=GetGlobalTaskTables,put=PutGlobalTaskTables))
    TablesPtr GlobalTaskTables;
    __declspec(property(get=GetGlobalResourceTables,put=PutGlobalResourceTables))
    TablesPtr GlobalResourceTables;
    __declspec(property(get=GetGlobalTaskFilters,put=PutGlobalTaskFilters))
    FiltersPtr GlobalTaskFilters;
    __declspec(property(get=GetGlobalResourceFilters,put=PutGlobalResourceFilters))
    FiltersPtr GlobalResourceFilters;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    WindowsPtr GetWindows ( );
//    _CommandBarsPtr GetCommandBars ( );
//    AnswerWizardPtr GetAnswerWizard ( );
    ProjectsPtr GetProjects ( );
    HRESULT Quit (
        enum PjSaveType SaveChanges );
    _bstr_t GetOperatingSystem ( );
    _variant_t DateSubtract (
        const _variant_t & FinishDate,
        const _variant_t & Duration,
        const _variant_t & Calendar = vtMissing );
    _bstr_t DurationFormat (
        const _variant_t & Duration,
        const _variant_t & Units = vtMissing );
    _variant_t DurationValue (
        _bstr_t Duration );
    _variant_t DateFormat (
        const _variant_t & Date,
        const _variant_t & Format = vtMissing );
    HRESULT MailLogon (
        const _variant_t & Name = vtMissing,
        const _variant_t & Password = vtMissing,
        const _variant_t & DownloadNewMail = vtMissing );
    HRESULT MailLogoff ( );
    _variant_t MailSession ( );
    _variant_t MailSystem ( );
    _variant_t TimescaledData (
        long TaskID,
        long ResourceID,
        const _variant_t & StartDate,
        const _variant_t & EndDate,
        enum PjTimescaledData Type,
        enum PjTimescaleUnit TimeScaleUnit,
        const _variant_t & Count = vtMissing );
    _bstr_t CustomFieldGetName (
        enum PjCustomField FieldID );
    HRESULT Run (
        _bstr_t Name,
        const _variant_t & Arg1 = vtMissing,
        const _variant_t & Arg2 = vtMissing,
        const _variant_t & Arg3 = vtMissing,
        const _variant_t & Arg4 = vtMissing,
        const _variant_t & Arg5 = vtMissing,
        const _variant_t & Arg6 = vtMissing,
        const _variant_t & Arg7 = vtMissing,
        const _variant_t & Arg8 = vtMissing,
        const _variant_t & Arg9 = vtMissing,
        const _variant_t & Arg10 = vtMissing,
        const _variant_t & Arg11 = vtMissing,
        const _variant_t & Arg12 = vtMissing,
        const _variant_t & Arg13 = vtMissing,
        const _variant_t & Arg14 = vtMissing,
        const _variant_t & Arg15 = vtMissing,
        const _variant_t & Arg16 = vtMissing,
        const _variant_t & Arg17 = vtMissing,
        const _variant_t & Arg18 = vtMissing,
        const _variant_t & Arg19 = vtMissing,
        const _variant_t & Arg20 = vtMissing,
        const _variant_t & Arg21 = vtMissing,
        const _variant_t & Arg22 = vtMissing,
        const _variant_t & Arg23 = vtMissing,
        const _variant_t & Arg24 = vtMissing,
        const _variant_t & Arg25 = vtMissing,
        const _variant_t & Arg26 = vtMissing,
        const _variant_t & Arg27 = vtMissing,
        const _variant_t & Arg28 = vtMissing,
        const _variant_t & Arg29 = vtMissing,
        const _variant_t & Arg30 = vtMissing );
    _bstr_t GetFileFormatID (
        _bstr_t Name,
        const _variant_t & UserID = vtMissing,
        const _variant_t & DatabasePassWord = vtMissing );
    _bstr_t GetFileBuildID (
        _bstr_t Name,
        const _variant_t & UserID = vtMissing,
        const _variant_t & DatabasePassWord = vtMissing );
//    COMAddInsPtr GetCOMAddIns ( );
    long BoxGetXPosition (
        long TaskID,
        const _variant_t & ProjectName = vtMissing );
    long BoxGetYPosition (
        long TaskID,
        const _variant_t & ProjectName = vtMissing );
    _bstr_t CustomFieldGetFormula (
        enum PjCustomField FieldID );
    _bstr_t CustomFieldValueListGetItem (
        enum PjCustomField FieldID,
        enum PjValueListItem Item,
        long Index );
    HRESULT GoalAreaHighlight (
        long goalArea );
    HRESULT SetSidepaneStateButton (
        VARIANT_BOOL DisplayState );
    HRESULT GoalAreaTaskHighlight (
        long TaskID );
    enum PjField FieldNameToFieldConstant (
        _bstr_t FieldName,
        enum PjFieldType FieldType );
    _bstr_t FieldConstantToFieldName (
        enum PjField Field );
    _bstr_t GetProjectServerSettings (
        _bstr_t RequestXML,
        const _variant_t & Project = vtMissing );
    HRESULT UnloadWebBrowserControl (
        VARIANT * Window = &vtMissing );
    enum PjServerVersionInfo GetProjectServerVersion (
        _bstr_t ServerURL );
    _variant_t UpdateFromProjectServer (
        _bstr_t DataFile );
    long LocaleID ( );
    HRESULT EnterpriseMakeServerURLTrusted ( );
    VARIANT_BOOL IsURLTrusted (
        _bstr_t URL );
    HRESULT PublishNewAndChangedAssignments (
        VARIANT_BOOL ShowDialog,
        enum PjPublishScope ItemsScope,
        VARIANT_BOOL NotifyResources,
        const _variant_t & NotificationText = vtMissing );
    HRESULT PublishProjectPlan (
        VARIANT_BOOL ShowDialog,
        VARIANT_BOOL PublishFullPlan );
    HRESULT PublishAllInformation ( );
    HRESULT RequestProgressInformation (
        VARIANT_BOOL ShowDialog,
        enum PjPublishScope ItemsScope,
        VARIANT_BOOL NotifyTaskLead,
        const _variant_t & NotificationText = vtMissing,
        const _variant_t & ReportingPeriodFrom = vtMissing,
        const _variant_t & ReportingPeriodTo = vtMissing );
    HRESULT RepublishAssignments (
        VARIANT_BOOL ShowDialog,
        enum PjPublishScope ItemsScope,
        VARIANT_BOOL NotifyResources,
        VARIANT_BOOL OverwriteActuals,
        VARIANT_BOOL BecomeManager,
        const _variant_t & NotificationText = vtMissing );
    long RegisterProject (
        VARIANT_BOOL WaitForCompletion );
    VARIANT_BOOL SaveProjectIfDirty (
        _bstr_t AlertText );
    VARIANT_BOOL Message (
        _bstr_t Message,
        enum PjMessageType Type,
        const _variant_t & YesText = vtMissing,
        const _variant_t & NoText = vtMissing );
    VARIANT_BOOL Alerts (
        const _variant_t & Show = vtMissing );
    VARIANT_BOOL FileNew (
        const _variant_t & SummaryInfo = vtMissing,
        const _variant_t & Template = vtMissing,
        const _variant_t & FileNewDialog = vtMissing,
        const _variant_t & FileNewWorkpane = vtMissing );
    VARIANT_BOOL FileProperties ( );
    VARIANT_BOOL FileOpen (
        const _variant_t & Name,
        const _variant_t & ReadOnly,
        const _variant_t & Merge,
        const _variant_t & TaskInformation,
        const _variant_t & Table,
        const _variant_t & Sheet,
        const _variant_t & NoAuto,
        const _variant_t & UserID,
        const _variant_t & DatabasePassWord,
        const _variant_t & FormatID,
        const _variant_t & Map,
        enum PjPoolOpen openPool,
        const _variant_t & Password = vtMissing,
        const _variant_t & WriteResPassword = vtMissing,
        const _variant_t & IgnoreReadOnlyRecommended = vtMissing,
        const _variant_t & XMLName = vtMissing );
    VARIANT_BOOL Zoom ( );
    VARIANT_BOOL ZoomTimescale (
        const _variant_t & Duration = vtMissing,
        const _variant_t & Entire = vtMissing,
        const _variant_t & Selection = vtMissing,
        const _variant_t & Reset = vtMissing );
    VARIANT_BOOL BoxZoom (
        const _variant_t & Percent = vtMissing,
        const _variant_t & Entire = vtMissing );
    VARIANT_BOOL FileClose (
        enum PjSaveType Save,
        const _variant_t & NoAuto = vtMissing );
    VARIANT_BOOL FileCloseAll (
        enum PjSaveType Save );
    VARIANT_BOOL ResourceSharing (
        const _variant_t & Share = vtMissing,
        const _variant_t & Name = vtMissing,
        const _variant_t & Pool = vtMissing );
    VARIANT_BOOL FileSave ( );
    VARIANT_BOOL FileSaveAs (
        const _variant_t & Name,
        enum PjFileFormat Format,
        const _variant_t & Backup = vtMissing,
        const _variant_t & ReadOnly = vtMissing,
        const _variant_t & TaskInformation = vtMissing,
        const _variant_t & Filtered = vtMissing,
        const _variant_t & Table = vtMissing,
        const _variant_t & UserID = vtMissing,
        const _variant_t & DatabasePassWord = vtMissing,
        const _variant_t & FormatID = vtMissing,
        const _variant_t & Map = vtMissing,
        const _variant_t & Password = vtMissing,
        const _variant_t & WriteResPassword = vtMissing,
        const _variant_t & ClearBaseline = vtMissing,
        const _variant_t & ClearActuals = vtMissing,
        const _variant_t & ClearResourceRates = vtMissing,
        const _variant_t & ClearFixedCosts = vtMissing,
        const _variant_t & XMLName = vtMissing,
        const _variant_t & ClearConfirmed = vtMissing );
    VARIANT_BOOL FileSaveWorkspace (
        const _variant_t & Name = vtMissing );
    VARIANT_BOOL FilePrint (
        const _variant_t & FromPage = vtMissing,
        const _variant_t & ToPage = vtMissing,
        const _variant_t & PageBreaks = vtMissing,
        const _variant_t & Draft = vtMissing,
        const _variant_t & Copies = vtMissing,
        const _variant_t & FromDate = vtMissing,
        const _variant_t & ToDate = vtMissing,
        const _variant_t & OnePageWide = vtMissing,
        const _variant_t & Preview = vtMissing,
        const _variant_t & Color = vtMissing,
        const _variant_t & ShowIEPrintDialog = vtMissing );
    VARIANT_BOOL ReportPrint (
        const _variant_t & Name = vtMissing,
        const _variant_t & FromPage = vtMissing,
        const _variant_t & ToPage = vtMissing,
        const _variant_t & PageBreaks = vtMissing,
        const _variant_t & Draft = vtMissing,
        const _variant_t & Copies = vtMissing,
        const _variant_t & FromDate = vtMissing,
        const _variant_t & ToDate = vtMissing,
        const _variant_t & Preview = vtMissing,
        const _variant_t & Color = vtMissing );
    VARIANT_BOOL FilePrintPreview ( );
    VARIANT_BOOL ReportPrintPreview (
        const _variant_t & Name = vtMissing );
    VARIANT_BOOL FilePrintSetup (
        const _variant_t & Printer = vtMissing );
    VARIANT_BOOL FilePageSetup (
        const _variant_t & Name = vtMissing );
    VARIANT_BOOL FilePageSetupPage (
        const _variant_t & Name,
        const _variant_t & Portrait,
        const _variant_t & PercentScale,
        const _variant_t & PagesTall,
        const _variant_t & PagesWide,
        enum PjPaperSize PaperSize,
        const _variant_t & FirstPageNumber = vtMissing );
    VARIANT_BOOL FilePageSetupMargins (
        const _variant_t & Name = vtMissing,
        const _variant_t & Top = vtMissing,
        const _variant_t & Bottom = vtMissing,
        const _variant_t & Left = vtMissing,
        const _variant_t & Right = vtMissing,
        const _variant_t & Borders = vtMissing );
    VARIANT_BOOL FilePageSetupHeader (
        const _variant_t & Name,
        enum PjAlignment Alignment,
        const _variant_t & Text = vtMissing );
    VARIANT_BOOL FilePageSetupFooter (
        const _variant_t & Name,
        enum PjAlignment Alignment,
        const _variant_t & Text = vtMissing );
    VARIANT_BOOL FilePageSetupLegend (
        const _variant_t & Name,
        const _variant_t & TextWidth,
        const _variant_t & LegendOn,
        enum PjAlignment Alignment,
        const _variant_t & Text,
        const _variant_t & LabelFontName,
        const _variant_t & LabelFontSize,
        const _variant_t & LabelFontBold,
        const _variant_t & LabelFontItalic,
        const _variant_t & LabelFontUnderline,
        enum PjColor LabelFontColor );
    VARIANT_BOOL FilePageSetupView (
        const _variant_t & Name = vtMissing,
        const _variant_t & AllSheetColumns = vtMissing,
        const _variant_t & RepeatColumns = vtMissing,
        const _variant_t & PrintNotes = vtMissing,
        const _variant_t & PrintBlankPages = vtMissing,
        const _variant_t & BestPageFitTimescale = vtMissing,
        const _variant_t & PrintColumnTotals = vtMissing,
        const _variant_t & PrintRowTotals = vtMissing );
    VARIANT_BOOL FilePageSetupCalendar (
        const _variant_t & Name = vtMissing,
        const _variant_t & MonthsPerPage = vtMissing,
        const _variant_t & WeeksPerPage = vtMissing,
        const _variant_t & ScreenWeekHeight = vtMissing,
        const _variant_t & OnlyDaysInMonth = vtMissing,
        const _variant_t & OnlyWeeksInMonth = vtMissing,
        const _variant_t & MonthPreviews = vtMissing,
        const _variant_t & MonthTitle = vtMissing,
        const _variant_t & AdditionalTasks = vtMissing,
        const _variant_t & GroupAdditionalTasks = vtMissing,
        const _variant_t & PrintNotes = vtMissing );
    VARIANT_BOOL FilePageSetupCalendarText (
        const _variant_t & Name = vtMissing,
        const _variant_t & Item = vtMissing,
        const _variant_t & Font = vtMissing,
        const _variant_t & Size = vtMissing,
        const _variant_t & Bold = vtMissing,
        const _variant_t & Italic = vtMissing,
        const _variant_t & Underline = vtMissing,
        const _variant_t & Color = vtMissing );
    VARIANT_BOOL MailOpen (
        const _variant_t & Any = vtMissing );
    VARIANT_BOOL MailSend (
        const _variant_t & To = vtMissing,
        const _variant_t & Cc = vtMissing,
        const _variant_t & Subject = vtMissing,
        const _variant_t & Body = vtMissing,
        const _variant_t & Enclosures = vtMissing,
        const _variant_t & IncludeDocument = vtMissing,
        const _variant_t & ReturnReceipt = vtMissing,
        const _variant_t & Bcc = vtMissing,
        const _variant_t & Urgent = vtMissing,
        const _variant_t & SaveCopy = vtMissing,
        const _variant_t & AddRecipient = vtMissing );
    VARIANT_BOOL MailSendScheduleNote (
        const _variant_t & Manager = vtMissing,
        const _variant_t & Resources = vtMissing,
        const _variant_t & TaskContacts = vtMissing,
        const _variant_t & Selection = vtMissing,
        const _variant_t & IncludeDocument = vtMissing,
        const _variant_t & IncludePicture = vtMissing,
        const _variant_t & Body = vtMissing,
        const _variant_t & Subject = vtMissing );
    VARIANT_BOOL MailPostDocument ( );
    VARIANT_BOOL ODBCManageDataSources ( );
    VARIANT_BOOL ODBCCreateDataSource ( );
    VARIANT_BOOL MailRoutingSlip (
        const _variant_t & To = vtMissing,
        const _variant_t & Subject = vtMissing,
        const _variant_t & Body = vtMissing,
        const _variant_t & AllAtOnce = vtMissing,
        const _variant_t & ReturnWhenDone = vtMissing,
        const _variant_t & TrackStatus = vtMissing,
        const _variant_t & Clear = vtMissing,
        const _variant_t & SendNow = vtMissing );
    VARIANT_BOOL FileLoadLast (
        const _variant_t & Number = vtMissing );
    VARIANT_BOOL FileExit (
        enum PjSaveType Save );
    VARIANT_BOOL MenuBars ( );
    VARIANT_BOOL MenuBarEdit (
        const _variant_t & Copy = vtMissing,
        const _variant_t & Create = vtMissing,
        const _variant_t & Name = vtMissing,
        const _variant_t & NewName = vtMissing );
    VARIANT_BOOL MenuBarApply (
        _bstr_t Name,
        const _variant_t & Default = vtMissing,
        const _variant_t & NoFiles = vtMissing );
    VARIANT_BOOL EditUndo ( );
    VARIANT_BOOL EditCut ( );
    VARIANT_BOOL EditCopy ( );
    VARIANT_BOOL EditCopyPicture (
        const _variant_t & Object,
        const _variant_t & ForPrinter,
        const _variant_t & SelectedRows,
        const _variant_t & FromDate,
        const _variant_t & ToDate,
        const _variant_t & FileName,
        enum PjCopyPictureScaleOption ScaleOption );
    VARIANT_BOOL EditPaste ( );
    VARIANT_BOOL EditPasteSpecial (
        const _variant_t & Link = vtMissing,
        const _variant_t & Type = vtMissing,
        const _variant_t & DisplayAsIcon = vtMissing );
    VARIANT_BOOL EditClearFormats ( );
    VARIANT_BOOL EditClear (
        const _variant_t & Contents = vtMissing,
        const _variant_t & Formats = vtMissing,
        const _variant_t & Notes = vtMissing,
        const _variant_t & Hyperlinks = vtMissing );
    VARIANT_BOOL RowClear ( );
    VARIANT_BOOL DDEPasteLink ( );
    VARIANT_BOOL EditDelete ( );
    VARIANT_BOOL ColumnDelete ( );
    VARIANT_BOOL RowDelete ( );
    VARIANT_BOOL ObjectVerb (
        const _variant_t & Verb = vtMissing );
    VARIANT_BOOL ObjectLinks ( );
    VARIANT_BOOL ObjectChangeIcon ( );
    VARIANT_BOOL ObjectConvert ( );
    VARIANT_BOOL EditInsert ( );
    VARIANT_BOOL ColumnInsert ( );
    VARIANT_BOOL RowInsert ( );
    VARIANT_BOOL LinkTasks ( );
    VARIANT_BOOL LinkTasksEdit (
        long From,
        long To,
        const _variant_t & Delete = vtMissing,
        const _variant_t & Type = vtMissing,
        const _variant_t & Lag = vtMissing,
        const _variant_t & PredecessorProjectName = vtMissing,
        const _variant_t & SuccessorProjectName = vtMissing );
    VARIANT_BOOL UnlinkTasks ( );
    VARIANT_BOOL ResourceAssignment (
        const _variant_t & Resources,
        enum PjResAssignOperation Operation,
        const _variant_t & With = vtMissing );
    VARIANT_BOOL EditGoTo (
        const _variant_t & ID = vtMissing,
        const _variant_t & Date = vtMissing );
    VARIANT_BOOL GotoNextOverAllocation ( );
    VARIANT_BOOL InsertNotes ( );
    VARIANT_BOOL Find (
        const _variant_t & Field = vtMissing,
        const _variant_t & Test = vtMissing,
        const _variant_t & Value = vtMissing,
        const _variant_t & Next = vtMissing,
        const _variant_t & MatchCase = vtMissing );
    VARIANT_BOOL Replace (
        const _variant_t & Field = vtMissing,
        const _variant_t & Test = vtMissing,
        const _variant_t & Value = vtMissing,
        const _variant_t & Replacement = vtMissing,
        const _variant_t & ReplaceAll = vtMissing,
        const _variant_t & Next = vtMissing,
        const _variant_t & MatchCase = vtMissing );
    VARIANT_BOOL SelectAll ( );
    VARIANT_BOOL ObjectInsert ( );
    VARIANT_BOOL SubscribeTo (
        const _variant_t & Edition,
        enum PjSubscribeFormat Format );
    VARIANT_BOOL SubscriberOptions (
        const _variant_t & Name = vtMissing,
        const _variant_t & IsTask = vtMissing,
        const _variant_t & UniqueID = vtMissing,
        const _variant_t & Field = vtMissing,
        const _variant_t & Automatically = vtMissing,
        const _variant_t & Action = vtMissing );
    VARIANT_BOOL CreatePublisher (
        const _variant_t & Edition = vtMissing,
        const _variant_t & Contains = vtMissing );
    VARIANT_BOOL PublisherOptions (
        const _variant_t & Name = vtMissing,
        const _variant_t & View = vtMissing,
        const _variant_t & IsTask = vtMissing,
        const _variant_t & UniqueID = vtMissing,
        const _variant_t & Field = vtMissing,
        const _variant_t & OnSave = vtMissing,
        const _variant_t & Action = vtMissing );
    VARIANT_BOOL EditionStopAll (
        const _variant_t & Stop = vtMissing );
    VARIANT_BOOL ClipboardShow ( );
    VARIANT_BOOL ViewApply (
        const _variant_t & Name = vtMissing,
        const _variant_t & SinglePane = vtMissing,
        const _variant_t & Toggle = vtMissing );
    VARIANT_BOOL ViewEditSingle (
        const _variant_t & Name = vtMissing,
        const _variant_t & Create = vtMissing,
        const _variant_t & NewName = vtMissing,
        const _variant_t & Screen = vtMissing,
        const _variant_t & ShowInMenu = vtMissing,
        const _variant_t & HighlightFilter = vtMissing,
        const _variant_t & Table = vtMissing,
        const _variant_t & Filter = vtMissing,
        const _variant_t & Group = vtMissing );
    VARIANT_BOOL ViewEditCombination (
        const _variant_t & Name = vtMissing,
        const _variant_t & Create = vtMissing,
        const _variant_t & NewName = vtMissing,
        const _variant_t & TopView = vtMissing,
        const _variant_t & BottomView = vtMissing,
        const _variant_t & ShowInMenu = vtMissing );
    VARIANT_BOOL TableApply (
        const _variant_t & Name = vtMissing );
    VARIANT_BOOL TableEdit (
        _bstr_t Name,
        VARIANT_BOOL TaskTable,
        const _variant_t & Create = vtMissing,
        const _variant_t & OverwriteExisting = vtMissing,
        const _variant_t & NewName = vtMissing,
        const _variant_t & FieldName = vtMissing,
        const _variant_t & NewFieldName = vtMissing,
        const _variant_t & Title = vtMissing,
        const _variant_t & Width = vtMissing,
        const _variant_t & Align = vtMissing,
        const _variant_t & ShowInMenu = vtMissing,
        const _variant_t & LockFirstColumn = vtMissing,
        const _variant_t & DateFormat = vtMissing,
        const _variant_t & RowHeight = vtMissing,
        const _variant_t & ColumnPosition = vtMissing,
        const _variant_t & AlignTitle = vtMissing,
        const _variant_t & HeaderAutoRowHeightAdjustment = vtMissing,
        const _variant_t & HeaderTextWrap = vtMissing );
    VARIANT_BOOL FilterApply (
        const _variant_t & Name = vtMissing,
        const _variant_t & Highlight = vtMissing,
        const _variant_t & Value1 = vtMissing,
        const _variant_t & Value2 = vtMissing );
    VARIANT_BOOL FilterEdit (
        _bstr_t Name,
        VARIANT_BOOL TaskFilter,
        const _variant_t & Create = vtMissing,
        const _variant_t & OverwriteExisting = vtMissing,
        const _variant_t & Parenthesis = vtMissing,
        const _variant_t & NewName = vtMissing,
        const _variant_t & FieldName = vtMissing,
        const _variant_t & NewFieldName = vtMissing,
        const _variant_t & Test = vtMissing,
        const _variant_t & Value = vtMissing,
        const _variant_t & Operation = vtMissing,
        const _variant_t & ShowInMenu = vtMissing,
        const _variant_t & ShowSummaryTasks = vtMissing );
    VARIANT_BOOL ProjectSummaryInfo (
        const _variant_t & Project = vtMissing,
        const _variant_t & Title = vtMissing,
        const _variant_t & Subject = vtMissing,
        const _variant_t & Author = vtMissing,
        const _variant_t & Company = vtMissing,
        const _variant_t & Manager = vtMissing,
        const _variant_t & Keywords = vtMissing,
        const _variant_t & Comments = vtMissing,
        const _variant_t & Start = vtMissing,
        const _variant_t & Finish = vtMissing,
        const _variant_t & ScheduleFrom = vtMissing,
        const _variant_t & CurrentDate = vtMissing,
        const _variant_t & Calendar = vtMissing,
        const _variant_t & StatusDate = vtMissing,
        const _variant_t & Priority = vtMissing,
        const _variant_t & PartiallyDisabled = vtMissing );
    VARIANT_BOOL ProjectStatistics (
        const _variant_t & Project = vtMissing );
    VARIANT_BOOL OptionsCalendar (
        const _variant_t & StartWeekOnMonday = vtMissing,
        const _variant_t & StartYearIn = vtMissing,
        const _variant_t & StartTime = vtMissing,
        const _variant_t & FinishTime = vtMissing,
        const _variant_t & HoursPerDay = vtMissing,
        const _variant_t & HoursPerWeek = vtMissing,
        const _variant_t & SetDefaults = vtMissing,
        const _variant_t & StartWeekOn = vtMissing,
        const _variant_t & UseFYStartYear = vtMissing,
        const _variant_t & DaysPerMonth = vtMissing );
    VARIANT_BOOL OptionsEdit (
        const _variant_t & MoveAfterReturn = vtMissing,
        const _variant_t & DragAndDrop = vtMissing,
        const _variant_t & UpdateLinks = vtMissing,
        const _variant_t & CopyResourceUsageHeader = vtMissing,
        const _variant_t & PhoneticInfo = vtMissing,
        const _variant_t & PhoneticType = vtMissing,
        const _variant_t & MinuteLabelDisplay = vtMissing,
        const _variant_t & HourLabelDisplay = vtMissing,
        const _variant_t & DayLabelDisplay = vtMissing,
        const _variant_t & WeekLabelDisplay = vtMissing,
        const _variant_t & YearLabelDisplay = vtMissing,
        const _variant_t & SpaceBeforeTimeLabel = vtMissing,
        const _variant_t & SetDefaults = vtMissing,
        const _variant_t & MonthLabelDisplay = vtMissing,
        const _variant_t & SetDefaultsTimeUnits = vtMissing,
        const _variant_t & HyperlinkColor = vtMissing,
        const _variant_t & FollowedHyperlinkColor = vtMissing,
        const _variant_t & UnderlineHyperlinks = vtMissing,
        const _variant_t & SetDefaultsHyperlink = vtMissing,
        const _variant_t & InCellEditing = vtMissing );
    VARIANT_BOOL OptionsGeneral (
        const _variant_t & PlanningWizard = vtMissing,
        const _variant_t & WizardUsage = vtMissing,
        const _variant_t & WizardErrors = vtMissing,
        const _variant_t & WizardScheduling = vtMissing,
        const _variant_t & ShowTipOfDay = vtMissing,
        const _variant_t & AutoAddResources = vtMissing,
        const _variant_t & StandardRate = vtMissing,
        const _variant_t & OvertimeRate = vtMissing,
        const _variant_t & LastFile = vtMissing,
        const _variant_t & SummaryInfo = vtMissing,
        const _variant_t & UserName = vtMissing,
        const _variant_t & SetDefaults = vtMissing,
        const _variant_t & ShowWelcome = vtMissing,
        const _variant_t & AutoFilter = vtMissing,
        const _variant_t & MacroVirusProtection = vtMissing,
        const _variant_t & DisplayRecentFiles = vtMissing,
        const _variant_t & RecentFilesMaximum = vtMissing,
        const _variant_t & FontConversion = vtMissing,
        const _variant_t & ShowStartupWorkpane = vtMissing );
    VARIANT_BOOL OptionsSchedule (
        const _variant_t & ScheduleMessages = vtMissing,
        const _variant_t & StartOnCurrentDate = vtMissing,
        const _variant_t & AutoLink = vtMissing,
        const _variant_t & AutoSplit = vtMissing,
        const _variant_t & CriticalSlack = vtMissing,
        const _variant_t & TaskType = vtMissing,
        const _variant_t & DurationUnits = vtMissing,
        const _variant_t & WorkUnits = vtMissing,
        const _variant_t & AutoTrack = vtMissing,
        const _variant_t & SetDefaults = vtMissing,
        const _variant_t & AssignmentUnits = vtMissing,
        const _variant_t & EffortDriven = vtMissing,
        const _variant_t & HonorConstraints = vtMissing,
        const _variant_t & ShowEstimated = vtMissing,
        const _variant_t & NewTasksEstimated = vtMissing );
    VARIANT_BOOL OptionsView (
        const _variant_t & DefaultView = vtMissing,
        const _variant_t & DateFormat = vtMissing,
        const _variant_t & ProjectSummary = vtMissing,
        const _variant_t & DisplayStatusBar = vtMissing,
        const _variant_t & DisplayEntryBar = vtMissing,
        const _variant_t & DisplayScrollBars = vtMissing,
        const _variant_t & CurrencySymbol = vtMissing,
        const _variant_t & SymbolPlacement = vtMissing,
        const _variant_t & CurrencyDigits = vtMissing,
        const _variant_t & DisplayOutlineNumber = vtMissing,
        const _variant_t & DisplayOutlineSymbols = vtMissing,
        const _variant_t & DisplayNameIndent = vtMissing,
        const _variant_t & DisplaySummaryTasks = vtMissing,
        const _variant_t & DisplayOLEIndicator = vtMissing,
        const _variant_t & DisplayExternalSuccessors = vtMissing,
        const _variant_t & DisplayExternalPredecessors = vtMissing,
        const _variant_t & CrossProjectLinksInfo = vtMissing,
        const _variant_t & AcceptNewExternalData = vtMissing,
        const _variant_t & DisplayWindowsInTaskbar = vtMissing,
        const _variant_t & DisplayScreentips = vtMissing );
    VARIANT_BOOL OptionsWorkgroup (
        const _variant_t & WorkgroupMessages = vtMissing,
        const _variant_t & ServerURL = vtMissing,
        const _variant_t & ServerPath = vtMissing,
        const _variant_t & ReceiveNotifications = vtMissing,
        const _variant_t & SendHyperlinkNote = vtMissing,
        const _variant_t & HyperlinkColor = vtMissing,
        const _variant_t & FollowedHyperlinkColor = vtMissing,
        const _variant_t & UnderlineHyperlinks = vtMissing,
        const _variant_t & SetDefaults = vtMissing,
        const _variant_t & ServerIdentification = vtMissing,
        const _variant_t & AllowTaskDelegation = vtMissing,
        const _variant_t & UpdateProjectToWeb = vtMissing,
        const _variant_t & PublishInformationOnSave = vtMissing,
        const _variant_t & SetDefaultsMessaging = vtMissing,
        const _variant_t & SetDefaultsWebServer = vtMissing,
        const _variant_t & ManagerEmail = vtMissing,
        const _variant_t & ConfirmationDialog = vtMissing,
        const _variant_t & ChangesMarkAssnDirty = vtMissing );
    VARIANT_BOOL OptionsCalculation (
        const _variant_t & Automatic = vtMissing,
        const _variant_t & AutoTrack = vtMissing,
        const _variant_t & SpreadPercentToStatusDate = vtMissing,
        const _variant_t & SpreadCostsToStatusDate = vtMissing,
        const _variant_t & AutoCalcCosts = vtMissing,
        const _variant_t & FixedCostAccrual = vtMissing,
        const _variant_t & CalcMultipleCriticalPaths = vtMissing,
        const _variant_t & CriticalSlack = vtMissing,
        const _variant_t & SetDefaults = vtMissing,
        const _variant_t & CalcInsProjLikeSummTask = vtMissing,
        const _variant_t & MoveCompleted = vtMissing,
        const _variant_t & AndMoveRemaining = vtMissing,
        const _variant_t & MoveRemaining = vtMissing,
        const _variant_t & AndMoveCompleted = vtMissing,
        const _variant_t & EVMethod = vtMissing,
        const _variant_t & EVBaseline = vtMissing );
    VARIANT_BOOL CalculateAll ( );
    VARIANT_BOOL OptionsPreferences ( );
    VARIANT_BOOL ChangeWorkingTime (
        const _variant_t & CalendarName = vtMissing,
        const _variant_t & Locked = vtMissing );
    VARIANT_BOOL BaseCalendars (
        const _variant_t & Index = vtMissing,
        const _variant_t & Locked = vtMissing );
    VARIANT_BOOL BaseCalendarCreate (
        _bstr_t Name,
        const _variant_t & FromName = vtMissing );
    VARIANT_BOOL BaseCalendarRename (
        _bstr_t FromName,
        _bstr_t ToName );
    VARIANT_BOOL BaseCalendarDelete (
        _bstr_t Name );
    VARIANT_BOOL BaseCalendarEditDays (
        _bstr_t Name,
        const _variant_t & StartDate = vtMissing,
        const _variant_t & EndDate = vtMissing,
        const _variant_t & WeekDay = vtMissing,
        const _variant_t & Working = vtMissing,
        const _variant_t & From1 = vtMissing,
        const _variant_t & To1 = vtMissing,
        const _variant_t & From2 = vtMissing,
        const _variant_t & To2 = vtMissing,
        const _variant_t & From3 = vtMissing,
        const _variant_t & To3 = vtMissing,
        const _variant_t & Default = vtMissing,
        const _variant_t & From4 = vtMissing,
        const _variant_t & To4 = vtMissing,
        const _variant_t & From5 = vtMissing,
        const _variant_t & To5 = vtMissing );
    VARIANT_BOOL ResourceCalendarEditDays (
        _bstr_t ProjectName,
        _bstr_t ResourceName,
        const _variant_t & StartDate = vtMissing,
        const _variant_t & EndDate = vtMissing,
        const _variant_t & WeekDay = vtMissing,
        const _variant_t & Working = vtMissing,
        const _variant_t & Default = vtMissing,
        const _variant_t & From1 = vtMissing,
        const _variant_t & To1 = vtMissing,
        const _variant_t & From2 = vtMissing,
        const _variant_t & To2 = vtMissing,
        const _variant_t & From3 = vtMissing,
        const _variant_t & To3 = vtMissing,
        const _variant_t & From4 = vtMissing,
        const _variant_t & To4 = vtMissing,
        const _variant_t & From5 = vtMissing,
        const _variant_t & To5 = vtMissing );
    VARIANT_BOOL BaseCalendarReset (
        _bstr_t Name );
    VARIANT_BOOL ResourceCalendarReset (
        _bstr_t ProjectName,
        _bstr_t ResourceName,
        const _variant_t & BaseCalendar = vtMissing );
    VARIANT_BOOL ResourceCalendars (
        const _variant_t & Index = vtMissing,
        const _variant_t & Locked = vtMissing );
    VARIANT_BOOL LevelingOptions (
        const _variant_t & Automatic = vtMissing,
        const _variant_t & DelayInSlack = vtMissing,
        const _variant_t & AutoClearLeveling = vtMissing,
        const _variant_t & Order = vtMissing,
        const _variant_t & LevelEntireProject = vtMissing,
        const _variant_t & FromDate = vtMissing,
        const _variant_t & ToDate = vtMissing,
        const _variant_t & PeriodBasis = vtMissing,
        const _variant_t & LevelIndividualAssignments = vtMissing,
        const _variant_t & LevelingCanSplit = vtMissing );
    VARIANT_BOOL LevelNow (
        const _variant_t & All = vtMissing );
    VARIANT_BOOL BaselineSave (
        const _variant_t & All = vtMissing,
        const _variant_t & Copy = vtMissing,
        const _variant_t & Into = vtMissing,
        const _variant_t & RollupToSummaryTasks = vtMissing,
        const _variant_t & RollupFromSubtasks = vtMissing,
        const _variant_t & SetDefaults = vtMissing );
    VARIANT_BOOL UpdateProject (
        const _variant_t & All = vtMissing,
        const _variant_t & UpdateDate = vtMissing,
        const _variant_t & Action = vtMissing );
    VARIANT_BOOL UpdateTasks (
        const _variant_t & PercentComplete = vtMissing,
        const _variant_t & ActualDuration = vtMissing,
        const _variant_t & RemainingDuration = vtMissing,
        const _variant_t & ActualStart = vtMissing,
        const _variant_t & ActualFinish = vtMissing,
        const _variant_t & Notes = vtMissing );
    VARIANT_BOOL WindowNewWindow (
        const _variant_t & Projects = vtMissing,
        const _variant_t & View = vtMissing,
        const _variant_t & AllProjects = vtMissing,
        const _variant_t & ShowDialog = vtMissing );
    VARIANT_BOOL WindowArrangeAll ( );
    VARIANT_BOOL WindowHide (
        const _variant_t & Name = vtMissing );
    VARIANT_BOOL WindowUnhide (
        const _variant_t & Name = vtMissing );
    VARIANT_BOOL WindowActivate (
        const _variant_t & WindowName = vtMissing,
        const _variant_t & DialogID = vtMissing,
        const _variant_t & TopPane = vtMissing );
    VARIANT_BOOL PageBreakSet ( );
    VARIANT_BOOL PageBreakRemove ( );
    VARIANT_BOOL PageBreaksRemoveAll ( );
    VARIANT_BOOL ViewShowResourcesPredecessors ( );
    VARIANT_BOOL ViewShowResourcesSuccessors ( );
    VARIANT_BOOL ViewShowPredecessorsSuccessors ( );
    VARIANT_BOOL ViewShowNotes ( );
    VARIANT_BOOL ViewShowObjects ( );
    VARIANT_BOOL ViewShowOverallocation ( );
    VARIANT_BOOL ViewShowPercentAllocation ( );
    VARIANT_BOOL ViewShowWork ( );
    VARIANT_BOOL ViewShowCost ( );
    VARIANT_BOOL ViewShowSchedule ( );
    VARIANT_BOOL ViewShowPeakUnits ( );
    VARIANT_BOOL ViewShowAvailability ( );
    VARIANT_BOOL ViewShowRemainingAvailability ( );
    VARIANT_BOOL ViewShowCumulativeWork ( );
    VARIANT_BOOL ViewShowCumulativeCost ( );
    VARIANT_BOOL PaneNext ( );
    VARIANT_BOOL PaneCreate ( );
    VARIANT_BOOL FormViewShow ( );
    VARIANT_BOOL PaneClose ( );
    VARIANT_BOOL WindowSplit ( );
    VARIANT_BOOL WindowNext (
        const _variant_t & NoWrap = vtMissing );
    VARIANT_BOOL WindowPrev (
        const _variant_t & NoWrap = vtMissing );
    VARIANT_BOOL DocClose ( );
    VARIANT_BOOL AppMaximize ( );
    VARIANT_BOOL AppMinimize ( );
    VARIANT_BOOL AppMove (
        const _variant_t & XPosition = vtMissing,
        const _variant_t & YPosition = vtMissing,
        const _variant_t & Points = vtMissing );
    VARIANT_BOOL AppRestore ( );
    VARIANT_BOOL AppSize (
        const _variant_t & Width = vtMissing,
        const _variant_t & Height = vtMissing,
        const _variant_t & Points = vtMissing );
    VARIANT_BOOL DocMaximize ( );
    VARIANT_BOOL DocMove (
        const _variant_t & XPosition = vtMissing,
        const _variant_t & YPosition = vtMissing,
        const _variant_t & Points = vtMissing );
    VARIANT_BOOL DocRestore ( );
    VARIANT_BOOL DocSize (
        const _variant_t & Width = vtMissing,
        const _variant_t & Height = vtMissing,
        const _variant_t & Points = vtMissing );
    VARIANT_BOOL OutlineOutdent (
        const _variant_t & Levels = vtMissing );
    VARIANT_BOOL OutlineShowTasks (
        enum PJTaskOutlineShowLevel OutlineNumber,
        const _variant_t & ExpandInsertedProjects = vtMissing );
    VARIANT_BOOL OutlineIndent (
        const _variant_t & Levels = vtMissing );
    VARIANT_BOOL OutlineHideSubTasks ( );
    VARIANT_BOOL OutlineShowSubTasks ( );
    VARIANT_BOOL OutlineShowAllTasks ( );
    VARIANT_BOOL SelectBeginning (
        const _variant_t & Extend = vtMissing );
    VARIANT_BOOL SelectEnd (
        const _variant_t & Extend = vtMissing );
    VARIANT_BOOL SelectRowStart (
        const _variant_t & Extend = vtMissing );
    VARIANT_BOOL SelectRowEnd (
        const _variant_t & Extend = vtMissing );
    VARIANT_BOOL SelectCellLeft (
        const _variant_t & NumCells = vtMissing,
        const _variant_t & Extend = vtMissing );
    VARIANT_BOOL SelectCellRight (
        const _variant_t & NumCells = vtMissing,
        const _variant_t & Extend = vtMissing );
    VARIANT_BOOL SelectCellUp (
        const _variant_t & NumCells = vtMissing,
        const _variant_t & Extend = vtMissing );
    VARIANT_BOOL SelectCellDown (
        const _variant_t & NumCells = vtMissing,
        const _variant_t & Extend = vtMissing );
    VARIANT_BOOL SelectionExtend (
        const _variant_t & Extend = vtMissing,
        const _variant_t & Add = vtMissing );
    VARIANT_BOOL ColumnBestFit (
        const _variant_t & Column = vtMissing );
    VARIANT_BOOL ColumnEdit (
        const _variant_t & Column = vtMissing );
    VARIANT_BOOL SelectRange (
        long Row,
        short Column,
        const _variant_t & RowRelative = vtMissing,
        const _variant_t & Width = vtMissing,
        const _variant_t & Height = vtMissing,
        const _variant_t & Extend = vtMissing,
        const _variant_t & Add = vtMissing );
    VARIANT_BOOL SelectTimescaleRange (
        long Row,
        _bstr_t StartTime,
        short Width,
        long Height );
    VARIANT_BOOL SelectTaskField (
        long Row,
        _bstr_t Column,
        const _variant_t & RowRelative = vtMissing,
        const _variant_t & Width = vtMissing,
        const _variant_t & Height = vtMissing,
        const _variant_t & Extend = vtMissing,
        const _variant_t & Add = vtMissing );
    VARIANT_BOOL SelectResourceField (
        long Row,
        _bstr_t Column,
        const _variant_t & RowRelative = vtMissing,
        const _variant_t & Width = vtMissing,
        const _variant_t & Height = vtMissing,
        const _variant_t & Extend = vtMissing,
        const _variant_t & Add = vtMissing );
    VARIANT_BOOL SelectRow (
        const _variant_t & Row = vtMissing,
        const _variant_t & RowRelative = vtMissing,
        const _variant_t & Height = vtMissing,
        const _variant_t & Extend = vtMissing,
        const _variant_t & Add = vtMissing );
    VARIANT_BOOL SelectColumn (
        const _variant_t & Column = vtMissing,
        const _variant_t & Additional = vtMissing,
        const _variant_t & Extend = vtMissing,
        const _variant_t & Add = vtMissing );
    VARIANT_BOOL SelectTaskColumn (
        const _variant_t & Column = vtMissing,
        const _variant_t & Additional = vtMissing,
        const _variant_t & Extend = vtMissing,
        const _variant_t & Add = vtMissing );
    VARIANT_BOOL SelectResourceColumn (
        const _variant_t & Column = vtMissing,
        const _variant_t & Additional = vtMissing,
        const _variant_t & Extend = vtMissing,
        const _variant_t & Add = vtMissing );
    VARIANT_BOOL SelectTaskCell (
        const _variant_t & Row = vtMissing,
        const _variant_t & Column = vtMissing,
        const _variant_t & RowRelative = vtMissing );
    VARIANT_BOOL SelectResourceCell (
        const _variant_t & Row = vtMissing,
        const _variant_t & Column = vtMissing,
        const _variant_t & RowRelative = vtMissing );
    VARIANT_BOOL SelectCell (
        const _variant_t & Row = vtMissing,
        const _variant_t & Column = vtMissing,
        const _variant_t & RowRelative = vtMissing );
    VARIANT_BOOL SelectSheet ( );
    VARIANT_BOOL DDEInitiate (
        _bstr_t App,
        _bstr_t Topic );
    VARIANT_BOOL DDEExecute (
        _bstr_t Command,
        const _variant_t & TimeOut = vtMissing );
    VARIANT_BOOL DDETerminate ( );
    VARIANT_BOOL InformationDialog (
        const _variant_t & Tab = vtMissing );
    VARIANT_BOOL Form (
        const _variant_t & Name = vtMissing );
    VARIANT_BOOL CustomForms ( );
    VARIANT_BOOL Tables ( );
    VARIANT_BOOL Filters ( );
    VARIANT_BOOL Macro (
        const _variant_t & Name = vtMissing );
    VARIANT_BOOL FillDown (
        const _variant_t & Down = vtMissing );
    VARIANT_BOOL Views ( );
    VARIANT_BOOL CalculateProject ( );
    VARIANT_BOOL LevelingClear (
        const _variant_t & All = vtMissing );
    VARIANT_BOOL SpellingCheck ( );
    VARIANT_BOOL OptionsSpelling (
        const _variant_t & TaskName = vtMissing,
        const _variant_t & TaskNotes = vtMissing,
        const _variant_t & TaskText1 = vtMissing,
        const _variant_t & TaskText2 = vtMissing,
        const _variant_t & TaskText3 = vtMissing,
        const _variant_t & TaskText4 = vtMissing,
        const _variant_t & TaskText5 = vtMissing,
        const _variant_t & TaskText6 = vtMissing,
        const _variant_t & TaskText7 = vtMissing,
        const _variant_t & TaskText8 = vtMissing,
        const _variant_t & TaskText9 = vtMissing,
        const _variant_t & TaskText10 = vtMissing,
        const _variant_t & ResourceCode = vtMissing,
        const _variant_t & ResourceName = vtMissing,
        const _variant_t & ResourceNotes = vtMissing,
        const _variant_t & ResourceGroup = vtMissing,
        const _variant_t & ResourceText1 = vtMissing,
        const _variant_t & ResourceText2 = vtMissing,
        const _variant_t & ResourceText3 = vtMissing,
        const _variant_t & ResourceText4 = vtMissing,
        const _variant_t & ResourceText5 = vtMissing,
        const _variant_t & AssignNotes = vtMissing,
        const _variant_t & IgnoreUppercase = vtMissing,
        const _variant_t & IgnoreNumberWords = vtMissing,
        const _variant_t & AlwaysSuggest = vtMissing,
        const _variant_t & UseCustomDictionary = vtMissing );
    VARIANT_BOOL WindowMoreWindows ( );
    VARIANT_BOOL HelpContents ( );
    VARIANT_BOOL HelpSearch ( );
    VARIANT_BOOL HelpOnlineIndex ( );
    VARIANT_BOOL HelpAbout ( );
    VARIANT_BOOL HelpLaunch (
        const _variant_t & FileName = vtMissing,
        const _variant_t & ContextNumber = vtMissing,
        const _variant_t & Search = vtMissing,
        const _variant_t & SearchKey = vtMissing );
    VARIANT_BOOL HelpCueCards (
        const _variant_t & FileName = vtMissing,
        const _variant_t & ContextNumber = vtMissing );
    VARIANT_BOOL HelpTopics ( );
    VARIANT_BOOL HelpAnswerWizard ( );
    VARIANT_BOOL HelpMSProjectFundamentals ( );
    VARIANT_BOOL AutoCorrect ( );
    VARIANT_BOOL HelpQuickPreview ( );
    VARIANT_BOOL HelpTechnicalSupport ( );
    VARIANT_BOOL HelpCreateYourProject ( );
    VARIANT_BOOL HelpContextHelp ( );
    VARIANT_BOOL TextStyles (
        const _variant_t & Item = vtMissing,
        const _variant_t & Font = vtMissing,
        const _variant_t & Size = vtMissing,
        const _variant_t & Bold = vtMissing,
        const _variant_t & Italic = vtMissing,
        const _variant_t & Underline = vtMissing,
        const _variant_t & Color = vtMissing );
    VARIANT_BOOL DetailStylesFormat (
        const _variant_t & Item = vtMissing,
        const _variant_t & Font = vtMissing,
        const _variant_t & Size = vtMissing,
        const _variant_t & Bold = vtMissing,
        const _variant_t & Italic = vtMissing,
        const _variant_t & Underline = vtMissing,
        const _variant_t & Color = vtMissing,
        const _variant_t & CellColor = vtMissing,
        const _variant_t & Pattern = vtMissing,
        const _variant_t & ShowInMenu = vtMissing );
    VARIANT_BOOL DetailStylesAdd (
        enum PjTimescaledData Item,
        const _variant_t & Position = vtMissing );
    VARIANT_BOOL DetailStylesRemove (
        enum PjTimescaledData Item );
    VARIANT_BOOL DetailStylesRemoveAll ( );
    VARIANT_BOOL Font (
        const _variant_t & Name = vtMissing,
        const _variant_t & Size = vtMissing,
        const _variant_t & Bold = vtMissing,
        const _variant_t & Italic = vtMissing,
        const _variant_t & Underline = vtMissing,
        const _variant_t & Color = vtMissing,
        const _variant_t & Reset = vtMissing );
    VARIANT_BOOL Timescale ( );
    VARIANT_BOOL TimescaleEdit (
        const _variant_t & MajorUnits = vtMissing,
        const _variant_t & MinorUnits = vtMissing,
        const _variant_t & MajorLabel = vtMissing,
        const _variant_t & MinorLabel = vtMissing,
        const _variant_t & MajorAlign = vtMissing,
        const _variant_t & MinorAlign = vtMissing,
        const _variant_t & MajorCount = vtMissing,
        const _variant_t & MinorCount = vtMissing,
        const _variant_t & MajorTicks = vtMissing,
        const _variant_t & MinorTicks = vtMissing,
        const _variant_t & Enlarge = vtMissing,
        const _variant_t & Separator = vtMissing,
        const _variant_t & MajorUseFY = vtMissing,
        const _variant_t & MinorUseFY = vtMissing,
        const _variant_t & TopUnits = vtMissing,
        const _variant_t & TopLabel = vtMissing,
        const _variant_t & TopAlign = vtMissing,
        const _variant_t & TopCount = vtMissing,
        const _variant_t & TopTicks = vtMissing,
        const _variant_t & TopUseFY = vtMissing,
        const _variant_t & TierCount = vtMissing );
    VARIANT_BOOL Sort (
        const _variant_t & Key1 = vtMissing,
        const _variant_t & Ascending1 = vtMissing,
        const _variant_t & Key2 = vtMissing,
        const _variant_t & Ascending2 = vtMissing,
        const _variant_t & Key3 = vtMissing,
        const _variant_t & Ascending3 = vtMissing,
        const _variant_t & Renumber = vtMissing,
        const _variant_t & Outline = vtMissing );
    VARIANT_BOOL BarBoxStyles ( );
    VARIANT_BOOL GanttBarFormat (
        const _variant_t & TaskID = vtMissing,
        const _variant_t & GanttStyle = vtMissing,
        const _variant_t & StartShape = vtMissing,
        const _variant_t & StartType = vtMissing,
        const _variant_t & StartColor = vtMissing,
        const _variant_t & MiddleShape = vtMissing,
        const _variant_t & MiddlePattern = vtMissing,
        const _variant_t & MiddleColor = vtMissing,
        const _variant_t & EndShape = vtMissing,
        const _variant_t & EndType = vtMissing,
        const _variant_t & EndColor = vtMissing,
        const _variant_t & LeftText = vtMissing,
        const _variant_t & RightText = vtMissing,
        const _variant_t & TopText = vtMissing,
        const _variant_t & BottomText = vtMissing,
        const _variant_t & InsideText = vtMissing,
        const _variant_t & Reset = vtMissing,
        const _variant_t & ProjectName = vtMissing );
    VARIANT_BOOL TimescaleNonWorking (
        const _variant_t & Draw = vtMissing,
        const _variant_t & Calendar = vtMissing,
        const _variant_t & Color = vtMissing,
        const _variant_t & Pattern = vtMissing );
    VARIANT_BOOL BoxShowHideFields (
        const _variant_t & Show = vtMissing );
    VARIANT_BOOL Layout ( );
    VARIANT_BOOL PERTLayout (
        const _variant_t & Straight = vtMissing,
        const _variant_t & DisplayArrows = vtMissing,
        const _variant_t & AdjustForPageBreaks = vtMissing,
        const _variant_t & DisplayPageBreaks = vtMissing );
    VARIANT_BOOL LayoutNow ( );
    VARIANT_BOOL PERTBorders (
        const _variant_t & CriticalStyle = vtMissing,
        const _variant_t & CriticalColor = vtMissing,
        const _variant_t & NoncriticalStyle = vtMissing,
        const _variant_t & NoncriticalColor = vtMissing,
        const _variant_t & CriticalMilestoneStyle = vtMissing,
        const _variant_t & CriticalMilestoneColor = vtMissing,
        const _variant_t & NoncriticalMilestoneStyle = vtMissing,
        const _variant_t & NoncriticalMilestoneColor = vtMissing,
        const _variant_t & CriticalSummaryStyle = vtMissing,
        const _variant_t & CriticalSummaryColor = vtMissing,
        const _variant_t & NoncriticalSummaryStyle = vtMissing,
        const _variant_t & NoncriticalSummaryColor = vtMissing,
        const _variant_t & CriticalSubprojectStyle = vtMissing,
        const _variant_t & CriticalSubprojectColor = vtMissing,
        const _variant_t & NoncriticalSubprojectStyle = vtMissing,
        const _variant_t & NoncriticalSubprojectColor = vtMissing,
        const _variant_t & CriticalMarkedStyle = vtMissing,
        const _variant_t & CriticalMarkedColor = vtMissing,
        const _variant_t & NoncriticalMarkedStyle = vtMissing,
        const _variant_t & NoncriticalMarkedColor = vtMissing,
        const _variant_t & CriticalExternalTaskStyle = vtMissing,
        const _variant_t & CriticalExternalTaskColor = vtMissing,
        const _variant_t & NoncriticalExternalTaskStyle = vtMissing,
        const _variant_t & NoncriticalExternalTaskColor = vtMissing );
    VARIANT_BOOL Gridlines ( );
    VARIANT_BOOL GridlinesEdit (
        enum PjGridline Item,
        const _variant_t & NormalType = vtMissing,
        const _variant_t & NormalColor = vtMissing,
        const _variant_t & Interval = vtMissing,
        const _variant_t & IntervalType = vtMissing,
        const _variant_t & IntervalColor = vtMissing );
    VARIANT_BOOL ViewShowSelectedTasks (
        const _variant_t & Show = vtMissing );
    VARIANT_BOOL PageBreaksShow (
        const _variant_t & Show = vtMissing );
    VARIANT_BOOL FindNext ( );
    VARIANT_BOOL FindPrevious ( );
    VARIANT_BOOL ZoomOut ( );
    VARIANT_BOOL ZoomIn ( );
    VARIANT_BOOL SetField (
        _bstr_t Field,
        _bstr_t Value,
        const _variant_t & Create = vtMissing );
    VARIANT_BOOL SetTaskField (
        _bstr_t Field,
        _bstr_t Value,
        const _variant_t & AllSelectedTasks = vtMissing,
        const _variant_t & Create = vtMissing,
        const _variant_t & TaskID = vtMissing,
        const _variant_t & ProjectName = vtMissing );
    VARIANT_BOOL SetResourceField (
        _bstr_t Field,
        _bstr_t Value,
        const _variant_t & AllSelectedResources = vtMissing,
        const _variant_t & Create = vtMissing,
        const _variant_t & ResourceID = vtMissing,
        const _variant_t & ProjectName = vtMissing );
    VARIANT_BOOL SetActiveCell (
        _bstr_t Value,
        const _variant_t & Create = vtMissing );
    _variant_t CheckField (
        _bstr_t Field,
        _bstr_t Value,
        const _variant_t & Test = vtMissing,
        const _variant_t & Op = vtMissing,
        const _variant_t & Field2 = vtMissing,
        const _variant_t & Value2 = vtMissing,
        const _variant_t & Test2 = vtMissing );
    VARIANT_BOOL SetMatchingField (
        _bstr_t Field,
        _bstr_t Value,
        _bstr_t CheckField,
        _bstr_t CheckValue,
        const _variant_t & CheckTest = vtMissing,
        const _variant_t & CheckOperation = vtMissing,
        const _variant_t & CheckField2 = vtMissing,
        const _variant_t & CheckValue2 = vtMissing,
        const _variant_t & CheckTest2 = vtMissing );
    VARIANT_BOOL AppExecute (
        const _variant_t & Window = vtMissing,
        const _variant_t & Command = vtMissing,
        const _variant_t & Minimize = vtMissing,
        const _variant_t & Activate = vtMissing );
    VARIANT_BOOL AppLaunch (
        _bstr_t Application,
        const _variant_t & Document = vtMissing,
        const _variant_t & Activate = vtMissing );
    VARIANT_BOOL DDELinksUpdate ( );
    VARIANT_BOOL GotoTaskDates ( );
    VARIANT_BOOL GanttBarLinks (
        enum PjGanttBarLink Display );
    VARIANT_BOOL GanttShowDrawings (
        const _variant_t & Display = vtMissing );
    VARIANT_BOOL BarRounding (
        const _variant_t & On = vtMissing );
    VARIANT_BOOL GanttRollup (
        const _variant_t & AlwaysRollup = vtMissing,
        const _variant_t & HideWhenSummaryExpanded = vtMissing );
    VARIANT_BOOL GanttBarTextDateFormat (
        enum PjDateFormat DateFormat );
    VARIANT_BOOL GanttBarSize (
        enum PjBarSize Size );
    VARIANT_BOOL GanttBarStyleDelete (
        _bstr_t Item );
    VARIANT_BOOL GanttBarStyleEdit (
        _bstr_t Item,
        const _variant_t & Create = vtMissing,
        const _variant_t & Name = vtMissing,
        const _variant_t & StartShape = vtMissing,
        const _variant_t & StartType = vtMissing,
        const _variant_t & StartColor = vtMissing,
        const _variant_t & MiddleShape = vtMissing,
        const _variant_t & MiddleColor = vtMissing,
        const _variant_t & MiddlePattern = vtMissing,
        const _variant_t & EndShape = vtMissing,
        const _variant_t & EndType = vtMissing,
        const _variant_t & EndColor = vtMissing,
        const _variant_t & ShowFor = vtMissing,
        const _variant_t & Row = vtMissing,
        const _variant_t & From = vtMissing,
        const _variant_t & To = vtMissing,
        const _variant_t & BottomText = vtMissing,
        const _variant_t & TopText = vtMissing,
        const _variant_t & LeftText = vtMissing,
        const _variant_t & RightText = vtMissing,
        const _variant_t & InsideText = vtMissing );
    VARIANT_BOOL PERTBoxStyles (
        const _variant_t & Size = vtMissing,
        const _variant_t & DateFormat = vtMissing,
        const _variant_t & Gridlines = vtMissing,
        const _variant_t & CrossMarks = vtMissing,
        const _variant_t & Field1 = vtMissing,
        const _variant_t & Field2 = vtMissing,
        const _variant_t & Field3 = vtMissing,
        const _variant_t & Field4 = vtMissing,
        const _variant_t & Field5 = vtMissing );
    VARIANT_BOOL PERTSetTask (
        const _variant_t & Create = vtMissing,
        const _variant_t & Move = vtMissing,
        const _variant_t & TaskID = vtMissing,
        const _variant_t & XPosition = vtMissing,
        const _variant_t & YPosition = vtMissing );
    VARIANT_BOOL ResourceGraphBarStyles (
        const _variant_t & TopLeftShowAs = vtMissing,
        const _variant_t & TopLeftColor = vtMissing,
        const _variant_t & TopLeftPattern = vtMissing,
        const _variant_t & BottomLeftShowAs = vtMissing,
        const _variant_t & BottomLeftColor = vtMissing,
        const _variant_t & BottomLeftPattern = vtMissing,
        const _variant_t & TopRightShowAs = vtMissing,
        const _variant_t & TopRightColor = vtMissing,
        const _variant_t & TopRightPattern = vtMissing,
        const _variant_t & BottomRightShowAs = vtMissing,
        const _variant_t & BottomRightColor = vtMissing,
        const _variant_t & BottomRightPattern = vtMissing,
        const _variant_t & ShowValues = vtMissing,
        const _variant_t & ShowAvailabilityLine = vtMissing,
        const _variant_t & PercentBarOverlap = vtMissing );
    VARIANT_BOOL ConsolidateProjects (
        const _variant_t & Filenames,
        const _variant_t & NewWindow,
        const _variant_t & AttachToSources,
        const _variant_t & PoolResources,
        const _variant_t & HideSubtasks,
        enum PjPoolOpen openPool,
        const _variant_t & UserID = vtMissing,
        const _variant_t & Password = vtMissing );
    VARIANT_BOOL Organizer (
        enum PjOrganizer Type,
        const _variant_t & Task = vtMissing );
    VARIANT_BOOL OrganizerMoveItem (
        const _variant_t & Type = vtMissing,
        const _variant_t & FileName = vtMissing,
        const _variant_t & ToFileName = vtMissing,
        const _variant_t & Name = vtMissing,
        const _variant_t & Task = vtMissing );
    VARIANT_BOOL OrganizerDeleteItem (
        const _variant_t & Type = vtMissing,
        const _variant_t & FileName = vtMissing,
        const _variant_t & Name = vtMissing,
        const _variant_t & Task = vtMissing );
    VARIANT_BOOL OrganizerRenameItem (
        const _variant_t & Type = vtMissing,
        const _variant_t & FileName = vtMissing,
        const _variant_t & Name = vtMissing,
        const _variant_t & NewName = vtMissing,
        const _variant_t & Task = vtMissing );
    VARIANT_BOOL RecurringTaskInsert ( );
    VARIANT_BOOL CalendarTimescale ( );
    VARIANT_BOOL CalendarDateBoxes (
        const _variant_t & TopLeft = vtMissing,
        const _variant_t & TopRight = vtMissing,
        const _variant_t & BottomLeft = vtMissing,
        const _variant_t & BottomRight = vtMissing,
        const _variant_t & TopColor = vtMissing,
        const _variant_t & BottomColor = vtMissing,
        const _variant_t & TopPattern = vtMissing,
        const _variant_t & BottomPattern = vtMissing );
    VARIANT_BOOL CalendarWeekHeadings (
        const _variant_t & MonthTitle = vtMissing,
        const _variant_t & WeekTitle = vtMissing,
        const _variant_t & DayTitle = vtMissing,
        const _variant_t & ShowPreview = vtMissing,
        const _variant_t & DaysPerWeek = vtMissing );
    VARIANT_BOOL CalendarDateShadingEdit (
        enum PjCalendarShading Item,
        const _variant_t & Pattern = vtMissing,
        const _variant_t & Color = vtMissing );
    VARIANT_BOOL CalendarDateShading (
        const _variant_t & BaseCalendarName = vtMissing,
        const _variant_t & ResourceUniqueID = vtMissing,
        const _variant_t & ProjectIndex = vtMissing );
    VARIANT_BOOL ZoomCalendar (
        const _variant_t & NumWeeks = vtMissing,
        const _variant_t & StartDate = vtMissing,
        const _variant_t & EndDate = vtMissing );
    VARIANT_BOOL CalendarLayout (
        const _variant_t & SortOrder = vtMissing,
        const _variant_t & AutoLayout = vtMissing );
    VARIANT_BOOL CalendarBarStyles (
        const _variant_t & BarRounding = vtMissing );
    VARIANT_BOOL CalendarBarStylesEdit (
        enum PjBarItem Item,
        const _variant_t & Bar = vtMissing,
        const _variant_t & Pattern = vtMissing,
        const _variant_t & Color = vtMissing,
        const _variant_t & Align = vtMissing,
        const _variant_t & Wrap = vtMissing,
        const _variant_t & Shadow = vtMissing,
        const _variant_t & Field1 = vtMissing,
        const _variant_t & Field2 = vtMissing,
        const _variant_t & Field3 = vtMissing,
        const _variant_t & Field4 = vtMissing,
        const _variant_t & Field5 = vtMissing,
        const _variant_t & SplitPattern = vtMissing );
    VARIANT_BOOL CalendarBestFitWeekHeight ( );
    VARIANT_BOOL DrawingCreate (
        enum PjShape Type,
        const _variant_t & Behind = vtMissing );
    VARIANT_BOOL DrawingMove (
        const _variant_t & Forward = vtMissing,
        const _variant_t & Full = vtMissing );
    VARIANT_BOOL DrawingReshape ( );
    VARIANT_BOOL DrawingProperties (
        const _variant_t & SizePositionTab = vtMissing );
    VARIANT_BOOL DrawingCycleColor ( );
    VARIANT_BOOL FormatCopy ( );
    VARIANT_BOOL FormatPaste ( );
    VARIANT_BOOL FormatPainter ( );
    VARIANT_BOOL Toolbars (
        const _variant_t & Action = vtMissing,
        const _variant_t & ToolbarName = vtMissing,
        const _variant_t & NewToolbarName = vtMissing );
    VARIANT_BOOL ToolbarInsertTool (
        _bstr_t ToolbarName,
        short ButtonIndex,
        const _variant_t & Command = vtMissing,
        const _variant_t & FaceIndex = vtMissing,
        const _variant_t & Description = vtMissing,
        const _variant_t & ToolTip = vtMissing );
    VARIANT_BOOL ToolbarDeleteTool (
        _bstr_t ToolbarName,
        short ButtonIndex );
    VARIANT_BOOL ToolbarsCustomize ( );
    VARIANT_BOOL ToolbarCustomizeTool (
        const _variant_t & ToolbarName = vtMissing,
        const _variant_t & ButtonIndex = vtMissing,
        const _variant_t & Command = vtMissing,
        const _variant_t & FaceIndex = vtMissing,
        const _variant_t & Description = vtMissing,
        const _variant_t & ToolTip = vtMissing );
    VARIANT_BOOL ToolbarCopyToolFace (
        _bstr_t ToolbarName,
        short ButtonIndex );
    VARIANT_BOOL ToolbarPasteToolFace (
        _bstr_t ToolbarName,
        short ButtonIndex );
    VARIANT_BOOL FontBold (
        const _variant_t & Set = vtMissing );
    VARIANT_BOOL FontItalic (
        const _variant_t & Set = vtMissing );
    VARIANT_BOOL FontUnderLine (
        const _variant_t & Set = vtMissing );
    VARIANT_BOOL ColumnAlignment (
        enum PjAlignment Align );
    VARIANT_BOOL Reports ( );
    VARIANT_BOOL TipOfTheDay ( );
    VARIANT_BOOL FindFile ( );
    VARIANT_BOOL MailUpdateProject (
        _bstr_t DataFile );
    VARIANT_BOOL MailSendProjectMail (
        const _variant_t & MessageType = vtMissing,
        const _variant_t & Subject = vtMissing,
        const _variant_t & Body = vtMissing,
        const _variant_t & Fields = vtMissing,
        const _variant_t & UpdateAsOf = vtMissing,
        const _variant_t & ShowDialog = vtMissing,
        const _variant_t & InstallationMessage = vtMissing,
        const _variant_t & UpdateFrom = vtMissing,
        const _variant_t & PublishScope = vtMissing );
    VARIANT_BOOL WebInbox ( );
    VARIANT_BOOL GanttChartWizard ( );
    VARIANT_BOOL DrawingToolbarShow ( );
    VARIANT_BOOL ReminderSet (
        const _variant_t & Start = vtMissing,
        const _variant_t & LeadTime = vtMissing );
    VARIANT_BOOL SchedulePlusReminderSet (
        const _variant_t & Start = vtMissing,
        const _variant_t & LeadTime = vtMissing );
    VARIANT_BOOL CalendarTaskList (
        const _variant_t & Date = vtMissing );
    VARIANT_BOOL OutlineSymbolsToggle (
        const _variant_t & Show = vtMissing );
    VARIANT_BOOL ResourceSharingPoolAction (
        enum PjPoolAction Action,
        const _variant_t & FileName = vtMissing,
        const _variant_t & ReadOnly = vtMissing );
    VARIANT_BOOL ResourceActiveDirectory ( );
    VARIANT_BOOL ResourceAddressBook ( );
    VARIANT_BOOL ResourceDetails (
        const _variant_t & Name = vtMissing );
    VARIANT_BOOL MailProjectMailCustomize (
        const _variant_t & Action = vtMissing,
        const _variant_t & Position = vtMissing,
        const _variant_t & FieldID = vtMissing,
        const _variant_t & Title = vtMissing,
        const _variant_t & IncludeInTeamStatus = vtMissing,
        const _variant_t & Editable = vtMissing,
        const _variant_t & UseAssignmentField = vtMissing );
    VARIANT_BOOL FileQuit (
        enum PjSaveType Save );
    VARIANT_BOOL About ( );
    VARIANT_BOOL DetailStylesProperties (
        const _variant_t & AlignCellData = vtMissing,
        const _variant_t & RepeatRowLabel = vtMissing,
        const _variant_t & ShortLabels = vtMissing,
        const _variant_t & DisplayDetailsColumn = vtMissing );
    VARIANT_BOOL DetailStylesToggleItem (
        enum PjTimescaledData Item );
    VARIANT_BOOL AutoFilter ( );
    VARIANT_BOOL ViewBar ( );
    VARIANT_BOOL MacroShowVba ( );
    VARIANT_BOOL MacroShowCode ( );
    VARIANT_BOOL WebGoBack ( );
    VARIANT_BOOL WebGoForward ( );
    VARIANT_BOOL WebStopLoading ( );
    VARIANT_BOOL WebRefresh ( );
    VARIANT_BOOL WebOpenStartPage ( );
    VARIANT_BOOL WebOpenSearchPage ( );
    VARIANT_BOOL WebHideToolbars (
        const _variant_t & Hide = vtMissing );
    VARIANT_BOOL FollowHyperlink (
        const _variant_t & Address = vtMissing,
        const _variant_t & SubAddress = vtMissing,
        const _variant_t & AddHistory = vtMissing,
        const _variant_t & NewWindow = vtMissing );
    VARIANT_BOOL EditPasteAsHyperlink ( );
    VARIANT_BOOL InsertHyperlink (
        const _variant_t & Name = vtMissing,
        const _variant_t & Address = vtMissing,
        const _variant_t & SubAddress = vtMissing,
        const _variant_t & ScreenTip = vtMissing );
    VARIANT_BOOL EditHyperlink (
        const _variant_t & Name = vtMissing,
        const _variant_t & Address = vtMissing,
        const _variant_t & SubAddress = vtMissing,
        const _variant_t & ScreenTip = vtMissing );
    VARIANT_BOOL WebOpenHyperlink (
        const _variant_t & Address = vtMissing,
        const _variant_t & SubAddress = vtMissing,
        const _variant_t & AddHistory = vtMissing,
        const _variant_t & NewWindow = vtMissing );
    VARIANT_BOOL WebCopyHyperlink ( );
    VARIANT_BOOL WebAddToFavorites (
        const _variant_t & CurrentLink = vtMissing );
    VARIANT_BOOL EditClearHyperlink ( );
    VARIANT_BOOL WebSetStartPage (
        const _variant_t & Address = vtMissing );
    VARIANT_BOOL WebSetSearchPage (
        const _variant_t & Address = vtMissing );
    VARIANT_BOOL WebOpenFavorites ( );
    VARIANT_BOOL WebToolbar (
        const _variant_t & Show = vtMissing );
    VARIANT_BOOL SplitTask (
        const _variant_t & Lock = vtMissing );
    VARIANT_BOOL CustomFieldRename (
        enum PjCustomField FieldID,
        const _variant_t & NewName = vtMissing,
        const _variant_t & Phonetic = vtMissing );
    VARIANT_BOOL CustomizeField ( );
    VARIANT_BOOL GanttShowBarSplits (
        const _variant_t & Display = vtMissing );
    VARIANT_BOOL CalendarShowBarSplits (
        const _variant_t & Display = vtMissing );
    VARIANT_BOOL MapEdit (
        const _variant_t & Name = vtMissing,
        const _variant_t & Create = vtMissing,
        const _variant_t & OverwriteExisting = vtMissing,
        const _variant_t & NewName = vtMissing,
        const _variant_t & DataCategory = vtMissing,
        const _variant_t & CategoryEnabled = vtMissing,
        const _variant_t & TableName = vtMissing,
        const _variant_t & FieldName = vtMissing,
        const _variant_t & ExternalFieldName = vtMissing,
        const _variant_t & ExportFilter = vtMissing,
        const _variant_t & ImportMethod = vtMissing,
        const _variant_t & MergeKey = vtMissing,
        const _variant_t & HeaderRow = vtMissing,
        const _variant_t & AssignmentData = vtMissing,
        const _variant_t & TextDelimiter = vtMissing,
        const _variant_t & TextFileOrigin = vtMissing,
        const _variant_t & UseHtmlTemplate = vtMissing,
        const _variant_t & TemplateFile = vtMissing,
        const _variant_t & IncludeImage = vtMissing,
        const _variant_t & ImageFile = vtMissing );
    VARIANT_BOOL FillAcross (
        const _variant_t & Right = vtMissing );
    VARIANT_BOOL LinksBetweenProjects (
        const _variant_t & AcceptAll = vtMissing );
    VARIANT_BOOL ToggleAssignments ( );
    VARIANT_BOOL ProgressLines ( );
    VARIANT_BOOL ResourceSharingPoolUpdate (
        const _variant_t & allSharers = vtMissing );
    VARIANT_BOOL ResourceSharingPoolRefresh ( );
    VARIANT_BOOL WebHelp (
        const _variant_t & Type = vtMissing );
    VARIANT_BOOL AddProgressLine ( );
    VARIANT_BOOL CustomizeIMEMode (
        enum PjField FieldID,
        enum PjIMEMode IMEMode );
    VARIANT_BOOL DeleteFromDatabase (
        const _variant_t & Name = vtMissing,
        const _variant_t & UserID = vtMissing,
        const _variant_t & DatabasePassWord = vtMissing,
        const _variant_t & FormatID = vtMissing );
    VARIANT_BOOL WBSCodeRenumber (
        const _variant_t & All = vtMissing );
    VARIANT_BOOL WBSCodeMaskEdit (
        const _variant_t & CodePrefix,
        const _variant_t & Level,
        enum PjWBSSequence Sequence,
        const _variant_t & Length = vtMissing,
        const _variant_t & Separator = vtMissing,
        const _variant_t & CodeGenerate = vtMissing,
        const _variant_t & VerifyUniqueness = vtMissing );
    VARIANT_BOOL CustomOutlineCodeEdit (
        enum PjCustomField FieldID,
        const _variant_t & Level,
        enum PjCustomOutlineCodeSequence Sequence,
        const _variant_t & Length = vtMissing,
        const _variant_t & Separator = vtMissing,
        const _variant_t & OnlyLookUpTableCodes = vtMissing,
        const _variant_t & OnlyCompleteCodes = vtMissing,
        const _variant_t & LookupTableLink = vtMissing,
        const _variant_t & OnlyLeaves = vtMissing,
        const _variant_t & MatchGeneric = vtMissing,
        const _variant_t & RequiredCode = vtMissing );
    VARIANT_BOOL OptionsSave (
        const _variant_t & DefaultSaveFormat = vtMissing,
        const _variant_t & DefaultProjectsPath = vtMissing,
        const _variant_t & DefaultUserTemplatesPath = vtMissing,
        const _variant_t & DefaultWorkgroupTemplatesPath = vtMissing,
        const _variant_t & ExpandDatabaseTimephasedData = vtMissing,
        const _variant_t & AutomaticSave = vtMissing,
        const _variant_t & AutomaticSaveInterval = vtMissing,
        const _variant_t & AutomaticSaveOptions = vtMissing,
        const _variant_t & AutomaticSavePrompt = vtMissing,
        const _variant_t & SetDefaultsDatabase = vtMissing );
    VARIANT_BOOL OfficeOnTheWeb ( );
    VARIANT_BOOL FixMe ( );
    VARIANT_BOOL ViewShowWorkAvailability ( );
    VARIANT_BOOL ViewShowUnitAvailability ( );
    VARIANT_BOOL BaselineClear (
        const _variant_t & All = vtMissing,
        const _variant_t & From = vtMissing );
    VARIANT_BOOL Groups ( );
    VARIANT_BOOL GroupApply (
        const _variant_t & Name = vtMissing );
    VARIANT_BOOL GroupBy ( );
    VARIANT_BOOL LookUpTableAdd (
        enum PjCustomField FieldID,
        const _variant_t & Level = vtMissing,
        const _variant_t & Code = vtMissing,
        const _variant_t & Description = vtMissing );
    VARIANT_BOOL BoxStylesEdit (
        enum PjBoxStyle Style,
        const _variant_t & DataTemplate,
        const _variant_t & HorizontalGridlines,
        const _variant_t & VerticalGridlines,
        enum PjBoxShape BorderShape,
        enum PjColor BorderColor,
        const _variant_t & BorderWidth,
        enum PjColor BackgroundColor,
        enum PjBackgroundPattern BackgroundPattern );
    VARIANT_BOOL BoxFormat (
        const _variant_t & ProjectName,
        const _variant_t & TaskID,
        const _variant_t & DataTemplate,
        const _variant_t & HorizontalGridlines,
        const _variant_t & VerticalGridlines,
        enum PjBoxShape BorderShape,
        enum PjColor BorderColor,
        const _variant_t & BorderWidth,
        enum PjColor BackgroundColor,
        enum PjBackgroundPattern BackgroundPattern,
        const _variant_t & Reset = vtMissing );
    VARIANT_BOOL BarBoxFormat ( );
    VARIANT_BOOL CreateWebAccount (
        const _variant_t & ServerURL,
        const _variant_t & Name,
        enum PjAuthentication AuthenticationType,
        enum PjAccountType AccountType,
        const _variant_t & ShowDialog = vtMissing,
        const _variant_t & Email = vtMissing,
        const _variant_t & WindowsAccount = vtMissing );
    VARIANT_BOOL BoxDataTemplate (
        _bstr_t Name,
        enum PjDataTemplate Action,
        const _variant_t & NewName = vtMissing,
        const _variant_t & Overwrite = vtMissing );
    VARIANT_BOOL BoxCellLayout (
        _bstr_t Name,
        const _variant_t & CellRows = vtMissing,
        const _variant_t & CellColumns = vtMissing,
        const _variant_t & CellWidth = vtMissing,
        const _variant_t & MergeCells = vtMissing );
    VARIANT_BOOL BoxCellEdit (
        _bstr_t Name,
        enum PjCell Cell,
        enum PjField FieldName,
        const _variant_t & Font,
        const _variant_t & FontSize,
        enum PjColor FontColor,
        const _variant_t & Bold,
        const _variant_t & Italic,
        const _variant_t & Underline,
        enum PjAlignment HorizontalAlignment,
        enum PjVerticalAlignment VerticalAlignment,
        const _variant_t & TextLineLimit,
        const _variant_t & ShowLabel,
        const _variant_t & Label,
        enum PjDateFormat DateFormat );
    VARIANT_BOOL ResourceWindowsAccount (
        const _variant_t & Name = vtMissing,
        const _variant_t & ShowDialog = vtMissing );
    VARIANT_BOOL SetRowHeight (
        const _variant_t & Unit = vtMissing,
        const _variant_t & Rows = vtMissing,
        const _variant_t & UseUniqueID = vtMissing );
    VARIANT_BOOL ComAddInsDialog ( );
    VARIANT_BOOL MacroSecurity ( );
    VARIANT_BOOL LayoutSelectionNow ( );
    VARIANT_BOOL BoxAlign (
        enum PjAlign Alignment );
    VARIANT_BOOL ConvertHangulToHanja ( );
    VARIANT_BOOL UpdateProjectToWeb (
        const _variant_t & ServerURL = vtMissing,
        const _variant_t & EmbedProjectFile = vtMissing,
        const _variant_t & OnlyRegisterProject = vtMissing,
        const _variant_t & WaitForCompletion = vtMissing );
    VARIANT_BOOL CustomFieldProperties (
        enum PjCustomField FieldID,
        enum PjCustomFieldAttribute Attribute,
        enum PjSummaryCalc SummaryCalc,
        const _variant_t & GraphicalIndicators = vtMissing,
        const _variant_t & Required = vtMissing );
    VARIANT_BOOL CustomFieldSetFormula (
        enum PjCustomField FieldID,
        const _variant_t & Formula = vtMissing );
    VARIANT_BOOL CustomFieldIndicatorAdd (
        enum PjCustomField FieldID,
        enum PjComparison Test,
        _bstr_t Value,
        enum PjIndicator IndicatorID,
        enum PjCriteriaList CriteriaList,
        const _variant_t & Index = vtMissing );
    VARIANT_BOOL CustomFieldIndicators (
        enum PjCustomField FieldID,
        const _variant_t & SummaryInheritsNonsummary = vtMissing,
        const _variant_t & ProjectInheritsSummary = vtMissing,
        const _variant_t & ShowToolTips = vtMissing );
    VARIANT_BOOL CustomFieldIndicatorDelete (
        enum PjCustomField FieldID,
        short Index,
        enum PjCriteriaList CriteriaList );
    VARIANT_BOOL CustomFieldValueList (
        enum PjCustomField FieldID,
        const _variant_t & ListDefault,
        const _variant_t & DefaultValue,
        const _variant_t & RestrictToList,
        const _variant_t & AppendNew,
        const _variant_t & PromptOnNew,
        enum PjListOrder DisplayOrder );
    VARIANT_BOOL CustomFieldValueListAdd (
        enum PjCustomField FieldID,
        const _variant_t & Value = vtMissing,
        const _variant_t & Description = vtMissing,
        const _variant_t & Phonetic = vtMissing,
        const _variant_t & Index = vtMissing,
        const _variant_t & FieldDefault = vtMissing );
    VARIANT_BOOL CustomFieldValueListDelete (
        enum PjCustomField FieldID,
        short Index );
    VARIANT_BOOL BoxLayout (
        enum PjLayoutMode LayoutMode,
        enum PjLayoutScheme LayoutScheme,
        const _variant_t & SummaryPrecedence,
        enum PjVerticalAlignment RowAlignment,
        enum PjAlignment ColumnAlignment,
        const _variant_t & RowSpacing,
        const _variant_t & ColumnSpacing,
        enum PjRowColSize RowHeight,
        enum PjRowColSize ColumnWidth,
        const _variant_t & AdjustForPageBreaks,
        const _variant_t & ShowSummaryTasks,
        enum PjColor ViewBackgroundColor,
        enum PjBackgroundPattern ViewBackgroundPattern,
        const _variant_t & ShowProgressMarks = vtMissing,
        const _variant_t & ShowPageBreaks = vtMissing,
        const _variant_t & ShowIDOnly = vtMissing );
    VARIANT_BOOL BoxLinks (
        enum PjLinkStyle Style,
        const _variant_t & ShowArrows,
        const _variant_t & ShowLabels,
        enum PjLinkColorMode ColorMode,
        enum PjColor CriticalColor,
        enum PjColor NoncriticalColor );
    VARIANT_BOOL SummaryTasksShow (
        const _variant_t & Show = vtMissing );
    VARIANT_BOOL BoxProgressMarksShow (
        const _variant_t & Show = vtMissing );
    VARIANT_BOOL BoxLinkLabelsShow (
        const _variant_t & Show = vtMissing );
    VARIANT_BOOL BoxLinkStyleToggle (
        const _variant_t & StraightLinks = vtMissing );
    VARIANT_BOOL LayoutRelatedNow ( );
    VARIANT_BOOL BoxSet (
        enum PjBoxSet Action,
        const _variant_t & TaskID = vtMissing,
        const _variant_t & XPosition = vtMissing,
        const _variant_t & YPosition = vtMissing,
        const _variant_t & ProjectName = vtMissing );
    VARIANT_BOOL SetSplitBar (
        const _variant_t & ShowColumns = vtMissing );
    VARIANT_BOOL SetTitleRowHeight (
        const _variant_t & TitleHeight = vtMissing );
    VARIANT_BOOL GoalAreaChange (
        short goalArea );
    VARIANT_BOOL SidepaneToggle (
        const _variant_t & Show = vtMissing );
    VARIANT_BOOL SearchFiles ( );
    VARIANT_BOOL ImportOutlookTasks ( );
    VARIANT_BOOL OptionsInterface (
        const _variant_t & ShowResourceAssignmentIndicators = vtMissing,
        const _variant_t & ShowEditToStartFinishDates = vtMissing,
        const _variant_t & ShowEditsToWorkUnitsDurationIndicators = vtMissing,
        const _variant_t & ShowDeletionInNameColumn = vtMissing,
        const _variant_t & DisplayProjectGuide = vtMissing,
        const _variant_t & ProjectGuideUseDefaultFunctionalLayoutPage = vtMissing,
        const _variant_t & ProjectGuideFunctionalLayoutPage = vtMissing,
        const _variant_t & ProjectGuideUseDefaultContent = vtMissing,
        const _variant_t & ProjectGuideContent = vtMissing,
        const _variant_t & SetAsDefaults = vtMissing );
    VARIANT_BOOL SidepaneTaskChange (
        short ID,
        const _variant_t & IsGoalArea = vtMissing );
    VARIANT_BOOL ImportResourceList (
        const _variant_t & ServerURL = vtMissing );
    VARIANT_BOOL EnterpriseResSubstitutionWizard (
        const _variant_t & ProjectList,
        enum PjResSubstitutionPoolOption PoolOption,
        const _variant_t & RBSorResourceList = vtMissing,
        const _variant_t & FreezeHorizonDate = vtMissing,
        const _variant_t & UpdateProjects = vtMissing,
        const _variant_t & SaveReport = vtMissing,
        const _variant_t & Path = vtMissing );
    VARIANT_BOOL EnterpriseResourcesOpen (
        const _variant_t & EUID,
        enum PjCheckOutType OpenType );
    VARIANT_BOOL EnterpriseResourcesImport (
        const _variant_t & LocalRUIDs = vtMissing );
    VARIANT_BOOL EnterpriseResourceGet (
        const _variant_t & EUID = vtMissing,
        const _variant_t & RUID = vtMissing );
    VARIANT_BOOL EnterpriseProjectImportWizard (
        const _variant_t & Name = vtMissing );
    VARIANT_BOOL EnterpriseTeamBuilder ( );
    VARIANT_BOOL EnterpriseCustomOutlineCodeShare (
        long LinkFrom,
        const _variant_t & LinkTo = vtMissing );
    VARIANT_BOOL EnterpriseCustomizeFields ( );
    VARIANT_BOOL EnterpriseGlobalCheckOut ( );
    VARIANT_BOOL EnterpriseProjectProfiles ( );
    VARIANT_BOOL ResourceAssignmentDialog (
        const _variant_t & ShowResourceListOptions,
        enum PjAssignResourcesListFields ResourceListFields,
        const _variant_t & UseNamedFilter = vtMissing,
        const _variant_t & FilterName = vtMissing,
        const _variant_t & UseAvailableToWorkFilter = vtMissing,
        const _variant_t & AvailableToWork = vtMissing );
    VARIANT_BOOL LoadWebBrowserControl (
        _bstr_t TargetPage,
        const _variant_t & WrapperPage = vtMissing );
    VARIANT_BOOL FileSaveOffline (
        enum PjSaveType Save );
    VARIANT_BOOL HelpReference ( );
    VARIANT_BOOL HelpWhatsNew ( );
    VARIANT_BOOL StopWebBrowserControlNavigation ( );
    VARIANT_BOOL EnterpriseGlobalBackup (
        const _variant_t & BackupFileName = vtMissing );
    VARIANT_BOOL EnterpriseGlobalRestore (
        const _variant_t & ProfileName = vtMissing,
        const _variant_t & RestoreFileName = vtMissing );
    VARIANT_BOOL SpellCheckField (
        enum PjSpellingField FieldName,
        const _variant_t & EnableSpellCheck = vtMissing );
    VARIANT_BOOL AddResourcesFromProjectServer ( );
    VARIANT_BOOL ResetTrackingMethod ( );

    // Properties:
    _MSProjectPtr GetApplication ( );
    void PutApplication ( struct _MSProject * _val );
    _MSProjectPtr GetParent ( );
    void PutParent ( struct _MSProject * _val );
    SelectionPtr GetActiveSelection ( );
    void PutActiveSelection ( struct Selection * _val );
    CellPtr GetActiveCell ( );
    void PutActiveCell ( struct Cell * _val );
    _IProjectDocPtr GetActiveProject ( );
    void PutActiveProject ( struct _IProjectDoc * _val );
    WindowPtr GetActiveWindow ( );
    void PutActiveWindow ( struct Window * _val );
    VARIANT_BOOL GetSupportsMultipleDocuments ( );
    void PutSupportsMultipleDocuments ( VARIANT_BOOL _val );
    VARIANT_BOOL GetSupportsMultipleWindows ( );
    void PutSupportsMultipleWindows ( VARIANT_BOOL _val );
    VARIANT_BOOL GetVisible ( );
    void PutVisible ( VARIANT_BOOL _val );
    _bstr_t GetPathSeparator ( );
    void PutPathSeparator ( _bstr_t _val );
    _bstr_t GetCaption ( );
    void PutCaption ( _bstr_t _val );
    _bstr_t GetName ( );
    void PutName ( _bstr_t _val );
    _bstr_t GetPath ( );
    void PutPath ( _bstr_t _val );
    _bstr_t GetVersion ( );
    void PutVersion ( _bstr_t _val );
    enum PjWindowState GetWindowState ( );
    void PutWindowState ( enum PjWindowState _val );
    enum PjDateOrder GetDateOrder ( );
    void PutDateOrder ( enum PjDateOrder _val );
    _bstr_t GetDateSeparator ( );
    void PutDateSeparator ( _bstr_t _val );
    _bstr_t GetThousandSeparator ( );
    void PutThousandSeparator ( _bstr_t _val );
    _bstr_t GetDecimalSeparator ( );
    void PutDecimalSeparator ( _bstr_t _val );
    _bstr_t GetListSeparator ( );
    void PutListSeparator ( _bstr_t _val );
    _bstr_t GetTimeSeparator ( );
    void PutTimeSeparator ( _bstr_t _val );
    VARIANT_BOOL GetTwelveHourTimeFormat ( );
    void PutTwelveHourTimeFormat ( VARIANT_BOOL _val );
    _bstr_t GetAMText ( );
    void PutAMText ( _bstr_t _val );
    _bstr_t GetPMText ( );
    void PutPMText ( _bstr_t _val );
    _bstr_t GetDefaultView ( );
    void PutDefaultView ( _bstr_t _val );
    VARIANT_BOOL GetDisplayStatusBar ( );
    void PutDisplayStatusBar ( VARIANT_BOOL _val );
    VARIANT_BOOL GetDisplayAlerts ( );
    void PutDisplayAlerts ( VARIANT_BOOL _val );
    VARIANT_BOOL GetDisplayEntryBar ( );
    void PutDisplayEntryBar ( VARIANT_BOOL _val );
    VARIANT_BOOL GetDisplayScrollBars ( );
    void PutDisplayScrollBars ( VARIANT_BOOL _val );
    VARIANT_BOOL GetDisplayWindowsInTaskbar ( );
    void PutDisplayWindowsInTaskbar ( VARIANT_BOOL _val );
    enum PjCalculation GetCalculation ( );
    void PutCalculation ( enum PjCalculation _val );
    VARIANT_BOOL GetAutoLevel ( );
    void PutAutoLevel ( VARIANT_BOOL _val );
    VARIANT_BOOL GetAutoClearLeveling ( );
    void PutAutoClearLeveling ( VARIANT_BOOL _val );
    VARIANT_BOOL GetLevelWithinSlack ( );
    void PutLevelWithinSlack ( VARIANT_BOOL _val );
    enum PjLevelOrder GetLevelOrder ( );
    void PutLevelOrder ( enum PjLevelOrder _val );
    enum PjLevelPeriodBasis GetLevelPeriodBasis ( );
    void PutLevelPeriodBasis ( enum PjLevelPeriodBasis _val );
    VARIANT_BOOL GetLevelIndividualAssignments ( );
    void PutLevelIndividualAssignments ( VARIANT_BOOL _val );
    VARIANT_BOOL GetLevelingCanSplit ( );
    void PutLevelingCanSplit ( VARIANT_BOOL _val );
    VARIANT_BOOL GetMoveAfterReturn ( );
    void PutMoveAfterReturn ( VARIANT_BOOL _val );
    VARIANT_BOOL GetDisplayScheduleMessages ( );
    void PutDisplayScheduleMessages ( VARIANT_BOOL _val );
    enum PjWeekday GetStartWeekOn ( );
    void PutStartWeekOn ( enum PjWeekday _val );
    enum PjMonth GetStartYearIn ( );
    void PutStartYearIn ( enum PjMonth _val );
    VARIANT_BOOL GetCellDragAndDrop ( );
    void PutCellDragAndDrop ( VARIANT_BOOL _val );
    _bstr_t GetUserName ( );
    void PutUserName ( _bstr_t _val );
    VARIANT_BOOL GetDisplayNotesIndicator ( );
    void PutDisplayNotesIndicator ( VARIANT_BOOL _val );
    VARIANT_BOOL GetAskToUpdateLinks ( );
    void PutAskToUpdateLinks ( VARIANT_BOOL _val );
    VARIANT_BOOL GetDisplayPlanningWizard ( );
    void PutDisplayPlanningWizard ( VARIANT_BOOL _val );
    VARIANT_BOOL GetDisplayWizardUsage ( );
    void PutDisplayWizardUsage ( VARIANT_BOOL _val );
    VARIANT_BOOL GetDisplayWizardErrors ( );
    void PutDisplayWizardErrors ( VARIANT_BOOL _val );
    VARIANT_BOOL GetDisplayWizardScheduling ( );
    void PutDisplayWizardScheduling ( VARIANT_BOOL _val );
    VARIANT_BOOL GetShowTipOfDay ( );
    void PutShowTipOfDay ( VARIANT_BOOL _val );
    VARIANT_BOOL GetShowToolTips ( );
    void PutShowToolTips ( VARIANT_BOOL _val );
    VARIANT_BOOL GetShowWelcome ( );
    void PutShowWelcome ( VARIANT_BOOL _val );
    VARIANT_BOOL GetLoadLastFile ( );
    void PutLoadLastFile ( VARIANT_BOOL _val );
    VARIANT_BOOL GetPromptForSummaryInfo ( );
    void PutPromptForSummaryInfo ( VARIANT_BOOL _val );
    VARIANT_BOOL GetDisplayOLEIndicator ( );
    void PutDisplayOLEIndicator ( VARIANT_BOOL _val );
    enum PjDateFormat GetDefaultDateFormat ( );
    void PutDefaultDateFormat ( enum PjDateFormat _val );
    VARIANT_BOOL GetDayLeadingZero ( );
    void PutDayLeadingZero ( VARIANT_BOOL _val );
    VARIANT_BOOL GetMonthLeadingZero ( );
    void PutMonthLeadingZero ( VARIANT_BOOL _val );
    VARIANT_BOOL GetTimeLeadingZero ( );
    void PutTimeLeadingZero ( VARIANT_BOOL _val );
    VARIANT_BOOL GetCopyResourceUsageHeader ( );
    void PutCopyResourceUsageHeader ( VARIANT_BOOL _val );
    long GetRecentFilesMaximum ( );
    void PutRecentFilesMaximum ( long _val );
    VARIANT_BOOL GetDisplayRecentFiles ( );
    void PutDisplayRecentFiles ( VARIANT_BOOL _val );
    VARIANT_BOOL GetMacroVirusProtection ( );
    void PutMacroVirusProtection ( VARIANT_BOOL _val );
    enum PjAssignmentUnits GetShowAssignmentUnitsAs ( );
    void PutShowAssignmentUnitsAs ( enum PjAssignmentUnits _val );
    VARIANT_BOOL GetAutomaticallyFillPhoneticFields ( );
    void PutAutomaticallyFillPhoneticFields ( VARIANT_BOOL _val );
    VARIANT_BOOL GetDefaultAutoFilter ( );
    void PutDefaultAutoFilter ( VARIANT_BOOL _val );
    VARIANT_BOOL GetShowEstimatedDuration ( );
    void PutShowEstimatedDuration ( VARIANT_BOOL _val );
    VARIANT_BOOL GetNewTasksEstimated ( );
    void PutNewTasksEstimated ( VARIANT_BOOL _val );
//    AssistantPtr GetAssistant ( );
    void PutAssistant ( struct Assistant * _val );
    VARIANT_BOOL GetDisplayViewBar ( );
    void PutDisplayViewBar ( VARIANT_BOOL _val );
//    VBEPtr GetVBE ( );
    void PutVBE ( struct VBE * _val );
    enum PjEnableCancelKey GetEnableCancelKey ( );
    void PutEnableCancelKey ( enum PjEnableCancelKey _val );
    VARIANT_BOOL GetUserControl ( );
    void PutUserControl ( VARIANT_BOOL _val );
    double GetUsableWidth ( );
    void PutUsableWidth ( double _val );
    double GetUsableHeight ( );
    void PutUsableHeight ( double _val );
    VARIANT_BOOL GetScreenUpdating ( );
    void PutScreenUpdating ( VARIANT_BOOL _val );
    VARIANT_BOOL GetDisplayProjectGuide ( );
    void PutDisplayProjectGuide ( VARIANT_BOOL _val );
    VARIANT_BOOL GetEnterpriseAllowLocalBaseCalendars ( );
    void PutEnterpriseAllowLocalBaseCalendars ( VARIANT_BOOL _val );
    enum PjEditionType GetEdition ( );
    void PutEdition ( enum PjEditionType _val );
    ProfilesPtr GetProfiles ( );
    void PutProfiles ( struct Profiles * _val );
    CalendarsPtr GetGlobalBaseCalendars ( );
    void PutGlobalBaseCalendars ( struct Calendars * _val );
    ViewsPtr GetGlobalViews ( );
    void PutGlobalViews ( struct Views * _val );
    ViewsSinglePtr GetGlobalViewsSingle ( );
    void PutGlobalViewsSingle ( struct ViewsSingle * _val );
    ViewsCombinationPtr GetGlobalViewsCombination ( );
    void PutGlobalViewsCombination ( struct ViewsCombination * _val );
    TablesPtr GetGlobalTaskTables ( );
    void PutGlobalTaskTables ( struct Tables * _val );
    TablesPtr GetGlobalResourceTables ( );
    void PutGlobalResourceTables ( struct Tables * _val );
    FiltersPtr GetGlobalTaskFilters ( );
    void PutGlobalTaskFilters ( struct Filters * _val );
    FiltersPtr GetGlobalResourceFilters ( );
    void PutGlobalResourceFilters ( struct Filters * _val );
};

struct __declspec(uuid("00020aff-0000-0000-c000-000000000046"))
_MSProject : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetAnswerWizard))
//    AnswerWizardPtr AnswerWizard;
//    __declspec(property(get=GetOperatingSystem))
    _bstr_t OperatingSystem;
    __declspec(property(get=GetWindows))
    WindowsPtr Windows;
    __declspec(property(get=GetCommandBars))
//    _CommandBarsPtr CommandBars;
//    __declspec(property(get=GetFileFormatID))
    _bstr_t FileFormatID[][][];
    __declspec(property(get=GetFileBuildID))
    _bstr_t FileBuildID[][][];
    __declspec(property(get=GetCOMAddIns))
//    COMAddInsPtr COMAddIns;
//    __declspec(property(get=GetApplication,put=PutApplication))
    _MSProjectPtr Application;
    __declspec(property(get=GetParent,put=PutParent))
    _MSProjectPtr Parent;
    __declspec(property(get=GetProjects,put=PutProjects))
    ProjectsPtr Projects;
    __declspec(property(get=GetActiveSelection,put=PutActiveSelection))
    SelectionPtr ActiveSelection;
    __declspec(property(get=GetActiveCell,put=PutActiveCell))
    CellPtr ActiveCell;
    __declspec(property(get=GetActiveProject,put=PutActiveProject))
    _IProjectDocPtr ActiveProject;
    __declspec(property(get=GetActiveWindow,put=PutActiveWindow))
    WindowPtr ActiveWindow;
    __declspec(property(get=GetSupportsMultipleDocuments,put=PutSupportsMultipleDocuments))
    VARIANT_BOOL SupportsMultipleDocuments;
    __declspec(property(get=GetSupportsMultipleWindows,put=PutSupportsMultipleWindows))
    VARIANT_BOOL SupportsMultipleWindows;
    __declspec(property(get=GetVisible,put=PutVisible))
    VARIANT_BOOL Visible;
    __declspec(property(get=GetPathSeparator,put=PutPathSeparator))
    _bstr_t PathSeparator;
    __declspec(property(get=GetCaption,put=PutCaption))
    _bstr_t Caption;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetPath,put=PutPath))
    _bstr_t Path;
    __declspec(property(get=GetVersion,put=PutVersion))
    _bstr_t Version;
    __declspec(property(get=GetWindowState,put=PutWindowState))
    enum PjWindowState WindowState;
    __declspec(property(get=GetLeft,put=PutLeft))
    long Left;
    __declspec(property(get=GetTop,put=PutTop))
    long Top;
    __declspec(property(get=GetWidth,put=PutWidth))
    long Width;
    __declspec(property(get=GetHeight,put=PutHeight))
    long Height;
    __declspec(property(get=GetDateOrder,put=PutDateOrder))
    enum PjDateOrder DateOrder;
    __declspec(property(get=GetDateSeparator,put=PutDateSeparator))
    _bstr_t DateSeparator;
    __declspec(property(get=GetThousandSeparator,put=PutThousandSeparator))
    _bstr_t ThousandSeparator;
    __declspec(property(get=GetDecimalSeparator,put=PutDecimalSeparator))
    _bstr_t DecimalSeparator;
    __declspec(property(get=GetListSeparator,put=PutListSeparator))
    _bstr_t ListSeparator;
    __declspec(property(get=GetTimeSeparator,put=PutTimeSeparator))
    _bstr_t TimeSeparator;
    __declspec(property(get=GetTwelveHourTimeFormat,put=PutTwelveHourTimeFormat))
    VARIANT_BOOL TwelveHourTimeFormat;
    __declspec(property(get=GetAMText,put=PutAMText))
    _bstr_t AMText;
    __declspec(property(get=GetPMText,put=PutPMText))
    _bstr_t PMText;
    __declspec(property(get=GetDefaultView,put=PutDefaultView))
    _bstr_t DefaultView;
    __declspec(property(get=GetDisplayStatusBar,put=PutDisplayStatusBar))
    VARIANT_BOOL DisplayStatusBar;
    __declspec(property(get=GetDisplayAlerts,put=PutDisplayAlerts))
    VARIANT_BOOL DisplayAlerts;
    __declspec(property(get=GetDisplayEntryBar,put=PutDisplayEntryBar))
    VARIANT_BOOL DisplayEntryBar;
    __declspec(property(get=GetDisplayScrollBars,put=PutDisplayScrollBars))
    VARIANT_BOOL DisplayScrollBars;
    __declspec(property(get=GetDisplayWindowsInTaskbar,put=PutDisplayWindowsInTaskbar))
    VARIANT_BOOL DisplayWindowsInTaskbar;
    __declspec(property(get=GetCalculation,put=PutCalculation))
    enum PjCalculation Calculation;
    __declspec(property(get=GetAutoLevel,put=PutAutoLevel))
    VARIANT_BOOL AutoLevel;
    __declspec(property(get=GetAutoClearLeveling,put=PutAutoClearLeveling))
    VARIANT_BOOL AutoClearLeveling;
    __declspec(property(get=GetLevelWithinSlack,put=PutLevelWithinSlack))
    VARIANT_BOOL LevelWithinSlack;
    __declspec(property(get=GetLevelOrder,put=PutLevelOrder))
    enum PjLevelOrder LevelOrder;
    __declspec(property(get=GetLevelPeriodBasis,put=PutLevelPeriodBasis))
    enum PjLevelPeriodBasis LevelPeriodBasis;
    __declspec(property(get=GetLevelIndividualAssignments,put=PutLevelIndividualAssignments))
    VARIANT_BOOL LevelIndividualAssignments;
    __declspec(property(get=GetLevelingCanSplit,put=PutLevelingCanSplit))
    VARIANT_BOOL LevelingCanSplit;
    __declspec(property(get=GetMoveAfterReturn,put=PutMoveAfterReturn))
    VARIANT_BOOL MoveAfterReturn;
    __declspec(property(get=GetDisplayScheduleMessages,put=PutDisplayScheduleMessages))
    VARIANT_BOOL DisplayScheduleMessages;
    __declspec(property(get=GetStartWeekOn,put=PutStartWeekOn))
    enum PjWeekday StartWeekOn;
    __declspec(property(get=GetStartYearIn,put=PutStartYearIn))
    enum PjMonth StartYearIn;
    __declspec(property(get=GetCellDragAndDrop,put=PutCellDragAndDrop))
    VARIANT_BOOL CellDragAndDrop;
    __declspec(property(get=GetUserName,put=PutUserName))
    _bstr_t UserName;
    __declspec(property(get=GetDisplayNotesIndicator,put=PutDisplayNotesIndicator))
    VARIANT_BOOL DisplayNotesIndicator;
    __declspec(property(get=GetAskToUpdateLinks,put=PutAskToUpdateLinks))
    VARIANT_BOOL AskToUpdateLinks;
    __declspec(property(get=GetDisplayPlanningWizard,put=PutDisplayPlanningWizard))
    VARIANT_BOOL DisplayPlanningWizard;
    __declspec(property(get=GetDisplayWizardUsage,put=PutDisplayWizardUsage))
    VARIANT_BOOL DisplayWizardUsage;
    __declspec(property(get=GetDisplayWizardErrors,put=PutDisplayWizardErrors))
    VARIANT_BOOL DisplayWizardErrors;
    __declspec(property(get=GetDisplayWizardScheduling,put=PutDisplayWizardScheduling))
    VARIANT_BOOL DisplayWizardScheduling;
    __declspec(property(get=GetShowTipOfDay,put=PutShowTipOfDay))
    VARIANT_BOOL ShowTipOfDay;
    __declspec(property(get=GetShowToolTips,put=PutShowToolTips))
    VARIANT_BOOL ShowToolTips;
    __declspec(property(get=GetShowWelcome,put=PutShowWelcome))
    VARIANT_BOOL ShowWelcome;
    __declspec(property(get=GetLoadLastFile,put=PutLoadLastFile))
    VARIANT_BOOL LoadLastFile;
    __declspec(property(get=GetPromptForSummaryInfo,put=PutPromptForSummaryInfo))
    VARIANT_BOOL PromptForSummaryInfo;
    __declspec(property(get=GetDisplayOLEIndicator,put=PutDisplayOLEIndicator))
    VARIANT_BOOL DisplayOLEIndicator;
    __declspec(property(get=GetDefaultDateFormat,put=PutDefaultDateFormat))
    enum PjDateFormat DefaultDateFormat;
    __declspec(property(get=GetDayLeadingZero,put=PutDayLeadingZero))
    VARIANT_BOOL DayLeadingZero;
    __declspec(property(get=GetMonthLeadingZero,put=PutMonthLeadingZero))
    VARIANT_BOOL MonthLeadingZero;
    __declspec(property(get=GetTimeLeadingZero,put=PutTimeLeadingZero))
    VARIANT_BOOL TimeLeadingZero;
    __declspec(property(get=GetCopyResourceUsageHeader,put=PutCopyResourceUsageHeader))
    VARIANT_BOOL CopyResourceUsageHeader;
    __declspec(property(get=GetRecentFilesMaximum,put=PutRecentFilesMaximum))
    long RecentFilesMaximum;
    __declspec(property(get=GetDisplayRecentFiles,put=PutDisplayRecentFiles))
    VARIANT_BOOL DisplayRecentFiles;
    __declspec(property(get=GetMacroVirusProtection,put=PutMacroVirusProtection))
    VARIANT_BOOL MacroVirusProtection;
    __declspec(property(get=GetShowAssignmentUnitsAs,put=PutShowAssignmentUnitsAs))
    enum PjAssignmentUnits ShowAssignmentUnitsAs;
    __declspec(property(get=GetAutomaticallyFillPhoneticFields,put=PutAutomaticallyFillPhoneticFields))
    VARIANT_BOOL AutomaticallyFillPhoneticFields;
    __declspec(property(get=GetDefaultAutoFilter,put=PutDefaultAutoFilter))
    VARIANT_BOOL DefaultAutoFilter;
    __declspec(property(get=GetShowEstimatedDuration,put=PutShowEstimatedDuration))
    VARIANT_BOOL ShowEstimatedDuration;
    __declspec(property(get=GetNewTasksEstimated,put=PutNewTasksEstimated))
    VARIANT_BOOL NewTasksEstimated;
    __declspec(property(get=GetAssistant,put=PutAssistant))
//    AssistantPtr Assistant;
//    __declspec(property(get=GetDisplayViewBar,put=PutDisplayViewBar))
    VARIANT_BOOL DisplayViewBar;
    __declspec(property(get=GetVBE,put=PutVBE))
//    VBEPtr VBE;
//    __declspec(property(get=GetEnableCancelKey,put=PutEnableCancelKey))
    enum PjEnableCancelKey EnableCancelKey;
    __declspec(property(get=GetUserControl,put=PutUserControl))
    VARIANT_BOOL UserControl;
    __declspec(property(get=GetUsableWidth,put=PutUsableWidth))
    double UsableWidth;
    __declspec(property(get=GetUsableHeight,put=PutUsableHeight))
    double UsableHeight;
    __declspec(property(get=GetStatusBar,put=PutStatusBar))
    _variant_t StatusBar;
    __declspec(property(get=GetFileSearch,put=PutFileSearch))
//    FileSearchPtr FileSearch;
//    __declspec(property(get=GetScreenUpdating,put=PutScreenUpdating))
    VARIANT_BOOL ScreenUpdating;
    __declspec(property(get=GetDisplayProjectGuide,put=PutDisplayProjectGuide))
    VARIANT_BOOL DisplayProjectGuide;
    __declspec(property(get=GetAutomationSecurity,put=PutAutomationSecurity))
    enum MsoAutomationSecurity AutomationSecurity;
    __declspec(property(get=GetEnterpriseAllowLocalBaseCalendars,put=PutEnterpriseAllowLocalBaseCalendars))
    VARIANT_BOOL EnterpriseAllowLocalBaseCalendars;
    __declspec(property(get=GetEdition,put=PutEdition))
    enum PjEditionType Edition;
    __declspec(property(get=GetProfiles,put=PutProfiles))
    ProfilesPtr Profiles;
    __declspec(property(get=GetGlobalBaseCalendars,put=PutGlobalBaseCalendars))
    CalendarsPtr GlobalBaseCalendars;
    __declspec(property(get=GetGlobalViews,put=PutGlobalViews))
    ViewsPtr GlobalViews;
    __declspec(property(get=GetGlobalViewsSingle,put=PutGlobalViewsSingle))
    ViewsSinglePtr GlobalViewsSingle;
    __declspec(property(get=GetGlobalViewsCombination,put=PutGlobalViewsCombination))
    ViewsCombinationPtr GlobalViewsCombination;
    __declspec(property(get=GetGlobalTaskTables,put=PutGlobalTaskTables))
    TablesPtr GlobalTaskTables;
    __declspec(property(get=GetGlobalResourceTables,put=PutGlobalResourceTables))
    TablesPtr GlobalResourceTables;
    __declspec(property(get=GetGlobalTaskFilters,put=PutGlobalTaskFilters))
    FiltersPtr GlobalTaskFilters;
    __declspec(property(get=GetGlobalResourceFilters,put=PutGlobalResourceFilters))
    FiltersPtr GlobalResourceFilters;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    WindowsPtr GetWindows ( );
//    _CommandBarsPtr GetCommandBars ( );
//    AnswerWizardPtr GetAnswerWizard ( );
    HRESULT Quit (
        enum PjSaveType SaveChanges );
    _bstr_t GetOperatingSystem ( );
    _variant_t DateAdd (
        const _variant_t & StartDate,
        const _variant_t & Duration,
        const _variant_t & Calendar = vtMissing );
    _variant_t DateSubtract (
        const _variant_t & FinishDate,
        const _variant_t & Duration,
        const _variant_t & Calendar = vtMissing );
    _variant_t DateDifference (
        const _variant_t & StartDate,
        const _variant_t & FinishDate,
        const _variant_t & Calendar = vtMissing );
    _bstr_t DurationFormat (
        const _variant_t & Duration,
        const _variant_t & Units = vtMissing );
    _variant_t DurationValue (
        _bstr_t Duration );
    _variant_t DateFormat (
        const _variant_t & Date,
        const _variant_t & Format = vtMissing );
    HRESULT MailLogon (
        const _variant_t & Name = vtMissing,
        const _variant_t & Password = vtMissing,
        const _variant_t & DownloadNewMail = vtMissing );
    HRESULT MailLogoff ( );
    _bstr_t MailSession ( );
    enum PjMailSystem MailSystem ( );
    _variant_t TimescaledData (
        long TaskID,
        long ResourceID,
        const _variant_t & StartDate,
        const _variant_t & EndDate,
        enum PjTimescaledData Type,
        enum PjTimescaleUnit TimeScaleUnit,
        const _variant_t & Count = vtMissing );
    _bstr_t CustomFieldGetName (
        enum PjCustomField FieldID );
    HRESULT Run (
        _bstr_t Name,
        const _variant_t & Arg1 = vtMissing,
        const _variant_t & Arg2 = vtMissing,
        const _variant_t & Arg3 = vtMissing,
        const _variant_t & Arg4 = vtMissing,
        const _variant_t & Arg5 = vtMissing,
        const _variant_t & Arg6 = vtMissing,
        const _variant_t & Arg7 = vtMissing,
        const _variant_t & Arg8 = vtMissing,
        const _variant_t & Arg9 = vtMissing,
        const _variant_t & Arg10 = vtMissing,
        const _variant_t & Arg11 = vtMissing,
        const _variant_t & Arg12 = vtMissing,
        const _variant_t & Arg13 = vtMissing,
        const _variant_t & Arg14 = vtMissing,
        const _variant_t & Arg15 = vtMissing,
        const _variant_t & Arg16 = vtMissing,
        const _variant_t & Arg17 = vtMissing,
        const _variant_t & Arg18 = vtMissing,
        const _variant_t & Arg19 = vtMissing,
        const _variant_t & Arg20 = vtMissing,
        const _variant_t & Arg21 = vtMissing,
        const _variant_t & Arg22 = vtMissing,
        const _variant_t & Arg23 = vtMissing,
        const _variant_t & Arg24 = vtMissing,
        const _variant_t & Arg25 = vtMissing,
        const _variant_t & Arg26 = vtMissing,
        const _variant_t & Arg27 = vtMissing,
        const _variant_t & Arg28 = vtMissing,
        const _variant_t & Arg29 = vtMissing,
        const _variant_t & Arg30 = vtMissing );
    HRESULT ActivateMicrosoftApp (
        enum PjMSApplication Index );
    _bstr_t GetFileFormatID (
        _bstr_t Name,
        const _variant_t & UserID = vtMissing,
        const _variant_t & DatabasePassWord = vtMissing );
    _bstr_t GetFileBuildID (
        _bstr_t Name,
        const _variant_t & UserID = vtMissing,
        const _variant_t & DatabasePassWord = vtMissing );
//    COMAddInsPtr GetCOMAddIns ( );
    long BoxGetXPosition (
        long TaskID,
        const _variant_t & ProjectName = vtMissing );
    long BoxGetYPosition (
        long TaskID,
        const _variant_t & ProjectName = vtMissing );
    _bstr_t CustomFieldGetFormula (
        enum PjCustomField FieldID );
    _bstr_t CustomFieldValueListGetItem (
        enum PjCustomField FieldID,
        enum PjValueListItem Item,
        long Index );
    HRESULT GoalAreaHighlight (
        long goalArea );
    HRESULT SetSidepaneStateButton (
        VARIANT_BOOL DisplayState );
    HRESULT GoalAreaTaskHighlight (
        long TaskID );
    enum PjField FieldNameToFieldConstant (
        _bstr_t FieldName,
        enum PjFieldType FieldType );
    _bstr_t FieldConstantToFieldName (
        enum PjField Field );
    _bstr_t GetProjectServerSettings (
        _bstr_t RequestXML,
        const _variant_t & Project = vtMissing );
    HRESULT UnloadWebBrowserControl (
        VARIANT * Window = &vtMissing );
    int OpenXML (
        _bstr_t XML );
    enum PjServerVersionInfo GetProjectServerVersion (
        _bstr_t ServerURL );
    _variant_t UpdateFromProjectServer (
        _bstr_t DataFile );
    long LocaleID ( );
    HRESULT EnterpriseMakeServerURLTrusted ( );
    VARIANT_BOOL IsURLTrusted (
        _bstr_t URL );
    HRESULT PublishNewAndChangedAssignments (
        VARIANT_BOOL ShowDialog,
        enum PjPublishScope ItemsScope,
        VARIANT_BOOL NotifyResources,
        const _variant_t & NotificationText = vtMissing );
    HRESULT PublishProjectPlan (
        VARIANT_BOOL ShowDialog,
        VARIANT_BOOL PublishFullPlan );
    HRESULT PublishAllInformation ( );
    HRESULT RequestProgressInformation (
        VARIANT_BOOL ShowDialog,
        enum PjPublishScope ItemsScope,
        VARIANT_BOOL NotifyTaskLead,
        const _variant_t & NotificationText = vtMissing,
        const _variant_t & ReportingPeriodFrom = vtMissing,
        const _variant_t & ReportingPeriodTo = vtMissing );
    HRESULT RepublishAssignments (
        VARIANT_BOOL ShowDialog,
        enum PjPublishScope ItemsScope,
        VARIANT_BOOL NotifyResources,
        VARIANT_BOOL OverwriteActuals,
        VARIANT_BOOL BecomeManager,
        const _variant_t & NotificationText = vtMissing );
    long RegisterProject (
        VARIANT_BOOL WaitForCompletion );
    VARIANT_BOOL SaveProjectIfDirty (
        _bstr_t AlertText );
    VARIANT_BOOL Message (
        _bstr_t Message,
        enum PjMessageType Type,
        const _variant_t & YesText = vtMissing,
        const _variant_t & NoText = vtMissing );
    VARIANT_BOOL Alerts (
        const _variant_t & Show = vtMissing );
    VARIANT_BOOL FileNew (
        const _variant_t & SummaryInfo = vtMissing,
        const _variant_t & Template = vtMissing,
        const _variant_t & FileNewDialog = vtMissing,
        const _variant_t & FileNewWorkpane = vtMissing );
    VARIANT_BOOL FileProperties ( );
    VARIANT_BOOL FileOpen (
        const _variant_t & Name,
        const _variant_t & ReadOnly,
        const _variant_t & Merge,
        const _variant_t & TaskInformation,
        const _variant_t & Table,
        const _variant_t & Sheet,
        const _variant_t & NoAuto,
        const _variant_t & UserID,
        const _variant_t & DatabasePassWord,
        const _variant_t & FormatID,
        const _variant_t & Map,
        enum PjPoolOpen openPool,
        const _variant_t & Password = vtMissing,
        const _variant_t & WriteResPassword = vtMissing,
        const _variant_t & IgnoreReadOnlyRecommended = vtMissing,
        const _variant_t & XMLName = vtMissing );
    VARIANT_BOOL Zoom ( );
    VARIANT_BOOL ZoomTimescale (
        const _variant_t & Duration = vtMissing,
        const _variant_t & Entire = vtMissing,
        const _variant_t & Selection = vtMissing,
        const _variant_t & Reset = vtMissing );
    VARIANT_BOOL BoxZoom (
        const _variant_t & Percent = vtMissing,
        const _variant_t & Entire = vtMissing );
    VARIANT_BOOL FileClose (
        enum PjSaveType Save,
        const _variant_t & NoAuto = vtMissing );
    VARIANT_BOOL FileCloseAll (
        enum PjSaveType Save );
    VARIANT_BOOL ResourceSharing (
        const _variant_t & Share = vtMissing,
        const _variant_t & Name = vtMissing,
        const _variant_t & Pool = vtMissing );
    VARIANT_BOOL FileSave ( );
    VARIANT_BOOL FileSaveAs (
        const _variant_t & Name,
        enum PjFileFormat Format,
        const _variant_t & Backup = vtMissing,
        const _variant_t & ReadOnly = vtMissing,
        const _variant_t & TaskInformation = vtMissing,
        const _variant_t & Filtered = vtMissing,
        const _variant_t & Table = vtMissing,
        const _variant_t & UserID = vtMissing,
        const _variant_t & DatabasePassWord = vtMissing,
        const _variant_t & FormatID = vtMissing,
        const _variant_t & Map = vtMissing,
        const _variant_t & Password = vtMissing,
        const _variant_t & WriteResPassword = vtMissing,
        const _variant_t & ClearBaseline = vtMissing,
        const _variant_t & ClearActuals = vtMissing,
        const _variant_t & ClearResourceRates = vtMissing,
        const _variant_t & ClearFixedCosts = vtMissing,
        const _variant_t & XMLName = vtMissing,
        const _variant_t & ClearConfirmed = vtMissing );
    VARIANT_BOOL FileSaveWorkspace (
        const _variant_t & Name = vtMissing );
    VARIANT_BOOL FilePrint (
        const _variant_t & FromPage = vtMissing,
        const _variant_t & ToPage = vtMissing,
        const _variant_t & PageBreaks = vtMissing,
        const _variant_t & Draft = vtMissing,
        const _variant_t & Copies = vtMissing,
        const _variant_t & FromDate = vtMissing,
        const _variant_t & ToDate = vtMissing,
        const _variant_t & OnePageWide = vtMissing,
        const _variant_t & Preview = vtMissing,
        const _variant_t & Color = vtMissing,
        const _variant_t & ShowIEPrintDialog = vtMissing );
    VARIANT_BOOL ReportPrint (
        const _variant_t & Name = vtMissing,
        const _variant_t & FromPage = vtMissing,
        const _variant_t & ToPage = vtMissing,
        const _variant_t & PageBreaks = vtMissing,
        const _variant_t & Draft = vtMissing,
        const _variant_t & Copies = vtMissing,
        const _variant_t & FromDate = vtMissing,
        const _variant_t & ToDate = vtMissing,
        const _variant_t & Preview = vtMissing,
        const _variant_t & Color = vtMissing );
    VARIANT_BOOL FilePrintPreview ( );
    VARIANT_BOOL ReportPrintPreview (
        const _variant_t & Name = vtMissing );
    VARIANT_BOOL FilePrintSetup (
        const _variant_t & Printer = vtMissing );
    VARIANT_BOOL FilePageSetup (
        const _variant_t & Name = vtMissing );
    VARIANT_BOOL FilePageSetupPage (
        const _variant_t & Name,
        const _variant_t & Portrait,
        const _variant_t & PercentScale,
        const _variant_t & PagesTall,
        const _variant_t & PagesWide,
        enum PjPaperSize PaperSize,
        const _variant_t & FirstPageNumber = vtMissing );
    VARIANT_BOOL FilePageSetupMargins (
        const _variant_t & Name = vtMissing,
        const _variant_t & Top = vtMissing,
        const _variant_t & Bottom = vtMissing,
        const _variant_t & Left = vtMissing,
        const _variant_t & Right = vtMissing,
        const _variant_t & Borders = vtMissing );
    VARIANT_BOOL FilePageSetupHeader (
        const _variant_t & Name,
        enum PjAlignment Alignment,
        const _variant_t & Text = vtMissing );
    VARIANT_BOOL FilePageSetupFooter (
        const _variant_t & Name,
        enum PjAlignment Alignment,
        const _variant_t & Text = vtMissing );
    VARIANT_BOOL FilePageSetupLegend (
        const _variant_t & Name,
        const _variant_t & TextWidth,
        const _variant_t & LegendOn,
        enum PjAlignment Alignment,
        const _variant_t & Text,
        const _variant_t & LabelFontName,
        const _variant_t & LabelFontSize,
        const _variant_t & LabelFontBold,
        const _variant_t & LabelFontItalic,
        const _variant_t & LabelFontUnderline,
        enum PjColor LabelFontColor );
    VARIANT_BOOL FilePageSetupView (
        const _variant_t & Name = vtMissing,
        const _variant_t & AllSheetColumns = vtMissing,
        const _variant_t & RepeatColumns = vtMissing,
        const _variant_t & PrintNotes = vtMissing,
        const _variant_t & PrintBlankPages = vtMissing,
        const _variant_t & BestPageFitTimescale = vtMissing,
        const _variant_t & PrintColumnTotals = vtMissing,
        const _variant_t & PrintRowTotals = vtMissing );
    VARIANT_BOOL FilePageSetupCalendar (
        const _variant_t & Name = vtMissing,
        const _variant_t & MonthsPerPage = vtMissing,
        const _variant_t & WeeksPerPage = vtMissing,
        const _variant_t & ScreenWeekHeight = vtMissing,
        const _variant_t & OnlyDaysInMonth = vtMissing,
        const _variant_t & OnlyWeeksInMonth = vtMissing,
        const _variant_t & MonthPreviews = vtMissing,
        const _variant_t & MonthTitle = vtMissing,
        const _variant_t & AdditionalTasks = vtMissing,
        const _variant_t & GroupAdditionalTasks = vtMissing,
        const _variant_t & PrintNotes = vtMissing );
    VARIANT_BOOL FilePageSetupCalendarText (
        const _variant_t & Name = vtMissing,
        const _variant_t & Item = vtMissing,
        const _variant_t & Font = vtMissing,
        const _variant_t & Size = vtMissing,
        const _variant_t & Bold = vtMissing,
        const _variant_t & Italic = vtMissing,
        const _variant_t & Underline = vtMissing,
        const _variant_t & Color = vtMissing );
    VARIANT_BOOL MailOpen (
        const _variant_t & Any = vtMissing );
    VARIANT_BOOL MailSend (
        const _variant_t & To = vtMissing,
        const _variant_t & Cc = vtMissing,
        const _variant_t & Subject = vtMissing,
        const _variant_t & Body = vtMissing,
        const _variant_t & Enclosures = vtMissing,
        const _variant_t & IncludeDocument = vtMissing,
        const _variant_t & ReturnReceipt = vtMissing,
        const _variant_t & Bcc = vtMissing,
        const _variant_t & Urgent = vtMissing,
        const _variant_t & SaveCopy = vtMissing,
        const _variant_t & AddRecipient = vtMissing );
    VARIANT_BOOL MailSendScheduleNote (
        const _variant_t & Manager = vtMissing,
        const _variant_t & Resources = vtMissing,
        const _variant_t & TaskContacts = vtMissing,
        const _variant_t & Selection = vtMissing,
        const _variant_t & IncludeDocument = vtMissing,
        const _variant_t & IncludePicture = vtMissing,
        const _variant_t & Body = vtMissing,
        const _variant_t & Subject = vtMissing );
    VARIANT_BOOL MailPostDocument ( );
    VARIANT_BOOL ODBCManageDataSources ( );
    VARIANT_BOOL ODBCCreateDataSource ( );
    VARIANT_BOOL MailRoutingSlip (
        const _variant_t & To = vtMissing,
        const _variant_t & Subject = vtMissing,
        const _variant_t & Body = vtMissing,
        const _variant_t & AllAtOnce = vtMissing,
        const _variant_t & ReturnWhenDone = vtMissing,
        const _variant_t & TrackStatus = vtMissing,
        const _variant_t & Clear = vtMissing,
        const _variant_t & SendNow = vtMissing );
    VARIANT_BOOL FileLoadLast (
        const _variant_t & Number = vtMissing );
    VARIANT_BOOL FileExit (
        enum PjSaveType Save );
    VARIANT_BOOL MenuBars ( );
    VARIANT_BOOL MenuBarEdit (
        const _variant_t & Copy = vtMissing,
        const _variant_t & Create = vtMissing,
        const _variant_t & Name = vtMissing,
        const _variant_t & NewName = vtMissing );
    VARIANT_BOOL MenuBarApply (
        _bstr_t Name,
        const _variant_t & Default = vtMissing,
        const _variant_t & NoFiles = vtMissing );
    VARIANT_BOOL EditUndo ( );
    VARIANT_BOOL EditCut ( );
    VARIANT_BOOL EditCopy ( );
    VARIANT_BOOL EditCopyPicture (
        const _variant_t & Object,
        const _variant_t & ForPrinter,
        const _variant_t & SelectedRows,
        const _variant_t & FromDate,
        const _variant_t & ToDate,
        const _variant_t & FileName,
        enum PjCopyPictureScaleOption ScaleOption );
    VARIANT_BOOL EditPaste ( );
    VARIANT_BOOL EditPasteSpecial (
        const _variant_t & Link = vtMissing,
        const _variant_t & Type = vtMissing,
        const _variant_t & DisplayAsIcon = vtMissing );
    VARIANT_BOOL EditClearFormats ( );
    VARIANT_BOOL EditClear (
        const _variant_t & Contents = vtMissing,
        const _variant_t & Formats = vtMissing,
        const _variant_t & Notes = vtMissing,
        const _variant_t & Hyperlinks = vtMissing );
    VARIANT_BOOL RowClear ( );
    VARIANT_BOOL DDEPasteLink ( );
    VARIANT_BOOL EditDelete ( );
    VARIANT_BOOL ColumnDelete ( );
    VARIANT_BOOL RowDelete ( );
    VARIANT_BOOL ObjectVerb (
        const _variant_t & Verb = vtMissing );
    VARIANT_BOOL ObjectLinks ( );
    VARIANT_BOOL ObjectChangeIcon ( );
    VARIANT_BOOL ObjectConvert ( );
    VARIANT_BOOL EditInsert ( );
    VARIANT_BOOL ColumnInsert ( );
    VARIANT_BOOL RowInsert ( );
    VARIANT_BOOL LinkTasks ( );
    VARIANT_BOOL LinkTasksEdit (
        long From,
        long To,
        const _variant_t & Delete = vtMissing,
        const _variant_t & Type = vtMissing,
        const _variant_t & Lag = vtMissing,
        const _variant_t & PredecessorProjectName = vtMissing,
        const _variant_t & SuccessorProjectName = vtMissing );
    VARIANT_BOOL UnlinkTasks ( );
    VARIANT_BOOL ResourceAssignment (
        const _variant_t & Resources,
        enum PjResAssignOperation Operation,
        const _variant_t & With = vtMissing );
    VARIANT_BOOL EditGoTo (
        const _variant_t & ID = vtMissing,
        const _variant_t & Date = vtMissing );
    VARIANT_BOOL GotoNextOverAllocation ( );
    VARIANT_BOOL InsertNotes ( );
    VARIANT_BOOL Find (
        const _variant_t & Field = vtMissing,
        const _variant_t & Test = vtMissing,
        const _variant_t & Value = vtMissing,
        const _variant_t & Next = vtMissing,
        const _variant_t & MatchCase = vtMissing );
    VARIANT_BOOL Replace (
        const _variant_t & Field = vtMissing,
        const _variant_t & Test = vtMissing,
        const _variant_t & Value = vtMissing,
        const _variant_t & Replacement = vtMissing,
        const _variant_t & ReplaceAll = vtMissing,
        const _variant_t & Next = vtMissing,
        const _variant_t & MatchCase = vtMissing );
    VARIANT_BOOL SelectAll ( );
    VARIANT_BOOL ObjectInsert ( );
    VARIANT_BOOL SubscribeTo (
        const _variant_t & Edition,
        enum PjSubscribeFormat Format );
    VARIANT_BOOL SubscriberOptions (
        const _variant_t & Name = vtMissing,
        const _variant_t & IsTask = vtMissing,
        const _variant_t & UniqueID = vtMissing,
        const _variant_t & Field = vtMissing,
        const _variant_t & Automatically = vtMissing,
        const _variant_t & Action = vtMissing );
    VARIANT_BOOL CreatePublisher (
        const _variant_t & Edition = vtMissing,
        const _variant_t & Contains = vtMissing );
    VARIANT_BOOL PublisherOptions (
        const _variant_t & Name = vtMissing,
        const _variant_t & View = vtMissing,
        const _variant_t & IsTask = vtMissing,
        const _variant_t & UniqueID = vtMissing,
        const _variant_t & Field = vtMissing,
        const _variant_t & OnSave = vtMissing,
        const _variant_t & Action = vtMissing );
    VARIANT_BOOL EditionStopAll (
        const _variant_t & Stop = vtMissing );
    VARIANT_BOOL ClipboardShow ( );
    VARIANT_BOOL ViewApply (
        const _variant_t & Name = vtMissing,
        const _variant_t & SinglePane = vtMissing,
        const _variant_t & Toggle = vtMissing );
    VARIANT_BOOL ViewEditSingle (
        const _variant_t & Name = vtMissing,
        const _variant_t & Create = vtMissing,
        const _variant_t & NewName = vtMissing,
        const _variant_t & Screen = vtMissing,
        const _variant_t & ShowInMenu = vtMissing,
        const _variant_t & HighlightFilter = vtMissing,
        const _variant_t & Table = vtMissing,
        const _variant_t & Filter = vtMissing,
        const _variant_t & Group = vtMissing );
    VARIANT_BOOL ViewEditCombination (
        const _variant_t & Name = vtMissing,
        const _variant_t & Create = vtMissing,
        const _variant_t & NewName = vtMissing,
        const _variant_t & TopView = vtMissing,
        const _variant_t & BottomView = vtMissing,
        const _variant_t & ShowInMenu = vtMissing );
    VARIANT_BOOL TableApply (
        const _variant_t & Name = vtMissing );
    VARIANT_BOOL TableEdit (
        _bstr_t Name,
        VARIANT_BOOL TaskTable,
        const _variant_t & Create = vtMissing,
        const _variant_t & OverwriteExisting = vtMissing,
        const _variant_t & NewName = vtMissing,
        const _variant_t & FieldName = vtMissing,
        const _variant_t & NewFieldName = vtMissing,
        const _variant_t & Title = vtMissing,
        const _variant_t & Width = vtMissing,
        const _variant_t & Align = vtMissing,
        const _variant_t & ShowInMenu = vtMissing,
        const _variant_t & LockFirstColumn = vtMissing,
        const _variant_t & DateFormat = vtMissing,
        const _variant_t & RowHeight = vtMissing,
        const _variant_t & ColumnPosition = vtMissing,
        const _variant_t & AlignTitle = vtMissing,
        const _variant_t & HeaderAutoRowHeightAdjustment = vtMissing,
        const _variant_t & HeaderTextWrap = vtMissing );
    VARIANT_BOOL FilterApply (
        const _variant_t & Name = vtMissing,
        const _variant_t & Highlight = vtMissing,
        const _variant_t & Value1 = vtMissing,
        const _variant_t & Value2 = vtMissing );
    VARIANT_BOOL FilterEdit (
        _bstr_t Name,
        VARIANT_BOOL TaskFilter,
        const _variant_t & Create = vtMissing,
        const _variant_t & OverwriteExisting = vtMissing,
        const _variant_t & Parenthesis = vtMissing,
        const _variant_t & NewName = vtMissing,
        const _variant_t & FieldName = vtMissing,
        const _variant_t & NewFieldName = vtMissing,
        const _variant_t & Test = vtMissing,
        const _variant_t & Value = vtMissing,
        const _variant_t & Operation = vtMissing,
        const _variant_t & ShowInMenu = vtMissing,
        const _variant_t & ShowSummaryTasks = vtMissing );
    VARIANT_BOOL ProjectSummaryInfo (
        const _variant_t & Project = vtMissing,
        const _variant_t & Title = vtMissing,
        const _variant_t & Subject = vtMissing,
        const _variant_t & Author = vtMissing,
        const _variant_t & Company = vtMissing,
        const _variant_t & Manager = vtMissing,
        const _variant_t & Keywords = vtMissing,
        const _variant_t & Comments = vtMissing,
        const _variant_t & Start = vtMissing,
        const _variant_t & Finish = vtMissing,
        const _variant_t & ScheduleFrom = vtMissing,
        const _variant_t & CurrentDate = vtMissing,
        const _variant_t & Calendar = vtMissing,
        const _variant_t & StatusDate = vtMissing,
        const _variant_t & Priority = vtMissing,
        const _variant_t & PartiallyDisabled = vtMissing );
    VARIANT_BOOL ProjectStatistics (
        const _variant_t & Project = vtMissing );
    VARIANT_BOOL OptionsCalendar (
        const _variant_t & StartWeekOnMonday = vtMissing,
        const _variant_t & StartYearIn = vtMissing,
        const _variant_t & StartTime = vtMissing,
        const _variant_t & FinishTime = vtMissing,
        const _variant_t & HoursPerDay = vtMissing,
        const _variant_t & HoursPerWeek = vtMissing,
        const _variant_t & SetDefaults = vtMissing,
        const _variant_t & StartWeekOn = vtMissing,
        const _variant_t & UseFYStartYear = vtMissing,
        const _variant_t & DaysPerMonth = vtMissing );
    VARIANT_BOOL OptionsEdit (
        const _variant_t & MoveAfterReturn = vtMissing,
        const _variant_t & DragAndDrop = vtMissing,
        const _variant_t & UpdateLinks = vtMissing,
        const _variant_t & CopyResourceUsageHeader = vtMissing,
        const _variant_t & PhoneticInfo = vtMissing,
        const _variant_t & PhoneticType = vtMissing,
        const _variant_t & MinuteLabelDisplay = vtMissing,
        const _variant_t & HourLabelDisplay = vtMissing,
        const _variant_t & DayLabelDisplay = vtMissing,
        const _variant_t & WeekLabelDisplay = vtMissing,
        const _variant_t & YearLabelDisplay = vtMissing,
        const _variant_t & SpaceBeforeTimeLabel = vtMissing,
        const _variant_t & SetDefaults = vtMissing,
        const _variant_t & MonthLabelDisplay = vtMissing,
        const _variant_t & SetDefaultsTimeUnits = vtMissing,
        const _variant_t & HyperlinkColor = vtMissing,
        const _variant_t & FollowedHyperlinkColor = vtMissing,
        const _variant_t & UnderlineHyperlinks = vtMissing,
        const _variant_t & SetDefaultsHyperlink = vtMissing,
        const _variant_t & InCellEditing = vtMissing );
    VARIANT_BOOL OptionsGeneral (
        const _variant_t & PlanningWizard = vtMissing,
        const _variant_t & WizardUsage = vtMissing,
        const _variant_t & WizardErrors = vtMissing,
        const _variant_t & WizardScheduling = vtMissing,
        const _variant_t & ShowTipOfDay = vtMissing,
        const _variant_t & AutoAddResources = vtMissing,
        const _variant_t & StandardRate = vtMissing,
        const _variant_t & OvertimeRate = vtMissing,
        const _variant_t & LastFile = vtMissing,
        const _variant_t & SummaryInfo = vtMissing,
        const _variant_t & UserName = vtMissing,
        const _variant_t & SetDefaults = vtMissing,
        const _variant_t & ShowWelcome = vtMissing,
        const _variant_t & AutoFilter = vtMissing,
        const _variant_t & MacroVirusProtection = vtMissing,
        const _variant_t & DisplayRecentFiles = vtMissing,
        const _variant_t & RecentFilesMaximum = vtMissing,
        const _variant_t & FontConversion = vtMissing,
        const _variant_t & ShowStartupWorkpane = vtMissing );
    VARIANT_BOOL OptionsSchedule (
        const _variant_t & ScheduleMessages = vtMissing,
        const _variant_t & StartOnCurrentDate = vtMissing,
        const _variant_t & AutoLink = vtMissing,
        const _variant_t & AutoSplit = vtMissing,
        const _variant_t & CriticalSlack = vtMissing,
        const _variant_t & TaskType = vtMissing,
        const _variant_t & DurationUnits = vtMissing,
        const _variant_t & WorkUnits = vtMissing,
        const _variant_t & AutoTrack = vtMissing,
        const _variant_t & SetDefaults = vtMissing,
        const _variant_t & AssignmentUnits = vtMissing,
        const _variant_t & EffortDriven = vtMissing,
        const _variant_t & HonorConstraints = vtMissing,
        const _variant_t & ShowEstimated = vtMissing,
        const _variant_t & NewTasksEstimated = vtMissing );
    VARIANT_BOOL OptionsView (
        const _variant_t & DefaultView = vtMissing,
        const _variant_t & DateFormat = vtMissing,
        const _variant_t & ProjectSummary = vtMissing,
        const _variant_t & DisplayStatusBar = vtMissing,
        const _variant_t & DisplayEntryBar = vtMissing,
        const _variant_t & DisplayScrollBars = vtMissing,
        const _variant_t & CurrencySymbol = vtMissing,
        const _variant_t & SymbolPlacement = vtMissing,
        const _variant_t & CurrencyDigits = vtMissing,
        const _variant_t & DisplayOutlineNumber = vtMissing,
        const _variant_t & DisplayOutlineSymbols = vtMissing,
        const _variant_t & DisplayNameIndent = vtMissing,
        const _variant_t & DisplaySummaryTasks = vtMissing,
        const _variant_t & DisplayOLEIndicator = vtMissing,
        const _variant_t & DisplayExternalSuccessors = vtMissing,
        const _variant_t & DisplayExternalPredecessors = vtMissing,
        const _variant_t & CrossProjectLinksInfo = vtMissing,
        const _variant_t & AcceptNewExternalData = vtMissing,
        const _variant_t & DisplayWindowsInTaskbar = vtMissing,
        const _variant_t & DisplayScreentips = vtMissing );
    VARIANT_BOOL OptionsWorkgroup (
        const _variant_t & WorkgroupMessages = vtMissing,
        const _variant_t & ServerURL = vtMissing,
        const _variant_t & ServerPath = vtMissing,
        const _variant_t & ReceiveNotifications = vtMissing,
        const _variant_t & SendHyperlinkNote = vtMissing,
        const _variant_t & HyperlinkColor = vtMissing,
        const _variant_t & FollowedHyperlinkColor = vtMissing,
        const _variant_t & UnderlineHyperlinks = vtMissing,
        const _variant_t & SetDefaults = vtMissing,
        const _variant_t & ServerIdentification = vtMissing,
        const _variant_t & AllowTaskDelegation = vtMissing,
        const _variant_t & UpdateProjectToWeb = vtMissing,
        const _variant_t & PublishInformationOnSave = vtMissing,
        const _variant_t & SetDefaultsMessaging = vtMissing,
        const _variant_t & SetDefaultsWebServer = vtMissing,
        const _variant_t & ManagerEmail = vtMissing,
        const _variant_t & ConfirmationDialog = vtMissing,
        const _variant_t & ChangesMarkAssnDirty = vtMissing );
    VARIANT_BOOL OptionsCalculation (
        const _variant_t & Automatic = vtMissing,
        const _variant_t & AutoTrack = vtMissing,
        const _variant_t & SpreadPercentToStatusDate = vtMissing,
        const _variant_t & SpreadCostsToStatusDate = vtMissing,
        const _variant_t & AutoCalcCosts = vtMissing,
        const _variant_t & FixedCostAccrual = vtMissing,
        const _variant_t & CalcMultipleCriticalPaths = vtMissing,
        const _variant_t & CriticalSlack = vtMissing,
        const _variant_t & SetDefaults = vtMissing,
        const _variant_t & CalcInsProjLikeSummTask = vtMissing,
        const _variant_t & MoveCompleted = vtMissing,
        const _variant_t & AndMoveRemaining = vtMissing,
        const _variant_t & MoveRemaining = vtMissing,
        const _variant_t & AndMoveCompleted = vtMissing,
        const _variant_t & EVMethod = vtMissing,
        const _variant_t & EVBaseline = vtMissing );
    VARIANT_BOOL CalculateAll ( );
    VARIANT_BOOL OptionsPreferences ( );
    VARIANT_BOOL ChangeWorkingTime (
        const _variant_t & CalendarName = vtMissing,
        const _variant_t & Locked = vtMissing );
    VARIANT_BOOL BaseCalendars (
        const _variant_t & Index = vtMissing,
        const _variant_t & Locked = vtMissing );
    VARIANT_BOOL BaseCalendarCreate (
        _bstr_t Name,
        const _variant_t & FromName = vtMissing );
    VARIANT_BOOL BaseCalendarRename (
        _bstr_t FromName,
        _bstr_t ToName );
    VARIANT_BOOL BaseCalendarDelete (
        _bstr_t Name );
    VARIANT_BOOL BaseCalendarEditDays (
        _bstr_t Name,
        const _variant_t & StartDate = vtMissing,
        const _variant_t & EndDate = vtMissing,
        const _variant_t & WeekDay = vtMissing,
        const _variant_t & Working = vtMissing,
        const _variant_t & From1 = vtMissing,
        const _variant_t & To1 = vtMissing,
        const _variant_t & From2 = vtMissing,
        const _variant_t & To2 = vtMissing,
        const _variant_t & From3 = vtMissing,
        const _variant_t & To3 = vtMissing,
        const _variant_t & Default = vtMissing,
        const _variant_t & From4 = vtMissing,
        const _variant_t & To4 = vtMissing,
        const _variant_t & From5 = vtMissing,
        const _variant_t & To5 = vtMissing );
    VARIANT_BOOL ResourceCalendarEditDays (
        _bstr_t ProjectName,
        _bstr_t ResourceName,
        const _variant_t & StartDate = vtMissing,
        const _variant_t & EndDate = vtMissing,
        const _variant_t & WeekDay = vtMissing,
        const _variant_t & Working = vtMissing,
        const _variant_t & Default = vtMissing,
        const _variant_t & From1 = vtMissing,
        const _variant_t & To1 = vtMissing,
        const _variant_t & From2 = vtMissing,
        const _variant_t & To2 = vtMissing,
        const _variant_t & From3 = vtMissing,
        const _variant_t & To3 = vtMissing,
        const _variant_t & From4 = vtMissing,
        const _variant_t & To4 = vtMissing,
        const _variant_t & From5 = vtMissing,
        const _variant_t & To5 = vtMissing );
    VARIANT_BOOL BaseCalendarReset (
        _bstr_t Name );
    VARIANT_BOOL ResourceCalendarReset (
        _bstr_t ProjectName,
        _bstr_t ResourceName,
        const _variant_t & BaseCalendar = vtMissing );
    VARIANT_BOOL ResourceCalendars (
        const _variant_t & Index = vtMissing,
        const _variant_t & Locked = vtMissing );
    VARIANT_BOOL LevelingOptions (
        const _variant_t & Automatic = vtMissing,
        const _variant_t & DelayInSlack = vtMissing,
        const _variant_t & AutoClearLeveling = vtMissing,
        const _variant_t & Order = vtMissing,
        const _variant_t & LevelEntireProject = vtMissing,
        const _variant_t & FromDate = vtMissing,
        const _variant_t & ToDate = vtMissing,
        const _variant_t & PeriodBasis = vtMissing,
        const _variant_t & LevelIndividualAssignments = vtMissing,
        const _variant_t & LevelingCanSplit = vtMissing );
    VARIANT_BOOL LevelNow (
        const _variant_t & All = vtMissing );
    VARIANT_BOOL BaselineSave (
        const _variant_t & All = vtMissing,
        const _variant_t & Copy = vtMissing,
        const _variant_t & Into = vtMissing,
        const _variant_t & RollupToSummaryTasks = vtMissing,
        const _variant_t & RollupFromSubtasks = vtMissing,
        const _variant_t & SetDefaults = vtMissing );
    VARIANT_BOOL UpdateProject (
        const _variant_t & All = vtMissing,
        const _variant_t & UpdateDate = vtMissing,
        const _variant_t & Action = vtMissing );
    VARIANT_BOOL UpdateTasks (
        const _variant_t & PercentComplete = vtMissing,
        const _variant_t & ActualDuration = vtMissing,
        const _variant_t & RemainingDuration = vtMissing,
        const _variant_t & ActualStart = vtMissing,
        const _variant_t & ActualFinish = vtMissing,
        const _variant_t & Notes = vtMissing );
    VARIANT_BOOL WindowNewWindow (
        const _variant_t & Projects = vtMissing,
        const _variant_t & View = vtMissing,
        const _variant_t & AllProjects = vtMissing,
        const _variant_t & ShowDialog = vtMissing );
    VARIANT_BOOL WindowArrangeAll ( );
    VARIANT_BOOL WindowHide (
        const _variant_t & Name = vtMissing );
    VARIANT_BOOL WindowUnhide (
        const _variant_t & Name = vtMissing );
    VARIANT_BOOL WindowActivate (
        const _variant_t & WindowName = vtMissing,
        const _variant_t & DialogID = vtMissing,
        const _variant_t & TopPane = vtMissing );
    VARIANT_BOOL PageBreakSet ( );
    VARIANT_BOOL PageBreakRemove ( );
    VARIANT_BOOL PageBreaksRemoveAll ( );
    VARIANT_BOOL ViewShowResourcesPredecessors ( );
    VARIANT_BOOL ViewShowResourcesSuccessors ( );
    VARIANT_BOOL ViewShowPredecessorsSuccessors ( );
    VARIANT_BOOL ViewShowNotes ( );
    VARIANT_BOOL ViewShowObjects ( );
    VARIANT_BOOL ViewShowOverallocation ( );
    VARIANT_BOOL ViewShowPercentAllocation ( );
    VARIANT_BOOL ViewShowWork ( );
    VARIANT_BOOL ViewShowCost ( );
    VARIANT_BOOL ViewShowSchedule ( );
    VARIANT_BOOL ViewShowPeakUnits ( );
    VARIANT_BOOL ViewShowAvailability ( );
    VARIANT_BOOL ViewShowRemainingAvailability ( );
    VARIANT_BOOL ViewShowCumulativeWork ( );
    VARIANT_BOOL ViewShowCumulativeCost ( );
    VARIANT_BOOL PaneNext ( );
    VARIANT_BOOL PaneCreate ( );
    VARIANT_BOOL FormViewShow ( );
    VARIANT_BOOL PaneClose ( );
    VARIANT_BOOL WindowSplit ( );
    VARIANT_BOOL WindowNext (
        const _variant_t & NoWrap = vtMissing );
    VARIANT_BOOL WindowPrev (
        const _variant_t & NoWrap = vtMissing );
    VARIANT_BOOL DocClose ( );
    VARIANT_BOOL AppMaximize ( );
    VARIANT_BOOL AppMinimize ( );
    VARIANT_BOOL AppMove (
        const _variant_t & XPosition = vtMissing,
        const _variant_t & YPosition = vtMissing,
        const _variant_t & Points = vtMissing );
    VARIANT_BOOL AppRestore ( );
    VARIANT_BOOL AppSize (
        const _variant_t & Width = vtMissing,
        const _variant_t & Height = vtMissing,
        const _variant_t & Points = vtMissing );
    VARIANT_BOOL DocMaximize ( );
    VARIANT_BOOL DocMove (
        const _variant_t & XPosition = vtMissing,
        const _variant_t & YPosition = vtMissing,
        const _variant_t & Points = vtMissing );
    VARIANT_BOOL DocRestore ( );
    VARIANT_BOOL DocSize (
        const _variant_t & Width = vtMissing,
        const _variant_t & Height = vtMissing,
        const _variant_t & Points = vtMissing );
    VARIANT_BOOL OutlineOutdent (
        const _variant_t & Levels = vtMissing );
    VARIANT_BOOL OutlineShowTasks (
        enum PJTaskOutlineShowLevel OutlineNumber,
        const _variant_t & ExpandInsertedProjects = vtMissing );
    VARIANT_BOOL OutlineIndent (
        const _variant_t & Levels = vtMissing );
    VARIANT_BOOL OutlineHideSubTasks ( );
    VARIANT_BOOL OutlineShowSubTasks ( );
    VARIANT_BOOL OutlineShowAllTasks ( );
    VARIANT_BOOL SelectBeginning (
        const _variant_t & Extend = vtMissing );
    VARIANT_BOOL SelectEnd (
        const _variant_t & Extend = vtMissing );
    VARIANT_BOOL SelectRowStart (
        const _variant_t & Extend = vtMissing );
    VARIANT_BOOL SelectRowEnd (
        const _variant_t & Extend = vtMissing );
    VARIANT_BOOL SelectCellLeft (
        const _variant_t & NumCells = vtMissing,
        const _variant_t & Extend = vtMissing );
    VARIANT_BOOL SelectCellRight (
        const _variant_t & NumCells = vtMissing,
        const _variant_t & Extend = vtMissing );
    VARIANT_BOOL SelectCellUp (
        const _variant_t & NumCells = vtMissing,
        const _variant_t & Extend = vtMissing );
    VARIANT_BOOL SelectCellDown (
        const _variant_t & NumCells = vtMissing,
        const _variant_t & Extend = vtMissing );
    VARIANT_BOOL SelectionExtend (
        const _variant_t & Extend = vtMissing,
        const _variant_t & Add = vtMissing );
    VARIANT_BOOL ColumnBestFit (
        const _variant_t & Column = vtMissing );
    VARIANT_BOOL ColumnEdit (
        const _variant_t & Column = vtMissing );
    VARIANT_BOOL SelectRange (
        long Row,
        short Column,
        const _variant_t & RowRelative = vtMissing,
        const _variant_t & Width = vtMissing,
        const _variant_t & Height = vtMissing,
        const _variant_t & Extend = vtMissing,
        const _variant_t & Add = vtMissing );
    VARIANT_BOOL SelectTimescaleRange (
        long Row,
        _bstr_t StartTime,
        short Width,
        long Height );
    VARIANT_BOOL SelectTaskField (
        long Row,
        _bstr_t Column,
        const _variant_t & RowRelative = vtMissing,
        const _variant_t & Width = vtMissing,
        const _variant_t & Height = vtMissing,
        const _variant_t & Extend = vtMissing,
        const _variant_t & Add = vtMissing );
    VARIANT_BOOL SelectResourceField (
        long Row,
        _bstr_t Column,
        const _variant_t & RowRelative = vtMissing,
        const _variant_t & Width = vtMissing,
        const _variant_t & Height = vtMissing,
        const _variant_t & Extend = vtMissing,
        const _variant_t & Add = vtMissing );
    VARIANT_BOOL SelectRow (
        const _variant_t & Row = vtMissing,
        const _variant_t & RowRelative = vtMissing,
        const _variant_t & Height = vtMissing,
        const _variant_t & Extend = vtMissing,
        const _variant_t & Add = vtMissing );
    VARIANT_BOOL SelectColumn (
        const _variant_t & Column = vtMissing,
        const _variant_t & Additional = vtMissing,
        const _variant_t & Extend = vtMissing,
        const _variant_t & Add = vtMissing );
    VARIANT_BOOL SelectTaskColumn (
        const _variant_t & Column = vtMissing,
        const _variant_t & Additional = vtMissing,
        const _variant_t & Extend = vtMissing,
        const _variant_t & Add = vtMissing );
    VARIANT_BOOL SelectResourceColumn (
        const _variant_t & Column = vtMissing,
        const _variant_t & Additional = vtMissing,
        const _variant_t & Extend = vtMissing,
        const _variant_t & Add = vtMissing );
    VARIANT_BOOL SelectTaskCell (
        const _variant_t & Row = vtMissing,
        const _variant_t & Column = vtMissing,
        const _variant_t & RowRelative = vtMissing );
    VARIANT_BOOL SelectResourceCell (
        const _variant_t & Row = vtMissing,
        const _variant_t & Column = vtMissing,
        const _variant_t & RowRelative = vtMissing );
    VARIANT_BOOL SelectCell (
        const _variant_t & Row = vtMissing,
        const _variant_t & Column = vtMissing,
        const _variant_t & RowRelative = vtMissing );
    VARIANT_BOOL SelectSheet ( );
    VARIANT_BOOL DDEInitiate (
        _bstr_t App,
        _bstr_t Topic );
    VARIANT_BOOL DDEExecute (
        _bstr_t Command,
        const _variant_t & TimeOut = vtMissing );
    VARIANT_BOOL DDETerminate ( );
    VARIANT_BOOL InformationDialog (
        const _variant_t & Tab = vtMissing );
    VARIANT_BOOL Form (
        const _variant_t & Name = vtMissing );
    VARIANT_BOOL CustomForms ( );
    VARIANT_BOOL Tables ( );
    VARIANT_BOOL Filters ( );
    VARIANT_BOOL Macro (
        const _variant_t & Name = vtMissing );
    VARIANT_BOOL FillDown (
        const _variant_t & Down = vtMissing );
    VARIANT_BOOL Views ( );
    VARIANT_BOOL CalculateProject ( );
    VARIANT_BOOL LevelingClear (
        const _variant_t & All = vtMissing );
    VARIANT_BOOL SpellingCheck ( );
    VARIANT_BOOL OptionsSpelling (
        const _variant_t & TaskName = vtMissing,
        const _variant_t & TaskNotes = vtMissing,
        const _variant_t & TaskText1 = vtMissing,
        const _variant_t & TaskText2 = vtMissing,
        const _variant_t & TaskText3 = vtMissing,
        const _variant_t & TaskText4 = vtMissing,
        const _variant_t & TaskText5 = vtMissing,
        const _variant_t & TaskText6 = vtMissing,
        const _variant_t & TaskText7 = vtMissing,
        const _variant_t & TaskText8 = vtMissing,
        const _variant_t & TaskText9 = vtMissing,
        const _variant_t & TaskText10 = vtMissing,
        const _variant_t & ResourceCode = vtMissing,
        const _variant_t & ResourceName = vtMissing,
        const _variant_t & ResourceNotes = vtMissing,
        const _variant_t & ResourceGroup = vtMissing,
        const _variant_t & ResourceText1 = vtMissing,
        const _variant_t & ResourceText2 = vtMissing,
        const _variant_t & ResourceText3 = vtMissing,
        const _variant_t & ResourceText4 = vtMissing,
        const _variant_t & ResourceText5 = vtMissing,
        const _variant_t & AssignNotes = vtMissing,
        const _variant_t & IgnoreUppercase = vtMissing,
        const _variant_t & IgnoreNumberWords = vtMissing,
        const _variant_t & AlwaysSuggest = vtMissing,
        const _variant_t & UseCustomDictionary = vtMissing );
    VARIANT_BOOL WindowMoreWindows ( );
    VARIANT_BOOL HelpContents ( );
    VARIANT_BOOL HelpSearch ( );
    VARIANT_BOOL HelpOnlineIndex ( );
    VARIANT_BOOL HelpAbout ( );
    VARIANT_BOOL HelpLaunch (
        const _variant_t & FileName = vtMissing,
        const _variant_t & ContextNumber = vtMissing,
        const _variant_t & Search = vtMissing,
        const _variant_t & SearchKey = vtMissing );
    VARIANT_BOOL HelpCueCards (
        const _variant_t & FileName = vtMissing,
        const _variant_t & ContextNumber = vtMissing );
    VARIANT_BOOL HelpTopics ( );
    VARIANT_BOOL HelpAnswerWizard ( );
    VARIANT_BOOL HelpMSProjectFundamentals ( );
    VARIANT_BOOL AutoCorrect ( );
    VARIANT_BOOL HelpQuickPreview ( );
    VARIANT_BOOL HelpTechnicalSupport ( );
    VARIANT_BOOL HelpCreateYourProject ( );
    VARIANT_BOOL HelpContextHelp ( );
    VARIANT_BOOL TextStyles (
        const _variant_t & Item = vtMissing,
        const _variant_t & Font = vtMissing,
        const _variant_t & Size = vtMissing,
        const _variant_t & Bold = vtMissing,
        const _variant_t & Italic = vtMissing,
        const _variant_t & Underline = vtMissing,
        const _variant_t & Color = vtMissing );
    VARIANT_BOOL DetailStylesFormat (
        const _variant_t & Item = vtMissing,
        const _variant_t & Font = vtMissing,
        const _variant_t & Size = vtMissing,
        const _variant_t & Bold = vtMissing,
        const _variant_t & Italic = vtMissing,
        const _variant_t & Underline = vtMissing,
        const _variant_t & Color = vtMissing,
        const _variant_t & CellColor = vtMissing,
        const _variant_t & Pattern = vtMissing,
        const _variant_t & ShowInMenu = vtMissing );
    VARIANT_BOOL DetailStylesAdd (
        enum PjTimescaledData Item,
        const _variant_t & Position = vtMissing );
    VARIANT_BOOL DetailStylesRemove (
        enum PjTimescaledData Item );
    VARIANT_BOOL DetailStylesRemoveAll ( );
    VARIANT_BOOL Font (
        const _variant_t & Name = vtMissing,
        const _variant_t & Size = vtMissing,
        const _variant_t & Bold = vtMissing,
        const _variant_t & Italic = vtMissing,
        const _variant_t & Underline = vtMissing,
        const _variant_t & Color = vtMissing,
        const _variant_t & Reset = vtMissing );
    VARIANT_BOOL Timescale ( );
    VARIANT_BOOL TimescaleEdit (
        const _variant_t & MajorUnits = vtMissing,
        const _variant_t & MinorUnits = vtMissing,
        const _variant_t & MajorLabel = vtMissing,
        const _variant_t & MinorLabel = vtMissing,
        const _variant_t & MajorAlign = vtMissing,
        const _variant_t & MinorAlign = vtMissing,
        const _variant_t & MajorCount = vtMissing,
        const _variant_t & MinorCount = vtMissing,
        const _variant_t & MajorTicks = vtMissing,
        const _variant_t & MinorTicks = vtMissing,
        const _variant_t & Enlarge = vtMissing,
        const _variant_t & Separator = vtMissing,
        const _variant_t & MajorUseFY = vtMissing,
        const _variant_t & MinorUseFY = vtMissing,
        const _variant_t & TopUnits = vtMissing,
        const _variant_t & TopLabel = vtMissing,
        const _variant_t & TopAlign = vtMissing,
        const _variant_t & TopCount = vtMissing,
        const _variant_t & TopTicks = vtMissing,
        const _variant_t & TopUseFY = vtMissing,
        const _variant_t & TierCount = vtMissing );
    VARIANT_BOOL Sort (
        const _variant_t & Key1 = vtMissing,
        const _variant_t & Ascending1 = vtMissing,
        const _variant_t & Key2 = vtMissing,
        const _variant_t & Ascending2 = vtMissing,
        const _variant_t & Key3 = vtMissing,
        const _variant_t & Ascending3 = vtMissing,
        const _variant_t & Renumber = vtMissing,
        const _variant_t & Outline = vtMissing );
    VARIANT_BOOL BarBoxStyles ( );
    VARIANT_BOOL GanttBarFormat (
        const _variant_t & TaskID = vtMissing,
        const _variant_t & GanttStyle = vtMissing,
        const _variant_t & StartShape = vtMissing,
        const _variant_t & StartType = vtMissing,
        const _variant_t & StartColor = vtMissing,
        const _variant_t & MiddleShape = vtMissing,
        const _variant_t & MiddlePattern = vtMissing,
        const _variant_t & MiddleColor = vtMissing,
        const _variant_t & EndShape = vtMissing,
        const _variant_t & EndType = vtMissing,
        const _variant_t & EndColor = vtMissing,
        const _variant_t & LeftText = vtMissing,
        const _variant_t & RightText = vtMissing,
        const _variant_t & TopText = vtMissing,
        const _variant_t & BottomText = vtMissing,
        const _variant_t & InsideText = vtMissing,
        const _variant_t & Reset = vtMissing,
        const _variant_t & ProjectName = vtMissing );
    VARIANT_BOOL TimescaleNonWorking (
        const _variant_t & Draw = vtMissing,
        const _variant_t & Calendar = vtMissing,
        const _variant_t & Color = vtMissing,
        const _variant_t & Pattern = vtMissing );
    VARIANT_BOOL BoxShowHideFields (
        const _variant_t & Show = vtMissing );
    VARIANT_BOOL Layout ( );
    VARIANT_BOOL PERTLayout (
        const _variant_t & Straight = vtMissing,
        const _variant_t & DisplayArrows = vtMissing,
        const _variant_t & AdjustForPageBreaks = vtMissing,
        const _variant_t & DisplayPageBreaks = vtMissing );
    VARIANT_BOOL LayoutNow ( );
    VARIANT_BOOL PERTBorders (
        const _variant_t & CriticalStyle = vtMissing,
        const _variant_t & CriticalColor = vtMissing,
        const _variant_t & NoncriticalStyle = vtMissing,
        const _variant_t & NoncriticalColor = vtMissing,
        const _variant_t & CriticalMilestoneStyle = vtMissing,
        const _variant_t & CriticalMilestoneColor = vtMissing,
        const _variant_t & NoncriticalMilestoneStyle = vtMissing,
        const _variant_t & NoncriticalMilestoneColor = vtMissing,
        const _variant_t & CriticalSummaryStyle = vtMissing,
        const _variant_t & CriticalSummaryColor = vtMissing,
        const _variant_t & NoncriticalSummaryStyle = vtMissing,
        const _variant_t & NoncriticalSummaryColor = vtMissing,
        const _variant_t & CriticalSubprojectStyle = vtMissing,
        const _variant_t & CriticalSubprojectColor = vtMissing,
        const _variant_t & NoncriticalSubprojectStyle = vtMissing,
        const _variant_t & NoncriticalSubprojectColor = vtMissing,
        const _variant_t & CriticalMarkedStyle = vtMissing,
        const _variant_t & CriticalMarkedColor = vtMissing,
        const _variant_t & NoncriticalMarkedStyle = vtMissing,
        const _variant_t & NoncriticalMarkedColor = vtMissing,
        const _variant_t & CriticalExternalTaskStyle = vtMissing,
        const _variant_t & CriticalExternalTaskColor = vtMissing,
        const _variant_t & NoncriticalExternalTaskStyle = vtMissing,
        const _variant_t & NoncriticalExternalTaskColor = vtMissing );
    VARIANT_BOOL Gridlines ( );
    VARIANT_BOOL GridlinesEdit (
        enum PjGridline Item,
        const _variant_t & NormalType = vtMissing,
        const _variant_t & NormalColor = vtMissing,
        const _variant_t & Interval = vtMissing,
        const _variant_t & IntervalType = vtMissing,
        const _variant_t & IntervalColor = vtMissing );
    VARIANT_BOOL ViewShowSelectedTasks (
        const _variant_t & Show = vtMissing );
    VARIANT_BOOL PageBreaksShow (
        const _variant_t & Show = vtMissing );
    VARIANT_BOOL FindNext ( );
    VARIANT_BOOL FindPrevious ( );
    VARIANT_BOOL ZoomOut ( );
    VARIANT_BOOL ZoomIn ( );
    VARIANT_BOOL SetField (
        _bstr_t Field,
        _bstr_t Value,
        const _variant_t & Create = vtMissing );
    VARIANT_BOOL SetTaskField (
        _bstr_t Field,
        _bstr_t Value,
        const _variant_t & AllSelectedTasks = vtMissing,
        const _variant_t & Create = vtMissing,
        const _variant_t & TaskID = vtMissing,
        const _variant_t & ProjectName = vtMissing );
    VARIANT_BOOL SetResourceField (
        _bstr_t Field,
        _bstr_t Value,
        const _variant_t & AllSelectedResources = vtMissing,
        const _variant_t & Create = vtMissing,
        const _variant_t & ResourceID = vtMissing,
        const _variant_t & ProjectName = vtMissing );
    VARIANT_BOOL SetActiveCell (
        _bstr_t Value,
        const _variant_t & Create = vtMissing );
    _variant_t CheckField (
        _bstr_t Field,
        _bstr_t Value,
        const _variant_t & Test = vtMissing,
        const _variant_t & Op = vtMissing,
        const _variant_t & Field2 = vtMissing,
        const _variant_t & Value2 = vtMissing,
        const _variant_t & Test2 = vtMissing );
    VARIANT_BOOL SetMatchingField (
        _bstr_t Field,
        _bstr_t Value,
        _bstr_t CheckField,
        _bstr_t CheckValue,
        const _variant_t & CheckTest = vtMissing,
        const _variant_t & CheckOperation = vtMissing,
        const _variant_t & CheckField2 = vtMissing,
        const _variant_t & CheckValue2 = vtMissing,
        const _variant_t & CheckTest2 = vtMissing );
    VARIANT_BOOL AppExecute (
        const _variant_t & Window = vtMissing,
        const _variant_t & Command = vtMissing,
        const _variant_t & Minimize = vtMissing,
        const _variant_t & Activate = vtMissing );
    VARIANT_BOOL AppLaunch (
        _bstr_t Application,
        const _variant_t & Document = vtMissing,
        const _variant_t & Activate = vtMissing );
    VARIANT_BOOL DDELinksUpdate ( );
    VARIANT_BOOL GotoTaskDates ( );
    VARIANT_BOOL GanttBarLinks (
        enum PjGanttBarLink Display );
    VARIANT_BOOL GanttShowDrawings (
        const _variant_t & Display = vtMissing );
    VARIANT_BOOL BarRounding (
        const _variant_t & On = vtMissing );
    VARIANT_BOOL GanttRollup (
        const _variant_t & AlwaysRollup = vtMissing,
        const _variant_t & HideWhenSummaryExpanded = vtMissing );
    VARIANT_BOOL GanttBarTextDateFormat (
        enum PjDateFormat DateFormat );
    VARIANT_BOOL GanttBarSize (
        enum PjBarSize Size );
    VARIANT_BOOL GanttBarStyleDelete (
        _bstr_t Item );
    VARIANT_BOOL GanttBarStyleEdit (
        _bstr_t Item,
        const _variant_t & Create = vtMissing,
        const _variant_t & Name = vtMissing,
        const _variant_t & StartShape = vtMissing,
        const _variant_t & StartType = vtMissing,
        const _variant_t & StartColor = vtMissing,
        const _variant_t & MiddleShape = vtMissing,
        const _variant_t & MiddleColor = vtMissing,
        const _variant_t & MiddlePattern = vtMissing,
        const _variant_t & EndShape = vtMissing,
        const _variant_t & EndType = vtMissing,
        const _variant_t & EndColor = vtMissing,
        const _variant_t & ShowFor = vtMissing,
        const _variant_t & Row = vtMissing,
        const _variant_t & From = vtMissing,
        const _variant_t & To = vtMissing,
        const _variant_t & BottomText = vtMissing,
        const _variant_t & TopText = vtMissing,
        const _variant_t & LeftText = vtMissing,
        const _variant_t & RightText = vtMissing,
        const _variant_t & InsideText = vtMissing );
    VARIANT_BOOL PERTBoxStyles (
        const _variant_t & Size = vtMissing,
        const _variant_t & DateFormat = vtMissing,
        const _variant_t & Gridlines = vtMissing,
        const _variant_t & CrossMarks = vtMissing,
        const _variant_t & Field1 = vtMissing,
        const _variant_t & Field2 = vtMissing,
        const _variant_t & Field3 = vtMissing,
        const _variant_t & Field4 = vtMissing,
        const _variant_t & Field5 = vtMissing );
    VARIANT_BOOL PERTSetTask (
        const _variant_t & Create = vtMissing,
        const _variant_t & Move = vtMissing,
        const _variant_t & TaskID = vtMissing,
        const _variant_t & XPosition = vtMissing,
        const _variant_t & YPosition = vtMissing );
    VARIANT_BOOL ResourceGraphBarStyles (
        const _variant_t & TopLeftShowAs = vtMissing,
        const _variant_t & TopLeftColor = vtMissing,
        const _variant_t & TopLeftPattern = vtMissing,
        const _variant_t & BottomLeftShowAs = vtMissing,
        const _variant_t & BottomLeftColor = vtMissing,
        const _variant_t & BottomLeftPattern = vtMissing,
        const _variant_t & TopRightShowAs = vtMissing,
        const _variant_t & TopRightColor = vtMissing,
        const _variant_t & TopRightPattern = vtMissing,
        const _variant_t & BottomRightShowAs = vtMissing,
        const _variant_t & BottomRightColor = vtMissing,
        const _variant_t & BottomRightPattern = vtMissing,
        const _variant_t & ShowValues = vtMissing,
        const _variant_t & ShowAvailabilityLine = vtMissing,
        const _variant_t & PercentBarOverlap = vtMissing );
    VARIANT_BOOL ConsolidateProjects (
        const _variant_t & Filenames,
        const _variant_t & NewWindow,
        const _variant_t & AttachToSources,
        const _variant_t & PoolResources,
        const _variant_t & HideSubtasks,
        enum PjPoolOpen openPool,
        const _variant_t & UserID = vtMissing,
        const _variant_t & Password = vtMissing );
    VARIANT_BOOL Organizer (
        enum PjOrganizer Type,
        const _variant_t & Task = vtMissing );
    VARIANT_BOOL OrganizerMoveItem (
        const _variant_t & Type = vtMissing,
        const _variant_t & FileName = vtMissing,
        const _variant_t & ToFileName = vtMissing,
        const _variant_t & Name = vtMissing,
        const _variant_t & Task = vtMissing );
    VARIANT_BOOL OrganizerDeleteItem (
        const _variant_t & Type = vtMissing,
        const _variant_t & FileName = vtMissing,
        const _variant_t & Name = vtMissing,
        const _variant_t & Task = vtMissing );
    VARIANT_BOOL OrganizerRenameItem (
        const _variant_t & Type = vtMissing,
        const _variant_t & FileName = vtMissing,
        const _variant_t & Name = vtMissing,
        const _variant_t & NewName = vtMissing,
        const _variant_t & Task = vtMissing );
    VARIANT_BOOL RecurringTaskInsert ( );
    VARIANT_BOOL CalendarTimescale ( );
    VARIANT_BOOL CalendarDateBoxes (
        const _variant_t & TopLeft = vtMissing,
        const _variant_t & TopRight = vtMissing,
        const _variant_t & BottomLeft = vtMissing,
        const _variant_t & BottomRight = vtMissing,
        const _variant_t & TopColor = vtMissing,
        const _variant_t & BottomColor = vtMissing,
        const _variant_t & TopPattern = vtMissing,
        const _variant_t & BottomPattern = vtMissing );
    VARIANT_BOOL CalendarWeekHeadings (
        const _variant_t & MonthTitle = vtMissing,
        const _variant_t & WeekTitle = vtMissing,
        const _variant_t & DayTitle = vtMissing,
        const _variant_t & ShowPreview = vtMissing,
        const _variant_t & DaysPerWeek = vtMissing );
    VARIANT_BOOL CalendarDateShadingEdit (
        enum PjCalendarShading Item,
        const _variant_t & Pattern = vtMissing,
        const _variant_t & Color = vtMissing );
    VARIANT_BOOL CalendarDateShading (
        const _variant_t & BaseCalendarName = vtMissing,
        const _variant_t & ResourceUniqueID = vtMissing,
        const _variant_t & ProjectIndex = vtMissing );
    VARIANT_BOOL ZoomCalendar (
        const _variant_t & NumWeeks = vtMissing,
        const _variant_t & StartDate = vtMissing,
        const _variant_t & EndDate = vtMissing );
    VARIANT_BOOL CalendarLayout (
        const _variant_t & SortOrder = vtMissing,
        const _variant_t & AutoLayout = vtMissing );
    VARIANT_BOOL CalendarBarStyles (
        const _variant_t & BarRounding = vtMissing );
    VARIANT_BOOL CalendarBarStylesEdit (
        enum PjBarItem Item,
        const _variant_t & Bar = vtMissing,
        const _variant_t & Pattern = vtMissing,
        const _variant_t & Color = vtMissing,
        const _variant_t & Align = vtMissing,
        const _variant_t & Wrap = vtMissing,
        const _variant_t & Shadow = vtMissing,
        const _variant_t & Field1 = vtMissing,
        const _variant_t & Field2 = vtMissing,
        const _variant_t & Field3 = vtMissing,
        const _variant_t & Field4 = vtMissing,
        const _variant_t & Field5 = vtMissing,
        const _variant_t & SplitPattern = vtMissing );
    VARIANT_BOOL CalendarBestFitWeekHeight ( );
    VARIANT_BOOL DrawingCreate (
        enum PjShape Type,
        const _variant_t & Behind = vtMissing );
    VARIANT_BOOL DrawingMove (
        const _variant_t & Forward = vtMissing,
        const _variant_t & Full = vtMissing );
    VARIANT_BOOL DrawingReshape ( );
    VARIANT_BOOL DrawingProperties (
        const _variant_t & SizePositionTab = vtMissing );
    VARIANT_BOOL DrawingCycleColor ( );
    VARIANT_BOOL FormatCopy ( );
    VARIANT_BOOL FormatPaste ( );
    VARIANT_BOOL FormatPainter ( );
    VARIANT_BOOL Toolbars (
        const _variant_t & Action = vtMissing,
        const _variant_t & ToolbarName = vtMissing,
        const _variant_t & NewToolbarName = vtMissing );
    VARIANT_BOOL ToolbarInsertTool (
        _bstr_t ToolbarName,
        short ButtonIndex,
        const _variant_t & Command = vtMissing,
        const _variant_t & FaceIndex = vtMissing,
        const _variant_t & Description = vtMissing,
        const _variant_t & ToolTip = vtMissing );
    VARIANT_BOOL ToolbarDeleteTool (
        _bstr_t ToolbarName,
        short ButtonIndex );
    VARIANT_BOOL ToolbarsCustomize ( );
    VARIANT_BOOL ToolbarCustomizeTool (
        const _variant_t & ToolbarName = vtMissing,
        const _variant_t & ButtonIndex = vtMissing,
        const _variant_t & Command = vtMissing,
        const _variant_t & FaceIndex = vtMissing,
        const _variant_t & Description = vtMissing,
        const _variant_t & ToolTip = vtMissing );
    VARIANT_BOOL ToolbarCopyToolFace (
        _bstr_t ToolbarName,
        short ButtonIndex );
    VARIANT_BOOL ToolbarPasteToolFace (
        _bstr_t ToolbarName,
        short ButtonIndex );
    VARIANT_BOOL FontBold (
        const _variant_t & Set = vtMissing );
    VARIANT_BOOL FontItalic (
        const _variant_t & Set = vtMissing );
    VARIANT_BOOL FontUnderLine (
        const _variant_t & Set = vtMissing );
    VARIANT_BOOL ColumnAlignment (
        enum PjAlignment Align );
    VARIANT_BOOL Reports ( );
    VARIANT_BOOL TipOfTheDay ( );
    VARIANT_BOOL FindFile ( );
    VARIANT_BOOL MailUpdateProject (
        _bstr_t DataFile );
    VARIANT_BOOL MailSendProjectMail (
        const _variant_t & MessageType = vtMissing,
        const _variant_t & Subject = vtMissing,
        const _variant_t & Body = vtMissing,
        const _variant_t & Fields = vtMissing,
        const _variant_t & UpdateAsOf = vtMissing,
        const _variant_t & ShowDialog = vtMissing,
        const _variant_t & InstallationMessage = vtMissing,
        const _variant_t & UpdateFrom = vtMissing,
        const _variant_t & PublishScope = vtMissing );
    VARIANT_BOOL WebInbox ( );
    VARIANT_BOOL GanttChartWizard ( );
    VARIANT_BOOL DrawingToolbarShow ( );
    VARIANT_BOOL ReminderSet (
        const _variant_t & Start = vtMissing,
        const _variant_t & LeadTime = vtMissing );
    VARIANT_BOOL SchedulePlusReminderSet (
        const _variant_t & Start = vtMissing,
        const _variant_t & LeadTime = vtMissing );
    VARIANT_BOOL CalendarTaskList (
        const _variant_t & Date = vtMissing );
    VARIANT_BOOL OutlineSymbolsToggle (
        const _variant_t & Show = vtMissing );
    VARIANT_BOOL ResourceSharingPoolAction (
        enum PjPoolAction Action,
        const _variant_t & FileName = vtMissing,
        const _variant_t & ReadOnly = vtMissing );
    VARIANT_BOOL ResourceActiveDirectory ( );
    VARIANT_BOOL ResourceAddressBook ( );
    VARIANT_BOOL ResourceDetails (
        const _variant_t & Name = vtMissing );
    VARIANT_BOOL MailProjectMailCustomize (
        const _variant_t & Action = vtMissing,
        const _variant_t & Position = vtMissing,
        const _variant_t & FieldID = vtMissing,
        const _variant_t & Title = vtMissing,
        const _variant_t & IncludeInTeamStatus = vtMissing,
        const _variant_t & Editable = vtMissing,
        const _variant_t & UseAssignmentField = vtMissing );
    VARIANT_BOOL FileQuit (
        enum PjSaveType Save );
    VARIANT_BOOL About ( );
    VARIANT_BOOL DetailStylesProperties (
        const _variant_t & AlignCellData = vtMissing,
        const _variant_t & RepeatRowLabel = vtMissing,
        const _variant_t & ShortLabels = vtMissing,
        const _variant_t & DisplayDetailsColumn = vtMissing );
    VARIANT_BOOL DetailStylesToggleItem (
        enum PjTimescaledData Item );
    VARIANT_BOOL AutoFilter ( );
    VARIANT_BOOL ViewBar ( );
    VARIANT_BOOL MacroShowVba ( );
    VARIANT_BOOL MacroShowCode ( );
    VARIANT_BOOL WebGoBack ( );
    VARIANT_BOOL WebGoForward ( );
    VARIANT_BOOL WebStopLoading ( );
    VARIANT_BOOL WebRefresh ( );
    VARIANT_BOOL WebOpenStartPage ( );
    VARIANT_BOOL WebOpenSearchPage ( );
    VARIANT_BOOL WebHideToolbars (
        const _variant_t & Hide = vtMissing );
    VARIANT_BOOL FollowHyperlink (
        const _variant_t & Address = vtMissing,
        const _variant_t & SubAddress = vtMissing,
        const _variant_t & AddHistory = vtMissing,
        const _variant_t & NewWindow = vtMissing );
    VARIANT_BOOL EditPasteAsHyperlink ( );
    VARIANT_BOOL InsertHyperlink (
        const _variant_t & Name = vtMissing,
        const _variant_t & Address = vtMissing,
        const _variant_t & SubAddress = vtMissing,
        const _variant_t & ScreenTip = vtMissing );
    VARIANT_BOOL EditHyperlink (
        const _variant_t & Name = vtMissing,
        const _variant_t & Address = vtMissing,
        const _variant_t & SubAddress = vtMissing,
        const _variant_t & ScreenTip = vtMissing );
    VARIANT_BOOL WebOpenHyperlink (
        const _variant_t & Address = vtMissing,
        const _variant_t & SubAddress = vtMissing,
        const _variant_t & AddHistory = vtMissing,
        const _variant_t & NewWindow = vtMissing );
    VARIANT_BOOL WebCopyHyperlink ( );
    VARIANT_BOOL WebAddToFavorites (
        const _variant_t & CurrentLink = vtMissing );
    VARIANT_BOOL EditClearHyperlink ( );
    VARIANT_BOOL WebSetStartPage (
        const _variant_t & Address = vtMissing );
    VARIANT_BOOL WebSetSearchPage (
        const _variant_t & Address = vtMissing );
    VARIANT_BOOL WebOpenFavorites ( );
    VARIANT_BOOL WebToolbar (
        const _variant_t & Show = vtMissing );
    VARIANT_BOOL SplitTask (
        const _variant_t & Lock = vtMissing );
    VARIANT_BOOL CustomFieldRename (
        enum PjCustomField FieldID,
        const _variant_t & NewName = vtMissing,
        const _variant_t & Phonetic = vtMissing );
    VARIANT_BOOL CustomizeField ( );
    VARIANT_BOOL GanttShowBarSplits (
        const _variant_t & Display = vtMissing );
    VARIANT_BOOL CalendarShowBarSplits (
        const _variant_t & Display = vtMissing );
    VARIANT_BOOL MapEdit (
        const _variant_t & Name = vtMissing,
        const _variant_t & Create = vtMissing,
        const _variant_t & OverwriteExisting = vtMissing,
        const _variant_t & NewName = vtMissing,
        const _variant_t & DataCategory = vtMissing,
        const _variant_t & CategoryEnabled = vtMissing,
        const _variant_t & TableName = vtMissing,
        const _variant_t & FieldName = vtMissing,
        const _variant_t & ExternalFieldName = vtMissing,
        const _variant_t & ExportFilter = vtMissing,
        const _variant_t & ImportMethod = vtMissing,
        const _variant_t & MergeKey = vtMissing,
        const _variant_t & HeaderRow = vtMissing,
        const _variant_t & AssignmentData = vtMissing,
        const _variant_t & TextDelimiter = vtMissing,
        const _variant_t & TextFileOrigin = vtMissing,
        const _variant_t & UseHtmlTemplate = vtMissing,
        const _variant_t & TemplateFile = vtMissing,
        const _variant_t & IncludeImage = vtMissing,
        const _variant_t & ImageFile = vtMissing );
    VARIANT_BOOL FillAcross (
        const _variant_t & Right = vtMissing );
    VARIANT_BOOL LinksBetweenProjects (
        const _variant_t & AcceptAll = vtMissing );
    VARIANT_BOOL ToggleAssignments ( );
    VARIANT_BOOL ProgressLines ( );
    VARIANT_BOOL ResourceSharingPoolUpdate (
        const _variant_t & allSharers = vtMissing );
    VARIANT_BOOL ResourceSharingPoolRefresh ( );
    VARIANT_BOOL WebHelp (
        const _variant_t & Type = vtMissing );
    VARIANT_BOOL AddProgressLine ( );
    VARIANT_BOOL CustomizeIMEMode (
        enum PjField FieldID,
        enum PjIMEMode IMEMode );
    VARIANT_BOOL DeleteFromDatabase (
        const _variant_t & Name = vtMissing,
        const _variant_t & UserID = vtMissing,
        const _variant_t & DatabasePassWord = vtMissing,
        const _variant_t & FormatID = vtMissing );
    VARIANT_BOOL WBSCodeRenumber (
        const _variant_t & All = vtMissing );
    VARIANT_BOOL WBSCodeMaskEdit (
        const _variant_t & CodePrefix,
        const _variant_t & Level,
        enum PjWBSSequence Sequence,
        const _variant_t & Length = vtMissing,
        const _variant_t & Separator = vtMissing,
        const _variant_t & CodeGenerate = vtMissing,
        const _variant_t & VerifyUniqueness = vtMissing );
    VARIANT_BOOL CustomOutlineCodeEdit (
        enum PjCustomField FieldID,
        const _variant_t & Level,
        enum PjCustomOutlineCodeSequence Sequence,
        const _variant_t & Length = vtMissing,
        const _variant_t & Separator = vtMissing,
        const _variant_t & OnlyLookUpTableCodes = vtMissing,
        const _variant_t & OnlyCompleteCodes = vtMissing,
        const _variant_t & LookupTableLink = vtMissing,
        const _variant_t & OnlyLeaves = vtMissing,
        const _variant_t & MatchGeneric = vtMissing,
        const _variant_t & RequiredCode = vtMissing );
    VARIANT_BOOL OptionsSave (
        const _variant_t & DefaultSaveFormat = vtMissing,
        const _variant_t & DefaultProjectsPath = vtMissing,
        const _variant_t & DefaultUserTemplatesPath = vtMissing,
        const _variant_t & DefaultWorkgroupTemplatesPath = vtMissing,
        const _variant_t & ExpandDatabaseTimephasedData = vtMissing,
        const _variant_t & AutomaticSave = vtMissing,
        const _variant_t & AutomaticSaveInterval = vtMissing,
        const _variant_t & AutomaticSaveOptions = vtMissing,
        const _variant_t & AutomaticSavePrompt = vtMissing,
        const _variant_t & SetDefaultsDatabase = vtMissing );
    VARIANT_BOOL OfficeOnTheWeb ( );
    VARIANT_BOOL FixMe ( );
    VARIANT_BOOL ViewShowWorkAvailability ( );
    VARIANT_BOOL ViewShowUnitAvailability ( );
    VARIANT_BOOL BaselineClear (
        const _variant_t & All = vtMissing,
        const _variant_t & From = vtMissing );
    VARIANT_BOOL Groups ( );
    VARIANT_BOOL GroupApply (
        const _variant_t & Name = vtMissing );
    VARIANT_BOOL GroupBy ( );
    VARIANT_BOOL LookUpTableAdd (
        enum PjCustomField FieldID,
        const _variant_t & Level = vtMissing,
        const _variant_t & Code = vtMissing,
        const _variant_t & Description = vtMissing );
    VARIANT_BOOL BoxStylesEdit (
        enum PjBoxStyle Style,
        const _variant_t & DataTemplate,
        const _variant_t & HorizontalGridlines,
        const _variant_t & VerticalGridlines,
        enum PjBoxShape BorderShape,
        enum PjColor BorderColor,
        const _variant_t & BorderWidth,
        enum PjColor BackgroundColor,
        enum PjBackgroundPattern BackgroundPattern );
    VARIANT_BOOL BoxFormat (
        const _variant_t & ProjectName,
        const _variant_t & TaskID,
        const _variant_t & DataTemplate,
        const _variant_t & HorizontalGridlines,
        const _variant_t & VerticalGridlines,
        enum PjBoxShape BorderShape,
        enum PjColor BorderColor,
        const _variant_t & BorderWidth,
        enum PjColor BackgroundColor,
        enum PjBackgroundPattern BackgroundPattern,
        const _variant_t & Reset = vtMissing );
    VARIANT_BOOL BarBoxFormat ( );
    VARIANT_BOOL CreateWebAccount (
        const _variant_t & ServerURL,
        const _variant_t & Name,
        enum PjAuthentication AuthenticationType,
        enum PjAccountType AccountType,
        const _variant_t & ShowDialog = vtMissing,
        const _variant_t & Email = vtMissing,
        const _variant_t & WindowsAccount = vtMissing );
    VARIANT_BOOL BoxDataTemplate (
        _bstr_t Name,
        enum PjDataTemplate Action,
        const _variant_t & NewName = vtMissing,
        const _variant_t & Overwrite = vtMissing );
    VARIANT_BOOL BoxCellLayout (
        _bstr_t Name,
        const _variant_t & CellRows = vtMissing,
        const _variant_t & CellColumns = vtMissing,
        const _variant_t & CellWidth = vtMissing,
        const _variant_t & MergeCells = vtMissing );
    VARIANT_BOOL BoxCellEdit (
        _bstr_t Name,
        enum PjCell Cell,
        enum PjField FieldName,
        const _variant_t & Font,
        const _variant_t & FontSize,
        enum PjColor FontColor,
        const _variant_t & Bold,
        const _variant_t & Italic,
        const _variant_t & Underline,
        enum PjAlignment HorizontalAlignment,
        enum PjVerticalAlignment VerticalAlignment,
        const _variant_t & TextLineLimit,
        const _variant_t & ShowLabel,
        const _variant_t & Label,
        enum PjDateFormat DateFormat );
    VARIANT_BOOL ResourceWindowsAccount (
        const _variant_t & Name = vtMissing,
        const _variant_t & ShowDialog = vtMissing );
    VARIANT_BOOL SetRowHeight (
        const _variant_t & Unit = vtMissing,
        const _variant_t & Rows = vtMissing,
        const _variant_t & UseUniqueID = vtMissing );
    VARIANT_BOOL ComAddInsDialog ( );
    VARIANT_BOOL MacroSecurity ( );
    VARIANT_BOOL LayoutSelectionNow ( );
    VARIANT_BOOL BoxAlign (
        enum PjAlign Alignment );
    VARIANT_BOOL ConvertHangulToHanja ( );
    VARIANT_BOOL UpdateProjectToWeb (
        const _variant_t & ServerURL = vtMissing,
        const _variant_t & EmbedProjectFile = vtMissing,
        const _variant_t & OnlyRegisterProject = vtMissing,
        const _variant_t & WaitForCompletion = vtMissing );
    VARIANT_BOOL CustomFieldProperties (
        enum PjCustomField FieldID,
        enum PjCustomFieldAttribute Attribute,
        enum PjSummaryCalc SummaryCalc,
        const _variant_t & GraphicalIndicators = vtMissing,
        const _variant_t & Required = vtMissing );
    VARIANT_BOOL CustomFieldSetFormula (
        enum PjCustomField FieldID,
        const _variant_t & Formula = vtMissing );
    VARIANT_BOOL CustomFieldIndicatorAdd (
        enum PjCustomField FieldID,
        enum PjComparison Test,
        _bstr_t Value,
        enum PjIndicator IndicatorID,
        enum PjCriteriaList CriteriaList,
        const _variant_t & Index = vtMissing );
    VARIANT_BOOL CustomFieldIndicators (
        enum PjCustomField FieldID,
        const _variant_t & SummaryInheritsNonsummary = vtMissing,
        const _variant_t & ProjectInheritsSummary = vtMissing,
        const _variant_t & ShowToolTips = vtMissing );
    VARIANT_BOOL CustomFieldIndicatorDelete (
        enum PjCustomField FieldID,
        short Index,
        enum PjCriteriaList CriteriaList );
    VARIANT_BOOL CustomFieldValueList (
        enum PjCustomField FieldID,
        const _variant_t & ListDefault,
        const _variant_t & DefaultValue,
        const _variant_t & RestrictToList,
        const _variant_t & AppendNew,
        const _variant_t & PromptOnNew,
        enum PjListOrder DisplayOrder );
    VARIANT_BOOL CustomFieldValueListAdd (
        enum PjCustomField FieldID,
        const _variant_t & Value = vtMissing,
        const _variant_t & Description = vtMissing,
        const _variant_t & Phonetic = vtMissing,
        const _variant_t & Index = vtMissing,
        const _variant_t & FieldDefault = vtMissing );
    VARIANT_BOOL CustomFieldValueListDelete (
        enum PjCustomField FieldID,
        short Index );
    VARIANT_BOOL BoxLayout (
        enum PjLayoutMode LayoutMode,
        enum PjLayoutScheme LayoutScheme,
        const _variant_t & SummaryPrecedence,
        enum PjVerticalAlignment RowAlignment,
        enum PjAlignment ColumnAlignment,
        const _variant_t & RowSpacing,
        const _variant_t & ColumnSpacing,
        enum PjRowColSize RowHeight,
        enum PjRowColSize ColumnWidth,
        const _variant_t & AdjustForPageBreaks,
        const _variant_t & ShowSummaryTasks,
        enum PjColor ViewBackgroundColor,
        enum PjBackgroundPattern ViewBackgroundPattern,
        const _variant_t & ShowProgressMarks = vtMissing,
        const _variant_t & ShowPageBreaks = vtMissing,
        const _variant_t & ShowIDOnly = vtMissing );
    VARIANT_BOOL BoxLinks (
        enum PjLinkStyle Style,
        const _variant_t & ShowArrows,
        const _variant_t & ShowLabels,
        enum PjLinkColorMode ColorMode,
        enum PjColor CriticalColor,
        enum PjColor NoncriticalColor );
    VARIANT_BOOL SummaryTasksShow (
        const _variant_t & Show = vtMissing );
    VARIANT_BOOL BoxProgressMarksShow (
        const _variant_t & Show = vtMissing );
    VARIANT_BOOL BoxLinkLabelsShow (
        const _variant_t & Show = vtMissing );
    VARIANT_BOOL BoxLinkStyleToggle (
        const _variant_t & StraightLinks = vtMissing );
    VARIANT_BOOL LayoutRelatedNow ( );
    VARIANT_BOOL BoxSet (
        enum PjBoxSet Action,
        const _variant_t & TaskID = vtMissing,
        const _variant_t & XPosition = vtMissing,
        const _variant_t & YPosition = vtMissing,
        const _variant_t & ProjectName = vtMissing );
    VARIANT_BOOL SetSplitBar (
        const _variant_t & ShowColumns = vtMissing );
    VARIANT_BOOL SetTitleRowHeight (
        const _variant_t & TitleHeight = vtMissing );
    VARIANT_BOOL GoalAreaChange (
        short goalArea );
    VARIANT_BOOL SidepaneToggle (
        const _variant_t & Show = vtMissing );
    VARIANT_BOOL SearchFiles ( );
    VARIANT_BOOL ImportOutlookTasks ( );
    VARIANT_BOOL OptionsInterface (
        const _variant_t & ShowResourceAssignmentIndicators = vtMissing,
        const _variant_t & ShowEditToStartFinishDates = vtMissing,
        const _variant_t & ShowEditsToWorkUnitsDurationIndicators = vtMissing,
        const _variant_t & ShowDeletionInNameColumn = vtMissing,
        const _variant_t & DisplayProjectGuide = vtMissing,
        const _variant_t & ProjectGuideUseDefaultFunctionalLayoutPage = vtMissing,
        const _variant_t & ProjectGuideFunctionalLayoutPage = vtMissing,
        const _variant_t & ProjectGuideUseDefaultContent = vtMissing,
        const _variant_t & ProjectGuideContent = vtMissing,
        const _variant_t & SetAsDefaults = vtMissing );
    VARIANT_BOOL SidepaneTaskChange (
        short ID,
        const _variant_t & IsGoalArea = vtMissing );
    VARIANT_BOOL ImportResourceList (
        const _variant_t & ServerURL = vtMissing );
    VARIANT_BOOL EnterpriseResSubstitutionWizard (
        const _variant_t & ProjectList,
        enum PjResSubstitutionPoolOption PoolOption,
        const _variant_t & RBSorResourceList = vtMissing,
        const _variant_t & FreezeHorizonDate = vtMissing,
        const _variant_t & UpdateProjects = vtMissing,
        const _variant_t & SaveReport = vtMissing,
        const _variant_t & Path = vtMissing );
    VARIANT_BOOL EnterpriseResourcesOpen (
        const _variant_t & EUID,
        enum PjCheckOutType OpenType );
    VARIANT_BOOL EnterpriseResourcesImport (
        const _variant_t & LocalRUIDs = vtMissing );
    VARIANT_BOOL EnterpriseResourceGet (
        const _variant_t & EUID = vtMissing,
        const _variant_t & RUID = vtMissing );
    VARIANT_BOOL EnterpriseProjectImportWizard (
        const _variant_t & Name = vtMissing );
    VARIANT_BOOL EnterpriseTeamBuilder ( );
    VARIANT_BOOL EnterpriseCustomOutlineCodeShare (
        long LinkFrom,
        const _variant_t & LinkTo = vtMissing );
    VARIANT_BOOL EnterpriseCustomizeFields ( );
    VARIANT_BOOL EnterpriseGlobalCheckOut ( );
    VARIANT_BOOL EnterpriseProjectProfiles ( );
    VARIANT_BOOL ResourceAssignmentDialog (
        const _variant_t & ShowResourceListOptions,
        enum PjAssignResourcesListFields ResourceListFields,
        const _variant_t & UseNamedFilter = vtMissing,
        const _variant_t & FilterName = vtMissing,
        const _variant_t & UseAvailableToWorkFilter = vtMissing,
        const _variant_t & AvailableToWork = vtMissing );
    VARIANT_BOOL LoadWebBrowserControl (
        _bstr_t TargetPage,
        const _variant_t & WrapperPage = vtMissing );
    VARIANT_BOOL FileSaveOffline (
        enum PjSaveType Save );
    VARIANT_BOOL HelpReference ( );
    VARIANT_BOOL HelpWhatsNew ( );
    VARIANT_BOOL StopWebBrowserControlNavigation ( );
    VARIANT_BOOL EnterpriseGlobalBackup (
        const _variant_t & BackupFileName = vtMissing );
    VARIANT_BOOL EnterpriseGlobalRestore (
        const _variant_t & ProfileName = vtMissing,
        const _variant_t & RestoreFileName = vtMissing );
    VARIANT_BOOL SpellCheckField (
        enum PjSpellingField FieldName,
        const _variant_t & EnableSpellCheck = vtMissing );
    VARIANT_BOOL AddResourcesFromProjectServer ( );
    VARIANT_BOOL ResetTrackingMethod ( );

    // Properties:
    _MSProjectPtr GetApplication ( );
    void PutApplication ( struct _MSProject * _val );
    _MSProjectPtr GetParent ( );
    void PutParent ( struct _MSProject * _val );
    ProjectsPtr GetProjects ( );
    void PutProjects ( struct Projects * _val );
    SelectionPtr GetActiveSelection ( );
    void PutActiveSelection ( struct Selection * _val );
    CellPtr GetActiveCell ( );
    void PutActiveCell ( struct Cell * _val );
    _IProjectDocPtr GetActiveProject ( );
    void PutActiveProject ( struct _IProjectDoc * _val );
    WindowPtr GetActiveWindow ( );
    void PutActiveWindow ( struct Window * _val );
    VARIANT_BOOL GetSupportsMultipleDocuments ( );
    void PutSupportsMultipleDocuments ( VARIANT_BOOL _val );
    VARIANT_BOOL GetSupportsMultipleWindows ( );
    void PutSupportsMultipleWindows ( VARIANT_BOOL _val );
    VARIANT_BOOL GetVisible ( );
    void PutVisible ( VARIANT_BOOL _val );
    _bstr_t GetPathSeparator ( );
    void PutPathSeparator ( _bstr_t _val );
    _bstr_t GetCaption ( );
    void PutCaption ( _bstr_t _val );
    _bstr_t GetName ( );
    void PutName ( _bstr_t _val );
    _bstr_t GetPath ( );
    void PutPath ( _bstr_t _val );
    _bstr_t GetVersion ( );
    void PutVersion ( _bstr_t _val );
    enum PjWindowState GetWindowState ( );
    void PutWindowState ( enum PjWindowState _val );
    long GetLeft ( );
    void PutLeft ( long _val );
    long GetTop ( );
    void PutTop ( long _val );
    long GetWidth ( );
    void PutWidth ( long _val );
    long GetHeight ( );
    void PutHeight ( long _val );
    enum PjDateOrder GetDateOrder ( );
    void PutDateOrder ( enum PjDateOrder _val );
    _bstr_t GetDateSeparator ( );
    void PutDateSeparator ( _bstr_t _val );
    _bstr_t GetThousandSeparator ( );
    void PutThousandSeparator ( _bstr_t _val );
    _bstr_t GetDecimalSeparator ( );
    void PutDecimalSeparator ( _bstr_t _val );
    _bstr_t GetListSeparator ( );
    void PutListSeparator ( _bstr_t _val );
    _bstr_t GetTimeSeparator ( );
    void PutTimeSeparator ( _bstr_t _val );
    VARIANT_BOOL GetTwelveHourTimeFormat ( );
    void PutTwelveHourTimeFormat ( VARIANT_BOOL _val );
    _bstr_t GetAMText ( );
    void PutAMText ( _bstr_t _val );
    _bstr_t GetPMText ( );
    void PutPMText ( _bstr_t _val );
    _bstr_t GetDefaultView ( );
    void PutDefaultView ( _bstr_t _val );
    VARIANT_BOOL GetDisplayStatusBar ( );
    void PutDisplayStatusBar ( VARIANT_BOOL _val );
    VARIANT_BOOL GetDisplayAlerts ( );
    void PutDisplayAlerts ( VARIANT_BOOL _val );
    VARIANT_BOOL GetDisplayEntryBar ( );
    void PutDisplayEntryBar ( VARIANT_BOOL _val );
    VARIANT_BOOL GetDisplayScrollBars ( );
    void PutDisplayScrollBars ( VARIANT_BOOL _val );
    VARIANT_BOOL GetDisplayWindowsInTaskbar ( );
    void PutDisplayWindowsInTaskbar ( VARIANT_BOOL _val );
    enum PjCalculation GetCalculation ( );
    void PutCalculation ( enum PjCalculation _val );
    VARIANT_BOOL GetAutoLevel ( );
    void PutAutoLevel ( VARIANT_BOOL _val );
    VARIANT_BOOL GetAutoClearLeveling ( );
    void PutAutoClearLeveling ( VARIANT_BOOL _val );
    VARIANT_BOOL GetLevelWithinSlack ( );
    void PutLevelWithinSlack ( VARIANT_BOOL _val );
    enum PjLevelOrder GetLevelOrder ( );
    void PutLevelOrder ( enum PjLevelOrder _val );
    enum PjLevelPeriodBasis GetLevelPeriodBasis ( );
    void PutLevelPeriodBasis ( enum PjLevelPeriodBasis _val );
    VARIANT_BOOL GetLevelIndividualAssignments ( );
    void PutLevelIndividualAssignments ( VARIANT_BOOL _val );
    VARIANT_BOOL GetLevelingCanSplit ( );
    void PutLevelingCanSplit ( VARIANT_BOOL _val );
    VARIANT_BOOL GetMoveAfterReturn ( );
    void PutMoveAfterReturn ( VARIANT_BOOL _val );
    VARIANT_BOOL GetDisplayScheduleMessages ( );
    void PutDisplayScheduleMessages ( VARIANT_BOOL _val );
    enum PjWeekday GetStartWeekOn ( );
    void PutStartWeekOn ( enum PjWeekday _val );
    enum PjMonth GetStartYearIn ( );
    void PutStartYearIn ( enum PjMonth _val );
    VARIANT_BOOL GetCellDragAndDrop ( );
    void PutCellDragAndDrop ( VARIANT_BOOL _val );
    _bstr_t GetUserName ( );
    void PutUserName ( _bstr_t _val );
    VARIANT_BOOL GetDisplayNotesIndicator ( );
    void PutDisplayNotesIndicator ( VARIANT_BOOL _val );
    VARIANT_BOOL GetAskToUpdateLinks ( );
    void PutAskToUpdateLinks ( VARIANT_BOOL _val );
    VARIANT_BOOL GetDisplayPlanningWizard ( );
    void PutDisplayPlanningWizard ( VARIANT_BOOL _val );
    VARIANT_BOOL GetDisplayWizardUsage ( );
    void PutDisplayWizardUsage ( VARIANT_BOOL _val );
    VARIANT_BOOL GetDisplayWizardErrors ( );
    void PutDisplayWizardErrors ( VARIANT_BOOL _val );
    VARIANT_BOOL GetDisplayWizardScheduling ( );
    void PutDisplayWizardScheduling ( VARIANT_BOOL _val );
    VARIANT_BOOL GetShowTipOfDay ( );
    void PutShowTipOfDay ( VARIANT_BOOL _val );
    VARIANT_BOOL GetShowToolTips ( );
    void PutShowToolTips ( VARIANT_BOOL _val );
    VARIANT_BOOL GetShowWelcome ( );
    void PutShowWelcome ( VARIANT_BOOL _val );
    VARIANT_BOOL GetLoadLastFile ( );
    void PutLoadLastFile ( VARIANT_BOOL _val );
    VARIANT_BOOL GetPromptForSummaryInfo ( );
    void PutPromptForSummaryInfo ( VARIANT_BOOL _val );
    VARIANT_BOOL GetDisplayOLEIndicator ( );
    void PutDisplayOLEIndicator ( VARIANT_BOOL _val );
    enum PjDateFormat GetDefaultDateFormat ( );
    void PutDefaultDateFormat ( enum PjDateFormat _val );
    VARIANT_BOOL GetDayLeadingZero ( );
    void PutDayLeadingZero ( VARIANT_BOOL _val );
    VARIANT_BOOL GetMonthLeadingZero ( );
    void PutMonthLeadingZero ( VARIANT_BOOL _val );
    VARIANT_BOOL GetTimeLeadingZero ( );
    void PutTimeLeadingZero ( VARIANT_BOOL _val );
    VARIANT_BOOL GetCopyResourceUsageHeader ( );
    void PutCopyResourceUsageHeader ( VARIANT_BOOL _val );
    long GetRecentFilesMaximum ( );
    void PutRecentFilesMaximum ( long _val );
    VARIANT_BOOL GetDisplayRecentFiles ( );
    void PutDisplayRecentFiles ( VARIANT_BOOL _val );
    VARIANT_BOOL GetMacroVirusProtection ( );
    void PutMacroVirusProtection ( VARIANT_BOOL _val );
    enum PjAssignmentUnits GetShowAssignmentUnitsAs ( );
    void PutShowAssignmentUnitsAs ( enum PjAssignmentUnits _val );
    VARIANT_BOOL GetAutomaticallyFillPhoneticFields ( );
    void PutAutomaticallyFillPhoneticFields ( VARIANT_BOOL _val );
    VARIANT_BOOL GetDefaultAutoFilter ( );
    void PutDefaultAutoFilter ( VARIANT_BOOL _val );
    VARIANT_BOOL GetShowEstimatedDuration ( );
    void PutShowEstimatedDuration ( VARIANT_BOOL _val );
    VARIANT_BOOL GetNewTasksEstimated ( );
    void PutNewTasksEstimated ( VARIANT_BOOL _val );
//    AssistantPtr GetAssistant ( );
    void PutAssistant ( struct Assistant * _val );
    VARIANT_BOOL GetDisplayViewBar ( );
    void PutDisplayViewBar ( VARIANT_BOOL _val );
//    VBEPtr GetVBE ( );
    void PutVBE ( struct VBE * _val );
    enum PjEnableCancelKey GetEnableCancelKey ( );
    void PutEnableCancelKey ( enum PjEnableCancelKey _val );
    VARIANT_BOOL GetUserControl ( );
    void PutUserControl ( VARIANT_BOOL _val );
    double GetUsableWidth ( );
    void PutUsableWidth ( double _val );
    double GetUsableHeight ( );
    void PutUsableHeight ( double _val );
    _variant_t GetStatusBar ( );
    void PutStatusBar ( const _variant_t & _val );
//    FileSearchPtr GetFileSearch ( );
    void PutFileSearch ( struct FileSearch * _val );
    VARIANT_BOOL GetScreenUpdating ( );
    void PutScreenUpdating ( VARIANT_BOOL _val );
    VARIANT_BOOL GetDisplayProjectGuide ( );
    void PutDisplayProjectGuide ( VARIANT_BOOL _val );
//    enum MsoAutomationSecurity GetAutomationSecurity ( );
    void PutAutomationSecurity ( enum MsoAutomationSecurity _val );
    VARIANT_BOOL GetEnterpriseAllowLocalBaseCalendars ( );
    void PutEnterpriseAllowLocalBaseCalendars ( VARIANT_BOOL _val );
    enum PjEditionType GetEdition ( );
    void PutEdition ( enum PjEditionType _val );
    ProfilesPtr GetProfiles ( );
    void PutProfiles ( struct Profiles * _val );
    CalendarsPtr GetGlobalBaseCalendars ( );
    void PutGlobalBaseCalendars ( struct Calendars * _val );
    ViewsPtr GetGlobalViews ( );
    void PutGlobalViews ( struct Views * _val );
    ViewsSinglePtr GetGlobalViewsSingle ( );
    void PutGlobalViewsSingle ( struct ViewsSingle * _val );
    ViewsCombinationPtr GetGlobalViewsCombination ( );
    void PutGlobalViewsCombination ( struct ViewsCombination * _val );
    TablesPtr GetGlobalTaskTables ( );
    void PutGlobalTaskTables ( struct Tables * _val );
    TablesPtr GetGlobalResourceTables ( );
    void PutGlobalResourceTables ( struct Tables * _val );
    FiltersPtr GetGlobalTaskFilters ( );
    void PutGlobalTaskFilters ( struct Filters * _val );
    FiltersPtr GetGlobalResourceFilters ( );
    void PutGlobalResourceFilters ( struct Filters * _val );
};

struct __declspec(uuid("7b7597d0-0c9f-11d0-8c43-00a0c904dcd4"))
_EProjectApp : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    // Methods:
    HRESULT NewProject (
        struct _IProjectDoc * pj );
    HRESULT ProjectBeforeTaskDelete (
        struct Task * tsk,
        VARIANT_BOOL * Cancel );
    HRESULT ProjectBeforeResourceDelete (
        struct Resource * res,
        VARIANT_BOOL * Cancel );
    HRESULT ProjectBeforeAssignmentDelete (
        struct Assignment * asg,
        VARIANT_BOOL * Cancel );
    HRESULT ProjectBeforeTaskChange (
        struct Task * tsk,
        enum PjField Field,
        const _variant_t & NewVal,
        VARIANT_BOOL * Cancel );
    HRESULT ProjectBeforeResourceChange (
        struct Resource * res,
        enum PjField Field,
        const _variant_t & NewVal,
        VARIANT_BOOL * Cancel );
    HRESULT ProjectBeforeAssignmentChange (
        struct Assignment * asg,
        enum PjAssignmentField Field,
        const _variant_t & NewVal,
        VARIANT_BOOL * Cancel );
    HRESULT ProjectBeforeTaskNew (
        struct _IProjectDoc * pj,
        VARIANT_BOOL * Cancel );
    HRESULT ProjectBeforeResourceNew (
        struct _IProjectDoc * pj,
        VARIANT_BOOL * Cancel );
    HRESULT ProjectBeforeAssignmentNew (
        struct _IProjectDoc * pj,
        VARIANT_BOOL * Cancel );
    HRESULT ProjectBeforeClose (
        struct _IProjectDoc * pj,
        VARIANT_BOOL * Cancel );
    HRESULT ProjectBeforePrint (
        struct _IProjectDoc * pj,
        VARIANT_BOOL * Cancel );
    HRESULT ProjectBeforeSave (
        struct _IProjectDoc * pj,
        VARIANT_BOOL SaveAsUi,
        VARIANT_BOOL * Cancel );
    HRESULT ProjectCalculate (
        struct _IProjectDoc * pj );
};

struct __declspec(uuid("36d27c48-a1e8-11d3-ba55-00c04f72f325"))
Application;
    // [ default ] dispinterface _MSProject
    // [ source ] dispinterface _EProjectApp
    // [ default, source ] dispinterface _EProjectApp2

struct __declspec(uuid("7742af30-ebc0-11cf-a523-00a0c904de55"))
Global;
    // [ default ] dispinterface _Global

enum PjBaselines
{
    pjBaseline = 0,
    pjBaseline1 = 1,
    pjBaseline2 = 2,
    pjBaseline3 = 3,
    pjBaseline4 = 4,
    pjBaseline5 = 5,
    pjBaseline6 = 6,
    pjBaseline7 = 7,
    pjBaseline8 = 8,
    pjBaseline9 = 9,
    pjBaseline10 = 10
};

enum PjStatusType
{
    pjComplete = 0,
    pjOnSchedule = 1,
    pjLate = 2,
    pjFutureTask = 3,
    pjNoData = 4
};

enum PjCheckOutType
{
    pjReadOnly = 0,
    pjReadWrite = 1
};

enum PjAssignResourcesListFields
{
    pjAllColumns = 2,
    pjBasic = 1
};

enum PjLoginType
{
    pjWindowsLogin = 1,
    pjProjectServerLogin = 2
};

enum PjProfileType
{
    pjLocalProfile = 0,
    pjServerProfile = 1
};

enum PjProfileConnectionState
{
    pjProfileOffline = 0,
    pjProfileOnline = 1
};

enum PjResourceRequestType
{
    pjResourceRequestTypeNone = 0,
    pjResourceRequestTypeRequest = 1,
    pjResourceRequestTypeDemand = 2
};

enum PjEditionType
{
    pjEditionStandard = 0,
    pjEditionProfessional = 1
};

enum PjResSubstitutionPoolOption
{
    pjResSubstitutionResInProject = 0,
    pjResSubstitutionResInRBS = 1,
    pjResSubstitutionResInList = 2
};

enum PjServerVersionInfo
{
    pjServerVersionInfo_Unknown = -2,
    pjServerVersionInfo_Error = -1,
    pjServerVersionInfo_Email = 0,
    pjServerVersionInfo_P9 = 900,
    pjServerVersionInfo_P10 = 1000
};

enum PjProjectType
{
    pjProjectTypeUnsaved = 0,
    pjProjectTypeNonEnterprise = 1,
    pjProjectTypeEnterpriseCheckedOut = 2,
    pjProjectTypeEnterpriseReadOnly = 3,
    pjProjectTypeEnterpriseGlobalCheckedOut = 4,
    pjProjectTypeEnterpriseGlobalInMemory = 5,
    pjProjectTypeEnterpriseGlobalLocal = 6,
    pjProjectTypeEnterpriseResourcesCheckedOut = 7
};

enum PjEarnedValueMethod
{
    pjPercentComplete = 0,
    pjPhysicalPercentComplete = 1
};

enum PjSpellingField
{
    pjSpellTaskName = 188743694,
    pjSpellTaskNotes = 188743695,
    pjSpellTaskText1 = 188743731,
    pjSpellTaskText10 = 188743750,
    pjSpellTaskText2 = 188743734,
    pjSpellTaskText3 = 188743737,
    pjSpellTaskText4 = 188743740,
    pjSpellTaskText5 = 188743743,
    pjSpellTaskText6 = 188743746,
    pjSpellTaskText7 = 188743747,
    pjSpellTaskText8 = 188743748,
    pjSpellTaskText9 = 188743749,
    pjSpellTaskText11 = 188743997,
    pjSpellTaskText12 = 188743998,
    pjSpellTaskText13 = 188743999,
    pjSpellTaskText14 = 188744000,
    pjSpellTaskText15 = 188744001,
    pjSpellTaskText16 = 188744002,
    pjSpellTaskText17 = 188744003,
    pjSpellTaskText18 = 188744004,
    pjSpellTaskText19 = 188744005,
    pjSpellTaskText20 = 188744006,
    pjSpellTaskText21 = 188744007,
    pjSpellTaskText22 = 188744008,
    pjSpellTaskText23 = 188744009,
    pjSpellTaskText24 = 188744010,
    pjSpellTaskText25 = 188744011,
    pjSpellTaskText26 = 188744012,
    pjSpellTaskText27 = 188744013,
    pjSpellTaskText28 = 188744014,
    pjSpellTaskText29 = 188744015,
    pjSpellTaskText30 = 188744016,
    pjSpellTaskEnterpriseText1 = 188744479,
    pjSpellTaskEnterpriseText2 = 188744480,
    pjSpellTaskEnterpriseText3 = 188744481,
    pjSpellTaskEnterpriseText4 = 188744482,
    pjSpellTaskEnterpriseText5 = 188744483,
    pjSpellTaskEnterpriseText6 = 188744484,
    pjSpellTaskEnterpriseText7 = 188744485,
    pjSpellTaskEnterpriseText8 = 188744486,
    pjSpellTaskEnterpriseText9 = 188744487,
    pjSpellTaskEnterpriseText10 = 188744488,
    pjSpellTaskEnterpriseText11 = 188744489,
    pjSpellTaskEnterpriseText12 = 188744490,
    pjSpellTaskEnterpriseText13 = 188744491,
    pjSpellTaskEnterpriseText14 = 188744492,
    pjSpellTaskEnterpriseText15 = 188744493,
    pjSpellTaskEnterpriseText16 = 188744494,
    pjSpellTaskEnterpriseText17 = 188744495,
    pjSpellTaskEnterpriseText18 = 188744496,
    pjSpellTaskEnterpriseText19 = 188744497,
    pjSpellTaskEnterpriseText20 = 188744498,
    pjSpellTaskEnterpriseText21 = 188744499,
    pjSpellTaskEnterpriseText22 = 188744500,
    pjSpellTaskEnterpriseText23 = 188744501,
    pjSpellTaskEnterpriseText24 = 188744502,
    pjSpellTaskEnterpriseText25 = 188744503,
    pjSpellTaskEnterpriseText26 = 188744504,
    pjSpellTaskEnterpriseText27 = 188744505,
    pjSpellTaskEnterpriseText28 = 188744506,
    pjSpellTaskEnterpriseText29 = 188744507,
    pjSpellTaskEnterpriseText30 = 188744508,
    pjSpellTaskEnterpriseText31 = 188744509,
    pjSpellTaskEnterpriseText32 = 188744510,
    pjSpellTaskEnterpriseText33 = 188744511,
    pjSpellTaskEnterpriseText34 = 188744512,
    pjSpellTaskEnterpriseText35 = 188744513,
    pjSpellTaskEnterpriseText36 = 188744514,
    pjSpellTaskEnterpriseText37 = 188744515,
    pjSpellTaskEnterpriseText38 = 188744516,
    pjSpellTaskEnterpriseText39 = 188744517,
    pjSpellTaskEnterpriseText40 = 188744518,
    pjSpellProjectEnterpriseText1 = 188744729,
    pjSpellProjectEnterpriseText2 = 188744730,
    pjSpellProjectEnterpriseText3 = 188744731,
    pjSpellProjectEnterpriseText4 = 188744732,
    pjSpellProjectEnterpriseText5 = 188744733,
    pjSpellProjectEnterpriseText6 = 188744734,
    pjSpellProjectEnterpriseText7 = 188744735,
    pjSpellProjectEnterpriseText8 = 188744736,
    pjSpellProjectEnterpriseText9 = 188744737,
    pjSpellProjectEnterpriseText10 = 188744738,
    pjSpellProjectEnterpriseText11 = 188744739,
    pjSpellProjectEnterpriseText12 = 188744740,
    pjSpellProjectEnterpriseText13 = 188744741,
    pjSpellProjectEnterpriseText14 = 188744742,
    pjSpellProjectEnterpriseText15 = 188744743,
    pjSpellProjectEnterpriseText16 = 188744744,
    pjSpellProjectEnterpriseText17 = 188744745,
    pjSpellProjectEnterpriseText18 = 188744746,
    pjSpellProjectEnterpriseText19 = 188744747,
    pjSpellProjectEnterpriseText20 = 188744748,
    pjSpellProjectEnterpriseText21 = 188744749,
    pjSpellProjectEnterpriseText22 = 188744750,
    pjSpellProjectEnterpriseText23 = 188744751,
    pjSpellProjectEnterpriseText24 = 188744752,
    pjSpellProjectEnterpriseText25 = 188744753,
    pjSpellProjectEnterpriseText26 = 188744754,
    pjSpellProjectEnterpriseText27 = 188744755,
    pjSpellProjectEnterpriseText28 = 188744756,
    pjSpellProjectEnterpriseText29 = 188744757,
    pjSpellProjectEnterpriseText30 = 188744758,
    pjSpellProjectEnterpriseText31 = 188744759,
    pjSpellProjectEnterpriseText32 = 188744760,
    pjSpellProjectEnterpriseText33 = 188744761,
    pjSpellProjectEnterpriseText34 = 188744762,
    pjSpellProjectEnterpriseText35 = 188744763,
    pjSpellProjectEnterpriseText36 = 188744764,
    pjSpellProjectEnterpriseText37 = 188744765,
    pjSpellProjectEnterpriseText38 = 188744766,
    pjSpellProjectEnterpriseText39 = 188744767,
    pjSpellProjectEnterpriseText40 = 188744768,
    pjSpellResourceCode = 205520906,
    pjSpellResourceName = 205520897,
    pjSpellResourceNotes = 205520916,
    pjSpellResourceGroup = 205520899,
    pjSpellResourceText1 = 205520904,
    pjSpellResourceText2 = 205520905,
    pjSpellResourceText3 = 205520926,
    pjSpellResourceText4 = 205520927,
    pjSpellResourceText5 = 205520928,
    pjSpellResourceText6 = 205520993,
    pjSpellResourceText7 = 205520994,
    pjSpellResourceText8 = 205520995,
    pjSpellResourceText9 = 205520996,
    pjSpellResourceText10 = 205520997,
    pjSpellResourceText11 = 205521121,
    pjSpellResourceText12 = 205521122,
    pjSpellResourceText13 = 205521123,
    pjSpellResourceText14 = 205521124,
    pjSpellResourceText15 = 205521125,
    pjSpellResourceText16 = 205521126,
    pjSpellResourceText17 = 205521127,
    pjSpellResourceText18 = 205521128,
    pjSpellResourceText19 = 205521129,
    pjSpellResourceText20 = 205521130,
    pjSpellResourceText21 = 205521131,
    pjSpellResourceText22 = 205521132,
    pjSpellResourceText23 = 205521133,
    pjSpellResourceText24 = 205521134,
    pjSpellResourceText25 = 205521135,
    pjSpellResourceText26 = 205521136,
    pjSpellResourceText27 = 205521137,
    pjSpellResourceText28 = 205521138,
    pjSpellResourceText29 = 205521139,
    pjSpellResourceText30 = 205521140,
    pjSpellResourceEnterpriseText1 = 205521542,
    pjSpellResourceEnterpriseText2 = 205521543,
    pjSpellResourceEnterpriseText3 = 205521544,
    pjSpellResourceEnterpriseText4 = 205521545,
    pjSpellResourceEnterpriseText5 = 205521546,
    pjSpellResourceEnterpriseText6 = 205521547,
    pjSpellResourceEnterpriseText7 = 205521548,
    pjSpellResourceEnterpriseText8 = 205521549,
    pjSpellResourceEnterpriseText9 = 205521550,
    pjSpellResourceEnterpriseText10 = 205521551,
    pjSpellResourceEnterpriseText11 = 205521552,
    pjSpellResourceEnterpriseText12 = 205521553,
    pjSpellResourceEnterpriseText13 = 205521554,
    pjSpellResourceEnterpriseText14 = 205521555,
    pjSpellResourceEnterpriseText15 = 205521556,
    pjSpellResourceEnterpriseText16 = 205521557,
    pjSpellResourceEnterpriseText17 = 205521558,
    pjSpellResourceEnterpriseText18 = 205521559,
    pjSpellResourceEnterpriseText19 = 205521560,
    pjSpellResourceEnterpriseText20 = 205521561,
    pjSpellResourceEnterpriseText21 = 205521562,
    pjSpellResourceEnterpriseText22 = 205521563,
    pjSpellResourceEnterpriseText23 = 205521564,
    pjSpellResourceEnterpriseText24 = 205521565,
    pjSpellResourceEnterpriseText25 = 205521566,
    pjSpellResourceEnterpriseText26 = 205521567,
    pjSpellResourceEnterpriseText27 = 205521568,
    pjSpellResourceEnterpriseText28 = 205521569,
    pjSpellResourceEnterpriseText29 = 205521570,
    pjSpellResourceEnterpriseText30 = 205521571,
    pjSpellResourceEnterpriseText31 = 205521572,
    pjSpellResourceEnterpriseText32 = 205521573,
    pjSpellResourceEnterpriseText33 = 205521574,
    pjSpellResourceEnterpriseText34 = 205521575,
    pjSpellResourceEnterpriseText35 = 205521576,
    pjSpellResourceEnterpriseText36 = 205521577,
    pjSpellResourceEnterpriseText37 = 205521578,
    pjSpellResourceEnterpriseText38 = 205521579,
    pjSpellResourceEnterpriseText39 = 205521580,
    pjSpellResourceEnterpriseText40 = 205521581,
    pjSpellAssignmentNotes = 255852615,
    pjSpellAssignmentText1 = 255852632,
    pjSpellAssignmentText2 = 255852633,
    pjSpellAssignmentText3 = 255852634,
    pjSpellAssignmentText4 = 255852635,
    pjSpellAssignmentText5 = 255852636,
    pjSpellAssignmentText6 = 255852637,
    pjSpellAssignmentText7 = 255852638,
    pjSpellAssignmentText8 = 255852639,
    pjSpellAssignmentText9 = 255852640,
    pjSpellAssignmentText10 = 255852641,
    pjSpellAssignmentText11 = 255852762,
    pjSpellAssignmentText12 = 255852763,
    pjSpellAssignmentText13 = 255852764,
    pjSpellAssignmentText14 = 255852765,
    pjSpellAssignmentText15 = 255852766,
    pjSpellAssignmentText16 = 255852767,
    pjSpellAssignmentText17 = 255852768,
    pjSpellAssignmentText18 = 255852769,
    pjSpellAssignmentText19 = 255852770,
    pjSpellAssignmentText20 = 255852771,
    pjSpellAssignmentText21 = 255852772,
    pjSpellAssignmentText22 = 255852773,
    pjSpellAssignmentText23 = 255852774,
    pjSpellAssignmentText24 = 255852775,
    pjSpellAssignmentText25 = 255852776,
    pjSpellAssignmentText26 = 255852777,
    pjSpellAssignmentText27 = 255852778,
    pjSpellAssignmentText28 = 255852779,
    pjSpellAssignmentText29 = 255852780,
    pjSpellAssignmentText30 = 255852781,
    pjSpellAssignmentEnterpriseText1 = 255853045,
    pjSpellAssignmentEnterpriseText2 = 255853046,
    pjSpellAssignmentEnterpriseText3 = 255853047,
    pjSpellAssignmentEnterpriseText4 = 255853048,
    pjSpellAssignmentEnterpriseText5 = 255853049,
    pjSpellAssignmentEnterpriseText6 = 255853050,
    pjSpellAssignmentEnterpriseText7 = 255853051,
    pjSpellAssignmentEnterpriseText8 = 255853052,
    pjSpellAssignmentEnterpriseText9 = 255853053,
    pjSpellAssignmentEnterpriseText10 = 255853054,
    pjSpellAssignmentEnterpriseText11 = 255853055,
    pjSpellAssignmentEnterpriseText12 = 255853056,
    pjSpellAssignmentEnterpriseText13 = 255853057,
    pjSpellAssignmentEnterpriseText14 = 255853058,
    pjSpellAssignmentEnterpriseText15 = 255853059,
    pjSpellAssignmentEnterpriseText16 = 255853060,
    pjSpellAssignmentEnterpriseText17 = 255853061,
    pjSpellAssignmentEnterpriseText18 = 255853062,
    pjSpellAssignmentEnterpriseText19 = 255853063,
    pjSpellAssignmentEnterpriseText20 = 255853064,
    pjSpellAssignmentEnterpriseText21 = 255853065,
    pjSpellAssignmentEnterpriseText22 = 255853066,
    pjSpellAssignmentEnterpriseText23 = 255853067,
    pjSpellAssignmentEnterpriseText24 = 255853068,
    pjSpellAssignmentEnterpriseText25 = 255853069,
    pjSpellAssignmentEnterpriseText26 = 255853070,
    pjSpellAssignmentEnterpriseText27 = 255853071,
    pjSpellAssignmentEnterpriseText28 = 255853072,
    pjSpellAssignmentEnterpriseText29 = 255853073,
    pjSpellAssignmentEnterpriseText30 = 255853074,
    pjSpellAssignmentEnterpriseText31 = 255853075,
    pjSpellAssignmentEnterpriseText32 = 255853076,
    pjSpellAssignmentEnterpriseText33 = 255853077,
    pjSpellAssignmentEnterpriseText34 = 255853078,
    pjSpellAssignmentEnterpriseText35 = 255853079,
    pjSpellAssignmentEnterpriseText36 = 255853080,
    pjSpellAssignmentEnterpriseText37 = 255853081,
    pjSpellAssignmentEnterpriseText38 = 255853082,
    pjSpellAssignmentEnterpriseText39 = 255853083,
    pjSpellAssignmentEnterpriseText40 = 255853084
};

enum PjItemType
{
    pjTaskItem = 0,
    pjResourceItem = 1,
    pjOtherItem = 2
};

enum PjPublishInformationOnSave
{
    pjPublishNoSummary = 0,
    pjPublishSummaryOnly = 1,
    pjPublishSummaryAndPlan = 2
};

enum PjPublishScope
{
    pjPublishScopeDefault = 0,
    pjPublishScopeAll = 1,
    pjPublishScopeVisible = 2,
    pjPublishScopeSelected = 3
};

enum PjProjectServerTrackingMethod
{
    pjTrackingMethodDefault = 0,
    pjTrackingMethodSpecifyHours = 1,
    pjTrackingMethodPercentComplete = 2,
    pjTrackingMethodTotalAndRemaining = 3
};

struct __declspec(uuid("11589050-69f0-11d2-b889-00c04fb90729"))
Groups : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetItem))
    GroupPtr Item[];
    __declspec(property(get=GetParent))
    _IProjectDocPtr Parent;
    __declspec(property(get=GetApplication))
    _MSProjectPtr Application;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IUnknownPtr Get_NewEnum ( );
    GroupPtr GetItem (
        const _variant_t & Index );
    long GetCount ( );
    GroupPtr Add (
        _bstr_t Name,
        _bstr_t FieldName );
    GroupPtr Copy (
        _bstr_t Name,
        _bstr_t NewName );
    _IProjectDocPtr GetParent ( );
    _MSProjectPtr GetApplication ( );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get__NewEnum (
        IUnknown * * ppEnumVar ) = 0;
    virtual HRESULT __stdcall get_Item (
        VARIANT Index,
        struct Group * * ppdisp ) = 0;
    virtual HRESULT __stdcall get_Count (
        long * pwIndx ) = 0;
    virtual HRESULT __stdcall raw_Add (
        BSTR Name,
        BSTR FieldName,
        struct Group * * ppdisp ) = 0;
    virtual HRESULT __stdcall raw_Copy (
        BSTR Name,
        BSTR NewName,
        struct Group * * ppdisp ) = 0;
    virtual HRESULT __stdcall get_Parent (
        struct _IProjectDoc * * ppDispatch ) = 0;
    virtual HRESULT __stdcall get_Application (
        struct _MSProject * * ppDispatch ) = 0;
};

struct __declspec(uuid("11589054-69f0-11d2-b889-00c04fb90729"))
TaskGroups : Groups
{};

struct __declspec(uuid("11589055-69f0-11d2-b889-00c04fb90729"))
ResourceGroups : Groups
{};

struct __declspec(uuid("4cf32482-106b-4fff-a1ab-7dd395fb0958"))
Views : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetItem))
    ViewPtr Item[];
    __declspec(property(get=GetParent))
    _IProjectDocPtr Parent;
    __declspec(property(get=GetApplication))
    _MSProjectPtr Application;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IUnknownPtr Get_NewEnum ( );
    ViewPtr GetItem (
        const _variant_t & Index );
    long GetCount ( );
    ViewPtr Copy (
        const _variant_t & Source,
        _bstr_t NewName );
    _IProjectDocPtr GetParent ( );
    _MSProjectPtr GetApplication ( );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get__NewEnum (
        IUnknown * * ppEnumVar ) = 0;
    virtual HRESULT __stdcall get_Item (
        VARIANT Index,
        struct View * * View ) = 0;
    virtual HRESULT __stdcall get_Count (
        long * Index ) = 0;
    virtual HRESULT __stdcall raw_Copy (
        VARIANT Source,
        BSTR NewName,
        struct View * * View ) = 0;
    virtual HRESULT __stdcall get_Parent (
        struct _IProjectDoc * * ppDispatch ) = 0;
    virtual HRESULT __stdcall get_Application (
        struct _MSProject * * ppDispatch ) = 0;
};

struct __declspec(uuid("b4097887-ec12-4683-9622-9974ef26353c"))
ViewsSingle : Views
{
    //
    // Wrapper methods for error-handling
    //

    ViewSinglePtr Add (
        _bstr_t Name,
        enum PjViewScreen Screen,
        VARIANT_BOOL ShowInMenu,
        const _variant_t & Table,
        const _variant_t & Filter,
        const _variant_t & Group,
        VARIANT_BOOL HighlightFilt );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall raw_Add (
        BSTR Name,
        enum PjViewScreen Screen,
        VARIANT_BOOL ShowInMenu,
        VARIANT Table,
        VARIANT Filter,
        VARIANT Group,
        VARIANT_BOOL HighlightFilt,
        struct ViewSingle * * ppViewSingle ) = 0;
};

struct __declspec(uuid("ce4f7d83-369b-43cf-96a8-29c2de2b8658"))
ViewsCombination : Views
{
    //
    // Wrapper methods for error-handling
    //

    ViewCombinationPtr Add (
        _bstr_t Name,
        const _variant_t & TopView,
        const _variant_t & BottomView,
        VARIANT_BOOL ShowInMenu );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall raw_Add (
        BSTR Name,
        VARIANT TopView,
        VARIANT BottomView,
        VARIANT_BOOL ShowInMenu,
        struct ViewCombination * * ppViewCombination ) = 0;
};

struct __declspec(uuid("103ef3dc-9fce-4611-8c8b-f306c8881ca5"))
View : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetType))
    enum PjItemType Type;
    __declspec(property(get=GetShowInMenu,put=PutShowInMenu))
    VARIANT_BOOL ShowInMenu;
    __declspec(property(get=GetSingle))
    VARIANT_BOOL Single;
    __declspec(property(get=GetScreen))
    enum PjViewScreen Screen;
    __declspec(property(get=GetParent))
    _IProjectDocPtr Parent;
    __declspec(property(get=GetApplication))
    _MSProjectPtr Application;
    __declspec(property(get=GetIndex))
    long Index;

    //
    // Wrapper methods for error-handling
    //

    _MSProjectPtr GetApplication ( );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t Name );
    long GetIndex ( );
    _IProjectDocPtr GetParent ( );
    HRESULT Delete ( );
    enum PjItemType GetType ( );
    VARIANT_BOOL GetShowInMenu ( );
    void PutShowInMenu (
        VARIANT_BOOL ShowInMenu );
    HRESULT Apply ( );
    VARIANT_BOOL GetSingle ( );
    enum PjViewScreen GetScreen ( );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Application (
        struct _MSProject * * Dispatch ) = 0;
    virtual HRESULT __stdcall get_Name (
        BSTR * Name ) = 0;
    virtual HRESULT __stdcall put_Name (
        BSTR Name ) = 0;
    virtual HRESULT __stdcall get_Index (
        long * Index ) = 0;
    virtual HRESULT __stdcall get_Parent (
        struct _IProjectDoc * * Dispatch ) = 0;
    virtual HRESULT __stdcall raw_Delete ( ) = 0;
    virtual HRESULT __stdcall get_Type (
        enum PjItemType * Type ) = 0;
    virtual HRESULT __stdcall get_ShowInMenu (
        VARIANT_BOOL * ShowInMenu ) = 0;
    virtual HRESULT __stdcall put_ShowInMenu (
        VARIANT_BOOL ShowInMenu ) = 0;
    virtual HRESULT __stdcall raw_Apply ( ) = 0;
    virtual HRESULT __stdcall get_Single (
        VARIANT_BOOL * Single ) = 0;
    virtual HRESULT __stdcall get_Screen (
        enum PjViewScreen * Screen ) = 0;
};

struct __declspec(uuid("f15fde9e-fdc1-44d2-a0d0-249ad48f58fe"))
ViewSingle : View
{
    //
    // Property data
    //

    __declspec(property(get=GetHighlightFilter,put=PutHighlightFilter))
    VARIANT_BOOL HighlightFilter;

    //
    // Wrapper methods for error-handling
    //

    TablePtr GetTable ( );
    void PutTable (
        const _variant_t & Table );
    FilterPtr GetFilter ( );
    void PutFilter (
        const _variant_t & Filter );
    GroupPtr GetGroup ( );
    void PutGroup (
        const _variant_t & Group );
    VARIANT_BOOL GetHighlightFilter ( );
    void PutHighlightFilter (
        VARIANT_BOOL HighlightFilter );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Table (
        struct Table * * Table ) = 0;
    virtual HRESULT __stdcall put_Table (
        VARIANT Table ) = 0;
    virtual HRESULT __stdcall get_Filter (
        struct Filter * * Filter ) = 0;
    virtual HRESULT __stdcall put_Filter (
        VARIANT Filter ) = 0;
    virtual HRESULT __stdcall get_Group (
        struct Group * * Group ) = 0;
    virtual HRESULT __stdcall put_Group (
        VARIANT Group ) = 0;
    virtual HRESULT __stdcall get_HighlightFilter (
        VARIANT_BOOL * HighlightFilter ) = 0;
    virtual HRESULT __stdcall put_HighlightFilter (
        VARIANT_BOOL HighlightFilter ) = 0;
};

struct __declspec(uuid("0880e27c-c621-4349-96ad-56520c827e14"))
ViewCombination : View
{
    //
    // Wrapper methods for error-handling
    //

    ViewSinglePtr GetTopView ( );
    void PutTopView (
        const _variant_t & TopView );
    ViewSinglePtr GetBottomView ( );
    void PutBottomView (
        const _variant_t & BottomView );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_TopView (
        struct ViewSingle * * TopView ) = 0;
    virtual HRESULT __stdcall put_TopView (
        VARIANT TopView ) = 0;
    virtual HRESULT __stdcall get_BottomView (
        struct ViewSingle * * BottomView ) = 0;
    virtual HRESULT __stdcall put_BottomView (
        VARIANT BottomView ) = 0;
};

struct __declspec(uuid("31e3eb5a-6339-43b0-b1b8-1aed03886aec"))
Tables : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetItem))
    TablePtr Item[];
    __declspec(property(get=GetParent))
    _IProjectDocPtr Parent;
    __declspec(property(get=GetApplication))
    _MSProjectPtr Application;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IUnknownPtr Get_NewEnum ( );
    TablePtr GetItem (
        const _variant_t & Index );
    long GetCount ( );
    TablePtr Copy (
        const _variant_t & Source,
        _bstr_t NewName );
    _IProjectDocPtr GetParent ( );
    _MSProjectPtr GetApplication ( );
    TablePtr Add (
        _bstr_t Name,
        enum PjField Field,
        VARIANT_BOOL Task );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get__NewEnum (
        IUnknown * * ppEnumVar ) = 0;
    virtual HRESULT __stdcall get_Item (
        VARIANT Index,
        struct Table * * Table ) = 0;
    virtual HRESULT __stdcall get_Count (
        long * Index ) = 0;
    virtual HRESULT __stdcall raw_Copy (
        VARIANT Source,
        BSTR NewName,
        struct Table * * Table ) = 0;
    virtual HRESULT __stdcall get_Parent (
        struct _IProjectDoc * * ppDispatch ) = 0;
    virtual HRESULT __stdcall get_Application (
        struct _MSProject * * ppDispatch ) = 0;
    virtual HRESULT __stdcall raw_Add (
        BSTR Name,
        enum PjField Field,
        VARIANT_BOOL Task,
        struct Table * * newtable ) = 0;
};

struct __declspec(uuid("54eff41a-4603-4771-80ee-f313bf9faec2"))
Table : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetTableType))
    enum PjItemType TableType;
    __declspec(property(get=GetShowInMenu,put=PutShowInMenu))
    VARIANT_BOOL ShowInMenu;
    __declspec(property(get=GetDateFormat,put=PutDateFormat))
    enum PjDateFormat DateFormat;
    __declspec(property(get=GetRowHeight,put=PutRowHeight))
    long RowHeight;
    __declspec(property(get=GetLockFirstColumn,put=PutLockFirstColumn))
    VARIANT_BOOL LockFirstColumn;
    __declspec(property(get=GetAdjustHeaderRowHeight,put=PutAdjustHeaderRowHeight))
    VARIANT_BOOL AdjustHeaderRowHeight;
    __declspec(property(get=GetTableFields))
    TableFieldsPtr TableFields;
    __declspec(property(get=GetParent))
    _IProjectDocPtr Parent;
    __declspec(property(get=GetApplication))
    _MSProjectPtr Application;
    __declspec(property(get=GetIndex))
    long Index;

    //
    // Wrapper methods for error-handling
    //

    _MSProjectPtr GetApplication ( );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t Name );
    long GetIndex ( );
    _IProjectDocPtr GetParent ( );
    HRESULT Delete ( );
    enum PjItemType GetTableType ( );
    VARIANT_BOOL GetShowInMenu ( );
    void PutShowInMenu (
        VARIANT_BOOL ShowInMenu );
    HRESULT Apply ( );
    enum PjDateFormat GetDateFormat ( );
    void PutDateFormat (
        enum PjDateFormat Format );
    long GetRowHeight ( );
    void PutRowHeight (
        long Height );
    VARIANT_BOOL GetLockFirstColumn ( );
    void PutLockFirstColumn (
        VARIANT_BOOL Locked );
    VARIANT_BOOL GetAdjustHeaderRowHeight ( );
    void PutAdjustHeaderRowHeight (
        VARIANT_BOOL adjustable );
    TableFieldsPtr GetTableFields ( );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Application (
        struct _MSProject * * Dispatch ) = 0;
    virtual HRESULT __stdcall get_Name (
        BSTR * Name ) = 0;
    virtual HRESULT __stdcall put_Name (
        BSTR Name ) = 0;
    virtual HRESULT __stdcall get_Index (
        long * Index ) = 0;
    virtual HRESULT __stdcall get_Parent (
        struct _IProjectDoc * * Dispatch ) = 0;
    virtual HRESULT __stdcall raw_Delete ( ) = 0;
    virtual HRESULT __stdcall get_TableType (
        enum PjItemType * Type ) = 0;
    virtual HRESULT __stdcall get_ShowInMenu (
        VARIANT_BOOL * ShowInMenu ) = 0;
    virtual HRESULT __stdcall put_ShowInMenu (
        VARIANT_BOOL ShowInMenu ) = 0;
    virtual HRESULT __stdcall raw_Apply ( ) = 0;
    virtual HRESULT __stdcall get_DateFormat (
        enum PjDateFormat * Format ) = 0;
    virtual HRESULT __stdcall put_DateFormat (
        enum PjDateFormat Format ) = 0;
    virtual HRESULT __stdcall get_RowHeight (
        long * Height ) = 0;
    virtual HRESULT __stdcall put_RowHeight (
        long Height ) = 0;
    virtual HRESULT __stdcall get_LockFirstColumn (
        VARIANT_BOOL * Locked ) = 0;
    virtual HRESULT __stdcall put_LockFirstColumn (
        VARIANT_BOOL Locked ) = 0;
    virtual HRESULT __stdcall get_AdjustHeaderRowHeight (
        VARIANT_BOOL * adjustable ) = 0;
    virtual HRESULT __stdcall put_AdjustHeaderRowHeight (
        VARIANT_BOOL adjustable ) = 0;
    virtual HRESULT __stdcall get_TableFields (
        struct TableFields * * tfs ) = 0;
};

struct __declspec(uuid("ed989e98-f561-4d58-8f67-5d2e2b920e77"))
Filters : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetItem))
    FilterPtr Item[];
    __declspec(property(get=GetParent))
    _IProjectDocPtr Parent;
    __declspec(property(get=GetApplication))
    _MSProjectPtr Application;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IUnknownPtr Get_NewEnum ( );
    FilterPtr GetItem (
        const _variant_t & Index );
    long GetCount ( );
    FilterPtr Copy (
        const _variant_t & Source,
        _bstr_t NewName );
    _IProjectDocPtr GetParent ( );
    _MSProjectPtr GetApplication ( );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get__NewEnum (
        IUnknown * * ppEnumVar ) = 0;
    virtual HRESULT __stdcall get_Item (
        VARIANT Index,
        struct Filter * * Filter ) = 0;
    virtual HRESULT __stdcall get_Count (
        long * Index ) = 0;
    virtual HRESULT __stdcall raw_Copy (
        VARIANT Source,
        BSTR NewName,
        struct Filter * * Filter ) = 0;
    virtual HRESULT __stdcall get_Parent (
        struct _IProjectDoc * * ppDispatch ) = 0;
    virtual HRESULT __stdcall get_Application (
        struct _MSProject * * ppDispatch ) = 0;
};

struct __declspec(uuid("dc2fddaf-ce01-42dc-bb4f-b3fb3346d5b7"))
Filter : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetFilterType))
    enum PjItemType FilterType;
    __declspec(property(get=GetShowInMenu,put=PutShowInMenu))
    VARIANT_BOOL ShowInMenu;
    __declspec(property(get=GetShowRelatedSummaryRows,put=PutShowRelatedSummaryRows))
    VARIANT_BOOL ShowRelatedSummaryRows;
    __declspec(property(get=GetParent))
    _IProjectDocPtr Parent;
    __declspec(property(get=GetApplication))
    _MSProjectPtr Application;
    __declspec(property(get=GetIndex))
    long Index;

    //
    // Wrapper methods for error-handling
    //

    _MSProjectPtr GetApplication ( );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t Name );
    long GetIndex ( );
    _IProjectDocPtr GetParent ( );
    HRESULT Delete ( );
    enum PjItemType GetFilterType ( );
    VARIANT_BOOL GetShowInMenu ( );
    void PutShowInMenu (
        VARIANT_BOOL ShowInMenu );
    HRESULT Apply (
        VARIANT_BOOL Highlight );
    VARIANT_BOOL GetShowRelatedSummaryRows ( );
    void PutShowRelatedSummaryRows (
        VARIANT_BOOL ShowRelatedSummaryRows );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Application (
        struct _MSProject * * Dispatch ) = 0;
    virtual HRESULT __stdcall get_Name (
        BSTR * Name ) = 0;
    virtual HRESULT __stdcall put_Name (
        BSTR Name ) = 0;
    virtual HRESULT __stdcall get_Index (
        long * Index ) = 0;
    virtual HRESULT __stdcall get_Parent (
        struct _IProjectDoc * * Dispatch ) = 0;
    virtual HRESULT __stdcall raw_Delete ( ) = 0;
    virtual HRESULT __stdcall get_FilterType (
        enum PjItemType * Type ) = 0;
    virtual HRESULT __stdcall get_ShowInMenu (
        VARIANT_BOOL * ShowInMenu ) = 0;
    virtual HRESULT __stdcall put_ShowInMenu (
        VARIANT_BOOL ShowInMenu ) = 0;
    virtual HRESULT __stdcall raw_Apply (
        VARIANT_BOOL Highlight ) = 0;
    virtual HRESULT __stdcall get_ShowRelatedSummaryRows (
        VARIANT_BOOL * ShowRelatedSummaryRows ) = 0;
    virtual HRESULT __stdcall put_ShowRelatedSummaryRows (
        VARIANT_BOOL ShowRelatedSummaryRows ) = 0;
};

struct __declspec(uuid("02497005-3861-4603-80a4-ff309631dba1"))
EventInfo : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCancel,put=PutCancel))
    VARIANT_BOOL Cancel;

    //
    // Wrapper methods for error-handling
    //

    VARIANT_BOOL GetCancel ( );
    void PutCancel (
        VARIANT_BOOL Cancel );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Cancel (
        VARIANT_BOOL * Cancel ) = 0;
    virtual HRESULT __stdcall put_Cancel (
        VARIANT_BOOL Cancel ) = 0;
};

struct __declspec(uuid("6711f81e-aa55-47ee-aa9f-31b00e709cb6"))
Profile : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetServer,put=PutServer))
    _bstr_t Server;
    __declspec(property(get=GetLoginType,put=PutLoginType))
    enum PjLoginType LoginType;
    __declspec(property(get=GetUserName,put=PutUserName))
    _bstr_t UserName;
    __declspec(property(get=GetType))
    enum PjProfileType Type;
    __declspec(property(get=GetConnectionState))
    enum PjProfileConnectionState ConnectionState;

    //
    // Wrapper methods for error-handling
    //

    HRESULT Delete ( );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t Name );
    _bstr_t GetServer ( );
    void PutServer (
        _bstr_t Server );
    enum PjLoginType GetLoginType ( );
    void PutLoginType (
        enum PjLoginType LoginType );
    _bstr_t GetUserName ( );
    void PutUserName (
        _bstr_t UserName );
    enum PjProfileType GetType ( );
    enum PjProfileConnectionState GetConnectionState ( );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall raw_Delete ( ) = 0;
    virtual HRESULT __stdcall get_Name (
        BSTR * Name ) = 0;
    virtual HRESULT __stdcall put_Name (
        BSTR Name ) = 0;
    virtual HRESULT __stdcall get_Server (
        BSTR * Server ) = 0;
    virtual HRESULT __stdcall put_Server (
        BSTR Server ) = 0;
    virtual HRESULT __stdcall get_LoginType (
        enum PjLoginType * LoginType ) = 0;
    virtual HRESULT __stdcall put_LoginType (
        enum PjLoginType LoginType ) = 0;
    virtual HRESULT __stdcall get_UserName (
        BSTR * UserName ) = 0;
    virtual HRESULT __stdcall put_UserName (
        BSTR UserName ) = 0;
    virtual HRESULT __stdcall get_Type (
        enum PjProfileType * profiletype ) = 0;
    virtual HRESULT __stdcall get_ConnectionState (
        enum PjProfileConnectionState * profiletype ) = 0;
};

struct __declspec(uuid("08cd6de7-87cd-42ab-bd28-6e2c0170a274"))
Profiles : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetItem))
    ProfilePtr Item[];
    __declspec(property(get=GetDefaultProfile,put=PutDefaultProfile))
    ProfilePtr DefaultProfile;
    __declspec(property(get=GetActiveProfile))
    ProfilePtr ActiveProfile;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IUnknownPtr Get_NewEnum ( );
    ProfilePtr Add (
        _bstr_t Name,
        _bstr_t Server,
        enum PjLoginType LoginType,
        _bstr_t UserName );
    ProfilePtr GetItem (
        const _variant_t & Index );
    long GetCount ( );
    ProfilePtr GetDefaultProfile ( );
    void PutDefaultProfile (
        struct Profile * pf );
    ProfilePtr GetActiveProfile ( );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get__NewEnum (
        IUnknown * * ppEnumVar ) = 0;
    virtual HRESULT __stdcall raw_Add (
        BSTR Name,
        BSTR Server,
        enum PjLoginType LoginType,
        BSTR UserName,
        struct Profile * * newpf ) = 0;
    virtual HRESULT __stdcall get_Item (
        VARIANT Index,
        struct Profile * * pf ) = 0;
    virtual HRESULT __stdcall get_Count (
        long * Index ) = 0;
    virtual HRESULT __stdcall get_DefaultProfile (
        struct Profile * * pf ) = 0;
    virtual HRESULT __stdcall put_DefaultProfile (
        struct Profile * pf ) = 0;
    virtual HRESULT __stdcall get_ActiveProfile (
        struct Profile * * pf ) = 0;
};

struct __declspec(uuid("bf6d2103-92d3-4162-9816-a3d811bcf8ca"))
TableFields : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetItem))
    TableFieldPtr Item[];
    __declspec(property(get=GetParent))
    _IProjectDocPtr Parent;
    __declspec(property(get=GetApplication))
    _MSProjectPtr Application;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IUnknownPtr Get_NewEnum ( );
    TableFieldPtr Add (
        enum PjField Field,
        enum PjAlignment AlignData,
        long Width,
        _bstr_t Title,
        enum PjAlignment AlignTitle,
        long Before,
        VARIANT_BOOL AutoWrap );
    _MSProjectPtr GetApplication ( );
    _IProjectDocPtr GetParent ( );
    TableFieldPtr GetItem (
        const _variant_t & Index );
    long GetCount ( );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get__NewEnum (
        IUnknown * * ppEnumVar ) = 0;
    virtual HRESULT __stdcall raw_Add (
        enum PjField Field,
        enum PjAlignment AlignData,
        long Width,
        BSTR Title,
        enum PjAlignment AlignTitle,
        long Before,
        VARIANT_BOOL AutoWrap,
        struct TableField * * newtf ) = 0;
    virtual HRESULT __stdcall get_Application (
        struct _MSProject * * Dispatch ) = 0;
    virtual HRESULT __stdcall get_Parent (
        struct _IProjectDoc * * Dispatch ) = 0;
    virtual HRESULT __stdcall get_Item (
        VARIANT Index,
        struct TableField * * tf ) = 0;
    virtual HRESULT __stdcall get_Count (
        long * Index ) = 0;
};

struct __declspec(uuid("747d4ba8-fb3b-4c2c-b615-02cb6ebf0ae7"))
TableField : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetTitle,put=PutTitle))
    _bstr_t Title;
    __declspec(property(get=GetField,put=PutField))
    enum PjField Field;
    __declspec(property(get=GetAlignData,put=PutAlignData))
    enum PjAlignment AlignData;
    __declspec(property(get=GetWidth,put=PutWidth))
    long Width;
    __declspec(property(get=GetAlignTitle,put=PutAlignTitle))
    enum PjAlignment AlignTitle;
    __declspec(property(get=GetAutoWrap,put=PutAutoWrap))
    VARIANT_BOOL AutoWrap;
    __declspec(property(get=GetParent))
    TablePtr Parent;
    __declspec(property(get=GetApplication))
    _MSProjectPtr Application;
    __declspec(property(get=GetIndex))
    long Index;

    //
    // Wrapper methods for error-handling
    //

    HRESULT Delete ( );
    _MSProjectPtr GetApplication ( );
    TablePtr GetParent ( );
    long GetIndex ( );
    enum PjField GetField ( );
    void PutField (
        enum PjField Field );
    enum PjAlignment GetAlignData ( );
    void PutAlignData (
        enum PjAlignment Alignment );
    long GetWidth ( );
    void PutWidth (
        long Width );
    _bstr_t GetTitle ( );
    void PutTitle (
        _bstr_t Title );
    enum PjAlignment GetAlignTitle ( );
    void PutAlignTitle (
        enum PjAlignment Alignment );
    VARIANT_BOOL GetAutoWrap ( );
    void PutAutoWrap (
        VARIANT_BOOL AutoWrap );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall raw_Delete ( ) = 0;
    virtual HRESULT __stdcall get_Application (
        struct _MSProject * * Dispatch ) = 0;
    virtual HRESULT __stdcall get_Parent (
        struct Table * * Dispatch ) = 0;
    virtual HRESULT __stdcall get_Index (
        long * Index ) = 0;
    virtual HRESULT __stdcall get_Field (
        enum PjField * Field ) = 0;
    virtual HRESULT __stdcall put_Field (
        enum PjField Field ) = 0;
    virtual HRESULT __stdcall get_AlignData (
        enum PjAlignment * Alignment ) = 0;
    virtual HRESULT __stdcall put_AlignData (
        enum PjAlignment Alignment ) = 0;
    virtual HRESULT __stdcall get_Width (
        long * Width ) = 0;
    virtual HRESULT __stdcall put_Width (
        long Width ) = 0;
    virtual HRESULT __stdcall get_Title (
        BSTR * Title ) = 0;
    virtual HRESULT __stdcall put_Title (
        BSTR Title ) = 0;
    virtual HRESULT __stdcall get_AlignTitle (
        enum PjAlignment * Alignment ) = 0;
    virtual HRESULT __stdcall put_AlignTitle (
        enum PjAlignment Alignment ) = 0;
    virtual HRESULT __stdcall get_AutoWrap (
        VARIANT_BOOL * AutoWrap ) = 0;
    virtual HRESULT __stdcall put_AutoWrap (
        VARIANT_BOOL AutoWrap ) = 0;
};

struct __declspec(uuid("5066d7c4-1ed7-48c4-ace7-299e109d368c"))
_EProjectApp2 : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    // Methods:
    HRESULT NewProject (
        struct _IProjectDoc * pj );
    HRESULT ProjectBeforeTaskDelete (
        struct Task * tsk,
        VARIANT_BOOL * Cancel );
    HRESULT ProjectBeforeResourceDelete (
        struct Resource * res,
        VARIANT_BOOL * Cancel );
    HRESULT ProjectBeforeAssignmentDelete (
        struct Assignment * asg,
        VARIANT_BOOL * Cancel );
    HRESULT ProjectBeforeTaskChange (
        struct Task * tsk,
        enum PjField Field,
        const _variant_t & NewVal,
        VARIANT_BOOL * Cancel );
    HRESULT ProjectBeforeResourceChange (
        struct Resource * res,
        enum PjField Field,
        const _variant_t & NewVal,
        VARIANT_BOOL * Cancel );
    HRESULT ProjectBeforeAssignmentChange (
        struct Assignment * asg,
        enum PjAssignmentField Field,
        const _variant_t & NewVal,
        VARIANT_BOOL * Cancel );
    HRESULT ProjectBeforeTaskNew (
        struct _IProjectDoc * pj,
        VARIANT_BOOL * Cancel );
    HRESULT ProjectBeforeResourceNew (
        struct _IProjectDoc * pj,
        VARIANT_BOOL * Cancel );
    HRESULT ProjectBeforeAssignmentNew (
        struct _IProjectDoc * pj,
        VARIANT_BOOL * Cancel );
    HRESULT ProjectBeforeClose (
        struct _IProjectDoc * pj,
        VARIANT_BOOL * Cancel );
    HRESULT ProjectBeforePrint (
        struct _IProjectDoc * pj,
        VARIANT_BOOL * Cancel );
    HRESULT ProjectBeforeSave (
        struct _IProjectDoc * pj,
        VARIANT_BOOL SaveAsUi,
        VARIANT_BOOL * Cancel );
    HRESULT ProjectCalculate (
        struct _IProjectDoc * pj );
    HRESULT WindowGoalAreaChange (
        struct Window * Window,
        long goalArea );
    HRESULT WindowSelectionChange (
        struct Window * Window,
        struct Selection * sel,
        const _variant_t & selType );
    HRESULT WindowBeforeViewChange (
        struct Window * Window,
        struct View * prevView,
        struct View * newView,
        VARIANT_BOOL projectHasViewWindow,
        struct EventInfo * Info );
    HRESULT WindowViewChange (
        struct Window * Window,
        struct View * prevView,
        struct View * newView,
        VARIANT_BOOL success );
    HRESULT WindowActivate (
        struct Window * activatedWindow );
    HRESULT WindowDeactivate (
        struct Window * deactivatedWindow );
    HRESULT WindowSidepaneDisplayChange (
        struct Window * Window,
        VARIANT_BOOL Close );
    HRESULT WindowSidepaneTaskChange (
        struct Window * Window,
        long ID,
        VARIANT_BOOL IsGoalArea );
    HRESULT WorkpaneDisplayChange (
        VARIANT_BOOL DisplayState );
    HRESULT LoadWebPage (
        struct Window * Window,
        BSTR * TargetPage );
    HRESULT ProjectAfterSave ( );
    HRESULT ProjectTaskNew (
        struct _IProjectDoc * pj,
        long ID );
    HRESULT ProjectResourceNew (
        struct _IProjectDoc * pj,
        long ID );
    HRESULT ProjectAssignmentNew (
        struct _IProjectDoc * pj,
        long ID );
    HRESULT ProjectBeforeSaveBaseline (
        struct _IProjectDoc * pj,
        VARIANT_BOOL Interim,
        enum PjBaselines bl,
        enum PjSaveBaselineFrom InterimCopy,
        enum PjSaveBaselineTo InterimInto,
        VARIANT_BOOL AllTasks,
        VARIANT_BOOL RollupToSummaryTasks,
        VARIANT_BOOL RollupFromSubtasks,
        struct EventInfo * Info );
    HRESULT ProjectBeforeClearBaseline (
        struct _IProjectDoc * pj,
        VARIANT_BOOL Interim,
        enum PjBaselines bl,
        enum PjSaveBaselineTo InterimFrom,
        VARIANT_BOOL AllTasks,
        struct EventInfo * Info );
    HRESULT ProjectBeforeClose2 (
        struct _IProjectDoc * pj,
        struct EventInfo * Info );
    HRESULT ProjectBeforePrint2 (
        struct _IProjectDoc * pj,
        struct EventInfo * Info );
    HRESULT ProjectBeforeSave2 (
        struct _IProjectDoc * pj,
        VARIANT_BOOL SaveAsUi,
        struct EventInfo * Info );
    HRESULT ProjectBeforeTaskDelete2 (
        struct Task * tsk,
        struct EventInfo * Info );
    HRESULT ProjectBeforeResourceDelete2 (
        struct Resource * res,
        struct EventInfo * Info );
    HRESULT ProjectBeforeAssignmentDelete2 (
        struct Assignment * asg,
        struct EventInfo * Info );
    HRESULT ProjectBeforeTaskChange2 (
        struct Task * tsk,
        enum PjField Field,
        const _variant_t & NewVal,
        struct EventInfo * Info );
    HRESULT ProjectBeforeResourceChange2 (
        struct Resource * res,
        enum PjField Field,
        const _variant_t & NewVal,
        struct EventInfo * Info );
    HRESULT ProjectBeforeAssignmentChange2 (
        struct Assignment * asg,
        enum PjAssignmentField Field,
        const _variant_t & NewVal,
        struct EventInfo * Info );
    HRESULT ProjectBeforeTaskNew2 (
        struct _IProjectDoc * pj,
        struct EventInfo * Info );
    HRESULT ProjectBeforeResourceNew2 (
        struct _IProjectDoc * pj,
        struct EventInfo * Info );
    HRESULT ProjectBeforeAssignmentNew2 (
        struct _IProjectDoc * pj,
        struct EventInfo * Info );
    HRESULT ApplicationBeforeClose (
        struct EventInfo * Info );
};

//
// Function implementation mapping
//

#pragma start_map_region("d:\_code\shared\unicode_debug\MSPRJ.tli")
__declspec(implementation_key(1)) _variant_t Task::GetWork ( );
__declspec(implementation_key(2)) void Task::PutWork ( const _variant_t & retval );
__declspec(implementation_key(3)) _variant_t Task::GetBaselineWork ( );
__declspec(implementation_key(4)) void Task::PutBaselineWork ( const _variant_t & retval );
__declspec(implementation_key(5)) _variant_t Task::GetActualWork ( );
__declspec(implementation_key(6)) void Task::PutActualWork ( const _variant_t & retval );
__declspec(implementation_key(7)) _variant_t Task::GetWorkVariance ( );
__declspec(implementation_key(8)) _variant_t Task::GetRemainingWork ( );
__declspec(implementation_key(9)) void Task::PutRemainingWork ( const _variant_t & retval );
__declspec(implementation_key(10)) _variant_t Task::GetCost ( );
__declspec(implementation_key(11)) void Task::PutCost ( const _variant_t & retval );
__declspec(implementation_key(12)) _variant_t Task::GetBaselineCost ( );
__declspec(implementation_key(13)) void Task::PutBaselineCost ( const _variant_t & retval );
__declspec(implementation_key(14)) _variant_t Task::GetActualCost ( );
__declspec(implementation_key(15)) void Task::PutActualCost ( const _variant_t & retval );
__declspec(implementation_key(16)) _variant_t Task::GetFixedCost ( );
__declspec(implementation_key(17)) void Task::PutFixedCost ( const _variant_t & retval );
__declspec(implementation_key(18)) _variant_t Task::GetCostVariance ( );
__declspec(implementation_key(19)) _variant_t Task::GetRemainingCost ( );
__declspec(implementation_key(20)) _variant_t Task::GetBCWP ( );
__declspec(implementation_key(21)) _variant_t Task::GetBCWS ( );
__declspec(implementation_key(22)) _variant_t Task::GetSV ( );
__declspec(implementation_key(23)) _bstr_t Task::GetName ( );
__declspec(implementation_key(24)) void Task::PutName ( _bstr_t retval );
__declspec(implementation_key(25)) _bstr_t Task::GetNotes ( );
__declspec(implementation_key(26)) void Task::PutNotes ( _bstr_t retval );
__declspec(implementation_key(27)) _bstr_t Task::GetWBS ( );
__declspec(implementation_key(28)) void Task::PutWBS ( _bstr_t retval );
__declspec(implementation_key(29)) _variant_t Task::GetConstraintType ( );
__declspec(implementation_key(30)) void Task::PutConstraintType ( const _variant_t & retval );
__declspec(implementation_key(31)) _variant_t Task::GetConstraintDate ( );
__declspec(implementation_key(32)) void Task::PutConstraintDate ( const _variant_t & retval );
__declspec(implementation_key(33)) _variant_t Task::GetCritical ( );
__declspec(implementation_key(34)) _variant_t Task::GetLevelingDelay ( );
__declspec(implementation_key(35)) void Task::PutLevelingDelay ( const _variant_t & retval );
__declspec(implementation_key(36)) _variant_t Task::GetFreeSlack ( );
__declspec(implementation_key(37)) _variant_t Task::GetTotalSlack ( );
__declspec(implementation_key(38)) long Task::GetID ( );
__declspec(implementation_key(39)) _variant_t Task::GetMilestone ( );
__declspec(implementation_key(40)) void Task::PutMilestone ( const _variant_t & retval );
__declspec(implementation_key(41)) _variant_t Task::GetPriority ( );
__declspec(implementation_key(42)) void Task::PutPriority ( const _variant_t & retval );
__declspec(implementation_key(43)) _bstr_t Task::GetSubproject ( );
__declspec(implementation_key(44)) void Task::PutSubproject ( _bstr_t retval );
__declspec(implementation_key(45)) _variant_t Task::GetBaselineDuration ( );
__declspec(implementation_key(46)) void Task::PutBaselineDuration ( const _variant_t & retval );
__declspec(implementation_key(47)) _variant_t Task::GetActualDuration ( );
__declspec(implementation_key(48)) void Task::PutActualDuration ( const _variant_t & retval );
__declspec(implementation_key(49)) _variant_t Task::GetDuration ( );
__declspec(implementation_key(50)) void Task::PutDuration ( const _variant_t & retval );
__declspec(implementation_key(51)) _variant_t Task::GetDurationVariance ( );
__declspec(implementation_key(52)) _variant_t Task::GetRemainingDuration ( );
__declspec(implementation_key(53)) void Task::PutRemainingDuration ( const _variant_t & retval );
__declspec(implementation_key(54)) _variant_t Task::GetPercentComplete ( );
__declspec(implementation_key(55)) void Task::PutPercentComplete ( const _variant_t & retval );
__declspec(implementation_key(56)) _variant_t Task::GetPercentWorkComplete ( );
__declspec(implementation_key(57)) void Task::PutPercentWorkComplete ( const _variant_t & retval );
__declspec(implementation_key(58)) _variant_t Task::GetFixedDuration ( );
__declspec(implementation_key(59)) void Task::PutFixedDuration ( const _variant_t & retval );
__declspec(implementation_key(60)) _variant_t Task::GetStart ( );
__declspec(implementation_key(61)) void Task::PutStart ( const _variant_t & retval );
__declspec(implementation_key(62)) _variant_t Task::GetFinish ( );
__declspec(implementation_key(63)) void Task::PutFinish ( const _variant_t & retval );
__declspec(implementation_key(64)) _variant_t Task::GetEarlyStart ( );
__declspec(implementation_key(65)) _variant_t Task::GetEarlyFinish ( );
__declspec(implementation_key(66)) _variant_t Task::GetLateStart ( );
__declspec(implementation_key(67)) _variant_t Task::GetLateFinish ( );
__declspec(implementation_key(68)) _variant_t Task::GetActualStart ( );
__declspec(implementation_key(69)) void Task::PutActualStart ( const _variant_t & retval );
__declspec(implementation_key(70)) _variant_t Task::GetActualFinish ( );
__declspec(implementation_key(71)) void Task::PutActualFinish ( const _variant_t & retval );
__declspec(implementation_key(72)) _variant_t Task::GetBaselineStart ( );
__declspec(implementation_key(73)) void Task::PutBaselineStart ( const _variant_t & retval );
__declspec(implementation_key(74)) _variant_t Task::GetBaselineFinish ( );
__declspec(implementation_key(75)) void Task::PutBaselineFinish ( const _variant_t & retval );
__declspec(implementation_key(76)) _variant_t Task::GetStartVariance ( );
__declspec(implementation_key(77)) _variant_t Task::GetFinishVariance ( );
__declspec(implementation_key(78)) _bstr_t Task::GetText1 ( );
__declspec(implementation_key(79)) void Task::PutText1 ( _bstr_t retval );
__declspec(implementation_key(80)) _variant_t Task::GetStart1 ( );
__declspec(implementation_key(81)) void Task::PutStart1 ( const _variant_t & retval );
__declspec(implementation_key(82)) _variant_t Task::GetFinish1 ( );
__declspec(implementation_key(83)) void Task::PutFinish1 ( const _variant_t & retval );
__declspec(implementation_key(84)) _bstr_t Task::GetText2 ( );
__declspec(implementation_key(85)) void Task::PutText2 ( _bstr_t retval );
__declspec(implementation_key(86)) _variant_t Task::GetStart2 ( );
__declspec(implementation_key(87)) void Task::PutStart2 ( const _variant_t & retval );
__declspec(implementation_key(88)) _variant_t Task::GetFinish2 ( );
__declspec(implementation_key(89)) void Task::PutFinish2 ( const _variant_t & retval );
__declspec(implementation_key(90)) _bstr_t Task::GetText3 ( );
__declspec(implementation_key(91)) void Task::PutText3 ( _bstr_t retval );
__declspec(implementation_key(92)) _variant_t Task::GetStart3 ( );
__declspec(implementation_key(93)) void Task::PutStart3 ( const _variant_t & retval );
__declspec(implementation_key(94)) _variant_t Task::GetFinish3 ( );
__declspec(implementation_key(95)) void Task::PutFinish3 ( const _variant_t & retval );
__declspec(implementation_key(96)) _bstr_t Task::GetText4 ( );
__declspec(implementation_key(97)) void Task::PutText4 ( _bstr_t retval );
__declspec(implementation_key(98)) _variant_t Task::GetStart4 ( );
__declspec(implementation_key(99)) void Task::PutStart4 ( const _variant_t & retval );
__declspec(implementation_key(100)) _variant_t Task::GetFinish4 ( );
__declspec(implementation_key(101)) void Task::PutFinish4 ( const _variant_t & retval );
__declspec(implementation_key(102)) _bstr_t Task::GetText5 ( );
__declspec(implementation_key(103)) void Task::PutText5 ( _bstr_t retval );
__declspec(implementation_key(104)) _variant_t Task::GetStart5 ( );
__declspec(implementation_key(105)) void Task::PutStart5 ( const _variant_t & retval );
__declspec(implementation_key(106)) _variant_t Task::GetFinish5 ( );
__declspec(implementation_key(107)) void Task::PutFinish5 ( const _variant_t & retval );
__declspec(implementation_key(108)) _bstr_t Task::GetText6 ( );
__declspec(implementation_key(109)) void Task::PutText6 ( _bstr_t retval );
__declspec(implementation_key(110)) _bstr_t Task::GetText7 ( );
__declspec(implementation_key(111)) void Task::PutText7 ( _bstr_t retval );
__declspec(implementation_key(112)) _bstr_t Task::GetText8 ( );
__declspec(implementation_key(113)) void Task::PutText8 ( _bstr_t retval );
__declspec(implementation_key(114)) _bstr_t Task::GetText9 ( );
__declspec(implementation_key(115)) void Task::PutText9 ( _bstr_t retval );
__declspec(implementation_key(116)) _bstr_t Task::GetText10 ( );
__declspec(implementation_key(117)) void Task::PutText10 ( _bstr_t retval );
__declspec(implementation_key(118)) _variant_t Task::GetMarked ( );
__declspec(implementation_key(119)) void Task::PutMarked ( const _variant_t & retval );
__declspec(implementation_key(120)) _variant_t Task::GetFlag1 ( );
__declspec(implementation_key(121)) void Task::PutFlag1 ( const _variant_t & retval );
__declspec(implementation_key(122)) _variant_t Task::GetFlag2 ( );
__declspec(implementation_key(123)) void Task::PutFlag2 ( const _variant_t & retval );
__declspec(implementation_key(124)) _variant_t Task::GetFlag3 ( );
__declspec(implementation_key(125)) void Task::PutFlag3 ( const _variant_t & retval );
__declspec(implementation_key(126)) _variant_t Task::GetFlag4 ( );
__declspec(implementation_key(127)) void Task::PutFlag4 ( const _variant_t & retval );
__declspec(implementation_key(128)) _variant_t Task::GetFlag5 ( );
__declspec(implementation_key(129)) void Task::PutFlag5 ( const _variant_t & retval );
__declspec(implementation_key(130)) _variant_t Task::GetFlag6 ( );
__declspec(implementation_key(131)) void Task::PutFlag6 ( const _variant_t & retval );
__declspec(implementation_key(132)) _variant_t Task::GetFlag7 ( );
__declspec(implementation_key(133)) void Task::PutFlag7 ( const _variant_t & retval );
__declspec(implementation_key(134)) _variant_t Task::GetFlag8 ( );
__declspec(implementation_key(135)) void Task::PutFlag8 ( const _variant_t & retval );
__declspec(implementation_key(136)) _variant_t Task::GetFlag9 ( );
__declspec(implementation_key(137)) void Task::PutFlag9 ( const _variant_t & retval );
__declspec(implementation_key(138)) _variant_t Task::GetFlag10 ( );
__declspec(implementation_key(139)) void Task::PutFlag10 ( const _variant_t & retval );
__declspec(implementation_key(140)) _variant_t Task::GetRollup ( );
__declspec(implementation_key(141)) void Task::PutRollup ( const _variant_t & retval );
__declspec(implementation_key(142)) _variant_t Task::GetCV ( );
__declspec(implementation_key(143)) _bstr_t Task::GetProject ( );
__declspec(implementation_key(144)) short Task::GetOutlineLevel ( );
__declspec(implementation_key(145)) long Task::GetUniqueID ( );
__declspec(implementation_key(146)) double Task::GetNumber1 ( );
__declspec(implementation_key(147)) void Task::PutNumber1 ( double retval );
__declspec(implementation_key(148)) double Task::GetNumber2 ( );
__declspec(implementation_key(149)) void Task::PutNumber2 ( double retval );
__declspec(implementation_key(150)) double Task::GetNumber3 ( );
__declspec(implementation_key(151)) void Task::PutNumber3 ( double retval );
__declspec(implementation_key(152)) double Task::GetNumber4 ( );
__declspec(implementation_key(153)) void Task::PutNumber4 ( double retval );
__declspec(implementation_key(154)) double Task::GetNumber5 ( );
__declspec(implementation_key(155)) void Task::PutNumber5 ( double retval );
__declspec(implementation_key(156)) _variant_t Task::GetSummary ( );
__declspec(implementation_key(157)) _variant_t Task::GetCreated ( );
__declspec(implementation_key(158)) _bstr_t Task::GetUniqueIDPredecessors ( );
__declspec(implementation_key(159)) void Task::PutUniqueIDPredecessors ( _bstr_t retval );
__declspec(implementation_key(160)) _bstr_t Task::GetUniqueIDSuccessors ( );
__declspec(implementation_key(161)) void Task::PutUniqueIDSuccessors ( _bstr_t retval );
__declspec(implementation_key(162)) long Task::GetObjects ( );
__declspec(implementation_key(163)) _variant_t Task::GetLinkedFields ( );
__declspec(implementation_key(164)) _variant_t Task::GetResume ( );
__declspec(implementation_key(165)) void Task::PutResume ( const _variant_t & retval );
__declspec(implementation_key(166)) _variant_t Task::GetStop ( );
__declspec(implementation_key(167)) void Task::PutStop ( const _variant_t & retval );
__declspec(implementation_key(168)) _variant_t Task::GetResumeNoEarlierThan ( );
__declspec(implementation_key(169)) void Task::PutResumeNoEarlierThan ( const _variant_t & retval );
__declspec(implementation_key(170)) _bstr_t Task::GetOutlineNumber ( );
__declspec(implementation_key(171)) _variant_t Task::GetDuration1 ( );
__declspec(implementation_key(172)) void Task::PutDuration1 ( const _variant_t & retval );
__declspec(implementation_key(173)) _variant_t Task::GetDuration2 ( );
__declspec(implementation_key(174)) void Task::PutDuration2 ( const _variant_t & retval );
__declspec(implementation_key(175)) _variant_t Task::GetDuration3 ( );
__declspec(implementation_key(176)) void Task::PutDuration3 ( const _variant_t & retval );
__declspec(implementation_key(177)) _variant_t Task::GetCost1 ( );
__declspec(implementation_key(178)) void Task::PutCost1 ( const _variant_t & retval );
__declspec(implementation_key(179)) _variant_t Task::GetCost2 ( );
__declspec(implementation_key(180)) void Task::PutCost2 ( const _variant_t & retval );
__declspec(implementation_key(181)) _variant_t Task::GetCost3 ( );
__declspec(implementation_key(182)) void Task::PutCost3 ( const _variant_t & retval );
__declspec(implementation_key(183)) _variant_t Task::GetHideBar ( );
__declspec(implementation_key(184)) void Task::PutHideBar ( const _variant_t & retval );
__declspec(implementation_key(185)) _variant_t Task::GetConfirmed ( );
__declspec(implementation_key(186)) _variant_t Task::GetUpdateNeeded ( );
__declspec(implementation_key(187)) _bstr_t Task::GetContact ( );
__declspec(implementation_key(188)) void Task::PutContact ( _bstr_t retval );
__declspec(implementation_key(189)) _bstr_t Task::GetResourceGroup ( );
__declspec(implementation_key(190)) _variant_t Task::GetACWP ( );
__declspec(implementation_key(191)) enum PjTaskFixedType Task::GetType ( );
__declspec(implementation_key(192)) void Task::PutType ( enum PjTaskFixedType retval );
__declspec(implementation_key(193)) _variant_t Task::GetRecurring ( );
__declspec(implementation_key(194)) _variant_t Task::GetEffortDriven ( );
__declspec(implementation_key(195)) void Task::PutEffortDriven ( const _variant_t & retval );
__declspec(implementation_key(196)) TasksPtr Task::GetOutlineChildren ( );
__declspec(implementation_key(197)) TasksPtr Task::GetPredecessorTasks ( );
__declspec(implementation_key(198)) TasksPtr Task::GetSuccessorTasks ( );
__declspec(implementation_key(199)) _variant_t Task::GetOvertimeWork ( );
__declspec(implementation_key(200)) _variant_t Task::GetActualOvertimeWork ( );
__declspec(implementation_key(201)) _variant_t Task::GetRemainingOvertimeWork ( );
__declspec(implementation_key(202)) _variant_t Task::GetRegularWork ( );
__declspec(implementation_key(203)) _variant_t Task::GetOvertimeCost ( );
__declspec(implementation_key(204)) _variant_t Task::GetActualOvertimeCost ( );
__declspec(implementation_key(205)) _variant_t Task::GetRemainingOvertimeCost ( );
__declspec(implementation_key(206)) enum PjAccrueAt Task::GetFixedCostAccrual ( );
__declspec(implementation_key(207)) void Task::PutFixedCostAccrual ( enum PjAccrueAt retval );
__declspec(implementation_key(208)) AssignmentsPtr Task::GetAssignments ( );
__declspec(implementation_key(209)) IDispatchPtr Task::GetParent ( );
__declspec(implementation_key(210)) void Task::PutParent ( IDispatch * retval );
__declspec(implementation_key(211)) _MSProjectPtr Task::GetApplication ( );
__declspec(implementation_key(212)) _bstr_t Task::GetHyperlink ( );
__declspec(implementation_key(213)) void Task::PutHyperlink ( _bstr_t retval );
__declspec(implementation_key(214)) _bstr_t Task::GetHyperlinkAddress ( );
__declspec(implementation_key(215)) void Task::PutHyperlinkAddress ( _bstr_t retval );
__declspec(implementation_key(216)) _bstr_t Task::GetHyperlinkSubAddress ( );
__declspec(implementation_key(217)) void Task::PutHyperlinkSubAddress ( _bstr_t retval );
__declspec(implementation_key(218)) _bstr_t Task::GetHyperlinkHREF ( );
__declspec(implementation_key(219)) void Task::PutHyperlinkHREF ( _bstr_t retval );
__declspec(implementation_key(220)) _variant_t Task::GetOverallocated ( );
__declspec(implementation_key(221)) SplitPartsPtr Task::GetSplitParts ( );
__declspec(implementation_key(222)) _bstr_t Task::GetField ( enum PjField FieldID );
__declspec(implementation_key(223)) HRESULT Task::SetField ( enum PjField FieldID, _bstr_t Value );
__declspec(implementation_key(224)) _variant_t Task::GetExternalTask ( );
__declspec(implementation_key(225)) HRESULT Task::Delete ( );
__declspec(implementation_key(226)) HRESULT Task::AppendNotes ( _bstr_t Value );
__declspec(implementation_key(227)) TaskPtr Task::GetOutlineParent ( );
__declspec(implementation_key(228)) ResourcesPtr Task::GetResources ( );
__declspec(implementation_key(229)) TimeScaleValuesPtr Task::TimeScaleData ( const _variant_t & StartDate, const _variant_t & EndDate, enum PjTaskTimescaledData Type, enum PjTimescaleUnit TimeScaleUnit, long Count );
__declspec(implementation_key(230)) _variant_t Task::GetSubProjectReadOnly ( );
__declspec(implementation_key(231)) void Task::PutSubProjectReadOnly ( const _variant_t & retval );
__declspec(implementation_key(232)) _variant_t Task::GetResponsePending ( );
__declspec(implementation_key(233)) _variant_t Task::GetTeamStatusPending ( );
__declspec(implementation_key(234)) _variant_t Task::GetLevelingCanSplit ( );
__declspec(implementation_key(235)) void Task::PutLevelingCanSplit ( const _variant_t & retval );
__declspec(implementation_key(236)) _variant_t Task::GetLevelIndividualAssignments ( );
__declspec(implementation_key(237)) void Task::PutLevelIndividualAssignments ( const _variant_t & retval );
__declspec(implementation_key(238)) _variant_t Task::GetCost4 ( );
__declspec(implementation_key(239)) void Task::PutCost4 ( const _variant_t & retval );
__declspec(implementation_key(240)) _variant_t Task::GetCost5 ( );
__declspec(implementation_key(241)) void Task::PutCost5 ( const _variant_t & retval );
__declspec(implementation_key(242)) _variant_t Task::GetCost6 ( );
__declspec(implementation_key(243)) void Task::PutCost6 ( const _variant_t & retval );
__declspec(implementation_key(244)) _variant_t Task::GetCost7 ( );
__declspec(implementation_key(245)) void Task::PutCost7 ( const _variant_t & retval );
__declspec(implementation_key(246)) _variant_t Task::GetCost8 ( );
__declspec(implementation_key(247)) void Task::PutCost8 ( const _variant_t & retval );
__declspec(implementation_key(248)) _variant_t Task::GetCost9 ( );
__declspec(implementation_key(249)) void Task::PutCost9 ( const _variant_t & retval );
__declspec(implementation_key(250)) _variant_t Task::GetCost10 ( );
__declspec(implementation_key(251)) void Task::PutCost10 ( const _variant_t & retval );
__declspec(implementation_key(252)) _variant_t Task::GetDate1 ( );
__declspec(implementation_key(253)) void Task::PutDate1 ( const _variant_t & retval );
__declspec(implementation_key(254)) _variant_t Task::GetDate2 ( );
__declspec(implementation_key(255)) void Task::PutDate2 ( const _variant_t & retval );
__declspec(implementation_key(256)) _variant_t Task::GetDate3 ( );
__declspec(implementation_key(257)) void Task::PutDate3 ( const _variant_t & retval );
__declspec(implementation_key(258)) _variant_t Task::GetDate4 ( );
__declspec(implementation_key(259)) void Task::PutDate4 ( const _variant_t & retval );
__declspec(implementation_key(260)) _variant_t Task::GetDate5 ( );
__declspec(implementation_key(261)) void Task::PutDate5 ( const _variant_t & retval );
__declspec(implementation_key(262)) _variant_t Task::GetDate6 ( );
__declspec(implementation_key(263)) void Task::PutDate6 ( const _variant_t & retval );
__declspec(implementation_key(264)) _variant_t Task::GetDate7 ( );
__declspec(implementation_key(265)) void Task::PutDate7 ( const _variant_t & retval );
__declspec(implementation_key(266)) _variant_t Task::GetDate8 ( );
__declspec(implementation_key(267)) void Task::PutDate8 ( const _variant_t & retval );
__declspec(implementation_key(268)) _variant_t Task::GetDate9 ( );
__declspec(implementation_key(269)) void Task::PutDate9 ( const _variant_t & retval );
__declspec(implementation_key(270)) _variant_t Task::GetDate10 ( );
__declspec(implementation_key(271)) void Task::PutDate10 ( const _variant_t & retval );
__declspec(implementation_key(272)) _variant_t Task::GetDuration4 ( );
__declspec(implementation_key(273)) void Task::PutDuration4 ( const _variant_t & retval );
__declspec(implementation_key(274)) _variant_t Task::GetDuration5 ( );
__declspec(implementation_key(275)) void Task::PutDuration5 ( const _variant_t & retval );
__declspec(implementation_key(276)) _variant_t Task::GetDuration6 ( );
__declspec(implementation_key(277)) void Task::PutDuration6 ( const _variant_t & retval );
__declspec(implementation_key(278)) _variant_t Task::GetDuration7 ( );
__declspec(implementation_key(279)) void Task::PutDuration7 ( const _variant_t & retval );
__declspec(implementation_key(280)) _variant_t Task::GetDuration8 ( );
__declspec(implementation_key(281)) void Task::PutDuration8 ( const _variant_t & retval );
__declspec(implementation_key(282)) _variant_t Task::GetDuration9 ( );
__declspec(implementation_key(283)) void Task::PutDuration9 ( const _variant_t & retval );
__declspec(implementation_key(284)) _variant_t Task::GetDuration10 ( );
__declspec(implementation_key(285)) void Task::PutDuration10 ( const _variant_t & retval );
__declspec(implementation_key(286)) _variant_t Task::GetStart6 ( );
__declspec(implementation_key(287)) void Task::PutStart6 ( const _variant_t & retval );
__declspec(implementation_key(288)) _variant_t Task::GetFinish6 ( );
__declspec(implementation_key(289)) void Task::PutFinish6 ( const _variant_t & retval );
__declspec(implementation_key(290)) _variant_t Task::GetStart7 ( );
__declspec(implementation_key(291)) void Task::PutStart7 ( const _variant_t & retval );
__declspec(implementation_key(292)) _variant_t Task::GetFinish7 ( );
__declspec(implementation_key(293)) void Task::PutFinish7 ( const _variant_t & retval );
__declspec(implementation_key(294)) _variant_t Task::GetStart8 ( );
__declspec(implementation_key(295)) void Task::PutStart8 ( const _variant_t & retval );
__declspec(implementation_key(296)) _variant_t Task::GetFinish8 ( );
__declspec(implementation_key(297)) void Task::PutFinish8 ( const _variant_t & retval );
__declspec(implementation_key(298)) _variant_t Task::GetStart9 ( );
__declspec(implementation_key(299)) void Task::PutStart9 ( const _variant_t & retval );
__declspec(implementation_key(300)) _variant_t Task::GetFinish9 ( );
__declspec(implementation_key(301)) void Task::PutFinish9 ( const _variant_t & retval );
__declspec(implementation_key(302)) _variant_t Task::GetStart10 ( );
__declspec(implementation_key(303)) void Task::PutStart10 ( const _variant_t & retval );
__declspec(implementation_key(304)) _variant_t Task::GetFinish10 ( );
__declspec(implementation_key(305)) void Task::PutFinish10 ( const _variant_t & retval );
__declspec(implementation_key(306)) _variant_t Task::GetFlag11 ( );
__declspec(implementation_key(307)) void Task::PutFlag11 ( const _variant_t & retval );
__declspec(implementation_key(308)) _variant_t Task::GetFlag12 ( );
__declspec(implementation_key(309)) void Task::PutFlag12 ( const _variant_t & retval );
__declspec(implementation_key(310)) _variant_t Task::GetFlag13 ( );
__declspec(implementation_key(311)) void Task::PutFlag13 ( const _variant_t & retval );
__declspec(implementation_key(312)) _variant_t Task::GetFlag14 ( );
__declspec(implementation_key(313)) void Task::PutFlag14 ( const _variant_t & retval );
__declspec(implementation_key(314)) _variant_t Task::GetFlag15 ( );
__declspec(implementation_key(315)) void Task::PutFlag15 ( const _variant_t & retval );
__declspec(implementation_key(316)) _variant_t Task::GetFlag16 ( );
__declspec(implementation_key(317)) void Task::PutFlag16 ( const _variant_t & retval );
__declspec(implementation_key(318)) _variant_t Task::GetFlag17 ( );
__declspec(implementation_key(319)) void Task::PutFlag17 ( const _variant_t & retval );
__declspec(implementation_key(320)) _variant_t Task::GetFlag18 ( );
__declspec(implementation_key(321)) void Task::PutFlag18 ( const _variant_t & retval );
__declspec(implementation_key(322)) _variant_t Task::GetFlag19 ( );
__declspec(implementation_key(323)) void Task::PutFlag19 ( const _variant_t & retval );
__declspec(implementation_key(324)) _variant_t Task::GetFlag20 ( );
__declspec(implementation_key(325)) void Task::PutFlag20 ( const _variant_t & retval );
__declspec(implementation_key(326)) double Task::GetNumber6 ( );
__declspec(implementation_key(327)) void Task::PutNumber6 ( double retval );
__declspec(implementation_key(328)) double Task::GetNumber7 ( );
__declspec(implementation_key(329)) void Task::PutNumber7 ( double retval );
__declspec(implementation_key(330)) double Task::GetNumber8 ( );
__declspec(implementation_key(331)) void Task::PutNumber8 ( double retval );
__declspec(implementation_key(332)) double Task::GetNumber9 ( );
__declspec(implementation_key(333)) void Task::PutNumber9 ( double retval );
__declspec(implementation_key(334)) double Task::GetNumber10 ( );
__declspec(implementation_key(335)) void Task::PutNumber10 ( double retval );
__declspec(implementation_key(336)) double Task::GetNumber11 ( );
__declspec(implementation_key(337)) void Task::PutNumber11 ( double retval );
__declspec(implementation_key(338)) double Task::GetNumber12 ( );
__declspec(implementation_key(339)) void Task::PutNumber12 ( double retval );
__declspec(implementation_key(340)) double Task::GetNumber13 ( );
__declspec(implementation_key(341)) void Task::PutNumber13 ( double retval );
__declspec(implementation_key(342)) double Task::GetNumber14 ( );
__declspec(implementation_key(343)) void Task::PutNumber14 ( double retval );
__declspec(implementation_key(344)) double Task::GetNumber15 ( );
__declspec(implementation_key(345)) void Task::PutNumber15 ( double retval );
__declspec(implementation_key(346)) double Task::GetNumber16 ( );
__declspec(implementation_key(347)) void Task::PutNumber16 ( double retval );
__declspec(implementation_key(348)) double Task::GetNumber17 ( );
__declspec(implementation_key(349)) void Task::PutNumber17 ( double retval );
__declspec(implementation_key(350)) double Task::GetNumber18 ( );
__declspec(implementation_key(351)) void Task::PutNumber18 ( double retval );
__declspec(implementation_key(352)) double Task::GetNumber19 ( );
__declspec(implementation_key(353)) void Task::PutNumber19 ( double retval );
__declspec(implementation_key(354)) double Task::GetNumber20 ( );
__declspec(implementation_key(355)) void Task::PutNumber20 ( double retval );
__declspec(implementation_key(356)) _bstr_t Task::GetText11 ( );
__declspec(implementation_key(357)) void Task::PutText11 ( _bstr_t retval );
__declspec(implementation_key(358)) _bstr_t Task::GetText12 ( );
__declspec(implementation_key(359)) void Task::PutText12 ( _bstr_t retval );
__declspec(implementation_key(360)) _bstr_t Task::GetText13 ( );
__declspec(implementation_key(361)) void Task::PutText13 ( _bstr_t retval );
__declspec(implementation_key(362)) _bstr_t Task::GetText14 ( );
__declspec(implementation_key(363)) void Task::PutText14 ( _bstr_t retval );
__declspec(implementation_key(364)) _bstr_t Task::GetText15 ( );
__declspec(implementation_key(365)) void Task::PutText15 ( _bstr_t retval );
__declspec(implementation_key(366)) _bstr_t Task::GetText16 ( );
__declspec(implementation_key(367)) void Task::PutText16 ( _bstr_t retval );
__declspec(implementation_key(368)) _bstr_t Task::GetText17 ( );
__declspec(implementation_key(369)) void Task::PutText17 ( _bstr_t retval );
__declspec(implementation_key(370)) _bstr_t Task::GetText18 ( );
__declspec(implementation_key(371)) void Task::PutText18 ( _bstr_t retval );
__declspec(implementation_key(372)) _bstr_t Task::GetText19 ( );
__declspec(implementation_key(373)) void Task::PutText19 ( _bstr_t retval );
__declspec(implementation_key(374)) _bstr_t Task::GetText20 ( );
__declspec(implementation_key(375)) void Task::PutText20 ( _bstr_t retval );
__declspec(implementation_key(376)) _bstr_t Task::GetText21 ( );
__declspec(implementation_key(377)) void Task::PutText21 ( _bstr_t retval );
__declspec(implementation_key(378)) _bstr_t Task::GetText22 ( );
__declspec(implementation_key(379)) void Task::PutText22 ( _bstr_t retval );
__declspec(implementation_key(380)) _bstr_t Task::GetText23 ( );
__declspec(implementation_key(381)) void Task::PutText23 ( _bstr_t retval );
__declspec(implementation_key(382)) _bstr_t Task::GetText24 ( );
__declspec(implementation_key(383)) void Task::PutText24 ( _bstr_t retval );
__declspec(implementation_key(384)) _bstr_t Task::GetText25 ( );
__declspec(implementation_key(385)) void Task::PutText25 ( _bstr_t retval );
__declspec(implementation_key(386)) _bstr_t Task::GetText26 ( );
__declspec(implementation_key(387)) void Task::PutText26 ( _bstr_t retval );
__declspec(implementation_key(388)) _bstr_t Task::GetText27 ( );
__declspec(implementation_key(389)) void Task::PutText27 ( _bstr_t retval );
__declspec(implementation_key(390)) _bstr_t Task::GetText28 ( );
__declspec(implementation_key(391)) void Task::PutText28 ( _bstr_t retval );
__declspec(implementation_key(392)) _bstr_t Task::GetText29 ( );
__declspec(implementation_key(393)) void Task::PutText29 ( _bstr_t retval );
__declspec(implementation_key(394)) _bstr_t Task::GetText30 ( );
__declspec(implementation_key(395)) void Task::PutText30 ( _bstr_t retval );
__declspec(implementation_key(396)) _bstr_t Task::GetResourcePhonetics ( );
__declspec(implementation_key(397)) HRESULT Task::LinkPredecessors ( IDispatch * Tasks, enum PjTaskLinkType Link, const _variant_t & Lag );
__declspec(implementation_key(398)) HRESULT Task::LinkSuccessors ( IDispatch * Tasks, enum PjTaskLinkType Link, const _variant_t & Lag );
__declspec(implementation_key(399)) HRESULT Task::UnlinkPredecessors ( IDispatch * Tasks );
__declspec(implementation_key(400)) HRESULT Task::UnlinkSuccessors ( IDispatch * Tasks );
__declspec(implementation_key(401)) HRESULT Task::OutlineIndent ( );
__declspec(implementation_key(402)) HRESULT Task::OutlineOutdent ( );
__declspec(implementation_key(403)) HRESULT Task::OutlineHideSubTasks ( );
__declspec(implementation_key(404)) HRESULT Task::OutlineShowSubTasks ( );
__declspec(implementation_key(405)) HRESULT Task::OutlineShowAllTasks ( );
__declspec(implementation_key(406)) long Task::GetIndex ( );
__declspec(implementation_key(407)) _variant_t Task::GetPreleveledStart ( );
__declspec(implementation_key(408)) _variant_t Task::GetPreleveledFinish ( );
__declspec(implementation_key(409)) HRESULT Task::Split ( const _variant_t & StartSplitOn, const _variant_t & EndSplitOn );
__declspec(implementation_key(410)) _bstr_t Task::GetPredecessors ( );
__declspec(implementation_key(411)) void Task::PutPredecessors ( _bstr_t retval );
__declspec(implementation_key(412)) _bstr_t Task::GetSuccessors ( );
__declspec(implementation_key(413)) void Task::PutSuccessors ( _bstr_t retval );
__declspec(implementation_key(414)) _bstr_t Task::GetResourceNames ( );
__declspec(implementation_key(415)) void Task::PutResourceNames ( _bstr_t retval );
__declspec(implementation_key(416)) _bstr_t Task::GetResourceInitials ( );
__declspec(implementation_key(417)) void Task::PutResourceInitials ( _bstr_t retval );
__declspec(implementation_key(418)) void Task::PutOutlineLevel ( _bstr_t retval );
__declspec(implementation_key(419)) _variant_t Task::GetEstimated ( );
__declspec(implementation_key(420)) void Task::PutEstimated ( const _variant_t & retval );
__declspec(implementation_key(421)) _variant_t Task::GetIgnoreResourceCalendar ( );
__declspec(implementation_key(422)) void Task::PutIgnoreResourceCalendar ( const _variant_t & retval );
__declspec(implementation_key(423)) _bstr_t Task::GetCalendar ( );
__declspec(implementation_key(424)) void Task::PutCalendar ( _bstr_t retval );
__declspec(implementation_key(425)) _variant_t Task::GetDuration1Estimated ( );
__declspec(implementation_key(426)) void Task::PutDuration1Estimated ( const _variant_t & retval );
__declspec(implementation_key(427)) _variant_t Task::GetDuration2Estimated ( );
__declspec(implementation_key(428)) void Task::PutDuration2Estimated ( const _variant_t & retval );
__declspec(implementation_key(429)) _variant_t Task::GetDuration3Estimated ( );
__declspec(implementation_key(430)) void Task::PutDuration3Estimated ( const _variant_t & retval );
__declspec(implementation_key(431)) _variant_t Task::GetDuration4Estimated ( );
__declspec(implementation_key(432)) void Task::PutDuration4Estimated ( const _variant_t & retval );
__declspec(implementation_key(433)) _variant_t Task::GetDuration5Estimated ( );
__declspec(implementation_key(434)) void Task::PutDuration5Estimated ( const _variant_t & retval );
__declspec(implementation_key(435)) _variant_t Task::GetDuration6Estimated ( );
__declspec(implementation_key(436)) void Task::PutDuration6Estimated ( const _variant_t & retval );
__declspec(implementation_key(437)) _variant_t Task::GetDuration7Estimated ( );
__declspec(implementation_key(438)) void Task::PutDuration7Estimated ( const _variant_t & retval );
__declspec(implementation_key(439)) _variant_t Task::GetDuration8Estimated ( );
__declspec(implementation_key(440)) void Task::PutDuration8Estimated ( const _variant_t & retval );
__declspec(implementation_key(441)) _variant_t Task::GetDuration9Estimated ( );
__declspec(implementation_key(442)) void Task::PutDuration9Estimated ( const _variant_t & retval );
__declspec(implementation_key(443)) _variant_t Task::GetDuration10Estimated ( );
__declspec(implementation_key(444)) void Task::PutDuration10Estimated ( const _variant_t & retval );
__declspec(implementation_key(445)) _variant_t Task::GetBaselineDurationEstimated ( );
__declspec(implementation_key(446)) void Task::PutBaselineDurationEstimated ( const _variant_t & retval );
__declspec(implementation_key(447)) _bstr_t Task::GetOutlineCode1 ( );
__declspec(implementation_key(448)) void Task::PutOutlineCode1 ( _bstr_t retval );
__declspec(implementation_key(449)) _bstr_t Task::GetOutlineCode2 ( );
__declspec(implementation_key(450)) void Task::PutOutlineCode2 ( _bstr_t retval );
__declspec(implementation_key(451)) _bstr_t Task::GetOutlineCode3 ( );
__declspec(implementation_key(452)) void Task::PutOutlineCode3 ( _bstr_t retval );
__declspec(implementation_key(453)) _bstr_t Task::GetOutlineCode4 ( );
__declspec(implementation_key(454)) void Task::PutOutlineCode4 ( _bstr_t retval );
__declspec(implementation_key(455)) _bstr_t Task::GetOutlineCode5 ( );
__declspec(implementation_key(456)) void Task::PutOutlineCode5 ( _bstr_t retval );
__declspec(implementation_key(457)) _bstr_t Task::GetOutlineCode6 ( );
__declspec(implementation_key(458)) void Task::PutOutlineCode6 ( _bstr_t retval );
__declspec(implementation_key(459)) _bstr_t Task::GetOutlineCode7 ( );
__declspec(implementation_key(460)) void Task::PutOutlineCode7 ( _bstr_t retval );
__declspec(implementation_key(461)) _bstr_t Task::GetOutlineCode8 ( );
__declspec(implementation_key(462)) void Task::PutOutlineCode8 ( _bstr_t retval );
__declspec(implementation_key(463)) _bstr_t Task::GetOutlineCode9 ( );
__declspec(implementation_key(464)) void Task::PutOutlineCode9 ( _bstr_t retval );
__declspec(implementation_key(465)) _bstr_t Task::GetOutlineCode10 ( );
__declspec(implementation_key(466)) void Task::PutOutlineCode10 ( _bstr_t retval );
__declspec(implementation_key(467)) _variant_t Task::GetDeadline ( );
__declspec(implementation_key(468)) void Task::PutDeadline ( const _variant_t & retval );
__declspec(implementation_key(469)) _variant_t Task::GetStartSlack ( );
__declspec(implementation_key(470)) _variant_t Task::GetFinishSlack ( );
__declspec(implementation_key(471)) _variant_t Task::GetVAC ( );
__declspec(implementation_key(472)) TaskDependenciesPtr Task::GetTaskDependencies ( );
__declspec(implementation_key(473)) _variant_t Task::GetGroupBySummary ( );
__declspec(implementation_key(474)) _bstr_t Task::GetWBSPredecessors ( );
__declspec(implementation_key(475)) _bstr_t Task::GetWBSSuccessors ( );
__declspec(implementation_key(476)) _bstr_t Task::GetHyperlinkScreenTip ( );
__declspec(implementation_key(477)) void Task::PutHyperlinkScreenTip ( _bstr_t retval );
__declspec(implementation_key(478)) _variant_t Task::GetBaseline1Start ( );
__declspec(implementation_key(479)) void Task::PutBaseline1Start ( const _variant_t & retval );
__declspec(implementation_key(480)) _variant_t Task::GetBaseline1Finish ( );
__declspec(implementation_key(481)) void Task::PutBaseline1Finish ( const _variant_t & retval );
__declspec(implementation_key(482)) _variant_t Task::GetBaseline1Cost ( );
__declspec(implementation_key(483)) void Task::PutBaseline1Cost ( const _variant_t & retval );
__declspec(implementation_key(484)) _variant_t Task::GetBaseline1Work ( );
__declspec(implementation_key(485)) void Task::PutBaseline1Work ( const _variant_t & retval );
__declspec(implementation_key(486)) _variant_t Task::GetBaseline1Duration ( );
__declspec(implementation_key(487)) void Task::PutBaseline1Duration ( const _variant_t & retval );
__declspec(implementation_key(488)) _variant_t Task::GetBaseline2Start ( );
__declspec(implementation_key(489)) void Task::PutBaseline2Start ( const _variant_t & retval );
__declspec(implementation_key(490)) _variant_t Task::GetBaseline2Finish ( );
__declspec(implementation_key(491)) void Task::PutBaseline2Finish ( const _variant_t & retval );
__declspec(implementation_key(492)) _variant_t Task::GetBaseline2Cost ( );
__declspec(implementation_key(493)) void Task::PutBaseline2Cost ( const _variant_t & retval );
__declspec(implementation_key(494)) _variant_t Task::GetBaseline2Work ( );
__declspec(implementation_key(495)) void Task::PutBaseline2Work ( const _variant_t & retval );
__declspec(implementation_key(496)) _variant_t Task::GetBaseline2Duration ( );
__declspec(implementation_key(497)) void Task::PutBaseline2Duration ( const _variant_t & retval );
__declspec(implementation_key(498)) _variant_t Task::GetBaseline3Start ( );
__declspec(implementation_key(499)) void Task::PutBaseline3Start ( const _variant_t & retval );
__declspec(implementation_key(500)) _variant_t Task::GetBaseline3Finish ( );
__declspec(implementation_key(501)) void Task::PutBaseline3Finish ( const _variant_t & retval );
__declspec(implementation_key(502)) _variant_t Task::GetBaseline3Cost ( );
__declspec(implementation_key(503)) void Task::PutBaseline3Cost ( const _variant_t & retval );
__declspec(implementation_key(504)) _variant_t Task::GetBaseline3Work ( );
__declspec(implementation_key(505)) void Task::PutBaseline3Work ( const _variant_t & retval );
__declspec(implementation_key(506)) _variant_t Task::GetBaseline3Duration ( );
__declspec(implementation_key(507)) void Task::PutBaseline3Duration ( const _variant_t & retval );
__declspec(implementation_key(508)) _variant_t Task::GetBaseline4Start ( );
__declspec(implementation_key(509)) void Task::PutBaseline4Start ( const _variant_t & retval );
__declspec(implementation_key(510)) _variant_t Task::GetBaseline4Finish ( );
__declspec(implementation_key(511)) void Task::PutBaseline4Finish ( const _variant_t & retval );
__declspec(implementation_key(512)) _variant_t Task::GetBaseline4Cost ( );
__declspec(implementation_key(513)) void Task::PutBaseline4Cost ( const _variant_t & retval );
__declspec(implementation_key(514)) _variant_t Task::GetBaseline4Work ( );
__declspec(implementation_key(515)) void Task::PutBaseline4Work ( const _variant_t & retval );
__declspec(implementation_key(516)) _variant_t Task::GetBaseline4Duration ( );
__declspec(implementation_key(517)) void Task::PutBaseline4Duration ( const _variant_t & retval );
__declspec(implementation_key(518)) _variant_t Task::GetBaseline5Start ( );
__declspec(implementation_key(519)) void Task::PutBaseline5Start ( const _variant_t & retval );
__declspec(implementation_key(520)) _variant_t Task::GetBaseline5Finish ( );
__declspec(implementation_key(521)) void Task::PutBaseline5Finish ( const _variant_t & retval );
__declspec(implementation_key(522)) _variant_t Task::GetBaseline5Cost ( );
__declspec(implementation_key(523)) void Task::PutBaseline5Cost ( const _variant_t & retval );
__declspec(implementation_key(524)) _variant_t Task::GetBaseline5Work ( );
__declspec(implementation_key(525)) void Task::PutBaseline5Work ( const _variant_t & retval );
__declspec(implementation_key(526)) _variant_t Task::GetBaseline5Duration ( );
__declspec(implementation_key(527)) void Task::PutBaseline5Duration ( const _variant_t & retval );
__declspec(implementation_key(528)) double Task::GetCPI ( );
__declspec(implementation_key(529)) double Task::GetSPI ( );
__declspec(implementation_key(530)) _variant_t Task::GetCVPercent ( );
__declspec(implementation_key(531)) _variant_t Task::GetSVPercent ( );
__declspec(implementation_key(532)) _variant_t Task::GetEAC ( );
__declspec(implementation_key(533)) double Task::GetTCPI ( );
__declspec(implementation_key(534)) enum PjStatusType Task::GetStatus ( );
__declspec(implementation_key(535)) _variant_t Task::GetBaseline6Start ( );
__declspec(implementation_key(536)) void Task::PutBaseline6Start ( const _variant_t & retval );
__declspec(implementation_key(537)) _variant_t Task::GetBaseline6Finish ( );
__declspec(implementation_key(538)) void Task::PutBaseline6Finish ( const _variant_t & retval );
__declspec(implementation_key(539)) _variant_t Task::GetBaseline6Cost ( );
__declspec(implementation_key(540)) void Task::PutBaseline6Cost ( const _variant_t & retval );
__declspec(implementation_key(541)) _variant_t Task::GetBaseline6Work ( );
__declspec(implementation_key(542)) void Task::PutBaseline6Work ( const _variant_t & retval );
__declspec(implementation_key(543)) _variant_t Task::GetBaseline6Duration ( );
__declspec(implementation_key(544)) void Task::PutBaseline6Duration ( const _variant_t & retval );
__declspec(implementation_key(545)) _variant_t Task::GetBaseline7Start ( );
__declspec(implementation_key(546)) void Task::PutBaseline7Start ( const _variant_t & retval );
__declspec(implementation_key(547)) _variant_t Task::GetBaseline7Finish ( );
__declspec(implementation_key(548)) void Task::PutBaseline7Finish ( const _variant_t & retval );
__declspec(implementation_key(549)) _variant_t Task::GetBaseline7Cost ( );
__declspec(implementation_key(550)) void Task::PutBaseline7Cost ( const _variant_t & retval );
__declspec(implementation_key(551)) _variant_t Task::GetBaseline7Work ( );
__declspec(implementation_key(552)) void Task::PutBaseline7Work ( const _variant_t & retval );
__declspec(implementation_key(553)) _variant_t Task::GetBaseline7Duration ( );
__declspec(implementation_key(554)) void Task::PutBaseline7Duration ( const _variant_t & retval );
__declspec(implementation_key(555)) _variant_t Task::GetBaseline8Start ( );
__declspec(implementation_key(556)) void Task::PutBaseline8Start ( const _variant_t & retval );
__declspec(implementation_key(557)) _variant_t Task::GetBaseline8Finish ( );
__declspec(implementation_key(558)) void Task::PutBaseline8Finish ( const _variant_t & retval );
__declspec(implementation_key(559)) _variant_t Task::GetBaseline8Cost ( );
__declspec(implementation_key(560)) void Task::PutBaseline8Cost ( const _variant_t & retval );
__declspec(implementation_key(561)) _variant_t Task::GetBaseline8Work ( );
__declspec(implementation_key(562)) void Task::PutBaseline8Work ( const _variant_t & retval );
__declspec(implementation_key(563)) _variant_t Task::GetBaseline8Duration ( );
__declspec(implementation_key(564)) void Task::PutBaseline8Duration ( const _variant_t & retval );
__declspec(implementation_key(565)) _variant_t Task::GetBaseline9Start ( );
__declspec(implementation_key(566)) void Task::PutBaseline9Start ( const _variant_t & retval );
__declspec(implementation_key(567)) _variant_t Task::GetBaseline9Finish ( );
__declspec(implementation_key(568)) void Task::PutBaseline9Finish ( const _variant_t & retval );
__declspec(implementation_key(569)) _variant_t Task::GetBaseline9Cost ( );
__declspec(implementation_key(570)) void Task::PutBaseline9Cost ( const _variant_t & retval );
__declspec(implementation_key(571)) _variant_t Task::GetBaseline9Work ( );
__declspec(implementation_key(572)) void Task::PutBaseline9Work ( const _variant_t & retval );
__declspec(implementation_key(573)) _variant_t Task::GetBaseline9Duration ( );
__declspec(implementation_key(574)) void Task::PutBaseline9Duration ( const _variant_t & retval );
__declspec(implementation_key(575)) _variant_t Task::GetBaseline10Start ( );
__declspec(implementation_key(576)) void Task::PutBaseline10Start ( const _variant_t & retval );
__declspec(implementation_key(577)) _variant_t Task::GetBaseline10Finish ( );
__declspec(implementation_key(578)) void Task::PutBaseline10Finish ( const _variant_t & retval );
__declspec(implementation_key(579)) _variant_t Task::GetBaseline10Cost ( );
__declspec(implementation_key(580)) void Task::PutBaseline10Cost ( const _variant_t & retval );
__declspec(implementation_key(581)) _variant_t Task::GetBaseline10Work ( );
__declspec(implementation_key(582)) void Task::PutBaseline10Work ( const _variant_t & retval );
__declspec(implementation_key(583)) _variant_t Task::GetBaseline10Duration ( );
__declspec(implementation_key(584)) void Task::PutBaseline10Duration ( const _variant_t & retval );
__declspec(implementation_key(585)) _variant_t Task::GetEnterpriseCost1 ( );
__declspec(implementation_key(586)) void Task::PutEnterpriseCost1 ( const _variant_t & retval );
__declspec(implementation_key(587)) _variant_t Task::GetEnterpriseCost2 ( );
__declspec(implementation_key(588)) void Task::PutEnterpriseCost2 ( const _variant_t & retval );
__declspec(implementation_key(589)) _variant_t Task::GetEnterpriseCost3 ( );
__declspec(implementation_key(590)) void Task::PutEnterpriseCost3 ( const _variant_t & retval );
__declspec(implementation_key(591)) _variant_t Task::GetEnterpriseCost4 ( );
__declspec(implementation_key(592)) void Task::PutEnterpriseCost4 ( const _variant_t & retval );
__declspec(implementation_key(593)) _variant_t Task::GetEnterpriseCost5 ( );
__declspec(implementation_key(594)) void Task::PutEnterpriseCost5 ( const _variant_t & retval );
__declspec(implementation_key(595)) _variant_t Task::GetEnterpriseCost6 ( );
__declspec(implementation_key(596)) void Task::PutEnterpriseCost6 ( const _variant_t & retval );
__declspec(implementation_key(597)) _variant_t Task::GetEnterpriseCost7 ( );
__declspec(implementation_key(598)) void Task::PutEnterpriseCost7 ( const _variant_t & retval );
__declspec(implementation_key(599)) _variant_t Task::GetEnterpriseCost8 ( );
__declspec(implementation_key(600)) void Task::PutEnterpriseCost8 ( const _variant_t & retval );
__declspec(implementation_key(601)) _variant_t Task::GetEnterpriseCost9 ( );
__declspec(implementation_key(602)) void Task::PutEnterpriseCost9 ( const _variant_t & retval );
__declspec(implementation_key(603)) _variant_t Task::GetEnterpriseCost10 ( );
__declspec(implementation_key(604)) void Task::PutEnterpriseCost10 ( const _variant_t & retval );
__declspec(implementation_key(605)) _variant_t Task::GetEnterpriseDate1 ( );
__declspec(implementation_key(606)) void Task::PutEnterpriseDate1 ( const _variant_t & retval );
__declspec(implementation_key(607)) _variant_t Task::GetEnterpriseDate2 ( );
__declspec(implementation_key(608)) void Task::PutEnterpriseDate2 ( const _variant_t & retval );
__declspec(implementation_key(609)) _variant_t Task::GetEnterpriseDate3 ( );
__declspec(implementation_key(610)) void Task::PutEnterpriseDate3 ( const _variant_t & retval );
__declspec(implementation_key(611)) _variant_t Task::GetEnterpriseDate4 ( );
__declspec(implementation_key(612)) void Task::PutEnterpriseDate4 ( const _variant_t & retval );
__declspec(implementation_key(613)) _variant_t Task::GetEnterpriseDate5 ( );
__declspec(implementation_key(614)) void Task::PutEnterpriseDate5 ( const _variant_t & retval );
__declspec(implementation_key(615)) _variant_t Task::GetEnterpriseDate6 ( );
__declspec(implementation_key(616)) void Task::PutEnterpriseDate6 ( const _variant_t & retval );
__declspec(implementation_key(617)) _variant_t Task::GetEnterpriseDate7 ( );
__declspec(implementation_key(618)) void Task::PutEnterpriseDate7 ( const _variant_t & retval );
__declspec(implementation_key(619)) _variant_t Task::GetEnterpriseDate8 ( );
__declspec(implementation_key(620)) void Task::PutEnterpriseDate8 ( const _variant_t & retval );
__declspec(implementation_key(621)) _variant_t Task::GetEnterpriseDate9 ( );
__declspec(implementation_key(622)) void Task::PutEnterpriseDate9 ( const _variant_t & retval );
__declspec(implementation_key(623)) _variant_t Task::GetEnterpriseDate10 ( );
__declspec(implementation_key(624)) void Task::PutEnterpriseDate10 ( const _variant_t & retval );
__declspec(implementation_key(625)) _variant_t Task::GetEnterpriseDate11 ( );
__declspec(implementation_key(626)) void Task::PutEnterpriseDate11 ( const _variant_t & retval );
__declspec(implementation_key(627)) _variant_t Task::GetEnterpriseDate12 ( );
__declspec(implementation_key(628)) void Task::PutEnterpriseDate12 ( const _variant_t & retval );
__declspec(implementation_key(629)) _variant_t Task::GetEnterpriseDate13 ( );
__declspec(implementation_key(630)) void Task::PutEnterpriseDate13 ( const _variant_t & retval );
__declspec(implementation_key(631)) _variant_t Task::GetEnterpriseDate14 ( );
__declspec(implementation_key(632)) void Task::PutEnterpriseDate14 ( const _variant_t & retval );
__declspec(implementation_key(633)) _variant_t Task::GetEnterpriseDate15 ( );
__declspec(implementation_key(634)) void Task::PutEnterpriseDate15 ( const _variant_t & retval );
__declspec(implementation_key(635)) _variant_t Task::GetEnterpriseDate16 ( );
__declspec(implementation_key(636)) void Task::PutEnterpriseDate16 ( const _variant_t & retval );
__declspec(implementation_key(637)) _variant_t Task::GetEnterpriseDate17 ( );
__declspec(implementation_key(638)) void Task::PutEnterpriseDate17 ( const _variant_t & retval );
__declspec(implementation_key(639)) _variant_t Task::GetEnterpriseDate18 ( );
__declspec(implementation_key(640)) void Task::PutEnterpriseDate18 ( const _variant_t & retval );
__declspec(implementation_key(641)) _variant_t Task::GetEnterpriseDate19 ( );
__declspec(implementation_key(642)) void Task::PutEnterpriseDate19 ( const _variant_t & retval );
__declspec(implementation_key(643)) _variant_t Task::GetEnterpriseDate20 ( );
__declspec(implementation_key(644)) void Task::PutEnterpriseDate20 ( const _variant_t & retval );
__declspec(implementation_key(645)) _variant_t Task::GetEnterpriseDate21 ( );
__declspec(implementation_key(646)) void Task::PutEnterpriseDate21 ( const _variant_t & retval );
__declspec(implementation_key(647)) _variant_t Task::GetEnterpriseDate22 ( );
__declspec(implementation_key(648)) void Task::PutEnterpriseDate22 ( const _variant_t & retval );
__declspec(implementation_key(649)) _variant_t Task::GetEnterpriseDate23 ( );
__declspec(implementation_key(650)) void Task::PutEnterpriseDate23 ( const _variant_t & retval );
__declspec(implementation_key(651)) _variant_t Task::GetEnterpriseDate24 ( );
__declspec(implementation_key(652)) void Task::PutEnterpriseDate24 ( const _variant_t & retval );
__declspec(implementation_key(653)) _variant_t Task::GetEnterpriseDate25 ( );
__declspec(implementation_key(654)) void Task::PutEnterpriseDate25 ( const _variant_t & retval );
__declspec(implementation_key(655)) _variant_t Task::GetEnterpriseDate26 ( );
__declspec(implementation_key(656)) void Task::PutEnterpriseDate26 ( const _variant_t & retval );
__declspec(implementation_key(657)) _variant_t Task::GetEnterpriseDate27 ( );
__declspec(implementation_key(658)) void Task::PutEnterpriseDate27 ( const _variant_t & retval );
__declspec(implementation_key(659)) _variant_t Task::GetEnterpriseDate28 ( );
__declspec(implementation_key(660)) void Task::PutEnterpriseDate28 ( const _variant_t & retval );
__declspec(implementation_key(661)) _variant_t Task::GetEnterpriseDate29 ( );
__declspec(implementation_key(662)) void Task::PutEnterpriseDate29 ( const _variant_t & retval );
__declspec(implementation_key(663)) _variant_t Task::GetEnterpriseDate30 ( );
__declspec(implementation_key(664)) void Task::PutEnterpriseDate30 ( const _variant_t & retval );
__declspec(implementation_key(665)) _variant_t Task::GetEnterpriseDuration1 ( );
__declspec(implementation_key(666)) void Task::PutEnterpriseDuration1 ( const _variant_t & retval );
__declspec(implementation_key(667)) _variant_t Task::GetEnterpriseDuration2 ( );
__declspec(implementation_key(668)) void Task::PutEnterpriseDuration2 ( const _variant_t & retval );
__declspec(implementation_key(669)) _variant_t Task::GetEnterpriseDuration3 ( );
__declspec(implementation_key(670)) void Task::PutEnterpriseDuration3 ( const _variant_t & retval );
__declspec(implementation_key(671)) _variant_t Task::GetEnterpriseDuration4 ( );
__declspec(implementation_key(672)) void Task::PutEnterpriseDuration4 ( const _variant_t & retval );
__declspec(implementation_key(673)) _variant_t Task::GetEnterpriseDuration5 ( );
__declspec(implementation_key(674)) void Task::PutEnterpriseDuration5 ( const _variant_t & retval );
__declspec(implementation_key(675)) _variant_t Task::GetEnterpriseDuration6 ( );
__declspec(implementation_key(676)) void Task::PutEnterpriseDuration6 ( const _variant_t & retval );
__declspec(implementation_key(677)) _variant_t Task::GetEnterpriseDuration7 ( );
__declspec(implementation_key(678)) void Task::PutEnterpriseDuration7 ( const _variant_t & retval );
__declspec(implementation_key(679)) _variant_t Task::GetEnterpriseDuration8 ( );
__declspec(implementation_key(680)) void Task::PutEnterpriseDuration8 ( const _variant_t & retval );
__declspec(implementation_key(681)) _variant_t Task::GetEnterpriseDuration9 ( );
__declspec(implementation_key(682)) void Task::PutEnterpriseDuration9 ( const _variant_t & retval );
__declspec(implementation_key(683)) _variant_t Task::GetEnterpriseDuration10 ( );
__declspec(implementation_key(684)) void Task::PutEnterpriseDuration10 ( const _variant_t & retval );
__declspec(implementation_key(685)) _variant_t Task::GetEnterpriseFlag1 ( );
__declspec(implementation_key(686)) void Task::PutEnterpriseFlag1 ( const _variant_t & retval );
__declspec(implementation_key(687)) _variant_t Task::GetEnterpriseFlag2 ( );
__declspec(implementation_key(688)) void Task::PutEnterpriseFlag2 ( const _variant_t & retval );
__declspec(implementation_key(689)) _variant_t Task::GetEnterpriseFlag3 ( );
__declspec(implementation_key(690)) void Task::PutEnterpriseFlag3 ( const _variant_t & retval );
__declspec(implementation_key(691)) _variant_t Task::GetEnterpriseFlag4 ( );
__declspec(implementation_key(692)) void Task::PutEnterpriseFlag4 ( const _variant_t & retval );
__declspec(implementation_key(693)) _variant_t Task::GetEnterpriseFlag5 ( );
__declspec(implementation_key(694)) void Task::PutEnterpriseFlag5 ( const _variant_t & retval );
__declspec(implementation_key(695)) _variant_t Task::GetEnterpriseFlag6 ( );
__declspec(implementation_key(696)) void Task::PutEnterpriseFlag6 ( const _variant_t & retval );
__declspec(implementation_key(697)) _variant_t Task::GetEnterpriseFlag7 ( );
__declspec(implementation_key(698)) void Task::PutEnterpriseFlag7 ( const _variant_t & retval );
__declspec(implementation_key(699)) _variant_t Task::GetEnterpriseFlag8 ( );
__declspec(implementation_key(700)) void Task::PutEnterpriseFlag8 ( const _variant_t & retval );
__declspec(implementation_key(701)) _variant_t Task::GetEnterpriseFlag9 ( );
__declspec(implementation_key(702)) void Task::PutEnterpriseFlag9 ( const _variant_t & retval );
__declspec(implementation_key(703)) _variant_t Task::GetEnterpriseFlag10 ( );
__declspec(implementation_key(704)) void Task::PutEnterpriseFlag10 ( const _variant_t & retval );
__declspec(implementation_key(705)) _variant_t Task::GetEnterpriseFlag11 ( );
__declspec(implementation_key(706)) void Task::PutEnterpriseFlag11 ( const _variant_t & retval );
__declspec(implementation_key(707)) _variant_t Task::GetEnterpriseFlag12 ( );
__declspec(implementation_key(708)) void Task::PutEnterpriseFlag12 ( const _variant_t & retval );
__declspec(implementation_key(709)) _variant_t Task::GetEnterpriseFlag13 ( );
__declspec(implementation_key(710)) void Task::PutEnterpriseFlag13 ( const _variant_t & retval );
__declspec(implementation_key(711)) _variant_t Task::GetEnterpriseFlag14 ( );
__declspec(implementation_key(712)) void Task::PutEnterpriseFlag14 ( const _variant_t & retval );
__declspec(implementation_key(713)) _variant_t Task::GetEnterpriseFlag15 ( );
__declspec(implementation_key(714)) void Task::PutEnterpriseFlag15 ( const _variant_t & retval );
__declspec(implementation_key(715)) _variant_t Task::GetEnterpriseFlag16 ( );
__declspec(implementation_key(716)) void Task::PutEnterpriseFlag16 ( const _variant_t & retval );
__declspec(implementation_key(717)) _variant_t Task::GetEnterpriseFlag17 ( );
__declspec(implementation_key(718)) void Task::PutEnterpriseFlag17 ( const _variant_t & retval );
__declspec(implementation_key(719)) _variant_t Task::GetEnterpriseFlag18 ( );
__declspec(implementation_key(720)) void Task::PutEnterpriseFlag18 ( const _variant_t & retval );
__declspec(implementation_key(721)) _variant_t Task::GetEnterpriseFlag19 ( );
__declspec(implementation_key(722)) void Task::PutEnterpriseFlag19 ( const _variant_t & retval );
__declspec(implementation_key(723)) _variant_t Task::GetEnterpriseFlag20 ( );
__declspec(implementation_key(724)) void Task::PutEnterpriseFlag20 ( const _variant_t & retval );
__declspec(implementation_key(725)) double Task::GetEnterpriseNumber1 ( );
__declspec(implementation_key(726)) void Task::PutEnterpriseNumber1 ( double retval );
__declspec(implementation_key(727)) double Task::GetEnterpriseNumber2 ( );
__declspec(implementation_key(728)) void Task::PutEnterpriseNumber2 ( double retval );
__declspec(implementation_key(729)) double Task::GetEnterpriseNumber3 ( );
__declspec(implementation_key(730)) void Task::PutEnterpriseNumber3 ( double retval );
__declspec(implementation_key(731)) double Task::GetEnterpriseNumber4 ( );
__declspec(implementation_key(732)) void Task::PutEnterpriseNumber4 ( double retval );
__declspec(implementation_key(733)) double Task::GetEnterpriseNumber5 ( );
__declspec(implementation_key(734)) void Task::PutEnterpriseNumber5 ( double retval );
__declspec(implementation_key(735)) double Task::GetEnterpriseNumber6 ( );
__declspec(implementation_key(736)) void Task::PutEnterpriseNumber6 ( double retval );
__declspec(implementation_key(737)) double Task::GetEnterpriseNumber7 ( );
__declspec(implementation_key(738)) void Task::PutEnterpriseNumber7 ( double retval );
__declspec(implementation_key(739)) double Task::GetEnterpriseNumber8 ( );
__declspec(implementation_key(740)) void Task::PutEnterpriseNumber8 ( double retval );
__declspec(implementation_key(741)) double Task::GetEnterpriseNumber9 ( );
__declspec(implementation_key(742)) void Task::PutEnterpriseNumber9 ( double retval );
__declspec(implementation_key(743)) double Task::GetEnterpriseNumber10 ( );
__declspec(implementation_key(744)) void Task::PutEnterpriseNumber10 ( double retval );
__declspec(implementation_key(745)) double Task::GetEnterpriseNumber11 ( );
__declspec(implementation_key(746)) void Task::PutEnterpriseNumber11 ( double retval );
__declspec(implementation_key(747)) double Task::GetEnterpriseNumber12 ( );
__declspec(implementation_key(748)) void Task::PutEnterpriseNumber12 ( double retval );
__declspec(implementation_key(749)) double Task::GetEnterpriseNumber13 ( );
__declspec(implementation_key(750)) void Task::PutEnterpriseNumber13 ( double retval );
__declspec(implementation_key(751)) double Task::GetEnterpriseNumber14 ( );
__declspec(implementation_key(752)) void Task::PutEnterpriseNumber14 ( double retval );
__declspec(implementation_key(753)) double Task::GetEnterpriseNumber15 ( );
__declspec(implementation_key(754)) void Task::PutEnterpriseNumber15 ( double retval );
__declspec(implementation_key(755)) double Task::GetEnterpriseNumber16 ( );
__declspec(implementation_key(756)) void Task::PutEnterpriseNumber16 ( double retval );
__declspec(implementation_key(757)) double Task::GetEnterpriseNumber17 ( );
__declspec(implementation_key(758)) void Task::PutEnterpriseNumber17 ( double retval );
__declspec(implementation_key(759)) double Task::GetEnterpriseNumber18 ( );
__declspec(implementation_key(760)) void Task::PutEnterpriseNumber18 ( double retval );
__declspec(implementation_key(761)) double Task::GetEnterpriseNumber19 ( );
__declspec(implementation_key(762)) void Task::PutEnterpriseNumber19 ( double retval );
__declspec(implementation_key(763)) double Task::GetEnterpriseNumber20 ( );
__declspec(implementation_key(764)) void Task::PutEnterpriseNumber20 ( double retval );
__declspec(implementation_key(765)) double Task::GetEnterpriseNumber21 ( );
__declspec(implementation_key(766)) void Task::PutEnterpriseNumber21 ( double retval );
__declspec(implementation_key(767)) double Task::GetEnterpriseNumber22 ( );
__declspec(implementation_key(768)) void Task::PutEnterpriseNumber22 ( double retval );
__declspec(implementation_key(769)) double Task::GetEnterpriseNumber23 ( );
__declspec(implementation_key(770)) void Task::PutEnterpriseNumber23 ( double retval );
__declspec(implementation_key(771)) double Task::GetEnterpriseNumber24 ( );
__declspec(implementation_key(772)) void Task::PutEnterpriseNumber24 ( double retval );
__declspec(implementation_key(773)) double Task::GetEnterpriseNumber25 ( );
__declspec(implementation_key(774)) void Task::PutEnterpriseNumber25 ( double retval );
__declspec(implementation_key(775)) double Task::GetEnterpriseNumber26 ( );
__declspec(implementation_key(776)) void Task::PutEnterpriseNumber26 ( double retval );
__declspec(implementation_key(777)) double Task::GetEnterpriseNumber27 ( );
__declspec(implementation_key(778)) void Task::PutEnterpriseNumber27 ( double retval );
__declspec(implementation_key(779)) double Task::GetEnterpriseNumber28 ( );
__declspec(implementation_key(780)) void Task::PutEnterpriseNumber28 ( double retval );
__declspec(implementation_key(781)) double Task::GetEnterpriseNumber29 ( );
__declspec(implementation_key(782)) void Task::PutEnterpriseNumber29 ( double retval );
__declspec(implementation_key(783)) double Task::GetEnterpriseNumber30 ( );
__declspec(implementation_key(784)) void Task::PutEnterpriseNumber30 ( double retval );
__declspec(implementation_key(785)) double Task::GetEnterpriseNumber31 ( );
__declspec(implementation_key(786)) void Task::PutEnterpriseNumber31 ( double retval );
__declspec(implementation_key(787)) double Task::GetEnterpriseNumber32 ( );
__declspec(implementation_key(788)) void Task::PutEnterpriseNumber32 ( double retval );
__declspec(implementation_key(789)) double Task::GetEnterpriseNumber33 ( );
__declspec(implementation_key(790)) void Task::PutEnterpriseNumber33 ( double retval );
__declspec(implementation_key(791)) double Task::GetEnterpriseNumber34 ( );
__declspec(implementation_key(792)) void Task::PutEnterpriseNumber34 ( double retval );
__declspec(implementation_key(793)) double Task::GetEnterpriseNumber35 ( );
__declspec(implementation_key(794)) void Task::PutEnterpriseNumber35 ( double retval );
__declspec(implementation_key(795)) double Task::GetEnterpriseNumber36 ( );
__declspec(implementation_key(796)) void Task::PutEnterpriseNumber36 ( double retval );
__declspec(implementation_key(797)) double Task::GetEnterpriseNumber37 ( );
__declspec(implementation_key(798)) void Task::PutEnterpriseNumber37 ( double retval );
__declspec(implementation_key(799)) double Task::GetEnterpriseNumber38 ( );
__declspec(implementation_key(800)) void Task::PutEnterpriseNumber38 ( double retval );
__declspec(implementation_key(801)) double Task::GetEnterpriseNumber39 ( );
__declspec(implementation_key(802)) void Task::PutEnterpriseNumber39 ( double retval );
__declspec(implementation_key(803)) double Task::GetEnterpriseNumber40 ( );
__declspec(implementation_key(804)) void Task::PutEnterpriseNumber40 ( double retval );
__declspec(implementation_key(805)) _bstr_t Task::GetEnterpriseOutlineCode1 ( );
__declspec(implementation_key(806)) void Task::PutEnterpriseOutlineCode1 ( _bstr_t retval );
__declspec(implementation_key(807)) _bstr_t Task::GetEnterpriseOutlineCode2 ( );
__declspec(implementation_key(808)) void Task::PutEnterpriseOutlineCode2 ( _bstr_t retval );
__declspec(implementation_key(809)) _bstr_t Task::GetEnterpriseOutlineCode3 ( );
__declspec(implementation_key(810)) void Task::PutEnterpriseOutlineCode3 ( _bstr_t retval );
__declspec(implementation_key(811)) _bstr_t Task::GetEnterpriseOutlineCode4 ( );
__declspec(implementation_key(812)) void Task::PutEnterpriseOutlineCode4 ( _bstr_t retval );
__declspec(implementation_key(813)) _bstr_t Task::GetEnterpriseOutlineCode5 ( );
__declspec(implementation_key(814)) void Task::PutEnterpriseOutlineCode5 ( _bstr_t retval );
__declspec(implementation_key(815)) _bstr_t Task::GetEnterpriseOutlineCode6 ( );
__declspec(implementation_key(816)) void Task::PutEnterpriseOutlineCode6 ( _bstr_t retval );
__declspec(implementation_key(817)) _bstr_t Task::GetEnterpriseOutlineCode7 ( );
__declspec(implementation_key(818)) void Task::PutEnterpriseOutlineCode7 ( _bstr_t retval );
__declspec(implementation_key(819)) _bstr_t Task::GetEnterpriseOutlineCode8 ( );
__declspec(implementation_key(820)) void Task::PutEnterpriseOutlineCode8 ( _bstr_t retval );
__declspec(implementation_key(821)) _bstr_t Task::GetEnterpriseOutlineCode9 ( );
__declspec(implementation_key(822)) void Task::PutEnterpriseOutlineCode9 ( _bstr_t retval );
__declspec(implementation_key(823)) _bstr_t Task::GetEnterpriseOutlineCode10 ( );
__declspec(implementation_key(824)) void Task::PutEnterpriseOutlineCode10 ( _bstr_t retval );
__declspec(implementation_key(825)) _bstr_t Task::GetEnterpriseOutlineCode11 ( );
__declspec(implementation_key(826)) void Task::PutEnterpriseOutlineCode11 ( _bstr_t retval );
__declspec(implementation_key(827)) _bstr_t Task::GetEnterpriseOutlineCode12 ( );
__declspec(implementation_key(828)) void Task::PutEnterpriseOutlineCode12 ( _bstr_t retval );
__declspec(implementation_key(829)) _bstr_t Task::GetEnterpriseOutlineCode13 ( );
__declspec(implementation_key(830)) void Task::PutEnterpriseOutlineCode13 ( _bstr_t retval );
__declspec(implementation_key(831)) _bstr_t Task::GetEnterpriseOutlineCode14 ( );
__declspec(implementation_key(832)) void Task::PutEnterpriseOutlineCode14 ( _bstr_t retval );
__declspec(implementation_key(833)) _bstr_t Task::GetEnterpriseOutlineCode15 ( );
__declspec(implementation_key(834)) void Task::PutEnterpriseOutlineCode15 ( _bstr_t retval );
__declspec(implementation_key(835)) _bstr_t Task::GetEnterpriseOutlineCode16 ( );
__declspec(implementation_key(836)) void Task::PutEnterpriseOutlineCode16 ( _bstr_t retval );
__declspec(implementation_key(837)) _bstr_t Task::GetEnterpriseOutlineCode17 ( );
__declspec(implementation_key(838)) void Task::PutEnterpriseOutlineCode17 ( _bstr_t retval );
__declspec(implementation_key(839)) _bstr_t Task::GetEnterpriseOutlineCode18 ( );
__declspec(implementation_key(840)) void Task::PutEnterpriseOutlineCode18 ( _bstr_t retval );
__declspec(implementation_key(841)) _bstr_t Task::GetEnterpriseOutlineCode19 ( );
__declspec(implementation_key(842)) void Task::PutEnterpriseOutlineCode19 ( _bstr_t retval );
__declspec(implementation_key(843)) _bstr_t Task::GetEnterpriseOutlineCode20 ( );
__declspec(implementation_key(844)) void Task::PutEnterpriseOutlineCode20 ( _bstr_t retval );
__declspec(implementation_key(845)) _bstr_t Task::GetEnterpriseOutlineCode21 ( );
__declspec(implementation_key(846)) void Task::PutEnterpriseOutlineCode21 ( _bstr_t retval );
__declspec(implementation_key(847)) _bstr_t Task::GetEnterpriseOutlineCode22 ( );
__declspec(implementation_key(848)) void Task::PutEnterpriseOutlineCode22 ( _bstr_t retval );
__declspec(implementation_key(849)) _bstr_t Task::GetEnterpriseOutlineCode23 ( );
__declspec(implementation_key(850)) void Task::PutEnterpriseOutlineCode23 ( _bstr_t retval );
__declspec(implementation_key(851)) _bstr_t Task::GetEnterpriseOutlineCode24 ( );
__declspec(implementation_key(852)) void Task::PutEnterpriseOutlineCode24 ( _bstr_t retval );
__declspec(implementation_key(853)) _bstr_t Task::GetEnterpriseOutlineCode25 ( );
__declspec(implementation_key(854)) void Task::PutEnterpriseOutlineCode25 ( _bstr_t retval );
__declspec(implementation_key(855)) _bstr_t Task::GetEnterpriseOutlineCode26 ( );
__declspec(implementation_key(856)) void Task::PutEnterpriseOutlineCode26 ( _bstr_t retval );
__declspec(implementation_key(857)) _bstr_t Task::GetEnterpriseOutlineCode27 ( );
__declspec(implementation_key(858)) void Task::PutEnterpriseOutlineCode27 ( _bstr_t retval );
__declspec(implementation_key(859)) _bstr_t Task::GetEnterpriseOutlineCode28 ( );
__declspec(implementation_key(860)) void Task::PutEnterpriseOutlineCode28 ( _bstr_t retval );
__declspec(implementation_key(861)) _bstr_t Task::GetEnterpriseOutlineCode29 ( );
__declspec(implementation_key(862)) void Task::PutEnterpriseOutlineCode29 ( _bstr_t retval );
__declspec(implementation_key(863)) _bstr_t Task::GetEnterpriseOutlineCode30 ( );
__declspec(implementation_key(864)) void Task::PutEnterpriseOutlineCode30 ( _bstr_t retval );
__declspec(implementation_key(865)) _bstr_t Task::GetEnterpriseText1 ( );
__declspec(implementation_key(866)) void Task::PutEnterpriseText1 ( _bstr_t retval );
__declspec(implementation_key(867)) _bstr_t Task::GetEnterpriseText2 ( );
__declspec(implementation_key(868)) void Task::PutEnterpriseText2 ( _bstr_t retval );
__declspec(implementation_key(869)) _bstr_t Task::GetEnterpriseText3 ( );
__declspec(implementation_key(870)) void Task::PutEnterpriseText3 ( _bstr_t retval );
__declspec(implementation_key(871)) _bstr_t Task::GetEnterpriseText4 ( );
__declspec(implementation_key(872)) void Task::PutEnterpriseText4 ( _bstr_t retval );
__declspec(implementation_key(873)) _bstr_t Task::GetEnterpriseText5 ( );
__declspec(implementation_key(874)) void Task::PutEnterpriseText5 ( _bstr_t retval );
__declspec(implementation_key(875)) _bstr_t Task::GetEnterpriseText6 ( );
__declspec(implementation_key(876)) void Task::PutEnterpriseText6 ( _bstr_t retval );
__declspec(implementation_key(877)) _bstr_t Task::GetEnterpriseText7 ( );
__declspec(implementation_key(878)) void Task::PutEnterpriseText7 ( _bstr_t retval );
__declspec(implementation_key(879)) _bstr_t Task::GetEnterpriseText8 ( );
__declspec(implementation_key(880)) void Task::PutEnterpriseText8 ( _bstr_t retval );
__declspec(implementation_key(881)) _bstr_t Task::GetEnterpriseText9 ( );
__declspec(implementation_key(882)) void Task::PutEnterpriseText9 ( _bstr_t retval );
__declspec(implementation_key(883)) _bstr_t Task::GetEnterpriseText10 ( );
__declspec(implementation_key(884)) void Task::PutEnterpriseText10 ( _bstr_t retval );
__declspec(implementation_key(885)) _bstr_t Task::GetEnterpriseText11 ( );
__declspec(implementation_key(886)) void Task::PutEnterpriseText11 ( _bstr_t retval );
__declspec(implementation_key(887)) _bstr_t Task::GetEnterpriseText12 ( );
__declspec(implementation_key(888)) void Task::PutEnterpriseText12 ( _bstr_t retval );
__declspec(implementation_key(889)) _bstr_t Task::GetEnterpriseText13 ( );
__declspec(implementation_key(890)) void Task::PutEnterpriseText13 ( _bstr_t retval );
__declspec(implementation_key(891)) _bstr_t Task::GetEnterpriseText14 ( );
__declspec(implementation_key(892)) void Task::PutEnterpriseText14 ( _bstr_t retval );
__declspec(implementation_key(893)) _bstr_t Task::GetEnterpriseText15 ( );
__declspec(implementation_key(894)) void Task::PutEnterpriseText15 ( _bstr_t retval );
__declspec(implementation_key(895)) _bstr_t Task::GetEnterpriseText16 ( );
__declspec(implementation_key(896)) void Task::PutEnterpriseText16 ( _bstr_t retval );
__declspec(implementation_key(897)) _bstr_t Task::GetEnterpriseText17 ( );
__declspec(implementation_key(898)) void Task::PutEnterpriseText17 ( _bstr_t retval );
__declspec(implementation_key(899)) _bstr_t Task::GetEnterpriseText18 ( );
__declspec(implementation_key(900)) void Task::PutEnterpriseText18 ( _bstr_t retval );
__declspec(implementation_key(901)) _bstr_t Task::GetEnterpriseText19 ( );
__declspec(implementation_key(902)) void Task::PutEnterpriseText19 ( _bstr_t retval );
__declspec(implementation_key(903)) _bstr_t Task::GetEnterpriseText20 ( );
__declspec(implementation_key(904)) void Task::PutEnterpriseText20 ( _bstr_t retval );
__declspec(implementation_key(905)) _bstr_t Task::GetEnterpriseText21 ( );
__declspec(implementation_key(906)) void Task::PutEnterpriseText21 ( _bstr_t retval );
__declspec(implementation_key(907)) _bstr_t Task::GetEnterpriseText22 ( );
__declspec(implementation_key(908)) void Task::PutEnterpriseText22 ( _bstr_t retval );
__declspec(implementation_key(909)) _bstr_t Task::GetEnterpriseText23 ( );
__declspec(implementation_key(910)) void Task::PutEnterpriseText23 ( _bstr_t retval );
__declspec(implementation_key(911)) _bstr_t Task::GetEnterpriseText24 ( );
__declspec(implementation_key(912)) void Task::PutEnterpriseText24 ( _bstr_t retval );
__declspec(implementation_key(913)) _bstr_t Task::GetEnterpriseText25 ( );
__declspec(implementation_key(914)) void Task::PutEnterpriseText25 ( _bstr_t retval );
__declspec(implementation_key(915)) _bstr_t Task::GetEnterpriseText26 ( );
__declspec(implementation_key(916)) void Task::PutEnterpriseText26 ( _bstr_t retval );
__declspec(implementation_key(917)) _bstr_t Task::GetEnterpriseText27 ( );
__declspec(implementation_key(918)) void Task::PutEnterpriseText27 ( _bstr_t retval );
__declspec(implementation_key(919)) _bstr_t Task::GetEnterpriseText28 ( );
__declspec(implementation_key(920)) void Task::PutEnterpriseText28 ( _bstr_t retval );
__declspec(implementation_key(921)) _bstr_t Task::GetEnterpriseText29 ( );
__declspec(implementation_key(922)) void Task::PutEnterpriseText29 ( _bstr_t retval );
__declspec(implementation_key(923)) _bstr_t Task::GetEnterpriseText30 ( );
__declspec(implementation_key(924)) void Task::PutEnterpriseText30 ( _bstr_t retval );
__declspec(implementation_key(925)) _bstr_t Task::GetEnterpriseText31 ( );
__declspec(implementation_key(926)) void Task::PutEnterpriseText31 ( _bstr_t retval );
__declspec(implementation_key(927)) _bstr_t Task::GetEnterpriseText32 ( );
__declspec(implementation_key(928)) void Task::PutEnterpriseText32 ( _bstr_t retval );
__declspec(implementation_key(929)) _bstr_t Task::GetEnterpriseText33 ( );
__declspec(implementation_key(930)) void Task::PutEnterpriseText33 ( _bstr_t retval );
__declspec(implementation_key(931)) _bstr_t Task::GetEnterpriseText34 ( );
__declspec(implementation_key(932)) void Task::PutEnterpriseText34 ( _bstr_t retval );
__declspec(implementation_key(933)) _bstr_t Task::GetEnterpriseText35 ( );
__declspec(implementation_key(934)) void Task::PutEnterpriseText35 ( _bstr_t retval );
__declspec(implementation_key(935)) _bstr_t Task::GetEnterpriseText36 ( );
__declspec(implementation_key(936)) void Task::PutEnterpriseText36 ( _bstr_t retval );
__declspec(implementation_key(937)) _bstr_t Task::GetEnterpriseText37 ( );
__declspec(implementation_key(938)) void Task::PutEnterpriseText37 ( _bstr_t retval );
__declspec(implementation_key(939)) _bstr_t Task::GetEnterpriseText38 ( );
__declspec(implementation_key(940)) void Task::PutEnterpriseText38 ( _bstr_t retval );
__declspec(implementation_key(941)) _bstr_t Task::GetEnterpriseText39 ( );
__declspec(implementation_key(942)) void Task::PutEnterpriseText39 ( _bstr_t retval );
__declspec(implementation_key(943)) _bstr_t Task::GetEnterpriseText40 ( );
__declspec(implementation_key(944)) void Task::PutEnterpriseText40 ( _bstr_t retval );
__declspec(implementation_key(945)) _variant_t Task::GetBaseline1DurationEstimated ( );
__declspec(implementation_key(946)) void Task::PutBaseline1DurationEstimated ( const _variant_t & retval );
__declspec(implementation_key(947)) _variant_t Task::GetBaseline2DurationEstimated ( );
__declspec(implementation_key(948)) void Task::PutBaseline2DurationEstimated ( const _variant_t & retval );
__declspec(implementation_key(949)) _variant_t Task::GetBaseline3DurationEstimated ( );
__declspec(implementation_key(950)) void Task::PutBaseline3DurationEstimated ( const _variant_t & retval );
__declspec(implementation_key(951)) _variant_t Task::GetBaseline4DurationEstimated ( );
__declspec(implementation_key(952)) void Task::PutBaseline4DurationEstimated ( const _variant_t & retval );
__declspec(implementation_key(953)) _variant_t Task::GetBaseline5DurationEstimated ( );
__declspec(implementation_key(954)) void Task::PutBaseline5DurationEstimated ( const _variant_t & retval );
__declspec(implementation_key(955)) _variant_t Task::GetBaseline6DurationEstimated ( );
__declspec(implementation_key(956)) void Task::PutBaseline6DurationEstimated ( const _variant_t & retval );
__declspec(implementation_key(957)) _variant_t Task::GetBaseline7DurationEstimated ( );
__declspec(implementation_key(958)) void Task::PutBaseline7DurationEstimated ( const _variant_t & retval );
__declspec(implementation_key(959)) _variant_t Task::GetBaseline8DurationEstimated ( );
__declspec(implementation_key(960)) void Task::PutBaseline8DurationEstimated ( const _variant_t & retval );
__declspec(implementation_key(961)) _variant_t Task::GetBaseline9DurationEstimated ( );
__declspec(implementation_key(962)) void Task::PutBaseline9DurationEstimated ( const _variant_t & retval );
__declspec(implementation_key(963)) _variant_t Task::GetBaseline10DurationEstimated ( );
__declspec(implementation_key(964)) void Task::PutBaseline10DurationEstimated ( const _variant_t & retval );
__declspec(implementation_key(965)) _variant_t Task::GetPhysicalPercentComplete ( );
__declspec(implementation_key(966)) void Task::PutPhysicalPercentComplete ( const _variant_t & retval );
__declspec(implementation_key(967)) enum PjEarnedValueMethod Task::GetEarnedValueMethod ( );
__declspec(implementation_key(968)) void Task::PutEarnedValueMethod ( enum PjEarnedValueMethod retval );
__declspec(implementation_key(969)) long Resource::GetID ( );
__declspec(implementation_key(970)) _bstr_t Resource::GetName ( );
__declspec(implementation_key(971)) void Resource::PutName ( _bstr_t retval );
__declspec(implementation_key(972)) _bstr_t Resource::GetInitials ( );
__declspec(implementation_key(973)) void Resource::PutInitials ( _bstr_t retval );
__declspec(implementation_key(974)) _bstr_t Resource::GetGroup ( );
__declspec(implementation_key(975)) void Resource::PutGroup ( _bstr_t retval );
__declspec(implementation_key(976)) _variant_t Resource::GetMaxUnits ( );
__declspec(implementation_key(977)) void Resource::PutMaxUnits ( const _variant_t & retval );
__declspec(implementation_key(978)) _bstr_t Resource::GetBaseCalendar ( );
__declspec(implementation_key(979)) void Resource::PutBaseCalendar ( _bstr_t retval );
__declspec(implementation_key(980)) _variant_t Resource::GetStandardRate ( );
__declspec(implementation_key(981)) void Resource::PutStandardRate ( const _variant_t & retval );
__declspec(implementation_key(982)) _variant_t Resource::GetOvertimeRate ( );
__declspec(implementation_key(983)) void Resource::PutOvertimeRate ( const _variant_t & retval );
__declspec(implementation_key(984)) _bstr_t Resource::GetText1 ( );
__declspec(implementation_key(985)) void Resource::PutText1 ( _bstr_t retval );
__declspec(implementation_key(986)) _bstr_t Resource::GetText2 ( );
__declspec(implementation_key(987)) void Resource::PutText2 ( _bstr_t retval );
__declspec(implementation_key(988)) _bstr_t Resource::GetCode ( );
__declspec(implementation_key(989)) void Resource::PutCode ( _bstr_t retval );
__declspec(implementation_key(990)) _variant_t Resource::GetActualCost ( );
__declspec(implementation_key(991)) _variant_t Resource::GetCost ( );
__declspec(implementation_key(992)) _variant_t Resource::GetWork ( );
__declspec(implementation_key(993)) _variant_t Resource::GetActualWork ( );
__declspec(implementation_key(994)) _variant_t Resource::GetBaselineWork ( );
__declspec(implementation_key(995)) void Resource::PutBaselineWork ( const _variant_t & retval );
__declspec(implementation_key(996)) _variant_t Resource::GetOvertimeWork ( );
__declspec(implementation_key(997)) _variant_t Resource::GetBaselineCost ( );
__declspec(implementation_key(998)) void Resource::PutBaselineCost ( const _variant_t & retval );
__declspec(implementation_key(999)) _variant_t Resource::GetCostPerUse ( );
__declspec(implementation_key(1000)) void Resource::PutCostPerUse ( const _variant_t & retval );
__declspec(implementation_key(1001)) _variant_t Resource::GetAccrueAt ( );
__declspec(implementation_key(1002)) void Resource::PutAccrueAt ( const _variant_t & retval );
__declspec(implementation_key(1003)) _bstr_t Resource::GetNotes ( );
__declspec(implementation_key(1004)) void Resource::PutNotes ( _bstr_t retval );
__declspec(implementation_key(1005)) _variant_t Resource::GetRemainingCost ( );
__declspec(implementation_key(1006)) _variant_t Resource::GetRemainingWork ( );
__declspec(implementation_key(1007)) _variant_t Resource::GetWorkVariance ( );
__declspec(implementation_key(1008)) _variant_t Resource::GetCostVariance ( );
__declspec(implementation_key(1009)) _variant_t Resource::GetOverallocated ( );
__declspec(implementation_key(1010)) _variant_t Resource::GetPeakUnits ( );
__declspec(implementation_key(1011)) long Resource::GetUniqueID ( );
__declspec(implementation_key(1012)) _variant_t Resource::GetPercentWorkComplete ( );
__declspec(implementation_key(1013)) _bstr_t Resource::GetText3 ( );
__declspec(implementation_key(1014)) void Resource::PutText3 ( _bstr_t retval );
__declspec(implementation_key(1015)) _bstr_t Resource::GetText4 ( );
__declspec(implementation_key(1016)) void Resource::PutText4 ( _bstr_t retval );
__declspec(implementation_key(1017)) _bstr_t Resource::GetText5 ( );
__declspec(implementation_key(1018)) void Resource::PutText5 ( _bstr_t retval );
__declspec(implementation_key(1019)) long Resource::GetObjects ( );
__declspec(implementation_key(1020)) _variant_t Resource::GetLinkedFields ( );
__declspec(implementation_key(1021)) _bstr_t Resource::GetEMailAddress ( );
__declspec(implementation_key(1022)) void Resource::PutEMailAddress ( _bstr_t retval );
__declspec(implementation_key(1023)) _variant_t Resource::GetRegularWork ( );
__declspec(implementation_key(1024)) _variant_t Resource::GetActualOvertimeWork ( );
__declspec(implementation_key(1025)) _variant_t Resource::GetRemainingOvertimeWork ( );
__declspec(implementation_key(1026)) _variant_t Resource::GetOvertimeCost ( );
__declspec(implementation_key(1027)) _variant_t Resource::GetActualOvertimeCost ( );
__declspec(implementation_key(1028)) _variant_t Resource::GetRemainingOvertimeCost ( );
__declspec(implementation_key(1029)) _variant_t Resource::GetBCWS ( );
__declspec(implementation_key(1030)) _variant_t Resource::GetBCWP ( );
__declspec(implementation_key(1031)) _variant_t Resource::GetACWP ( );
__declspec(implementation_key(1032)) _variant_t Resource::GetSV ( );
__declspec(implementation_key(1033)) AssignmentsPtr Resource::GetAssignments ( );
__declspec(implementation_key(1034)) _variant_t Resource::GetAvailableFrom ( );
__declspec(implementation_key(1035)) void Resource::PutAvailableFrom ( const _variant_t & retval );
__declspec(implementation_key(1036)) _variant_t Resource::GetAvailableTo ( );
__declspec(implementation_key(1037)) void Resource::PutAvailableTo ( const _variant_t & retval );
__declspec(implementation_key(1038)) IDispatchPtr Resource::GetParent ( );
__declspec(implementation_key(1039)) _MSProjectPtr Resource::GetApplication ( );
__declspec(implementation_key(1040)) _bstr_t Resource::GetText6 ( );
__declspec(implementation_key(1041)) void Resource::PutText6 ( _bstr_t retval );
__declspec(implementation_key(1042)) _bstr_t Resource::GetText7 ( );
__declspec(implementation_key(1043)) void Resource::PutText7 ( _bstr_t retval );
__declspec(implementation_key(1044)) _bstr_t Resource::GetText8 ( );
__declspec(implementation_key(1045)) void Resource::PutText8 ( _bstr_t retval );
__declspec(implementation_key(1046)) _bstr_t Resource::GetText9 ( );
__declspec(implementation_key(1047)) void Resource::PutText9 ( _bstr_t retval );
__declspec(implementation_key(1048)) _bstr_t Resource::GetText10 ( );
__declspec(implementation_key(1049)) void Resource::PutText10 ( _bstr_t retval );
__declspec(implementation_key(1050)) _variant_t Resource::GetStart1 ( );
__declspec(implementation_key(1051)) void Resource::PutStart1 ( const _variant_t & retval );
__declspec(implementation_key(1052)) _variant_t Resource::GetStart2 ( );
__declspec(implementation_key(1053)) void Resource::PutStart2 ( const _variant_t & retval );
__declspec(implementation_key(1054)) _variant_t Resource::GetStart3 ( );
__declspec(implementation_key(1055)) void Resource::PutStart3 ( const _variant_t & retval );
__declspec(implementation_key(1056)) _variant_t Resource::GetStart4 ( );
__declspec(implementation_key(1057)) void Resource::PutStart4 ( const _variant_t & retval );
__declspec(implementation_key(1058)) _variant_t Resource::GetStart5 ( );
__declspec(implementation_key(1059)) void Resource::PutStart5 ( const _variant_t & retval );
__declspec(implementation_key(1060)) _variant_t Resource::GetFinish1 ( );
__declspec(implementation_key(1061)) void Resource::PutFinish1 ( const _variant_t & retval );
__declspec(implementation_key(1062)) _variant_t Resource::GetFinish2 ( );
__declspec(implementation_key(1063)) void Resource::PutFinish2 ( const _variant_t & retval );
__declspec(implementation_key(1064)) _variant_t Resource::GetFinish3 ( );
__declspec(implementation_key(1065)) void Resource::PutFinish3 ( const _variant_t & retval );
__declspec(implementation_key(1066)) _variant_t Resource::GetFinish4 ( );
__declspec(implementation_key(1067)) void Resource::PutFinish4 ( const _variant_t & retval );
__declspec(implementation_key(1068)) _variant_t Resource::GetFinish5 ( );
__declspec(implementation_key(1069)) void Resource::PutFinish5 ( const _variant_t & retval );
__declspec(implementation_key(1070)) double Resource::GetNumber1 ( );
__declspec(implementation_key(1071)) void Resource::PutNumber1 ( double retval );
__declspec(implementation_key(1072)) double Resource::GetNumber2 ( );
__declspec(implementation_key(1073)) void Resource::PutNumber2 ( double retval );
__declspec(implementation_key(1074)) double Resource::GetNumber3 ( );
__declspec(implementation_key(1075)) void Resource::PutNumber3 ( double retval );
__declspec(implementation_key(1076)) double Resource::GetNumber4 ( );
__declspec(implementation_key(1077)) void Resource::PutNumber4 ( double retval );
__declspec(implementation_key(1078)) double Resource::GetNumber5 ( );
__declspec(implementation_key(1079)) void Resource::PutNumber5 ( double retval );
__declspec(implementation_key(1080)) _variant_t Resource::GetDuration1 ( );
__declspec(implementation_key(1081)) void Resource::PutDuration1 ( const _variant_t & retval );
__declspec(implementation_key(1082)) _variant_t Resource::GetDuration2 ( );
__declspec(implementation_key(1083)) void Resource::PutDuration2 ( const _variant_t & retval );
__declspec(implementation_key(1084)) _variant_t Resource::GetDuration3 ( );
__declspec(implementation_key(1085)) void Resource::PutDuration3 ( const _variant_t & retval );
__declspec(implementation_key(1086)) _variant_t Resource::GetCost1 ( );
__declspec(implementation_key(1087)) void Resource::PutCost1 ( const _variant_t & retval );
__declspec(implementation_key(1088)) _variant_t Resource::GetCost2 ( );
__declspec(implementation_key(1089)) void Resource::PutCost2 ( const _variant_t & retval );
__declspec(implementation_key(1090)) _variant_t Resource::GetCost3 ( );
__declspec(implementation_key(1091)) void Resource::PutCost3 ( const _variant_t & retval );
__declspec(implementation_key(1092)) _variant_t Resource::GetFlag10 ( );
__declspec(implementation_key(1093)) void Resource::PutFlag10 ( const _variant_t & retval );
__declspec(implementation_key(1094)) _variant_t Resource::GetFlag1 ( );
__declspec(implementation_key(1095)) void Resource::PutFlag1 ( const _variant_t & retval );
__declspec(implementation_key(1096)) _variant_t Resource::GetFlag2 ( );
__declspec(implementation_key(1097)) void Resource::PutFlag2 ( const _variant_t & retval );
__declspec(implementation_key(1098)) _variant_t Resource::GetFlag3 ( );
__declspec(implementation_key(1099)) void Resource::PutFlag3 ( const _variant_t & retval );
__declspec(implementation_key(1100)) _variant_t Resource::GetFlag4 ( );
__declspec(implementation_key(1101)) void Resource::PutFlag4 ( const _variant_t & retval );
__declspec(implementation_key(1102)) _variant_t Resource::GetFlag5 ( );
__declspec(implementation_key(1103)) void Resource::PutFlag5 ( const _variant_t & retval );
__declspec(implementation_key(1104)) _variant_t Resource::GetFlag6 ( );
__declspec(implementation_key(1105)) void Resource::PutFlag6 ( const _variant_t & retval );
__declspec(implementation_key(1106)) _variant_t Resource::GetFlag7 ( );
__declspec(implementation_key(1107)) void Resource::PutFlag7 ( const _variant_t & retval );
__declspec(implementation_key(1108)) _variant_t Resource::GetFlag8 ( );
__declspec(implementation_key(1109)) void Resource::PutFlag8 ( const _variant_t & retval );
__declspec(implementation_key(1110)) _variant_t Resource::GetFlag9 ( );
__declspec(implementation_key(1111)) void Resource::PutFlag9 ( const _variant_t & retval );
__declspec(implementation_key(1112)) _bstr_t Resource::GetHyperlink ( );
__declspec(implementation_key(1113)) void Resource::PutHyperlink ( _bstr_t retval );
__declspec(implementation_key(1114)) _bstr_t Resource::GetHyperlinkAddress ( );
__declspec(implementation_key(1115)) void Resource::PutHyperlinkAddress ( _bstr_t retval );
__declspec(implementation_key(1116)) _bstr_t Resource::GetHyperlinkSubAddress ( );
__declspec(implementation_key(1117)) void Resource::PutHyperlinkSubAddress ( _bstr_t retval );
__declspec(implementation_key(1118)) _bstr_t Resource::GetHyperlinkHREF ( );
__declspec(implementation_key(1119)) void Resource::PutHyperlinkHREF ( _bstr_t retval );
__declspec(implementation_key(1120)) _bstr_t Resource::GetField ( enum PjField FieldID );
__declspec(implementation_key(1121)) HRESULT Resource::SetField ( enum PjField FieldID, _bstr_t Value );
__declspec(implementation_key(1122)) CalendarPtr Resource::GetCalendar ( );
__declspec(implementation_key(1123)) HRESULT Resource::Delete ( );
__declspec(implementation_key(1124)) HRESULT Resource::AppendNotes ( _bstr_t Value );
__declspec(implementation_key(1125)) TimeScaleValuesPtr Resource::TimeScaleData ( const _variant_t & StartDate, const _variant_t & EndDate, enum PjResourceTimescaledData Type, enum PjTimescaleUnit TimeScaleUnit, long Count );
__declspec(implementation_key(1126)) CostRateTablesPtr Resource::GetCostRateTables ( );
__declspec(implementation_key(1127)) PayRatesPtr Resource::GetPayRates ( );
__declspec(implementation_key(1128)) _variant_t Resource::GetCanLevel ( );
__declspec(implementation_key(1129)) void Resource::PutCanLevel ( const _variant_t & retval );
__declspec(implementation_key(1130)) _variant_t Resource::GetCost4 ( );
__declspec(implementation_key(1131)) void Resource::PutCost4 ( const _variant_t & retval );
__declspec(implementation_key(1132)) _variant_t Resource::GetCost5 ( );
__declspec(implementation_key(1133)) void Resource::PutCost5 ( const _variant_t & retval );
__declspec(implementation_key(1134)) _variant_t Resource::GetCost6 ( );
__declspec(implementation_key(1135)) void Resource::PutCost6 ( const _variant_t & retval );
__declspec(implementation_key(1136)) _variant_t Resource::GetCost7 ( );
__declspec(implementation_key(1137)) void Resource::PutCost7 ( const _variant_t & retval );
__declspec(implementation_key(1138)) _variant_t Resource::GetCost8 ( );
__declspec(implementation_key(1139)) void Resource::PutCost8 ( const _variant_t & retval );
__declspec(implementation_key(1140)) _variant_t Resource::GetCost9 ( );
__declspec(implementation_key(1141)) void Resource::PutCost9 ( const _variant_t & retval );
__declspec(implementation_key(1142)) _variant_t Resource::GetCost10 ( );
__declspec(implementation_key(1143)) void Resource::PutCost10 ( const _variant_t & retval );
__declspec(implementation_key(1144)) _variant_t Resource::GetDate1 ( );
__declspec(implementation_key(1145)) void Resource::PutDate1 ( const _variant_t & retval );
__declspec(implementation_key(1146)) _variant_t Resource::GetDate2 ( );
__declspec(implementation_key(1147)) void Resource::PutDate2 ( const _variant_t & retval );
__declspec(implementation_key(1148)) _variant_t Resource::GetDate3 ( );
__declspec(implementation_key(1149)) void Resource::PutDate3 ( const _variant_t & retval );
__declspec(implementation_key(1150)) _variant_t Resource::GetDate4 ( );
__declspec(implementation_key(1151)) void Resource::PutDate4 ( const _variant_t & retval );
__declspec(implementation_key(1152)) _variant_t Resource::GetDate5 ( );
__declspec(implementation_key(1153)) void Resource::PutDate5 ( const _variant_t & retval );
__declspec(implementation_key(1154)) _variant_t Resource::GetDate6 ( );
__declspec(implementation_key(1155)) void Resource::PutDate6 ( const _variant_t & retval );
__declspec(implementation_key(1156)) _variant_t Resource::GetDate7 ( );
__declspec(implementation_key(1157)) void Resource::PutDate7 ( const _variant_t & retval );
__declspec(implementation_key(1158)) _variant_t Resource::GetDate8 ( );
__declspec(implementation_key(1159)) void Resource::PutDate8 ( const _variant_t & retval );
__declspec(implementation_key(1160)) _variant_t Resource::GetDate9 ( );
__declspec(implementation_key(1161)) void Resource::PutDate9 ( const _variant_t & retval );
__declspec(implementation_key(1162)) _variant_t Resource::GetDate10 ( );
__declspec(implementation_key(1163)) void Resource::PutDate10 ( const _variant_t & retval );
__declspec(implementation_key(1164)) _variant_t Resource::GetDuration4 ( );
__declspec(implementation_key(1165)) void Resource::PutDuration4 ( const _variant_t & retval );
__declspec(implementation_key(1166)) _variant_t Resource::GetDuration5 ( );
__declspec(implementation_key(1167)) void Resource::PutDuration5 ( const _variant_t & retval );
__declspec(implementation_key(1168)) _variant_t Resource::GetDuration6 ( );
__declspec(implementation_key(1169)) void Resource::PutDuration6 ( const _variant_t & retval );
__declspec(implementation_key(1170)) _variant_t Resource::GetDuration7 ( );
__declspec(implementation_key(1171)) void Resource::PutDuration7 ( const _variant_t & retval );
__declspec(implementation_key(1172)) _variant_t Resource::GetDuration8 ( );
__declspec(implementation_key(1173)) void Resource::PutDuration8 ( const _variant_t & retval );
__declspec(implementation_key(1174)) _variant_t Resource::GetDuration9 ( );
__declspec(implementation_key(1175)) void Resource::PutDuration9 ( const _variant_t & retval );
__declspec(implementation_key(1176)) _variant_t Resource::GetDuration10 ( );
__declspec(implementation_key(1177)) void Resource::PutDuration10 ( const _variant_t & retval );
__declspec(implementation_key(1178)) _variant_t Resource::GetFinish6 ( );
__declspec(implementation_key(1179)) void Resource::PutFinish6 ( const _variant_t & retval );
__declspec(implementation_key(1180)) _variant_t Resource::GetFinish7 ( );
__declspec(implementation_key(1181)) void Resource::PutFinish7 ( const _variant_t & retval );
__declspec(implementation_key(1182)) _variant_t Resource::GetFinish8 ( );
__declspec(implementation_key(1183)) void Resource::PutFinish8 ( const _variant_t & retval );
__declspec(implementation_key(1184)) _variant_t Resource::GetFinish9 ( );
__declspec(implementation_key(1185)) void Resource::PutFinish9 ( const _variant_t & retval );
__declspec(implementation_key(1186)) _variant_t Resource::GetFinish10 ( );
__declspec(implementation_key(1187)) void Resource::PutFinish10 ( const _variant_t & retval );
__declspec(implementation_key(1188)) _variant_t Resource::GetFlag11 ( );
__declspec(implementation_key(1189)) void Resource::PutFlag11 ( const _variant_t & retval );
__declspec(implementation_key(1190)) _variant_t Resource::GetFlag12 ( );
__declspec(implementation_key(1191)) void Resource::PutFlag12 ( const _variant_t & retval );
__declspec(implementation_key(1192)) _variant_t Resource::GetFlag13 ( );
__declspec(implementation_key(1193)) void Resource::PutFlag13 ( const _variant_t & retval );
__declspec(implementation_key(1194)) _variant_t Resource::GetFlag14 ( );
__declspec(implementation_key(1195)) void Resource::PutFlag14 ( const _variant_t & retval );
__declspec(implementation_key(1196)) _variant_t Resource::GetFlag15 ( );
__declspec(implementation_key(1197)) void Resource::PutFlag15 ( const _variant_t & retval );
__declspec(implementation_key(1198)) _variant_t Resource::GetFlag16 ( );
__declspec(implementation_key(1199)) void Resource::PutFlag16 ( const _variant_t & retval );
__declspec(implementation_key(1200)) _variant_t Resource::GetFlag17 ( );
__declspec(implementation_key(1201)) void Resource::PutFlag17 ( const _variant_t & retval );
__declspec(implementation_key(1202)) _variant_t Resource::GetFlag18 ( );
__declspec(implementation_key(1203)) void Resource::PutFlag18 ( const _variant_t & retval );
__declspec(implementation_key(1204)) _variant_t Resource::GetFlag19 ( );
__declspec(implementation_key(1205)) void Resource::PutFlag19 ( const _variant_t & retval );
__declspec(implementation_key(1206)) _variant_t Resource::GetFlag20 ( );
__declspec(implementation_key(1207)) void Resource::PutFlag20 ( const _variant_t & retval );
__declspec(implementation_key(1208)) double Resource::GetNumber6 ( );
__declspec(implementation_key(1209)) void Resource::PutNumber6 ( double retval );
__declspec(implementation_key(1210)) double Resource::GetNumber7 ( );
__declspec(implementation_key(1211)) void Resource::PutNumber7 ( double retval );
__declspec(implementation_key(1212)) double Resource::GetNumber8 ( );
__declspec(implementation_key(1213)) void Resource::PutNumber8 ( double retval );
__declspec(implementation_key(1214)) double Resource::GetNumber9 ( );
__declspec(implementation_key(1215)) void Resource::PutNumber9 ( double retval );
__declspec(implementation_key(1216)) double Resource::GetNumber10 ( );
__declspec(implementation_key(1217)) void Resource::PutNumber10 ( double retval );
__declspec(implementation_key(1218)) double Resource::GetNumber11 ( );
__declspec(implementation_key(1219)) void Resource::PutNumber11 ( double retval );
__declspec(implementation_key(1220)) double Resource::GetNumber12 ( );
__declspec(implementation_key(1221)) void Resource::PutNumber12 ( double retval );
__declspec(implementation_key(1222)) double Resource::GetNumber13 ( );
__declspec(implementation_key(1223)) void Resource::PutNumber13 ( double retval );
__declspec(implementation_key(1224)) double Resource::GetNumber14 ( );
__declspec(implementation_key(1225)) void Resource::PutNumber14 ( double retval );
__declspec(implementation_key(1226)) double Resource::GetNumber15 ( );
__declspec(implementation_key(1227)) void Resource::PutNumber15 ( double retval );
__declspec(implementation_key(1228)) double Resource::GetNumber16 ( );
__declspec(implementation_key(1229)) void Resource::PutNumber16 ( double retval );
__declspec(implementation_key(1230)) double Resource::GetNumber17 ( );
__declspec(implementation_key(1231)) void Resource::PutNumber17 ( double retval );
__declspec(implementation_key(1232)) double Resource::GetNumber18 ( );
__declspec(implementation_key(1233)) void Resource::PutNumber18 ( double retval );
__declspec(implementation_key(1234)) double Resource::GetNumber19 ( );
__declspec(implementation_key(1235)) void Resource::PutNumber19 ( double retval );
__declspec(implementation_key(1236)) double Resource::GetNumber20 ( );
__declspec(implementation_key(1237)) void Resource::PutNumber20 ( double retval );
__declspec(implementation_key(1238)) _variant_t Resource::GetStart6 ( );
__declspec(implementation_key(1239)) void Resource::PutStart6 ( const _variant_t & retval );
__declspec(implementation_key(1240)) _variant_t Resource::GetStart7 ( );
__declspec(implementation_key(1241)) void Resource::PutStart7 ( const _variant_t & retval );
__declspec(implementation_key(1242)) _variant_t Resource::GetStart8 ( );
__declspec(implementation_key(1243)) void Resource::PutStart8 ( const _variant_t & retval );
__declspec(implementation_key(1244)) _variant_t Resource::GetStart9 ( );
__declspec(implementation_key(1245)) void Resource::PutStart9 ( const _variant_t & retval );
__declspec(implementation_key(1246)) _variant_t Resource::GetStart10 ( );
__declspec(implementation_key(1247)) void Resource::PutStart10 ( const _variant_t & retval );
__declspec(implementation_key(1248)) _bstr_t Resource::GetText11 ( );
__declspec(implementation_key(1249)) void Resource::PutText11 ( _bstr_t retval );
__declspec(implementation_key(1250)) _bstr_t Resource::GetText12 ( );
__declspec(implementation_key(1251)) void Resource::PutText12 ( _bstr_t retval );
__declspec(implementation_key(1252)) _bstr_t Resource::GetText13 ( );
__declspec(implementation_key(1253)) void Resource::PutText13 ( _bstr_t retval );
__declspec(implementation_key(1254)) _bstr_t Resource::GetText14 ( );
__declspec(implementation_key(1255)) void Resource::PutText14 ( _bstr_t retval );
__declspec(implementation_key(1256)) _bstr_t Resource::GetText15 ( );
__declspec(implementation_key(1257)) void Resource::PutText15 ( _bstr_t retval );
__declspec(implementation_key(1258)) _bstr_t Resource::GetText16 ( );
__declspec(implementation_key(1259)) void Resource::PutText16 ( _bstr_t retval );
__declspec(implementation_key(1260)) _bstr_t Resource::GetText17 ( );
__declspec(implementation_key(1261)) void Resource::PutText17 ( _bstr_t retval );
__declspec(implementation_key(1262)) _bstr_t Resource::GetText18 ( );
__declspec(implementation_key(1263)) void Resource::PutText18 ( _bstr_t retval );
__declspec(implementation_key(1264)) _bstr_t Resource::GetText19 ( );
__declspec(implementation_key(1265)) void Resource::PutText19 ( _bstr_t retval );
__declspec(implementation_key(1266)) _bstr_t Resource::GetText20 ( );
__declspec(implementation_key(1267)) void Resource::PutText20 ( _bstr_t retval );
__declspec(implementation_key(1268)) _bstr_t Resource::GetText21 ( );
__declspec(implementation_key(1269)) void Resource::PutText21 ( _bstr_t retval );
__declspec(implementation_key(1270)) _bstr_t Resource::GetText22 ( );
__declspec(implementation_key(1271)) void Resource::PutText22 ( _bstr_t retval );
__declspec(implementation_key(1272)) _bstr_t Resource::GetText23 ( );
__declspec(implementation_key(1273)) void Resource::PutText23 ( _bstr_t retval );
__declspec(implementation_key(1274)) _bstr_t Resource::GetText24 ( );
__declspec(implementation_key(1275)) void Resource::PutText24 ( _bstr_t retval );
__declspec(implementation_key(1276)) _bstr_t Resource::GetText25 ( );
__declspec(implementation_key(1277)) void Resource::PutText25 ( _bstr_t retval );
__declspec(implementation_key(1278)) _bstr_t Resource::GetText26 ( );
__declspec(implementation_key(1279)) void Resource::PutText26 ( _bstr_t retval );
__declspec(implementation_key(1280)) _bstr_t Resource::GetText27 ( );
__declspec(implementation_key(1281)) void Resource::PutText27 ( _bstr_t retval );
__declspec(implementation_key(1282)) _bstr_t Resource::GetText28 ( );
__declspec(implementation_key(1283)) void Resource::PutText28 ( _bstr_t retval );
__declspec(implementation_key(1284)) _bstr_t Resource::GetText29 ( );
__declspec(implementation_key(1285)) void Resource::PutText29 ( _bstr_t retval );
__declspec(implementation_key(1286)) _bstr_t Resource::GetText30 ( );
__declspec(implementation_key(1287)) void Resource::PutText30 ( _bstr_t retval );
__declspec(implementation_key(1288)) _bstr_t Resource::GetPhonetics ( );
__declspec(implementation_key(1289)) void Resource::PutPhonetics ( _bstr_t retval );
__declspec(implementation_key(1290)) long Resource::GetIndex ( );
__declspec(implementation_key(1291)) HRESULT Resource::Level ( );
__declspec(implementation_key(1292)) _variant_t Resource::GetConfirmed ( );
__declspec(implementation_key(1293)) _variant_t Resource::GetResponsePending ( );
__declspec(implementation_key(1294)) _variant_t Resource::GetTeamStatusPending ( );
__declspec(implementation_key(1295)) _variant_t Resource::GetUpdateNeeded ( );
__declspec(implementation_key(1296)) _variant_t Resource::GetCV ( );
__declspec(implementation_key(1297)) enum PjWorkgroupMessages Resource::GetWorkgroup ( );
__declspec(implementation_key(1298)) void Resource::PutWorkgroup ( enum PjWorkgroupMessages retval );
__declspec(implementation_key(1299)) _bstr_t Resource::GetProject ( );
__declspec(implementation_key(1300)) AvailabilitiesPtr Resource::GetAvailabilities ( );
__declspec(implementation_key(1301)) _bstr_t Resource::GetOutlineCode1 ( );
__declspec(implementation_key(1302)) void Resource::PutOutlineCode1 ( _bstr_t retval );
__declspec(implementation_key(1303)) _bstr_t Resource::GetOutlineCode2 ( );
__declspec(implementation_key(1304)) void Resource::PutOutlineCode2 ( _bstr_t retval );
__declspec(implementation_key(1305)) _bstr_t Resource::GetOutlineCode3 ( );
__declspec(implementation_key(1306)) void Resource::PutOutlineCode3 ( _bstr_t retval );
__declspec(implementation_key(1307)) _bstr_t Resource::GetOutlineCode4 ( );
__declspec(implementation_key(1308)) void Resource::PutOutlineCode4 ( _bstr_t retval );
__declspec(implementation_key(1309)) _bstr_t Resource::GetOutlineCode5 ( );
__declspec(implementation_key(1310)) void Resource::PutOutlineCode5 ( _bstr_t retval );
__declspec(implementation_key(1311)) _bstr_t Resource::GetOutlineCode6 ( );
__declspec(implementation_key(1312)) void Resource::PutOutlineCode6 ( _bstr_t retval );
__declspec(implementation_key(1313)) _bstr_t Resource::GetOutlineCode7 ( );
__declspec(implementation_key(1314)) void Resource::PutOutlineCode7 ( _bstr_t retval );
__declspec(implementation_key(1315)) _bstr_t Resource::GetOutlineCode8 ( );
__declspec(implementation_key(1316)) void Resource::PutOutlineCode8 ( _bstr_t retval );
__declspec(implementation_key(1317)) _bstr_t Resource::GetOutlineCode9 ( );
__declspec(implementation_key(1318)) void Resource::PutOutlineCode9 ( _bstr_t retval );
__declspec(implementation_key(1319)) _bstr_t Resource::GetOutlineCode10 ( );
__declspec(implementation_key(1320)) void Resource::PutOutlineCode10 ( _bstr_t retval );
__declspec(implementation_key(1321)) _bstr_t Resource::GetMaterialLabel ( );
__declspec(implementation_key(1322)) void Resource::PutMaterialLabel ( _bstr_t retval );
__declspec(implementation_key(1323)) enum PjResourceTypes Resource::GetType ( );
__declspec(implementation_key(1324)) void Resource::PutType ( enum PjResourceTypes retval );
__declspec(implementation_key(1325)) _variant_t Resource::GetVAC ( );
__declspec(implementation_key(1326)) _variant_t Resource::GetGroupBySummary ( );
__declspec(implementation_key(1327)) _bstr_t Resource::GetWindowsUserAccount ( );
__declspec(implementation_key(1328)) void Resource::PutWindowsUserAccount ( _bstr_t retval );
__declspec(implementation_key(1329)) _bstr_t Resource::GetHyperlinkScreenTip ( );
__declspec(implementation_key(1330)) void Resource::PutHyperlinkScreenTip ( _bstr_t retval );
__declspec(implementation_key(1331)) _variant_t Resource::GetBaseline1Work ( );
__declspec(implementation_key(1332)) void Resource::PutBaseline1Work ( const _variant_t & retval );
__declspec(implementation_key(1333)) _variant_t Resource::GetBaseline1Cost ( );
__declspec(implementation_key(1334)) void Resource::PutBaseline1Cost ( const _variant_t & retval );
__declspec(implementation_key(1335)) _variant_t Resource::GetBaseline2Work ( );
__declspec(implementation_key(1336)) void Resource::PutBaseline2Work ( const _variant_t & retval );
__declspec(implementation_key(1337)) _variant_t Resource::GetBaseline2Cost ( );
__declspec(implementation_key(1338)) void Resource::PutBaseline2Cost ( const _variant_t & retval );
__declspec(implementation_key(1339)) _variant_t Resource::GetBaseline3Work ( );
__declspec(implementation_key(1340)) void Resource::PutBaseline3Work ( const _variant_t & retval );
__declspec(implementation_key(1341)) _variant_t Resource::GetBaseline3Cost ( );
__declspec(implementation_key(1342)) void Resource::PutBaseline3Cost ( const _variant_t & retval );
__declspec(implementation_key(1343)) _variant_t Resource::GetBaseline4Work ( );
__declspec(implementation_key(1344)) void Resource::PutBaseline4Work ( const _variant_t & retval );
__declspec(implementation_key(1345)) _variant_t Resource::GetBaseline4Cost ( );
__declspec(implementation_key(1346)) void Resource::PutBaseline4Cost ( const _variant_t & retval );
__declspec(implementation_key(1347)) _variant_t Resource::GetBaseline5Work ( );
__declspec(implementation_key(1348)) void Resource::PutBaseline5Work ( const _variant_t & retval );
__declspec(implementation_key(1349)) _variant_t Resource::GetBaseline5Cost ( );
__declspec(implementation_key(1350)) void Resource::PutBaseline5Cost ( const _variant_t & retval );
__declspec(implementation_key(1351)) _variant_t Resource::GetBaseline6Work ( );
__declspec(implementation_key(1352)) void Resource::PutBaseline6Work ( const _variant_t & retval );
__declspec(implementation_key(1353)) _variant_t Resource::GetBaseline6Cost ( );
__declspec(implementation_key(1354)) void Resource::PutBaseline6Cost ( const _variant_t & retval );
__declspec(implementation_key(1355)) _variant_t Resource::GetBaseline7Work ( );
__declspec(implementation_key(1356)) void Resource::PutBaseline7Work ( const _variant_t & retval );
__declspec(implementation_key(1357)) _variant_t Resource::GetBaseline7Cost ( );
__declspec(implementation_key(1358)) void Resource::PutBaseline7Cost ( const _variant_t & retval );
__declspec(implementation_key(1359)) _variant_t Resource::GetBaseline8Work ( );
__declspec(implementation_key(1360)) void Resource::PutBaseline8Work ( const _variant_t & retval );
__declspec(implementation_key(1361)) _variant_t Resource::GetBaseline8Cost ( );
__declspec(implementation_key(1362)) void Resource::PutBaseline8Cost ( const _variant_t & retval );
__declspec(implementation_key(1363)) _variant_t Resource::GetBaseline9Work ( );
__declspec(implementation_key(1364)) void Resource::PutBaseline9Work ( const _variant_t & retval );
__declspec(implementation_key(1365)) _variant_t Resource::GetBaseline9Cost ( );
__declspec(implementation_key(1366)) void Resource::PutBaseline9Cost ( const _variant_t & retval );
__declspec(implementation_key(1367)) _variant_t Resource::GetBaseline10Work ( );
__declspec(implementation_key(1368)) void Resource::PutBaseline10Work ( const _variant_t & retval );
__declspec(implementation_key(1369)) _variant_t Resource::GetBaseline10Cost ( );
__declspec(implementation_key(1370)) void Resource::PutBaseline10Cost ( const _variant_t & retval );
__declspec(implementation_key(1371)) long Resource::GetEnterpriseUniqueID ( );
__declspec(implementation_key(1372)) _variant_t Resource::GetEnterpriseCost1 ( );
__declspec(implementation_key(1373)) void Resource::PutEnterpriseCost1 ( const _variant_t & retval );
__declspec(implementation_key(1374)) _variant_t Resource::GetEnterpriseCost2 ( );
__declspec(implementation_key(1375)) void Resource::PutEnterpriseCost2 ( const _variant_t & retval );
__declspec(implementation_key(1376)) _variant_t Resource::GetEnterpriseCost3 ( );
__declspec(implementation_key(1377)) void Resource::PutEnterpriseCost3 ( const _variant_t & retval );
__declspec(implementation_key(1378)) _variant_t Resource::GetEnterpriseCost4 ( );
__declspec(implementation_key(1379)) void Resource::PutEnterpriseCost4 ( const _variant_t & retval );
__declspec(implementation_key(1380)) _variant_t Resource::GetEnterpriseCost5 ( );
__declspec(implementation_key(1381)) void Resource::PutEnterpriseCost5 ( const _variant_t & retval );
__declspec(implementation_key(1382)) _variant_t Resource::GetEnterpriseCost6 ( );
__declspec(implementation_key(1383)) void Resource::PutEnterpriseCost6 ( const _variant_t & retval );
__declspec(implementation_key(1384)) _variant_t Resource::GetEnterpriseCost7 ( );
__declspec(implementation_key(1385)) void Resource::PutEnterpriseCost7 ( const _variant_t & retval );
__declspec(implementation_key(1386)) _variant_t Resource::GetEnterpriseCost8 ( );
__declspec(implementation_key(1387)) void Resource::PutEnterpriseCost8 ( const _variant_t & retval );
__declspec(implementation_key(1388)) _variant_t Resource::GetEnterpriseCost9 ( );
__declspec(implementation_key(1389)) void Resource::PutEnterpriseCost9 ( const _variant_t & retval );
__declspec(implementation_key(1390)) _variant_t Resource::GetEnterpriseCost10 ( );
__declspec(implementation_key(1391)) void Resource::PutEnterpriseCost10 ( const _variant_t & retval );
__declspec(implementation_key(1392)) _variant_t Resource::GetEnterpriseDate1 ( );
__declspec(implementation_key(1393)) void Resource::PutEnterpriseDate1 ( const _variant_t & retval );
__declspec(implementation_key(1394)) _variant_t Resource::GetEnterpriseDate2 ( );
__declspec(implementation_key(1395)) void Resource::PutEnterpriseDate2 ( const _variant_t & retval );
__declspec(implementation_key(1396)) _variant_t Resource::GetEnterpriseDate3 ( );
__declspec(implementation_key(1397)) void Resource::PutEnterpriseDate3 ( const _variant_t & retval );
__declspec(implementation_key(1398)) _variant_t Resource::GetEnterpriseDate4 ( );
__declspec(implementation_key(1399)) void Resource::PutEnterpriseDate4 ( const _variant_t & retval );
__declspec(implementation_key(1400)) _variant_t Resource::GetEnterpriseDate5 ( );
__declspec(implementation_key(1401)) void Resource::PutEnterpriseDate5 ( const _variant_t & retval );
__declspec(implementation_key(1402)) _variant_t Resource::GetEnterpriseDate6 ( );
__declspec(implementation_key(1403)) void Resource::PutEnterpriseDate6 ( const _variant_t & retval );
__declspec(implementation_key(1404)) _variant_t Resource::GetEnterpriseDate7 ( );
__declspec(implementation_key(1405)) void Resource::PutEnterpriseDate7 ( const _variant_t & retval );
__declspec(implementation_key(1406)) _variant_t Resource::GetEnterpriseDate8 ( );
__declspec(implementation_key(1407)) void Resource::PutEnterpriseDate8 ( const _variant_t & retval );
__declspec(implementation_key(1408)) _variant_t Resource::GetEnterpriseDate9 ( );
__declspec(implementation_key(1409)) void Resource::PutEnterpriseDate9 ( const _variant_t & retval );
__declspec(implementation_key(1410)) _variant_t Resource::GetEnterpriseDate10 ( );
__declspec(implementation_key(1411)) void Resource::PutEnterpriseDate10 ( const _variant_t & retval );
__declspec(implementation_key(1412)) _variant_t Resource::GetEnterpriseDate11 ( );
__declspec(implementation_key(1413)) void Resource::PutEnterpriseDate11 ( const _variant_t & retval );
__declspec(implementation_key(1414)) _variant_t Resource::GetEnterpriseDate12 ( );
__declspec(implementation_key(1415)) void Resource::PutEnterpriseDate12 ( const _variant_t & retval );
__declspec(implementation_key(1416)) _variant_t Resource::GetEnterpriseDate13 ( );
__declspec(implementation_key(1417)) void Resource::PutEnterpriseDate13 ( const _variant_t & retval );
__declspec(implementation_key(1418)) _variant_t Resource::GetEnterpriseDate14 ( );
__declspec(implementation_key(1419)) void Resource::PutEnterpriseDate14 ( const _variant_t & retval );
__declspec(implementation_key(1420)) _variant_t Resource::GetEnterpriseDate15 ( );
__declspec(implementation_key(1421)) void Resource::PutEnterpriseDate15 ( const _variant_t & retval );
__declspec(implementation_key(1422)) _variant_t Resource::GetEnterpriseDate16 ( );
__declspec(implementation_key(1423)) void Resource::PutEnterpriseDate16 ( const _variant_t & retval );
__declspec(implementation_key(1424)) _variant_t Resource::GetEnterpriseDate17 ( );
__declspec(implementation_key(1425)) void Resource::PutEnterpriseDate17 ( const _variant_t & retval );
__declspec(implementation_key(1426)) _variant_t Resource::GetEnterpriseDate18 ( );
__declspec(implementation_key(1427)) void Resource::PutEnterpriseDate18 ( const _variant_t & retval );
__declspec(implementation_key(1428)) _variant_t Resource::GetEnterpriseDate19 ( );
__declspec(implementation_key(1429)) void Resource::PutEnterpriseDate19 ( const _variant_t & retval );
__declspec(implementation_key(1430)) _variant_t Resource::GetEnterpriseDate20 ( );
__declspec(implementation_key(1431)) void Resource::PutEnterpriseDate20 ( const _variant_t & retval );
__declspec(implementation_key(1432)) _variant_t Resource::GetEnterpriseDate21 ( );
__declspec(implementation_key(1433)) void Resource::PutEnterpriseDate21 ( const _variant_t & retval );
__declspec(implementation_key(1434)) _variant_t Resource::GetEnterpriseDate22 ( );
__declspec(implementation_key(1435)) void Resource::PutEnterpriseDate22 ( const _variant_t & retval );
__declspec(implementation_key(1436)) _variant_t Resource::GetEnterpriseDate23 ( );
__declspec(implementation_key(1437)) void Resource::PutEnterpriseDate23 ( const _variant_t & retval );
__declspec(implementation_key(1438)) _variant_t Resource::GetEnterpriseDate24 ( );
__declspec(implementation_key(1439)) void Resource::PutEnterpriseDate24 ( const _variant_t & retval );
__declspec(implementation_key(1440)) _variant_t Resource::GetEnterpriseDate25 ( );
__declspec(implementation_key(1441)) void Resource::PutEnterpriseDate25 ( const _variant_t & retval );
__declspec(implementation_key(1442)) _variant_t Resource::GetEnterpriseDate26 ( );
__declspec(implementation_key(1443)) void Resource::PutEnterpriseDate26 ( const _variant_t & retval );
__declspec(implementation_key(1444)) _variant_t Resource::GetEnterpriseDate27 ( );
__declspec(implementation_key(1445)) void Resource::PutEnterpriseDate27 ( const _variant_t & retval );
__declspec(implementation_key(1446)) _variant_t Resource::GetEnterpriseDate28 ( );
__declspec(implementation_key(1447)) void Resource::PutEnterpriseDate28 ( const _variant_t & retval );
__declspec(implementation_key(1448)) _variant_t Resource::GetEnterpriseDate29 ( );
__declspec(implementation_key(1449)) void Resource::PutEnterpriseDate29 ( const _variant_t & retval );
__declspec(implementation_key(1450)) _variant_t Resource::GetEnterpriseDate30 ( );
__declspec(implementation_key(1451)) void Resource::PutEnterpriseDate30 ( const _variant_t & retval );
__declspec(implementation_key(1452)) _variant_t Resource::GetEnterpriseDuration1 ( );
__declspec(implementation_key(1453)) void Resource::PutEnterpriseDuration1 ( const _variant_t & retval );
__declspec(implementation_key(1454)) _variant_t Resource::GetEnterpriseDuration2 ( );
__declspec(implementation_key(1455)) void Resource::PutEnterpriseDuration2 ( const _variant_t & retval );
__declspec(implementation_key(1456)) _variant_t Resource::GetEnterpriseDuration3 ( );
__declspec(implementation_key(1457)) void Resource::PutEnterpriseDuration3 ( const _variant_t & retval );
__declspec(implementation_key(1458)) _variant_t Resource::GetEnterpriseDuration4 ( );
__declspec(implementation_key(1459)) void Resource::PutEnterpriseDuration4 ( const _variant_t & retval );
__declspec(implementation_key(1460)) _variant_t Resource::GetEnterpriseDuration5 ( );
__declspec(implementation_key(1461)) void Resource::PutEnterpriseDuration5 ( const _variant_t & retval );
__declspec(implementation_key(1462)) _variant_t Resource::GetEnterpriseDuration6 ( );
__declspec(implementation_key(1463)) void Resource::PutEnterpriseDuration6 ( const _variant_t & retval );
__declspec(implementation_key(1464)) _variant_t Resource::GetEnterpriseDuration7 ( );
__declspec(implementation_key(1465)) void Resource::PutEnterpriseDuration7 ( const _variant_t & retval );
__declspec(implementation_key(1466)) _variant_t Resource::GetEnterpriseDuration8 ( );
__declspec(implementation_key(1467)) void Resource::PutEnterpriseDuration8 ( const _variant_t & retval );
__declspec(implementation_key(1468)) _variant_t Resource::GetEnterpriseDuration9 ( );
__declspec(implementation_key(1469)) void Resource::PutEnterpriseDuration9 ( const _variant_t & retval );
__declspec(implementation_key(1470)) _variant_t Resource::GetEnterpriseDuration10 ( );
__declspec(implementation_key(1471)) void Resource::PutEnterpriseDuration10 ( const _variant_t & retval );
__declspec(implementation_key(1472)) _variant_t Resource::GetEnterpriseFlag1 ( );
__declspec(implementation_key(1473)) void Resource::PutEnterpriseFlag1 ( const _variant_t & retval );
__declspec(implementation_key(1474)) _variant_t Resource::GetEnterpriseFlag2 ( );
__declspec(implementation_key(1475)) void Resource::PutEnterpriseFlag2 ( const _variant_t & retval );
__declspec(implementation_key(1476)) _variant_t Resource::GetEnterpriseFlag3 ( );
__declspec(implementation_key(1477)) void Resource::PutEnterpriseFlag3 ( const _variant_t & retval );
__declspec(implementation_key(1478)) _variant_t Resource::GetEnterpriseFlag4 ( );
__declspec(implementation_key(1479)) void Resource::PutEnterpriseFlag4 ( const _variant_t & retval );
__declspec(implementation_key(1480)) _variant_t Resource::GetEnterpriseFlag5 ( );
__declspec(implementation_key(1481)) void Resource::PutEnterpriseFlag5 ( const _variant_t & retval );
__declspec(implementation_key(1482)) _variant_t Resource::GetEnterpriseFlag6 ( );
__declspec(implementation_key(1483)) void Resource::PutEnterpriseFlag6 ( const _variant_t & retval );
__declspec(implementation_key(1484)) _variant_t Resource::GetEnterpriseFlag7 ( );
__declspec(implementation_key(1485)) void Resource::PutEnterpriseFlag7 ( const _variant_t & retval );
__declspec(implementation_key(1486)) _variant_t Resource::GetEnterpriseFlag8 ( );
__declspec(implementation_key(1487)) void Resource::PutEnterpriseFlag8 ( const _variant_t & retval );
__declspec(implementation_key(1488)) _variant_t Resource::GetEnterpriseFlag9 ( );
__declspec(implementation_key(1489)) void Resource::PutEnterpriseFlag9 ( const _variant_t & retval );
__declspec(implementation_key(1490)) _variant_t Resource::GetEnterpriseFlag10 ( );
__declspec(implementation_key(1491)) void Resource::PutEnterpriseFlag10 ( const _variant_t & retval );
__declspec(implementation_key(1492)) _variant_t Resource::GetEnterpriseFlag11 ( );
__declspec(implementation_key(1493)) void Resource::PutEnterpriseFlag11 ( const _variant_t & retval );
__declspec(implementation_key(1494)) _variant_t Resource::GetEnterpriseFlag12 ( );
__declspec(implementation_key(1495)) void Resource::PutEnterpriseFlag12 ( const _variant_t & retval );
__declspec(implementation_key(1496)) _variant_t Resource::GetEnterpriseFlag13 ( );
__declspec(implementation_key(1497)) void Resource::PutEnterpriseFlag13 ( const _variant_t & retval );
__declspec(implementation_key(1498)) _variant_t Resource::GetEnterpriseFlag14 ( );
__declspec(implementation_key(1499)) void Resource::PutEnterpriseFlag14 ( const _variant_t & retval );
__declspec(implementation_key(1500)) _variant_t Resource::GetEnterpriseFlag15 ( );
__declspec(implementation_key(1501)) void Resource::PutEnterpriseFlag15 ( const _variant_t & retval );
__declspec(implementation_key(1502)) _variant_t Resource::GetEnterpriseFlag16 ( );
__declspec(implementation_key(1503)) void Resource::PutEnterpriseFlag16 ( const _variant_t & retval );
__declspec(implementation_key(1504)) _variant_t Resource::GetEnterpriseFlag17 ( );
__declspec(implementation_key(1505)) void Resource::PutEnterpriseFlag17 ( const _variant_t & retval );
__declspec(implementation_key(1506)) _variant_t Resource::GetEnterpriseFlag18 ( );
__declspec(implementation_key(1507)) void Resource::PutEnterpriseFlag18 ( const _variant_t & retval );
__declspec(implementation_key(1508)) _variant_t Resource::GetEnterpriseFlag19 ( );
__declspec(implementation_key(1509)) void Resource::PutEnterpriseFlag19 ( const _variant_t & retval );
__declspec(implementation_key(1510)) _variant_t Resource::GetEnterpriseFlag20 ( );
__declspec(implementation_key(1511)) void Resource::PutEnterpriseFlag20 ( const _variant_t & retval );
__declspec(implementation_key(1512)) double Resource::GetEnterpriseNumber1 ( );
__declspec(implementation_key(1513)) void Resource::PutEnterpriseNumber1 ( double retval );
__declspec(implementation_key(1514)) double Resource::GetEnterpriseNumber2 ( );
__declspec(implementation_key(1515)) void Resource::PutEnterpriseNumber2 ( double retval );
__declspec(implementation_key(1516)) double Resource::GetEnterpriseNumber3 ( );
__declspec(implementation_key(1517)) void Resource::PutEnterpriseNumber3 ( double retval );
__declspec(implementation_key(1518)) double Resource::GetEnterpriseNumber4 ( );
__declspec(implementation_key(1519)) void Resource::PutEnterpriseNumber4 ( double retval );
__declspec(implementation_key(1520)) double Resource::GetEnterpriseNumber5 ( );
__declspec(implementation_key(1521)) void Resource::PutEnterpriseNumber5 ( double retval );
__declspec(implementation_key(1522)) double Resource::GetEnterpriseNumber6 ( );
__declspec(implementation_key(1523)) void Resource::PutEnterpriseNumber6 ( double retval );
__declspec(implementation_key(1524)) double Resource::GetEnterpriseNumber7 ( );
__declspec(implementation_key(1525)) void Resource::PutEnterpriseNumber7 ( double retval );
__declspec(implementation_key(1526)) double Resource::GetEnterpriseNumber8 ( );
__declspec(implementation_key(1527)) void Resource::PutEnterpriseNumber8 ( double retval );
__declspec(implementation_key(1528)) double Resource::GetEnterpriseNumber9 ( );
__declspec(implementation_key(1529)) void Resource::PutEnterpriseNumber9 ( double retval );
__declspec(implementation_key(1530)) double Resource::GetEnterpriseNumber10 ( );
__declspec(implementation_key(1531)) void Resource::PutEnterpriseNumber10 ( double retval );
__declspec(implementation_key(1532)) double Resource::GetEnterpriseNumber11 ( );
__declspec(implementation_key(1533)) void Resource::PutEnterpriseNumber11 ( double retval );
__declspec(implementation_key(1534)) double Resource::GetEnterpriseNumber12 ( );
__declspec(implementation_key(1535)) void Resource::PutEnterpriseNumber12 ( double retval );
__declspec(implementation_key(1536)) double Resource::GetEnterpriseNumber13 ( );
__declspec(implementation_key(1537)) void Resource::PutEnterpriseNumber13 ( double retval );
__declspec(implementation_key(1538)) double Resource::GetEnterpriseNumber14 ( );
__declspec(implementation_key(1539)) void Resource::PutEnterpriseNumber14 ( double retval );
__declspec(implementation_key(1540)) double Resource::GetEnterpriseNumber15 ( );
__declspec(implementation_key(1541)) void Resource::PutEnterpriseNumber15 ( double retval );
__declspec(implementation_key(1542)) double Resource::GetEnterpriseNumber16 ( );
__declspec(implementation_key(1543)) void Resource::PutEnterpriseNumber16 ( double retval );
__declspec(implementation_key(1544)) double Resource::GetEnterpriseNumber17 ( );
__declspec(implementation_key(1545)) void Resource::PutEnterpriseNumber17 ( double retval );
__declspec(implementation_key(1546)) double Resource::GetEnterpriseNumber18 ( );
__declspec(implementation_key(1547)) void Resource::PutEnterpriseNumber18 ( double retval );
__declspec(implementation_key(1548)) double Resource::GetEnterpriseNumber19 ( );
__declspec(implementation_key(1549)) void Resource::PutEnterpriseNumber19 ( double retval );
__declspec(implementation_key(1550)) double Resource::GetEnterpriseNumber20 ( );
__declspec(implementation_key(1551)) void Resource::PutEnterpriseNumber20 ( double retval );
__declspec(implementation_key(1552)) double Resource::GetEnterpriseNumber21 ( );
__declspec(implementation_key(1553)) void Resource::PutEnterpriseNumber21 ( double retval );
__declspec(implementation_key(1554)) double Resource::GetEnterpriseNumber22 ( );
__declspec(implementation_key(1555)) void Resource::PutEnterpriseNumber22 ( double retval );
__declspec(implementation_key(1556)) double Resource::GetEnterpriseNumber23 ( );
__declspec(implementation_key(1557)) void Resource::PutEnterpriseNumber23 ( double retval );
__declspec(implementation_key(1558)) double Resource::GetEnterpriseNumber24 ( );
__declspec(implementation_key(1559)) void Resource::PutEnterpriseNumber24 ( double retval );
__declspec(implementation_key(1560)) double Resource::GetEnterpriseNumber25 ( );
__declspec(implementation_key(1561)) void Resource::PutEnterpriseNumber25 ( double retval );
__declspec(implementation_key(1562)) double Resource::GetEnterpriseNumber26 ( );
__declspec(implementation_key(1563)) void Resource::PutEnterpriseNumber26 ( double retval );
__declspec(implementation_key(1564)) double Resource::GetEnterpriseNumber27 ( );
__declspec(implementation_key(1565)) void Resource::PutEnterpriseNumber27 ( double retval );
__declspec(implementation_key(1566)) double Resource::GetEnterpriseNumber28 ( );
__declspec(implementation_key(1567)) void Resource::PutEnterpriseNumber28 ( double retval );
__declspec(implementation_key(1568)) double Resource::GetEnterpriseNumber29 ( );
__declspec(implementation_key(1569)) void Resource::PutEnterpriseNumber29 ( double retval );
__declspec(implementation_key(1570)) double Resource::GetEnterpriseNumber30 ( );
__declspec(implementation_key(1571)) void Resource::PutEnterpriseNumber30 ( double retval );
__declspec(implementation_key(1572)) double Resource::GetEnterpriseNumber31 ( );
__declspec(implementation_key(1573)) void Resource::PutEnterpriseNumber31 ( double retval );
__declspec(implementation_key(1574)) double Resource::GetEnterpriseNumber32 ( );
__declspec(implementation_key(1575)) void Resource::PutEnterpriseNumber32 ( double retval );
__declspec(implementation_key(1576)) double Resource::GetEnterpriseNumber33 ( );
__declspec(implementation_key(1577)) void Resource::PutEnterpriseNumber33 ( double retval );
__declspec(implementation_key(1578)) double Resource::GetEnterpriseNumber34 ( );
__declspec(implementation_key(1579)) void Resource::PutEnterpriseNumber34 ( double retval );
__declspec(implementation_key(1580)) double Resource::GetEnterpriseNumber35 ( );
__declspec(implementation_key(1581)) void Resource::PutEnterpriseNumber35 ( double retval );
__declspec(implementation_key(1582)) double Resource::GetEnterpriseNumber36 ( );
__declspec(implementation_key(1583)) void Resource::PutEnterpriseNumber36 ( double retval );
__declspec(implementation_key(1584)) double Resource::GetEnterpriseNumber37 ( );
__declspec(implementation_key(1585)) void Resource::PutEnterpriseNumber37 ( double retval );
__declspec(implementation_key(1586)) double Resource::GetEnterpriseNumber38 ( );
__declspec(implementation_key(1587)) void Resource::PutEnterpriseNumber38 ( double retval );
__declspec(implementation_key(1588)) double Resource::GetEnterpriseNumber39 ( );
__declspec(implementation_key(1589)) void Resource::PutEnterpriseNumber39 ( double retval );
__declspec(implementation_key(1590)) double Resource::GetEnterpriseNumber40 ( );
__declspec(implementation_key(1591)) void Resource::PutEnterpriseNumber40 ( double retval );
__declspec(implementation_key(1592)) _bstr_t Resource::GetEnterpriseOutlineCode1 ( );
__declspec(implementation_key(1593)) void Resource::PutEnterpriseOutlineCode1 ( _bstr_t retval );
__declspec(implementation_key(1594)) _bstr_t Resource::GetEnterpriseOutlineCode2 ( );
__declspec(implementation_key(1595)) void Resource::PutEnterpriseOutlineCode2 ( _bstr_t retval );
__declspec(implementation_key(1596)) _bstr_t Resource::GetEnterpriseOutlineCode3 ( );
__declspec(implementation_key(1597)) void Resource::PutEnterpriseOutlineCode3 ( _bstr_t retval );
__declspec(implementation_key(1598)) _bstr_t Resource::GetEnterpriseOutlineCode4 ( );
__declspec(implementation_key(1599)) void Resource::PutEnterpriseOutlineCode4 ( _bstr_t retval );
__declspec(implementation_key(1600)) _bstr_t Resource::GetEnterpriseOutlineCode5 ( );
__declspec(implementation_key(1601)) void Resource::PutEnterpriseOutlineCode5 ( _bstr_t retval );
__declspec(implementation_key(1602)) _bstr_t Resource::GetEnterpriseOutlineCode6 ( );
__declspec(implementation_key(1603)) void Resource::PutEnterpriseOutlineCode6 ( _bstr_t retval );
__declspec(implementation_key(1604)) _bstr_t Resource::GetEnterpriseOutlineCode7 ( );
__declspec(implementation_key(1605)) void Resource::PutEnterpriseOutlineCode7 ( _bstr_t retval );
__declspec(implementation_key(1606)) _bstr_t Resource::GetEnterpriseOutlineCode8 ( );
__declspec(implementation_key(1607)) void Resource::PutEnterpriseOutlineCode8 ( _bstr_t retval );
__declspec(implementation_key(1608)) _bstr_t Resource::GetEnterpriseOutlineCode9 ( );
__declspec(implementation_key(1609)) void Resource::PutEnterpriseOutlineCode9 ( _bstr_t retval );
__declspec(implementation_key(1610)) _bstr_t Resource::GetEnterpriseOutlineCode10 ( );
__declspec(implementation_key(1611)) void Resource::PutEnterpriseOutlineCode10 ( _bstr_t retval );
__declspec(implementation_key(1612)) _bstr_t Resource::GetEnterpriseOutlineCode11 ( );
__declspec(implementation_key(1613)) void Resource::PutEnterpriseOutlineCode11 ( _bstr_t retval );
__declspec(implementation_key(1614)) _bstr_t Resource::GetEnterpriseOutlineCode12 ( );
__declspec(implementation_key(1615)) void Resource::PutEnterpriseOutlineCode12 ( _bstr_t retval );
__declspec(implementation_key(1616)) _bstr_t Resource::GetEnterpriseOutlineCode13 ( );
__declspec(implementation_key(1617)) void Resource::PutEnterpriseOutlineCode13 ( _bstr_t retval );
__declspec(implementation_key(1618)) _bstr_t Resource::GetEnterpriseOutlineCode14 ( );
__declspec(implementation_key(1619)) void Resource::PutEnterpriseOutlineCode14 ( _bstr_t retval );
__declspec(implementation_key(1620)) _bstr_t Resource::GetEnterpriseOutlineCode15 ( );
__declspec(implementation_key(1621)) void Resource::PutEnterpriseOutlineCode15 ( _bstr_t retval );
__declspec(implementation_key(1622)) _bstr_t Resource::GetEnterpriseOutlineCode16 ( );
__declspec(implementation_key(1623)) void Resource::PutEnterpriseOutlineCode16 ( _bstr_t retval );
__declspec(implementation_key(1624)) _bstr_t Resource::GetEnterpriseOutlineCode17 ( );
__declspec(implementation_key(1625)) void Resource::PutEnterpriseOutlineCode17 ( _bstr_t retval );
__declspec(implementation_key(1626)) _bstr_t Resource::GetEnterpriseOutlineCode18 ( );
__declspec(implementation_key(1627)) void Resource::PutEnterpriseOutlineCode18 ( _bstr_t retval );
__declspec(implementation_key(1628)) _bstr_t Resource::GetEnterpriseOutlineCode19 ( );
__declspec(implementation_key(1629)) void Resource::PutEnterpriseOutlineCode19 ( _bstr_t retval );
__declspec(implementation_key(1630)) _bstr_t Resource::GetEnterpriseOutlineCode20 ( );
__declspec(implementation_key(1631)) void Resource::PutEnterpriseOutlineCode20 ( _bstr_t retval );
__declspec(implementation_key(1632)) _bstr_t Resource::GetEnterpriseOutlineCode21 ( );
__declspec(implementation_key(1633)) void Resource::PutEnterpriseOutlineCode21 ( _bstr_t retval );
__declspec(implementation_key(1634)) _bstr_t Resource::GetEnterpriseOutlineCode22 ( );
__declspec(implementation_key(1635)) void Resource::PutEnterpriseOutlineCode22 ( _bstr_t retval );
__declspec(implementation_key(1636)) _bstr_t Resource::GetEnterpriseOutlineCode23 ( );
__declspec(implementation_key(1637)) void Resource::PutEnterpriseOutlineCode23 ( _bstr_t retval );
__declspec(implementation_key(1638)) _bstr_t Resource::GetEnterpriseOutlineCode24 ( );
__declspec(implementation_key(1639)) void Resource::PutEnterpriseOutlineCode24 ( _bstr_t retval );
__declspec(implementation_key(1640)) _bstr_t Resource::GetEnterpriseOutlineCode25 ( );
__declspec(implementation_key(1641)) void Resource::PutEnterpriseOutlineCode25 ( _bstr_t retval );
__declspec(implementation_key(1642)) _bstr_t Resource::GetEnterpriseOutlineCode26 ( );
__declspec(implementation_key(1643)) void Resource::PutEnterpriseOutlineCode26 ( _bstr_t retval );
__declspec(implementation_key(1644)) _bstr_t Resource::GetEnterpriseOutlineCode27 ( );
__declspec(implementation_key(1645)) void Resource::PutEnterpriseOutlineCode27 ( _bstr_t retval );
__declspec(implementation_key(1646)) _bstr_t Resource::GetEnterpriseOutlineCode28 ( );
__declspec(implementation_key(1647)) void Resource::PutEnterpriseOutlineCode28 ( _bstr_t retval );
__declspec(implementation_key(1648)) _bstr_t Resource::GetEnterpriseOutlineCode29 ( );
__declspec(implementation_key(1649)) void Resource::PutEnterpriseOutlineCode29 ( _bstr_t retval );
__declspec(implementation_key(1650)) _bstr_t Resource::GetEnterpriseRBS ( );
__declspec(implementation_key(1651)) void Resource::PutEnterpriseRBS ( _bstr_t retval );
__declspec(implementation_key(1652)) _bstr_t Resource::GetEnterpriseText1 ( );
__declspec(implementation_key(1653)) void Resource::PutEnterpriseText1 ( _bstr_t retval );
__declspec(implementation_key(1654)) _bstr_t Resource::GetEnterpriseText2 ( );
__declspec(implementation_key(1655)) void Resource::PutEnterpriseText2 ( _bstr_t retval );
__declspec(implementation_key(1656)) _bstr_t Resource::GetEnterpriseText3 ( );
__declspec(implementation_key(1657)) void Resource::PutEnterpriseText3 ( _bstr_t retval );
__declspec(implementation_key(1658)) _bstr_t Resource::GetEnterpriseText4 ( );
__declspec(implementation_key(1659)) void Resource::PutEnterpriseText4 ( _bstr_t retval );
__declspec(implementation_key(1660)) _bstr_t Resource::GetEnterpriseText5 ( );
__declspec(implementation_key(1661)) void Resource::PutEnterpriseText5 ( _bstr_t retval );
__declspec(implementation_key(1662)) _bstr_t Resource::GetEnterpriseText6 ( );
__declspec(implementation_key(1663)) void Resource::PutEnterpriseText6 ( _bstr_t retval );
__declspec(implementation_key(1664)) _bstr_t Resource::GetEnterpriseText7 ( );
__declspec(implementation_key(1665)) void Resource::PutEnterpriseText7 ( _bstr_t retval );
__declspec(implementation_key(1666)) _bstr_t Resource::GetEnterpriseText8 ( );
__declspec(implementation_key(1667)) void Resource::PutEnterpriseText8 ( _bstr_t retval );
__declspec(implementation_key(1668)) _bstr_t Resource::GetEnterpriseText9 ( );
__declspec(implementation_key(1669)) void Resource::PutEnterpriseText9 ( _bstr_t retval );
__declspec(implementation_key(1670)) _bstr_t Resource::GetEnterpriseText10 ( );
__declspec(implementation_key(1671)) void Resource::PutEnterpriseText10 ( _bstr_t retval );
__declspec(implementation_key(1672)) _bstr_t Resource::GetEnterpriseText11 ( );
__declspec(implementation_key(1673)) void Resource::PutEnterpriseText11 ( _bstr_t retval );
__declspec(implementation_key(1674)) _bstr_t Resource::GetEnterpriseText12 ( );
__declspec(implementation_key(1675)) void Resource::PutEnterpriseText12 ( _bstr_t retval );
__declspec(implementation_key(1676)) _bstr_t Resource::GetEnterpriseText13 ( );
__declspec(implementation_key(1677)) void Resource::PutEnterpriseText13 ( _bstr_t retval );
__declspec(implementation_key(1678)) _bstr_t Resource::GetEnterpriseText14 ( );
__declspec(implementation_key(1679)) void Resource::PutEnterpriseText14 ( _bstr_t retval );
__declspec(implementation_key(1680)) _bstr_t Resource::GetEnterpriseText15 ( );
__declspec(implementation_key(1681)) void Resource::PutEnterpriseText15 ( _bstr_t retval );
__declspec(implementation_key(1682)) _bstr_t Resource::GetEnterpriseText16 ( );
__declspec(implementation_key(1683)) void Resource::PutEnterpriseText16 ( _bstr_t retval );
__declspec(implementation_key(1684)) _bstr_t Resource::GetEnterpriseText17 ( );
__declspec(implementation_key(1685)) void Resource::PutEnterpriseText17 ( _bstr_t retval );
__declspec(implementation_key(1686)) _bstr_t Resource::GetEnterpriseText18 ( );
__declspec(implementation_key(1687)) void Resource::PutEnterpriseText18 ( _bstr_t retval );
__declspec(implementation_key(1688)) _bstr_t Resource::GetEnterpriseText19 ( );
__declspec(implementation_key(1689)) void Resource::PutEnterpriseText19 ( _bstr_t retval );
__declspec(implementation_key(1690)) _bstr_t Resource::GetEnterpriseText20 ( );
__declspec(implementation_key(1691)) void Resource::PutEnterpriseText20 ( _bstr_t retval );
__declspec(implementation_key(1692)) _bstr_t Resource::GetEnterpriseText21 ( );
__declspec(implementation_key(1693)) void Resource::PutEnterpriseText21 ( _bstr_t retval );
__declspec(implementation_key(1694)) _bstr_t Resource::GetEnterpriseText22 ( );
__declspec(implementation_key(1695)) void Resource::PutEnterpriseText22 ( _bstr_t retval );
__declspec(implementation_key(1696)) _bstr_t Resource::GetEnterpriseText23 ( );
__declspec(implementation_key(1697)) void Resource::PutEnterpriseText23 ( _bstr_t retval );
__declspec(implementation_key(1698)) _bstr_t Resource::GetEnterpriseText24 ( );
__declspec(implementation_key(1699)) void Resource::PutEnterpriseText24 ( _bstr_t retval );
__declspec(implementation_key(1700)) _bstr_t Resource::GetEnterpriseText25 ( );
__declspec(implementation_key(1701)) void Resource::PutEnterpriseText25 ( _bstr_t retval );
__declspec(implementation_key(1702)) _bstr_t Resource::GetEnterpriseText26 ( );
__declspec(implementation_key(1703)) void Resource::PutEnterpriseText26 ( _bstr_t retval );
__declspec(implementation_key(1704)) _bstr_t Resource::GetEnterpriseText27 ( );
__declspec(implementation_key(1705)) void Resource::PutEnterpriseText27 ( _bstr_t retval );
__declspec(implementation_key(1706)) _bstr_t Resource::GetEnterpriseText28 ( );
__declspec(implementation_key(1707)) void Resource::PutEnterpriseText28 ( _bstr_t retval );
__declspec(implementation_key(1708)) _bstr_t Resource::GetEnterpriseText29 ( );
__declspec(implementation_key(1709)) void Resource::PutEnterpriseText29 ( _bstr_t retval );
__declspec(implementation_key(1710)) _bstr_t Resource::GetEnterpriseText30 ( );
__declspec(implementation_key(1711)) void Resource::PutEnterpriseText30 ( _bstr_t retval );
__declspec(implementation_key(1712)) _bstr_t Resource::GetEnterpriseText31 ( );
__declspec(implementation_key(1713)) void Resource::PutEnterpriseText31 ( _bstr_t retval );
__declspec(implementation_key(1714)) _bstr_t Resource::GetEnterpriseText32 ( );
__declspec(implementation_key(1715)) void Resource::PutEnterpriseText32 ( _bstr_t retval );
__declspec(implementation_key(1716)) _bstr_t Resource::GetEnterpriseText33 ( );
__declspec(implementation_key(1717)) void Resource::PutEnterpriseText33 ( _bstr_t retval );
__declspec(implementation_key(1718)) _bstr_t Resource::GetEnterpriseText34 ( );
__declspec(implementation_key(1719)) void Resource::PutEnterpriseText34 ( _bstr_t retval );
__declspec(implementation_key(1720)) _bstr_t Resource::GetEnterpriseText35 ( );
__declspec(implementation_key(1721)) void Resource::PutEnterpriseText35 ( _bstr_t retval );
__declspec(implementation_key(1722)) _bstr_t Resource::GetEnterpriseText36 ( );
__declspec(implementation_key(1723)) void Resource::PutEnterpriseText36 ( _bstr_t retval );
__declspec(implementation_key(1724)) _bstr_t Resource::GetEnterpriseText37 ( );
__declspec(implementation_key(1725)) void Resource::PutEnterpriseText37 ( _bstr_t retval );
__declspec(implementation_key(1726)) _bstr_t Resource::GetEnterpriseText38 ( );
__declspec(implementation_key(1727)) void Resource::PutEnterpriseText38 ( _bstr_t retval );
__declspec(implementation_key(1728)) _bstr_t Resource::GetEnterpriseText39 ( );
__declspec(implementation_key(1729)) void Resource::PutEnterpriseText39 ( _bstr_t retval );
__declspec(implementation_key(1730)) _bstr_t Resource::GetEnterpriseText40 ( );
__declspec(implementation_key(1731)) void Resource::PutEnterpriseText40 ( _bstr_t retval );
__declspec(implementation_key(1732)) _variant_t Resource::GetEnterpriseGeneric ( );
__declspec(implementation_key(1733)) void Resource::PutEnterpriseGeneric ( const _variant_t & retval );
__declspec(implementation_key(1734)) _variant_t Resource::GetEnterpriseBaseCalendar ( );
__declspec(implementation_key(1735)) _variant_t Resource::GetEnterpriseRequiredValues ( );
__declspec(implementation_key(1736)) _variant_t Resource::GetEnterpriseNameUsed ( );
__declspec(implementation_key(1737)) _variant_t Resource::GetEnterprise ( );
__declspec(implementation_key(1738)) _variant_t Resource::GetEnterpriseIsCheckedOut ( );
__declspec(implementation_key(1739)) _bstr_t Resource::GetEnterpriseCheckedOutBy ( );
__declspec(implementation_key(1740)) _variant_t Resource::GetEnterpriseLastModifiedDate ( );
__declspec(implementation_key(1741)) _variant_t Resource::GetEnterpriseInactive ( );
__declspec(implementation_key(1742)) void Resource::PutEnterpriseInactive ( const _variant_t & retval );
__declspec(implementation_key(1743)) VARIANT_BOOL Resource::EnterpriseTeamMember ( IDispatch * Project );
__declspec(implementation_key(1744)) _bstr_t Calendar::GetName ( );
__declspec(implementation_key(1745)) void Calendar::PutName ( _bstr_t retval );
__declspec(implementation_key(1746)) IDispatchPtr Calendar::GetParent ( );
__declspec(implementation_key(1747)) _MSProjectPtr Calendar::GetApplication ( );
__declspec(implementation_key(1748)) PeriodPtr Calendar::Period ( const _variant_t & Start, const _variant_t & Finish );
__declspec(implementation_key(1749)) YearsPtr Calendar::GetYears ( );
__declspec(implementation_key(1750)) WeekDaysPtr Calendar::GetWeekDays ( );
__declspec(implementation_key(1751)) HRESULT Calendar::Reset ( );
__declspec(implementation_key(1752)) CalendarPtr Calendar::GetBaseCalendar ( );
__declspec(implementation_key(1753)) HRESULT Calendar::Delete ( );
__declspec(implementation_key(1754)) long Calendar::GetIndex ( );
__declspec(implementation_key(1755)) _variant_t Calendar::GetEnterprise ( );
__declspec(implementation_key(1756)) long Assignment::GetUniqueID ( );
__declspec(implementation_key(1757)) long Assignment::GetTaskUniqueID ( );
__declspec(implementation_key(1758)) void Assignment::PutTaskUniqueID ( long retval );
__declspec(implementation_key(1759)) long Assignment::GetResourceUniqueID ( );
__declspec(implementation_key(1760)) void Assignment::PutResourceUniqueID ( long retval );
__declspec(implementation_key(1761)) long Assignment::GetTaskID ( );
__declspec(implementation_key(1762)) void Assignment::PutTaskID ( long retval );
__declspec(implementation_key(1763)) long Assignment::GetResourceID ( );
__declspec(implementation_key(1764)) void Assignment::PutResourceID ( long retval );
__declspec(implementation_key(1765)) _bstr_t Assignment::GetTaskName ( );
__declspec(implementation_key(1766)) void Assignment::PutTaskName ( _bstr_t retval );
__declspec(implementation_key(1767)) _bstr_t Assignment::GetResourceName ( );
__declspec(implementation_key(1768)) void Assignment::PutResourceName ( _bstr_t retval );
__declspec(implementation_key(1769)) _variant_t Assignment::GetUnits ( );
__declspec(implementation_key(1770)) void Assignment::PutUnits ( const _variant_t & retval );
__declspec(implementation_key(1771)) _variant_t Assignment::GetWork ( );
__declspec(implementation_key(1772)) void Assignment::PutWork ( const _variant_t & retval );
__declspec(implementation_key(1773)) _variant_t Assignment::GetOvertimeWork ( );
__declspec(implementation_key(1774)) void Assignment::PutOvertimeWork ( const _variant_t & retval );
__declspec(implementation_key(1775)) _variant_t Assignment::GetActualWork ( );
__declspec(implementation_key(1776)) void Assignment::PutActualWork ( const _variant_t & retval );
__declspec(implementation_key(1777)) _variant_t Assignment::GetRegularWork ( );
__declspec(implementation_key(1778)) void Assignment::PutRegularWork ( const _variant_t & retval );
__declspec(implementation_key(1779)) _variant_t Assignment::GetRemainingWork ( );
__declspec(implementation_key(1780)) void Assignment::PutRemainingWork ( const _variant_t & retval );
__declspec(implementation_key(1781)) _variant_t Assignment::GetActualOvertimeWork ( );
__declspec(implementation_key(1782)) void Assignment::PutActualOvertimeWork ( const _variant_t & retval );
__declspec(implementation_key(1783)) _variant_t Assignment::GetRemainingOvertimeWork ( );
__declspec(implementation_key(1784)) void Assignment::PutRemainingOvertimeWork ( const _variant_t & retval );
__declspec(implementation_key(1785)) _variant_t Assignment::GetBaselineWork ( );
__declspec(implementation_key(1786)) void Assignment::PutBaselineWork ( const _variant_t & retval );
__declspec(implementation_key(1787)) _variant_t Assignment::GetPeak ( );
__declspec(implementation_key(1788)) _variant_t Assignment::GetStart ( );
__declspec(implementation_key(1789)) void Assignment::PutStart ( const _variant_t & retval );
__declspec(implementation_key(1790)) _variant_t Assignment::GetFinish ( );
__declspec(implementation_key(1791)) void Assignment::PutFinish ( const _variant_t & retval );
__declspec(implementation_key(1792)) _variant_t Assignment::GetActualStart ( );
__declspec(implementation_key(1793)) void Assignment::PutActualStart ( const _variant_t & retval );
__declspec(implementation_key(1794)) _variant_t Assignment::GetActualFinish ( );
__declspec(implementation_key(1795)) void Assignment::PutActualFinish ( const _variant_t & retval );
__declspec(implementation_key(1796)) _variant_t Assignment::GetDelay ( );
__declspec(implementation_key(1797)) void Assignment::PutDelay ( const _variant_t & retval );
__declspec(implementation_key(1798)) _variant_t Assignment::GetCost ( );
__declspec(implementation_key(1799)) void Assignment::PutCost ( const _variant_t & retval );
__declspec(implementation_key(1800)) _variant_t Assignment::GetOvertimeCost ( );
__declspec(implementation_key(1801)) _variant_t Assignment::GetActualCost ( );
__declspec(implementation_key(1802)) void Assignment::PutActualCost ( const _variant_t & retval );
__declspec(implementation_key(1803)) _variant_t Assignment::GetRemainingCost ( );
__declspec(implementation_key(1804)) _variant_t Assignment::GetActualOvertimeCost ( );
__declspec(implementation_key(1805)) _variant_t Assignment::GetRemainingOvertimeCost ( );
__declspec(implementation_key(1806)) _variant_t Assignment::GetBaselineCost ( );
__declspec(implementation_key(1807)) void Assignment::PutBaselineCost ( const _variant_t & retval );
__declspec(implementation_key(1808)) _variant_t Assignment::GetBCWS ( );
__declspec(implementation_key(1809)) _variant_t Assignment::GetBCWP ( );
__declspec(implementation_key(1810)) _variant_t Assignment::GetACWP ( );
__declspec(implementation_key(1811)) _variant_t Assignment::GetSV ( );
__declspec(implementation_key(1812)) _variant_t Assignment::GetCostVariance ( );
__declspec(implementation_key(1813)) enum PjWorkContourType Assignment::GetWorkContour ( );
__declspec(implementation_key(1814)) void Assignment::PutWorkContour ( enum PjWorkContourType retval );
__declspec(implementation_key(1815)) _variant_t Assignment::GetPercentWorkComplete ( );
__declspec(implementation_key(1816)) void Assignment::PutPercentWorkComplete ( const _variant_t & retval );
__declspec(implementation_key(1817)) _bstr_t Assignment::GetProject ( );
__declspec(implementation_key(1818)) _bstr_t Assignment::GetNotes ( );
__declspec(implementation_key(1819)) void Assignment::PutNotes ( _bstr_t retval );
__declspec(implementation_key(1820)) _variant_t Assignment::GetConfirmed ( );
__declspec(implementation_key(1821)) void Assignment::PutConfirmed ( const _variant_t & retval );
__declspec(implementation_key(1822)) _variant_t Assignment::GetResponsePending ( );
__declspec(implementation_key(1823)) void Assignment::PutResponsePending ( const _variant_t & retval );
__declspec(implementation_key(1824)) _variant_t Assignment::GetUpdateNeeded ( );
__declspec(implementation_key(1825)) _variant_t Assignment::GetTeamStatusPending ( );
__declspec(implementation_key(1826)) void Assignment::PutTeamStatusPending ( const _variant_t & retval );
__declspec(implementation_key(1827)) _variant_t Assignment::GetCostRateTable ( );
__declspec(implementation_key(1828)) void Assignment::PutCostRateTable ( const _variant_t & retval );
__declspec(implementation_key(1829)) IDispatchPtr Assignment::GetParent ( );
__declspec(implementation_key(1830)) _MSProjectPtr Assignment::GetApplication ( );
__declspec(implementation_key(1831)) _bstr_t Assignment::GetText1 ( );
__declspec(implementation_key(1832)) void Assignment::PutText1 ( _bstr_t retval );
__declspec(implementation_key(1833)) _bstr_t Assignment::GetText2 ( );
__declspec(implementation_key(1834)) void Assignment::PutText2 ( _bstr_t retval );
__declspec(implementation_key(1835)) _bstr_t Assignment::GetText3 ( );
__declspec(implementation_key(1836)) void Assignment::PutText3 ( _bstr_t retval );
__declspec(implementation_key(1837)) _bstr_t Assignment::GetText4 ( );
__declspec(implementation_key(1838)) void Assignment::PutText4 ( _bstr_t retval );
__declspec(implementation_key(1839)) _bstr_t Assignment::GetText5 ( );
__declspec(implementation_key(1840)) void Assignment::PutText5 ( _bstr_t retval );
__declspec(implementation_key(1841)) _bstr_t Assignment::GetText6 ( );
__declspec(implementation_key(1842)) void Assignment::PutText6 ( _bstr_t retval );
__declspec(implementation_key(1843)) _bstr_t Assignment::GetText7 ( );
__declspec(implementation_key(1844)) void Assignment::PutText7 ( _bstr_t retval );
__declspec(implementation_key(1845)) _bstr_t Assignment::GetText8 ( );
__declspec(implementation_key(1846)) void Assignment::PutText8 ( _bstr_t retval );
__declspec(implementation_key(1847)) _bstr_t Assignment::GetText9 ( );
__declspec(implementation_key(1848)) void Assignment::PutText9 ( _bstr_t retval );
__declspec(implementation_key(1849)) _bstr_t Assignment::GetText10 ( );
__declspec(implementation_key(1850)) void Assignment::PutText10 ( _bstr_t retval );
__declspec(implementation_key(1851)) _variant_t Assignment::GetStart1 ( );
__declspec(implementation_key(1852)) void Assignment::PutStart1 ( const _variant_t & retval );
__declspec(implementation_key(1853)) _variant_t Assignment::GetStart2 ( );
__declspec(implementation_key(1854)) void Assignment::PutStart2 ( const _variant_t & retval );
__declspec(implementation_key(1855)) _variant_t Assignment::GetStart3 ( );
__declspec(implementation_key(1856)) void Assignment::PutStart3 ( const _variant_t & retval );
__declspec(implementation_key(1857)) _variant_t Assignment::GetStart4 ( );
__declspec(implementation_key(1858)) void Assignment::PutStart4 ( const _variant_t & retval );
__declspec(implementation_key(1859)) _variant_t Assignment::GetStart5 ( );
__declspec(implementation_key(1860)) void Assignment::PutStart5 ( const _variant_t & retval );
__declspec(implementation_key(1861)) _variant_t Assignment::GetFinish1 ( );
__declspec(implementation_key(1862)) void Assignment::PutFinish1 ( const _variant_t & retval );
__declspec(implementation_key(1863)) _variant_t Assignment::GetFinish2 ( );
__declspec(implementation_key(1864)) void Assignment::PutFinish2 ( const _variant_t & retval );
__declspec(implementation_key(1865)) _variant_t Assignment::GetFinish3 ( );
__declspec(implementation_key(1866)) void Assignment::PutFinish3 ( const _variant_t & retval );
__declspec(implementation_key(1867)) _variant_t Assignment::GetFinish4 ( );
__declspec(implementation_key(1868)) void Assignment::PutFinish4 ( const _variant_t & retval );
__declspec(implementation_key(1869)) _variant_t Assignment::GetFinish5 ( );
__declspec(implementation_key(1870)) void Assignment::PutFinish5 ( const _variant_t & retval );
__declspec(implementation_key(1871)) double Assignment::GetNumber1 ( );
__declspec(implementation_key(1872)) void Assignment::PutNumber1 ( double retval );
__declspec(implementation_key(1873)) double Assignment::GetNumber2 ( );
__declspec(implementation_key(1874)) void Assignment::PutNumber2 ( double retval );
__declspec(implementation_key(1875)) double Assignment::GetNumber3 ( );
__declspec(implementation_key(1876)) void Assignment::PutNumber3 ( double retval );
__declspec(implementation_key(1877)) double Assignment::GetNumber4 ( );
__declspec(implementation_key(1878)) void Assignment::PutNumber4 ( double retval );
__declspec(implementation_key(1879)) double Assignment::GetNumber5 ( );
__declspec(implementation_key(1880)) void Assignment::PutNumber5 ( double retval );
__declspec(implementation_key(1881)) _variant_t Assignment::GetDuration1 ( );
__declspec(implementation_key(1882)) void Assignment::PutDuration1 ( const _variant_t & retval );
__declspec(implementation_key(1883)) _variant_t Assignment::GetDuration2 ( );
__declspec(implementation_key(1884)) void Assignment::PutDuration2 ( const _variant_t & retval );
__declspec(implementation_key(1885)) _variant_t Assignment::GetDuration3 ( );
__declspec(implementation_key(1886)) void Assignment::PutDuration3 ( const _variant_t & retval );
__declspec(implementation_key(1887)) _variant_t Assignment::GetCost1 ( );
__declspec(implementation_key(1888)) void Assignment::PutCost1 ( const _variant_t & retval );
__declspec(implementation_key(1889)) _variant_t Assignment::GetCost2 ( );
__declspec(implementation_key(1890)) void Assignment::PutCost2 ( const _variant_t & retval );
__declspec(implementation_key(1891)) _variant_t Assignment::GetCost3 ( );
__declspec(implementation_key(1892)) void Assignment::PutCost3 ( const _variant_t & retval );
__declspec(implementation_key(1893)) _variant_t Assignment::GetFlag10 ( );
__declspec(implementation_key(1894)) void Assignment::PutFlag10 ( const _variant_t & retval );
__declspec(implementation_key(1895)) _variant_t Assignment::GetFlag1 ( );
__declspec(implementation_key(1896)) void Assignment::PutFlag1 ( const _variant_t & retval );
__declspec(implementation_key(1897)) _variant_t Assignment::GetFlag2 ( );
__declspec(implementation_key(1898)) void Assignment::PutFlag2 ( const _variant_t & retval );
__declspec(implementation_key(1899)) _variant_t Assignment::GetFlag3 ( );
__declspec(implementation_key(1900)) void Assignment::PutFlag3 ( const _variant_t & retval );
__declspec(implementation_key(1901)) _variant_t Assignment::GetFlag4 ( );
__declspec(implementation_key(1902)) void Assignment::PutFlag4 ( const _variant_t & retval );
__declspec(implementation_key(1903)) _variant_t Assignment::GetFlag5 ( );
__declspec(implementation_key(1904)) void Assignment::PutFlag5 ( const _variant_t & retval );
__declspec(implementation_key(1905)) _variant_t Assignment::GetFlag6 ( );
__declspec(implementation_key(1906)) void Assignment::PutFlag6 ( const _variant_t & retval );
__declspec(implementation_key(1907)) _variant_t Assignment::GetFlag7 ( );
__declspec(implementation_key(1908)) void Assignment::PutFlag7 ( const _variant_t & retval );
__declspec(implementation_key(1909)) _variant_t Assignment::GetFlag8 ( );
__declspec(implementation_key(1910)) void Assignment::PutFlag8 ( const _variant_t & retval );
__declspec(implementation_key(1911)) _variant_t Assignment::GetFlag9 ( );
__declspec(implementation_key(1912)) void Assignment::PutFlag9 ( const _variant_t & retval );
__declspec(implementation_key(1913)) _variant_t Assignment::GetLinkedFields ( );
__declspec(implementation_key(1914)) _variant_t Assignment::GetOverallocated ( );
__declspec(implementation_key(1915)) HRESULT Assignment::Delete ( );
__declspec(implementation_key(1916)) HRESULT Assignment::AppendNotes ( _bstr_t Value );
__declspec(implementation_key(1917)) TimeScaleValuesPtr Assignment::TimeScaleData ( const _variant_t & StartDate, const _variant_t & EndDate, enum PjAssignmentTimescaledData Type, enum PjTimescaleUnit TimeScaleUnit, long Count );
__declspec(implementation_key(1918)) _bstr_t Assignment::GetTaskSummaryName ( );
__declspec(implementation_key(1919)) _variant_t Assignment::GetLevelingDelay ( );
__declspec(implementation_key(1920)) void Assignment::PutLevelingDelay ( const _variant_t & retval );
__declspec(implementation_key(1921)) _variant_t Assignment::GetBaselineStart ( );
__declspec(implementation_key(1922)) void Assignment::PutBaselineStart ( const _variant_t & retval );
__declspec(implementation_key(1923)) _variant_t Assignment::GetBaselineFinish ( );
__declspec(implementation_key(1924)) void Assignment::PutBaselineFinish ( const _variant_t & retval );
__declspec(implementation_key(1925)) _bstr_t Assignment::GetHyperlink ( );
__declspec(implementation_key(1926)) void Assignment::PutHyperlink ( _bstr_t retval );
__declspec(implementation_key(1927)) _bstr_t Assignment::GetHyperlinkAddress ( );
__declspec(implementation_key(1928)) void Assignment::PutHyperlinkAddress ( _bstr_t retval );
__declspec(implementation_key(1929)) _bstr_t Assignment::GetHyperlinkSubAddress ( );
__declspec(implementation_key(1930)) void Assignment::PutHyperlinkSubAddress ( _bstr_t retval );
__declspec(implementation_key(1931)) _bstr_t Assignment::GetHyperlinkHREF ( );
__declspec(implementation_key(1932)) void Assignment::PutHyperlinkHREF ( _bstr_t retval );
__declspec(implementation_key(1933)) _variant_t Assignment::GetCost4 ( );
__declspec(implementation_key(1934)) void Assignment::PutCost4 ( const _variant_t & retval );
__declspec(implementation_key(1935)) _variant_t Assignment::GetCost5 ( );
__declspec(implementation_key(1936)) void Assignment::PutCost5 ( const _variant_t & retval );
__declspec(implementation_key(1937)) _variant_t Assignment::GetCost6 ( );
__declspec(implementation_key(1938)) void Assignment::PutCost6 ( const _variant_t & retval );
__declspec(implementation_key(1939)) _variant_t Assignment::GetCost7 ( );
__declspec(implementation_key(1940)) void Assignment::PutCost7 ( const _variant_t & retval );
__declspec(implementation_key(1941)) _variant_t Assignment::GetCost8 ( );
__declspec(implementation_key(1942)) void Assignment::PutCost8 ( const _variant_t & retval );
__declspec(implementation_key(1943)) _variant_t Assignment::GetCost9 ( );
__declspec(implementation_key(1944)) void Assignment::PutCost9 ( const _variant_t & retval );
__declspec(implementation_key(1945)) _variant_t Assignment::GetCost10 ( );
__declspec(implementation_key(1946)) void Assignment::PutCost10 ( const _variant_t & retval );
__declspec(implementation_key(1947)) _variant_t Assignment::GetDate1 ( );
__declspec(implementation_key(1948)) void Assignment::PutDate1 ( const _variant_t & retval );
__declspec(implementation_key(1949)) _variant_t Assignment::GetDate2 ( );
__declspec(implementation_key(1950)) void Assignment::PutDate2 ( const _variant_t & retval );
__declspec(implementation_key(1951)) _variant_t Assignment::GetDate3 ( );
__declspec(implementation_key(1952)) void Assignment::PutDate3 ( const _variant_t & retval );
__declspec(implementation_key(1953)) _variant_t Assignment::GetDate4 ( );
__declspec(implementation_key(1954)) void Assignment::PutDate4 ( const _variant_t & retval );
__declspec(implementation_key(1955)) _variant_t Assignment::GetDate5 ( );
__declspec(implementation_key(1956)) void Assignment::PutDate5 ( const _variant_t & retval );
__declspec(implementation_key(1957)) _variant_t Assignment::GetDate6 ( );
__declspec(implementation_key(1958)) void Assignment::PutDate6 ( const _variant_t & retval );
__declspec(implementation_key(1959)) _variant_t Assignment::GetDate7 ( );
__declspec(implementation_key(1960)) void Assignment::PutDate7 ( const _variant_t & retval );
__declspec(implementation_key(1961)) _variant_t Assignment::GetDate8 ( );
__declspec(implementation_key(1962)) void Assignment::PutDate8 ( const _variant_t & retval );
__declspec(implementation_key(1963)) _variant_t Assignment::GetDate9 ( );
__declspec(implementation_key(1964)) void Assignment::PutDate9 ( const _variant_t & retval );
__declspec(implementation_key(1965)) _variant_t Assignment::GetDate10 ( );
__declspec(implementation_key(1966)) void Assignment::PutDate10 ( const _variant_t & retval );
__declspec(implementation_key(1967)) _variant_t Assignment::GetDuration4 ( );
__declspec(implementation_key(1968)) void Assignment::PutDuration4 ( const _variant_t & retval );
__declspec(implementation_key(1969)) _variant_t Assignment::GetDuration5 ( );
__declspec(implementation_key(1970)) void Assignment::PutDuration5 ( const _variant_t & retval );
__declspec(implementation_key(1971)) _variant_t Assignment::GetDuration6 ( );
__declspec(implementation_key(1972)) void Assignment::PutDuration6 ( const _variant_t & retval );
__declspec(implementation_key(1973)) _variant_t Assignment::GetDuration7 ( );
__declspec(implementation_key(1974)) void Assignment::PutDuration7 ( const _variant_t & retval );
__declspec(implementation_key(1975)) _variant_t Assignment::GetDuration8 ( );
__declspec(implementation_key(1976)) void Assignment::PutDuration8 ( const _variant_t & retval );
__declspec(implementation_key(1977)) _variant_t Assignment::GetDuration9 ( );
__declspec(implementation_key(1978)) void Assignment::PutDuration9 ( const _variant_t & retval );
__declspec(implementation_key(1979)) _variant_t Assignment::GetDuration10 ( );
__declspec(implementation_key(1980)) void Assignment::PutDuration10 ( const _variant_t & retval );
__declspec(implementation_key(1981)) _variant_t Assignment::GetFinish6 ( );
__declspec(implementation_key(1982)) void Assignment::PutFinish6 ( const _variant_t & retval );
__declspec(implementation_key(1983)) _variant_t Assignment::GetFinish7 ( );
__declspec(implementation_key(1984)) void Assignment::PutFinish7 ( const _variant_t & retval );
__declspec(implementation_key(1985)) _variant_t Assignment::GetFinish8 ( );
__declspec(implementation_key(1986)) void Assignment::PutFinish8 ( const _variant_t & retval );
__declspec(implementation_key(1987)) _variant_t Assignment::GetFinish9 ( );
__declspec(implementation_key(1988)) void Assignment::PutFinish9 ( const _variant_t & retval );
__declspec(implementation_key(1989)) _variant_t Assignment::GetFinish10 ( );
__declspec(implementation_key(1990)) void Assignment::PutFinish10 ( const _variant_t & retval );
__declspec(implementation_key(1991)) _variant_t Assignment::GetFlag11 ( );
__declspec(implementation_key(1992)) void Assignment::PutFlag11 ( const _variant_t & retval );
__declspec(implementation_key(1993)) _variant_t Assignment::GetFlag12 ( );
__declspec(implementation_key(1994)) void Assignment::PutFlag12 ( const _variant_t & retval );
__declspec(implementation_key(1995)) _variant_t Assignment::GetFlag13 ( );
__declspec(implementation_key(1996)) void Assignment::PutFlag13 ( const _variant_t & retval );
__declspec(implementation_key(1997)) _variant_t Assignment::GetFlag14 ( );
__declspec(implementation_key(1998)) void Assignment::PutFlag14 ( const _variant_t & retval );
__declspec(implementation_key(1999)) _variant_t Assignment::GetFlag15 ( );
__declspec(implementation_key(2000)) void Assignment::PutFlag15 ( const _variant_t & retval );
__declspec(implementation_key(2001)) _variant_t Assignment::GetFlag16 ( );
__declspec(implementation_key(2002)) void Assignment::PutFlag16 ( const _variant_t & retval );
__declspec(implementation_key(2003)) _variant_t Assignment::GetFlag17 ( );
__declspec(implementation_key(2004)) void Assignment::PutFlag17 ( const _variant_t & retval );
__declspec(implementation_key(2005)) _variant_t Assignment::GetFlag18 ( );
__declspec(implementation_key(2006)) void Assignment::PutFlag18 ( const _variant_t & retval );
__declspec(implementation_key(2007)) _variant_t Assignment::GetFlag19 ( );
__declspec(implementation_key(2008)) void Assignment::PutFlag19 ( const _variant_t & retval );
__declspec(implementation_key(2009)) _variant_t Assignment::GetFlag20 ( );
__declspec(implementation_key(2010)) void Assignment::PutFlag20 ( const _variant_t & retval );
__declspec(implementation_key(2011)) double Assignment::GetNumber6 ( );
__declspec(implementation_key(2012)) void Assignment::PutNumber6 ( double retval );
__declspec(implementation_key(2013)) double Assignment::GetNumber7 ( );
__declspec(implementation_key(2014)) void Assignment::PutNumber7 ( double retval );
__declspec(implementation_key(2015)) double Assignment::GetNumber8 ( );
__declspec(implementation_key(2016)) void Assignment::PutNumber8 ( double retval );
__declspec(implementation_key(2017)) double Assignment::GetNumber9 ( );
__declspec(implementation_key(2018)) void Assignment::PutNumber9 ( double retval );
__declspec(implementation_key(2019)) double Assignment::GetNumber10 ( );
__declspec(implementation_key(2020)) void Assignment::PutNumber10 ( double retval );
__declspec(implementation_key(2021)) double Assignment::GetNumber11 ( );
__declspec(implementation_key(2022)) void Assignment::PutNumber11 ( double retval );
__declspec(implementation_key(2023)) double Assignment::GetNumber12 ( );
__declspec(implementation_key(2024)) void Assignment::PutNumber12 ( double retval );
__declspec(implementation_key(2025)) double Assignment::GetNumber13 ( );
__declspec(implementation_key(2026)) void Assignment::PutNumber13 ( double retval );
__declspec(implementation_key(2027)) double Assignment::GetNumber14 ( );
__declspec(implementation_key(2028)) void Assignment::PutNumber14 ( double retval );
__declspec(implementation_key(2029)) double Assignment::GetNumber15 ( );
__declspec(implementation_key(2030)) void Assignment::PutNumber15 ( double retval );
__declspec(implementation_key(2031)) double Assignment::GetNumber16 ( );
__declspec(implementation_key(2032)) void Assignment::PutNumber16 ( double retval );
__declspec(implementation_key(2033)) double Assignment::GetNumber17 ( );
__declspec(implementation_key(2034)) void Assignment::PutNumber17 ( double retval );
__declspec(implementation_key(2035)) double Assignment::GetNumber18 ( );
__declspec(implementation_key(2036)) void Assignment::PutNumber18 ( double retval );
__declspec(implementation_key(2037)) double Assignment::GetNumber19 ( );
__declspec(implementation_key(2038)) void Assignment::PutNumber19 ( double retval );
__declspec(implementation_key(2039)) double Assignment::GetNumber20 ( );
__declspec(implementation_key(2040)) void Assignment::PutNumber20 ( double retval );
__declspec(implementation_key(2041)) _variant_t Assignment::GetStart6 ( );
__declspec(implementation_key(2042)) void Assignment::PutStart6 ( const _variant_t & retval );
__declspec(implementation_key(2043)) _variant_t Assignment::GetStart7 ( );
__declspec(implementation_key(2044)) void Assignment::PutStart7 ( const _variant_t & retval );
__declspec(implementation_key(2045)) _variant_t Assignment::GetStart8 ( );
__declspec(implementation_key(2046)) void Assignment::PutStart8 ( const _variant_t & retval );
__declspec(implementation_key(2047)) _variant_t Assignment::GetStart9 ( );
__declspec(implementation_key(2048)) void Assignment::PutStart9 ( const _variant_t & retval );
__declspec(implementation_key(2049)) _variant_t Assignment::GetStart10 ( );
__declspec(implementation_key(2050)) void Assignment::PutStart10 ( const _variant_t & retval );
__declspec(implementation_key(2051)) _bstr_t Assignment::GetText11 ( );
__declspec(implementation_key(2052)) void Assignment::PutText11 ( _bstr_t retval );
__declspec(implementation_key(2053)) _bstr_t Assignment::GetText12 ( );
__declspec(implementation_key(2054)) void Assignment::PutText12 ( _bstr_t retval );
__declspec(implementation_key(2055)) _bstr_t Assignment::GetText13 ( );
__declspec(implementation_key(2056)) void Assignment::PutText13 ( _bstr_t retval );
__declspec(implementation_key(2057)) _bstr_t Assignment::GetText14 ( );
__declspec(implementation_key(2058)) void Assignment::PutText14 ( _bstr_t retval );
__declspec(implementation_key(2059)) _bstr_t Assignment::GetText15 ( );
__declspec(implementation_key(2060)) void Assignment::PutText15 ( _bstr_t retval );
__declspec(implementation_key(2061)) _bstr_t Assignment::GetText16 ( );
__declspec(implementation_key(2062)) void Assignment::PutText16 ( _bstr_t retval );
__declspec(implementation_key(2063)) _bstr_t Assignment::GetText17 ( );
__declspec(implementation_key(2064)) void Assignment::PutText17 ( _bstr_t retval );
__declspec(implementation_key(2065)) _bstr_t Assignment::GetText18 ( );
__declspec(implementation_key(2066)) void Assignment::PutText18 ( _bstr_t retval );
__declspec(implementation_key(2067)) _bstr_t Assignment::GetText19 ( );
__declspec(implementation_key(2068)) void Assignment::PutText19 ( _bstr_t retval );
__declspec(implementation_key(2069)) _bstr_t Assignment::GetText20 ( );
__declspec(implementation_key(2070)) void Assignment::PutText20 ( _bstr_t retval );
__declspec(implementation_key(2071)) _bstr_t Assignment::GetText21 ( );
__declspec(implementation_key(2072)) void Assignment::PutText21 ( _bstr_t retval );
__declspec(implementation_key(2073)) _bstr_t Assignment::GetText22 ( );
__declspec(implementation_key(2074)) void Assignment::PutText22 ( _bstr_t retval );
__declspec(implementation_key(2075)) _bstr_t Assignment::GetText23 ( );
__declspec(implementation_key(2076)) void Assignment::PutText23 ( _bstr_t retval );
__declspec(implementation_key(2077)) _bstr_t Assignment::GetText24 ( );
__declspec(implementation_key(2078)) void Assignment::PutText24 ( _bstr_t retval );
__declspec(implementation_key(2079)) _bstr_t Assignment::GetText25 ( );
__declspec(implementation_key(2080)) void Assignment::PutText25 ( _bstr_t retval );
__declspec(implementation_key(2081)) _bstr_t Assignment::GetText26 ( );
__declspec(implementation_key(2082)) void Assignment::PutText26 ( _bstr_t retval );
__declspec(implementation_key(2083)) _bstr_t Assignment::GetText27 ( );
__declspec(implementation_key(2084)) void Assignment::PutText27 ( _bstr_t retval );
__declspec(implementation_key(2085)) _bstr_t Assignment::GetText28 ( );
__declspec(implementation_key(2086)) void Assignment::PutText28 ( _bstr_t retval );
__declspec(implementation_key(2087)) _bstr_t Assignment::GetText29 ( );
__declspec(implementation_key(2088)) void Assignment::PutText29 ( _bstr_t retval );
__declspec(implementation_key(2089)) _bstr_t Assignment::GetText30 ( );
__declspec(implementation_key(2090)) void Assignment::PutText30 ( _bstr_t retval );
__declspec(implementation_key(2091)) long Assignment::GetIndex ( );
__declspec(implementation_key(2092)) _variant_t Assignment::GetCV ( );
__declspec(implementation_key(2093)) _variant_t Assignment::GetWorkVariance ( );
__declspec(implementation_key(2094)) _variant_t Assignment::GetStartVariance ( );
__declspec(implementation_key(2095)) _variant_t Assignment::GetFinishVariance ( );
__declspec(implementation_key(2096)) _variant_t Assignment::GetVAC ( );
__declspec(implementation_key(2097)) _variant_t Assignment::GetFixedMaterialAssignment ( );
__declspec(implementation_key(2098)) enum PjResourceTypes Assignment::GetResourceType ( );
__declspec(implementation_key(2099)) _bstr_t Assignment::GetHyperlinkScreenTip ( );
__declspec(implementation_key(2100)) void Assignment::PutHyperlinkScreenTip ( _bstr_t retval );
__declspec(implementation_key(2101)) _variant_t Assignment::GetBaseline1Work ( );
__declspec(implementation_key(2102)) void Assignment::PutBaseline1Work ( const _variant_t & retval );
__declspec(implementation_key(2103)) _variant_t Assignment::GetBaseline1Cost ( );
__declspec(implementation_key(2104)) void Assignment::PutBaseline1Cost ( const _variant_t & retval );
__declspec(implementation_key(2105)) _variant_t Assignment::GetBaseline1Start ( );
__declspec(implementation_key(2106)) void Assignment::PutBaseline1Start ( const _variant_t & retval );
__declspec(implementation_key(2107)) _variant_t Assignment::GetBaseline1Finish ( );
__declspec(implementation_key(2108)) void Assignment::PutBaseline1Finish ( const _variant_t & retval );
__declspec(implementation_key(2109)) _variant_t Assignment::GetBaseline2Work ( );
__declspec(implementation_key(2110)) void Assignment::PutBaseline2Work ( const _variant_t & retval );
__declspec(implementation_key(2111)) _variant_t Assignment::GetBaseline2Cost ( );
__declspec(implementation_key(2112)) void Assignment::PutBaseline2Cost ( const _variant_t & retval );
__declspec(implementation_key(2113)) _variant_t Assignment::GetBaseline2Start ( );
__declspec(implementation_key(2114)) void Assignment::PutBaseline2Start ( const _variant_t & retval );
__declspec(implementation_key(2115)) _variant_t Assignment::GetBaseline2Finish ( );
__declspec(implementation_key(2116)) void Assignment::PutBaseline2Finish ( const _variant_t & retval );
__declspec(implementation_key(2117)) _variant_t Assignment::GetBaseline3Work ( );
__declspec(implementation_key(2118)) void Assignment::PutBaseline3Work ( const _variant_t & retval );
__declspec(implementation_key(2119)) _variant_t Assignment::GetBaseline3Cost ( );
__declspec(implementation_key(2120)) void Assignment::PutBaseline3Cost ( const _variant_t & retval );
__declspec(implementation_key(2121)) _variant_t Assignment::GetBaseline3Start ( );
__declspec(implementation_key(2122)) void Assignment::PutBaseline3Start ( const _variant_t & retval );
__declspec(implementation_key(2123)) _variant_t Assignment::GetBaseline3Finish ( );
__declspec(implementation_key(2124)) void Assignment::PutBaseline3Finish ( const _variant_t & retval );
__declspec(implementation_key(2125)) _variant_t Assignment::GetBaseline4Work ( );
__declspec(implementation_key(2126)) void Assignment::PutBaseline4Work ( const _variant_t & retval );
__declspec(implementation_key(2127)) _variant_t Assignment::GetBaseline4Cost ( );
__declspec(implementation_key(2128)) void Assignment::PutBaseline4Cost ( const _variant_t & retval );
__declspec(implementation_key(2129)) _variant_t Assignment::GetBaseline4Start ( );
__declspec(implementation_key(2130)) void Assignment::PutBaseline4Start ( const _variant_t & retval );
__declspec(implementation_key(2131)) _variant_t Assignment::GetBaseline4Finish ( );
__declspec(implementation_key(2132)) void Assignment::PutBaseline4Finish ( const _variant_t & retval );
__declspec(implementation_key(2133)) _variant_t Assignment::GetBaseline5Work ( );
__declspec(implementation_key(2134)) void Assignment::PutBaseline5Work ( const _variant_t & retval );
__declspec(implementation_key(2135)) _variant_t Assignment::GetBaseline5Cost ( );
__declspec(implementation_key(2136)) void Assignment::PutBaseline5Cost ( const _variant_t & retval );
__declspec(implementation_key(2137)) _variant_t Assignment::GetBaseline5Start ( );
__declspec(implementation_key(2138)) void Assignment::PutBaseline5Start ( const _variant_t & retval );
__declspec(implementation_key(2139)) _variant_t Assignment::GetBaseline5Finish ( );
__declspec(implementation_key(2140)) void Assignment::PutBaseline5Finish ( const _variant_t & retval );
__declspec(implementation_key(2141)) _variant_t Assignment::GetBaseline6Work ( );
__declspec(implementation_key(2142)) void Assignment::PutBaseline6Work ( const _variant_t & retval );
__declspec(implementation_key(2143)) _variant_t Assignment::GetBaseline6Cost ( );
__declspec(implementation_key(2144)) void Assignment::PutBaseline6Cost ( const _variant_t & retval );
__declspec(implementation_key(2145)) _variant_t Assignment::GetBaseline6Start ( );
__declspec(implementation_key(2146)) void Assignment::PutBaseline6Start ( const _variant_t & retval );
__declspec(implementation_key(2147)) _variant_t Assignment::GetBaseline6Finish ( );
__declspec(implementation_key(2148)) void Assignment::PutBaseline6Finish ( const _variant_t & retval );
__declspec(implementation_key(2149)) _variant_t Assignment::GetBaseline7Work ( );
__declspec(implementation_key(2150)) void Assignment::PutBaseline7Work ( const _variant_t & retval );
__declspec(implementation_key(2151)) _variant_t Assignment::GetBaseline7Cost ( );
__declspec(implementation_key(2152)) void Assignment::PutBaseline7Cost ( const _variant_t & retval );
__declspec(implementation_key(2153)) _variant_t Assignment::GetBaseline7Start ( );
__declspec(implementation_key(2154)) void Assignment::PutBaseline7Start ( const _variant_t & retval );
__declspec(implementation_key(2155)) _variant_t Assignment::GetBaseline7Finish ( );
__declspec(implementation_key(2156)) void Assignment::PutBaseline7Finish ( const _variant_t & retval );
__declspec(implementation_key(2157)) _variant_t Assignment::GetBaseline8Work ( );
__declspec(implementation_key(2158)) void Assignment::PutBaseline8Work ( const _variant_t & retval );
__declspec(implementation_key(2159)) _variant_t Assignment::GetBaseline8Cost ( );
__declspec(implementation_key(2160)) void Assignment::PutBaseline8Cost ( const _variant_t & retval );
__declspec(implementation_key(2161)) _variant_t Assignment::GetBaseline8Start ( );
__declspec(implementation_key(2162)) void Assignment::PutBaseline8Start ( const _variant_t & retval );
__declspec(implementation_key(2163)) _variant_t Assignment::GetBaseline8Finish ( );
__declspec(implementation_key(2164)) void Assignment::PutBaseline8Finish ( const _variant_t & retval );
__declspec(implementation_key(2165)) _variant_t Assignment::GetBaseline9Work ( );
__declspec(implementation_key(2166)) void Assignment::PutBaseline9Work ( const _variant_t & retval );
__declspec(implementation_key(2167)) _variant_t Assignment::GetBaseline9Cost ( );
__declspec(implementation_key(2168)) void Assignment::PutBaseline9Cost ( const _variant_t & retval );
__declspec(implementation_key(2169)) _variant_t Assignment::GetBaseline9Start ( );
__declspec(implementation_key(2170)) void Assignment::PutBaseline9Start ( const _variant_t & retval );
__declspec(implementation_key(2171)) _variant_t Assignment::GetBaseline9Finish ( );
__declspec(implementation_key(2172)) void Assignment::PutBaseline9Finish ( const _variant_t & retval );
__declspec(implementation_key(2173)) _variant_t Assignment::GetBaseline10Work ( );
__declspec(implementation_key(2174)) void Assignment::PutBaseline10Work ( const _variant_t & retval );
__declspec(implementation_key(2175)) _variant_t Assignment::GetBaseline10Cost ( );
__declspec(implementation_key(2176)) void Assignment::PutBaseline10Cost ( const _variant_t & retval );
__declspec(implementation_key(2177)) _variant_t Assignment::GetBaseline10Start ( );
__declspec(implementation_key(2178)) void Assignment::PutBaseline10Start ( const _variant_t & retval );
__declspec(implementation_key(2179)) _variant_t Assignment::GetBaseline10Finish ( );
__declspec(implementation_key(2180)) void Assignment::PutBaseline10Finish ( const _variant_t & retval );
__declspec(implementation_key(2181)) _bstr_t Assignment::GetTaskOutlineNumber ( );
__declspec(implementation_key(2182)) _variant_t Assignment::GetEnterpriseCost1 ( );
__declspec(implementation_key(2183)) void Assignment::PutEnterpriseCost1 ( const _variant_t & retval );
__declspec(implementation_key(2184)) _variant_t Assignment::GetEnterpriseCost2 ( );
__declspec(implementation_key(2185)) void Assignment::PutEnterpriseCost2 ( const _variant_t & retval );
__declspec(implementation_key(2186)) _variant_t Assignment::GetEnterpriseCost3 ( );
__declspec(implementation_key(2187)) void Assignment::PutEnterpriseCost3 ( const _variant_t & retval );
__declspec(implementation_key(2188)) _variant_t Assignment::GetEnterpriseCost4 ( );
__declspec(implementation_key(2189)) void Assignment::PutEnterpriseCost4 ( const _variant_t & retval );
__declspec(implementation_key(2190)) _variant_t Assignment::GetEnterpriseCost5 ( );
__declspec(implementation_key(2191)) void Assignment::PutEnterpriseCost5 ( const _variant_t & retval );
__declspec(implementation_key(2192)) _variant_t Assignment::GetEnterpriseCost6 ( );
__declspec(implementation_key(2193)) void Assignment::PutEnterpriseCost6 ( const _variant_t & retval );
__declspec(implementation_key(2194)) _variant_t Assignment::GetEnterpriseCost7 ( );
__declspec(implementation_key(2195)) void Assignment::PutEnterpriseCost7 ( const _variant_t & retval );
__declspec(implementation_key(2196)) _variant_t Assignment::GetEnterpriseCost8 ( );
__declspec(implementation_key(2197)) void Assignment::PutEnterpriseCost8 ( const _variant_t & retval );
__declspec(implementation_key(2198)) _variant_t Assignment::GetEnterpriseCost9 ( );
__declspec(implementation_key(2199)) void Assignment::PutEnterpriseCost9 ( const _variant_t & retval );
__declspec(implementation_key(2200)) _variant_t Assignment::GetEnterpriseCost10 ( );
__declspec(implementation_key(2201)) void Assignment::PutEnterpriseCost10 ( const _variant_t & retval );
__declspec(implementation_key(2202)) _variant_t Assignment::GetEnterpriseDate1 ( );
__declspec(implementation_key(2203)) void Assignment::PutEnterpriseDate1 ( const _variant_t & retval );
__declspec(implementation_key(2204)) _variant_t Assignment::GetEnterpriseDate2 ( );
__declspec(implementation_key(2205)) void Assignment::PutEnterpriseDate2 ( const _variant_t & retval );
__declspec(implementation_key(2206)) _variant_t Assignment::GetEnterpriseDate3 ( );
__declspec(implementation_key(2207)) void Assignment::PutEnterpriseDate3 ( const _variant_t & retval );
__declspec(implementation_key(2208)) _variant_t Assignment::GetEnterpriseDate4 ( );
__declspec(implementation_key(2209)) void Assignment::PutEnterpriseDate4 ( const _variant_t & retval );
__declspec(implementation_key(2210)) _variant_t Assignment::GetEnterpriseDate5 ( );
__declspec(implementation_key(2211)) void Assignment::PutEnterpriseDate5 ( const _variant_t & retval );
__declspec(implementation_key(2212)) _variant_t Assignment::GetEnterpriseDate6 ( );
__declspec(implementation_key(2213)) void Assignment::PutEnterpriseDate6 ( const _variant_t & retval );
__declspec(implementation_key(2214)) _variant_t Assignment::GetEnterpriseDate7 ( );
__declspec(implementation_key(2215)) void Assignment::PutEnterpriseDate7 ( const _variant_t & retval );
__declspec(implementation_key(2216)) _variant_t Assignment::GetEnterpriseDate8 ( );
__declspec(implementation_key(2217)) void Assignment::PutEnterpriseDate8 ( const _variant_t & retval );
__declspec(implementation_key(2218)) _variant_t Assignment::GetEnterpriseDate9 ( );
__declspec(implementation_key(2219)) void Assignment::PutEnterpriseDate9 ( const _variant_t & retval );
__declspec(implementation_key(2220)) _variant_t Assignment::GetEnterpriseDate10 ( );
__declspec(implementation_key(2221)) void Assignment::PutEnterpriseDate10 ( const _variant_t & retval );
__declspec(implementation_key(2222)) _variant_t Assignment::GetEnterpriseDate11 ( );
__declspec(implementation_key(2223)) void Assignment::PutEnterpriseDate11 ( const _variant_t & retval );
__declspec(implementation_key(2224)) _variant_t Assignment::GetEnterpriseDate12 ( );
__declspec(implementation_key(2225)) void Assignment::PutEnterpriseDate12 ( const _variant_t & retval );
__declspec(implementation_key(2226)) _variant_t Assignment::GetEnterpriseDate13 ( );
__declspec(implementation_key(2227)) void Assignment::PutEnterpriseDate13 ( const _variant_t & retval );
__declspec(implementation_key(2228)) _variant_t Assignment::GetEnterpriseDate14 ( );
__declspec(implementation_key(2229)) void Assignment::PutEnterpriseDate14 ( const _variant_t & retval );
__declspec(implementation_key(2230)) _variant_t Assignment::GetEnterpriseDate15 ( );
__declspec(implementation_key(2231)) void Assignment::PutEnterpriseDate15 ( const _variant_t & retval );
__declspec(implementation_key(2232)) _variant_t Assignment::GetEnterpriseDate16 ( );
__declspec(implementation_key(2233)) void Assignment::PutEnterpriseDate16 ( const _variant_t & retval );
__declspec(implementation_key(2234)) _variant_t Assignment::GetEnterpriseDate17 ( );
__declspec(implementation_key(2235)) void Assignment::PutEnterpriseDate17 ( const _variant_t & retval );
__declspec(implementation_key(2236)) _variant_t Assignment::GetEnterpriseDate18 ( );
__declspec(implementation_key(2237)) void Assignment::PutEnterpriseDate18 ( const _variant_t & retval );
__declspec(implementation_key(2238)) _variant_t Assignment::GetEnterpriseDate19 ( );
__declspec(implementation_key(2239)) void Assignment::PutEnterpriseDate19 ( const _variant_t & retval );
__declspec(implementation_key(2240)) _variant_t Assignment::GetEnterpriseDate20 ( );
__declspec(implementation_key(2241)) void Assignment::PutEnterpriseDate20 ( const _variant_t & retval );
__declspec(implementation_key(2242)) _variant_t Assignment::GetEnterpriseDate21 ( );
__declspec(implementation_key(2243)) void Assignment::PutEnterpriseDate21 ( const _variant_t & retval );
__declspec(implementation_key(2244)) _variant_t Assignment::GetEnterpriseDate22 ( );
__declspec(implementation_key(2245)) void Assignment::PutEnterpriseDate22 ( const _variant_t & retval );
__declspec(implementation_key(2246)) _variant_t Assignment::GetEnterpriseDate23 ( );
__declspec(implementation_key(2247)) void Assignment::PutEnterpriseDate23 ( const _variant_t & retval );
__declspec(implementation_key(2248)) _variant_t Assignment::GetEnterpriseDate24 ( );
__declspec(implementation_key(2249)) void Assignment::PutEnterpriseDate24 ( const _variant_t & retval );
__declspec(implementation_key(2250)) _variant_t Assignment::GetEnterpriseDate25 ( );
__declspec(implementation_key(2251)) void Assignment::PutEnterpriseDate25 ( const _variant_t & retval );
__declspec(implementation_key(2252)) _variant_t Assignment::GetEnterpriseDate26 ( );
__declspec(implementation_key(2253)) void Assignment::PutEnterpriseDate26 ( const _variant_t & retval );
__declspec(implementation_key(2254)) _variant_t Assignment::GetEnterpriseDate27 ( );
__declspec(implementation_key(2255)) void Assignment::PutEnterpriseDate27 ( const _variant_t & retval );
__declspec(implementation_key(2256)) _variant_t Assignment::GetEnterpriseDate28 ( );
__declspec(implementation_key(2257)) void Assignment::PutEnterpriseDate28 ( const _variant_t & retval );
__declspec(implementation_key(2258)) _variant_t Assignment::GetEnterpriseDate29 ( );
__declspec(implementation_key(2259)) void Assignment::PutEnterpriseDate29 ( const _variant_t & retval );
__declspec(implementation_key(2260)) _variant_t Assignment::GetEnterpriseDate30 ( );
__declspec(implementation_key(2261)) void Assignment::PutEnterpriseDate30 ( const _variant_t & retval );
__declspec(implementation_key(2262)) _variant_t Assignment::GetEnterpriseDuration1 ( );
__declspec(implementation_key(2263)) void Assignment::PutEnterpriseDuration1 ( const _variant_t & retval );
__declspec(implementation_key(2264)) _variant_t Assignment::GetEnterpriseDuration2 ( );
__declspec(implementation_key(2265)) void Assignment::PutEnterpriseDuration2 ( const _variant_t & retval );
__declspec(implementation_key(2266)) _variant_t Assignment::GetEnterpriseDuration3 ( );
__declspec(implementation_key(2267)) void Assignment::PutEnterpriseDuration3 ( const _variant_t & retval );
__declspec(implementation_key(2268)) _variant_t Assignment::GetEnterpriseDuration4 ( );
__declspec(implementation_key(2269)) void Assignment::PutEnterpriseDuration4 ( const _variant_t & retval );
__declspec(implementation_key(2270)) _variant_t Assignment::GetEnterpriseDuration5 ( );
__declspec(implementation_key(2271)) void Assignment::PutEnterpriseDuration5 ( const _variant_t & retval );
__declspec(implementation_key(2272)) _variant_t Assignment::GetEnterpriseDuration6 ( );
__declspec(implementation_key(2273)) void Assignment::PutEnterpriseDuration6 ( const _variant_t & retval );
__declspec(implementation_key(2274)) _variant_t Assignment::GetEnterpriseDuration7 ( );
__declspec(implementation_key(2275)) void Assignment::PutEnterpriseDuration7 ( const _variant_t & retval );
__declspec(implementation_key(2276)) _variant_t Assignment::GetEnterpriseDuration8 ( );
__declspec(implementation_key(2277)) void Assignment::PutEnterpriseDuration8 ( const _variant_t & retval );
__declspec(implementation_key(2278)) _variant_t Assignment::GetEnterpriseDuration9 ( );
__declspec(implementation_key(2279)) void Assignment::PutEnterpriseDuration9 ( const _variant_t & retval );
__declspec(implementation_key(2280)) _variant_t Assignment::GetEnterpriseDuration10 ( );
__declspec(implementation_key(2281)) void Assignment::PutEnterpriseDuration10 ( const _variant_t & retval );
__declspec(implementation_key(2282)) _variant_t Assignment::GetEnterpriseFlag1 ( );
__declspec(implementation_key(2283)) void Assignment::PutEnterpriseFlag1 ( const _variant_t & retval );
__declspec(implementation_key(2284)) _variant_t Assignment::GetEnterpriseFlag2 ( );
__declspec(implementation_key(2285)) void Assignment::PutEnterpriseFlag2 ( const _variant_t & retval );
__declspec(implementation_key(2286)) _variant_t Assignment::GetEnterpriseFlag3 ( );
__declspec(implementation_key(2287)) void Assignment::PutEnterpriseFlag3 ( const _variant_t & retval );
__declspec(implementation_key(2288)) _variant_t Assignment::GetEnterpriseFlag4 ( );
__declspec(implementation_key(2289)) void Assignment::PutEnterpriseFlag4 ( const _variant_t & retval );
__declspec(implementation_key(2290)) _variant_t Assignment::GetEnterpriseFlag5 ( );
__declspec(implementation_key(2291)) void Assignment::PutEnterpriseFlag5 ( const _variant_t & retval );
__declspec(implementation_key(2292)) _variant_t Assignment::GetEnterpriseFlag6 ( );
__declspec(implementation_key(2293)) void Assignment::PutEnterpriseFlag6 ( const _variant_t & retval );
__declspec(implementation_key(2294)) _variant_t Assignment::GetEnterpriseFlag7 ( );
__declspec(implementation_key(2295)) void Assignment::PutEnterpriseFlag7 ( const _variant_t & retval );
__declspec(implementation_key(2296)) _variant_t Assignment::GetEnterpriseFlag8 ( );
__declspec(implementation_key(2297)) void Assignment::PutEnterpriseFlag8 ( const _variant_t & retval );
__declspec(implementation_key(2298)) _variant_t Assignment::GetEnterpriseFlag9 ( );
__declspec(implementation_key(2299)) void Assignment::PutEnterpriseFlag9 ( const _variant_t & retval );
__declspec(implementation_key(2300)) _variant_t Assignment::GetEnterpriseFlag10 ( );
__declspec(implementation_key(2301)) void Assignment::PutEnterpriseFlag10 ( const _variant_t & retval );
__declspec(implementation_key(2302)) _variant_t Assignment::GetEnterpriseFlag11 ( );
__declspec(implementation_key(2303)) void Assignment::PutEnterpriseFlag11 ( const _variant_t & retval );
__declspec(implementation_key(2304)) _variant_t Assignment::GetEnterpriseFlag12 ( );
__declspec(implementation_key(2305)) void Assignment::PutEnterpriseFlag12 ( const _variant_t & retval );
__declspec(implementation_key(2306)) _variant_t Assignment::GetEnterpriseFlag13 ( );
__declspec(implementation_key(2307)) void Assignment::PutEnterpriseFlag13 ( const _variant_t & retval );
__declspec(implementation_key(2308)) _variant_t Assignment::GetEnterpriseFlag14 ( );
__declspec(implementation_key(2309)) void Assignment::PutEnterpriseFlag14 ( const _variant_t & retval );
__declspec(implementation_key(2310)) _variant_t Assignment::GetEnterpriseFlag15 ( );
__declspec(implementation_key(2311)) void Assignment::PutEnterpriseFlag15 ( const _variant_t & retval );
__declspec(implementation_key(2312)) _variant_t Assignment::GetEnterpriseFlag16 ( );
__declspec(implementation_key(2313)) void Assignment::PutEnterpriseFlag16 ( const _variant_t & retval );
__declspec(implementation_key(2314)) _variant_t Assignment::GetEnterpriseFlag17 ( );
__declspec(implementation_key(2315)) void Assignment::PutEnterpriseFlag17 ( const _variant_t & retval );
__declspec(implementation_key(2316)) _variant_t Assignment::GetEnterpriseFlag18 ( );
__declspec(implementation_key(2317)) void Assignment::PutEnterpriseFlag18 ( const _variant_t & retval );
__declspec(implementation_key(2318)) _variant_t Assignment::GetEnterpriseFlag19 ( );
__declspec(implementation_key(2319)) void Assignment::PutEnterpriseFlag19 ( const _variant_t & retval );
__declspec(implementation_key(2320)) _variant_t Assignment::GetEnterpriseFlag20 ( );
__declspec(implementation_key(2321)) void Assignment::PutEnterpriseFlag20 ( const _variant_t & retval );
__declspec(implementation_key(2322)) double Assignment::GetEnterpriseNumber1 ( );
__declspec(implementation_key(2323)) void Assignment::PutEnterpriseNumber1 ( double retval );
__declspec(implementation_key(2324)) double Assignment::GetEnterpriseNumber2 ( );
__declspec(implementation_key(2325)) void Assignment::PutEnterpriseNumber2 ( double retval );
__declspec(implementation_key(2326)) double Assignment::GetEnterpriseNumber3 ( );
__declspec(implementation_key(2327)) void Assignment::PutEnterpriseNumber3 ( double retval );
__declspec(implementation_key(2328)) double Assignment::GetEnterpriseNumber4 ( );
__declspec(implementation_key(2329)) void Assignment::PutEnterpriseNumber4 ( double retval );
__declspec(implementation_key(2330)) double Assignment::GetEnterpriseNumber5 ( );
__declspec(implementation_key(2331)) void Assignment::PutEnterpriseNumber5 ( double retval );
__declspec(implementation_key(2332)) double Assignment::GetEnterpriseNumber6 ( );
__declspec(implementation_key(2333)) void Assignment::PutEnterpriseNumber6 ( double retval );
__declspec(implementation_key(2334)) double Assignment::GetEnterpriseNumber7 ( );
__declspec(implementation_key(2335)) void Assignment::PutEnterpriseNumber7 ( double retval );
__declspec(implementation_key(2336)) double Assignment::GetEnterpriseNumber8 ( );
__declspec(implementation_key(2337)) void Assignment::PutEnterpriseNumber8 ( double retval );
__declspec(implementation_key(2338)) double Assignment::GetEnterpriseNumber9 ( );
__declspec(implementation_key(2339)) void Assignment::PutEnterpriseNumber9 ( double retval );
__declspec(implementation_key(2340)) double Assignment::GetEnterpriseNumber10 ( );
__declspec(implementation_key(2341)) void Assignment::PutEnterpriseNumber10 ( double retval );
__declspec(implementation_key(2342)) double Assignment::GetEnterpriseNumber11 ( );
__declspec(implementation_key(2343)) void Assignment::PutEnterpriseNumber11 ( double retval );
__declspec(implementation_key(2344)) double Assignment::GetEnterpriseNumber12 ( );
__declspec(implementation_key(2345)) void Assignment::PutEnterpriseNumber12 ( double retval );
__declspec(implementation_key(2346)) double Assignment::GetEnterpriseNumber13 ( );
__declspec(implementation_key(2347)) void Assignment::PutEnterpriseNumber13 ( double retval );
__declspec(implementation_key(2348)) double Assignment::GetEnterpriseNumber14 ( );
__declspec(implementation_key(2349)) void Assignment::PutEnterpriseNumber14 ( double retval );
__declspec(implementation_key(2350)) double Assignment::GetEnterpriseNumber15 ( );
__declspec(implementation_key(2351)) void Assignment::PutEnterpriseNumber15 ( double retval );
__declspec(implementation_key(2352)) double Assignment::GetEnterpriseNumber16 ( );
__declspec(implementation_key(2353)) void Assignment::PutEnterpriseNumber16 ( double retval );
__declspec(implementation_key(2354)) double Assignment::GetEnterpriseNumber17 ( );
__declspec(implementation_key(2355)) void Assignment::PutEnterpriseNumber17 ( double retval );
__declspec(implementation_key(2356)) double Assignment::GetEnterpriseNumber18 ( );
__declspec(implementation_key(2357)) void Assignment::PutEnterpriseNumber18 ( double retval );
__declspec(implementation_key(2358)) double Assignment::GetEnterpriseNumber19 ( );
__declspec(implementation_key(2359)) void Assignment::PutEnterpriseNumber19 ( double retval );
__declspec(implementation_key(2360)) double Assignment::GetEnterpriseNumber20 ( );
__declspec(implementation_key(2361)) void Assignment::PutEnterpriseNumber20 ( double retval );
__declspec(implementation_key(2362)) double Assignment::GetEnterpriseNumber21 ( );
__declspec(implementation_key(2363)) void Assignment::PutEnterpriseNumber21 ( double retval );
__declspec(implementation_key(2364)) double Assignment::GetEnterpriseNumber22 ( );
__declspec(implementation_key(2365)) void Assignment::PutEnterpriseNumber22 ( double retval );
__declspec(implementation_key(2366)) double Assignment::GetEnterpriseNumber23 ( );
__declspec(implementation_key(2367)) void Assignment::PutEnterpriseNumber23 ( double retval );
__declspec(implementation_key(2368)) double Assignment::GetEnterpriseNumber24 ( );
__declspec(implementation_key(2369)) void Assignment::PutEnterpriseNumber24 ( double retval );
__declspec(implementation_key(2370)) double Assignment::GetEnterpriseNumber25 ( );
__declspec(implementation_key(2371)) void Assignment::PutEnterpriseNumber25 ( double retval );
__declspec(implementation_key(2372)) double Assignment::GetEnterpriseNumber26 ( );
__declspec(implementation_key(2373)) void Assignment::PutEnterpriseNumber26 ( double retval );
__declspec(implementation_key(2374)) double Assignment::GetEnterpriseNumber27 ( );
__declspec(implementation_key(2375)) void Assignment::PutEnterpriseNumber27 ( double retval );
__declspec(implementation_key(2376)) double Assignment::GetEnterpriseNumber28 ( );
__declspec(implementation_key(2377)) void Assignment::PutEnterpriseNumber28 ( double retval );
__declspec(implementation_key(2378)) double Assignment::GetEnterpriseNumber29 ( );
__declspec(implementation_key(2379)) void Assignment::PutEnterpriseNumber29 ( double retval );
__declspec(implementation_key(2380)) double Assignment::GetEnterpriseNumber30 ( );
__declspec(implementation_key(2381)) void Assignment::PutEnterpriseNumber30 ( double retval );
__declspec(implementation_key(2382)) double Assignment::GetEnterpriseNumber31 ( );
__declspec(implementation_key(2383)) void Assignment::PutEnterpriseNumber31 ( double retval );
__declspec(implementation_key(2384)) double Assignment::GetEnterpriseNumber32 ( );
__declspec(implementation_key(2385)) void Assignment::PutEnterpriseNumber32 ( double retval );
__declspec(implementation_key(2386)) double Assignment::GetEnterpriseNumber33 ( );
__declspec(implementation_key(2387)) void Assignment::PutEnterpriseNumber33 ( double retval );
__declspec(implementation_key(2388)) double Assignment::GetEnterpriseNumber34 ( );
__declspec(implementation_key(2389)) void Assignment::PutEnterpriseNumber34 ( double retval );
__declspec(implementation_key(2390)) double Assignment::GetEnterpriseNumber35 ( );
__declspec(implementation_key(2391)) void Assignment::PutEnterpriseNumber35 ( double retval );
__declspec(implementation_key(2392)) double Assignment::GetEnterpriseNumber36 ( );
__declspec(implementation_key(2393)) void Assignment::PutEnterpriseNumber36 ( double retval );
__declspec(implementation_key(2394)) double Assignment::GetEnterpriseNumber37 ( );
__declspec(implementation_key(2395)) void Assignment::PutEnterpriseNumber37 ( double retval );
__declspec(implementation_key(2396)) double Assignment::GetEnterpriseNumber38 ( );
__declspec(implementation_key(2397)) void Assignment::PutEnterpriseNumber38 ( double retval );
__declspec(implementation_key(2398)) double Assignment::GetEnterpriseNumber39 ( );
__declspec(implementation_key(2399)) void Assignment::PutEnterpriseNumber39 ( double retval );
__declspec(implementation_key(2400)) double Assignment::GetEnterpriseNumber40 ( );
__declspec(implementation_key(2401)) void Assignment::PutEnterpriseNumber40 ( double retval );
__declspec(implementation_key(2402)) _bstr_t Assignment::GetEnterpriseText1 ( );
__declspec(implementation_key(2403)) void Assignment::PutEnterpriseText1 ( _bstr_t retval );
__declspec(implementation_key(2404)) _bstr_t Assignment::GetEnterpriseText2 ( );
__declspec(implementation_key(2405)) void Assignment::PutEnterpriseText2 ( _bstr_t retval );
__declspec(implementation_key(2406)) _bstr_t Assignment::GetEnterpriseText3 ( );
__declspec(implementation_key(2407)) void Assignment::PutEnterpriseText3 ( _bstr_t retval );
__declspec(implementation_key(2408)) _bstr_t Assignment::GetEnterpriseText4 ( );
__declspec(implementation_key(2409)) void Assignment::PutEnterpriseText4 ( _bstr_t retval );
__declspec(implementation_key(2410)) _bstr_t Assignment::GetEnterpriseText5 ( );
__declspec(implementation_key(2411)) void Assignment::PutEnterpriseText5 ( _bstr_t retval );
__declspec(implementation_key(2412)) _bstr_t Assignment::GetEnterpriseText6 ( );
__declspec(implementation_key(2413)) void Assignment::PutEnterpriseText6 ( _bstr_t retval );
__declspec(implementation_key(2414)) _bstr_t Assignment::GetEnterpriseText7 ( );
__declspec(implementation_key(2415)) void Assignment::PutEnterpriseText7 ( _bstr_t retval );
__declspec(implementation_key(2416)) _bstr_t Assignment::GetEnterpriseText8 ( );
__declspec(implementation_key(2417)) void Assignment::PutEnterpriseText8 ( _bstr_t retval );
__declspec(implementation_key(2418)) _bstr_t Assignment::GetEnterpriseText9 ( );
__declspec(implementation_key(2419)) void Assignment::PutEnterpriseText9 ( _bstr_t retval );
__declspec(implementation_key(2420)) _bstr_t Assignment::GetEnterpriseText10 ( );
__declspec(implementation_key(2421)) void Assignment::PutEnterpriseText10 ( _bstr_t retval );
__declspec(implementation_key(2422)) _bstr_t Assignment::GetEnterpriseText11 ( );
__declspec(implementation_key(2423)) void Assignment::PutEnterpriseText11 ( _bstr_t retval );
__declspec(implementation_key(2424)) _bstr_t Assignment::GetEnterpriseText12 ( );
__declspec(implementation_key(2425)) void Assignment::PutEnterpriseText12 ( _bstr_t retval );
__declspec(implementation_key(2426)) _bstr_t Assignment::GetEnterpriseText13 ( );
__declspec(implementation_key(2427)) void Assignment::PutEnterpriseText13 ( _bstr_t retval );
__declspec(implementation_key(2428)) _bstr_t Assignment::GetEnterpriseText14 ( );
__declspec(implementation_key(2429)) void Assignment::PutEnterpriseText14 ( _bstr_t retval );
__declspec(implementation_key(2430)) _bstr_t Assignment::GetEnterpriseText15 ( );
__declspec(implementation_key(2431)) void Assignment::PutEnterpriseText15 ( _bstr_t retval );
__declspec(implementation_key(2432)) _bstr_t Assignment::GetEnterpriseText16 ( );
__declspec(implementation_key(2433)) void Assignment::PutEnterpriseText16 ( _bstr_t retval );
__declspec(implementation_key(2434)) _bstr_t Assignment::GetEnterpriseText17 ( );
__declspec(implementation_key(2435)) void Assignment::PutEnterpriseText17 ( _bstr_t retval );
__declspec(implementation_key(2436)) _bstr_t Assignment::GetEnterpriseText18 ( );
__declspec(implementation_key(2437)) void Assignment::PutEnterpriseText18 ( _bstr_t retval );
__declspec(implementation_key(2438)) _bstr_t Assignment::GetEnterpriseText19 ( );
__declspec(implementation_key(2439)) void Assignment::PutEnterpriseText19 ( _bstr_t retval );
__declspec(implementation_key(2440)) _bstr_t Assignment::GetEnterpriseText20 ( );
__declspec(implementation_key(2441)) void Assignment::PutEnterpriseText20 ( _bstr_t retval );
__declspec(implementation_key(2442)) _bstr_t Assignment::GetEnterpriseText21 ( );
__declspec(implementation_key(2443)) void Assignment::PutEnterpriseText21 ( _bstr_t retval );
__declspec(implementation_key(2444)) _bstr_t Assignment::GetEnterpriseText22 ( );
__declspec(implementation_key(2445)) void Assignment::PutEnterpriseText22 ( _bstr_t retval );
__declspec(implementation_key(2446)) _bstr_t Assignment::GetEnterpriseText23 ( );
__declspec(implementation_key(2447)) void Assignment::PutEnterpriseText23 ( _bstr_t retval );
__declspec(implementation_key(2448)) _bstr_t Assignment::GetEnterpriseText24 ( );
__declspec(implementation_key(2449)) void Assignment::PutEnterpriseText24 ( _bstr_t retval );
__declspec(implementation_key(2450)) _bstr_t Assignment::GetEnterpriseText25 ( );
__declspec(implementation_key(2451)) void Assignment::PutEnterpriseText25 ( _bstr_t retval );
__declspec(implementation_key(2452)) _bstr_t Assignment::GetEnterpriseText26 ( );
__declspec(implementation_key(2453)) void Assignment::PutEnterpriseText26 ( _bstr_t retval );
__declspec(implementation_key(2454)) _bstr_t Assignment::GetEnterpriseText27 ( );
__declspec(implementation_key(2455)) void Assignment::PutEnterpriseText27 ( _bstr_t retval );
__declspec(implementation_key(2456)) _bstr_t Assignment::GetEnterpriseText28 ( );
__declspec(implementation_key(2457)) void Assignment::PutEnterpriseText28 ( _bstr_t retval );
__declspec(implementation_key(2458)) _bstr_t Assignment::GetEnterpriseText29 ( );
__declspec(implementation_key(2459)) void Assignment::PutEnterpriseText29 ( _bstr_t retval );
__declspec(implementation_key(2460)) _bstr_t Assignment::GetEnterpriseText30 ( );
__declspec(implementation_key(2461)) void Assignment::PutEnterpriseText30 ( _bstr_t retval );
__declspec(implementation_key(2462)) _bstr_t Assignment::GetEnterpriseText31 ( );
__declspec(implementation_key(2463)) void Assignment::PutEnterpriseText31 ( _bstr_t retval );
__declspec(implementation_key(2464)) _bstr_t Assignment::GetEnterpriseText32 ( );
__declspec(implementation_key(2465)) void Assignment::PutEnterpriseText32 ( _bstr_t retval );
__declspec(implementation_key(2466)) _bstr_t Assignment::GetEnterpriseText33 ( );
__declspec(implementation_key(2467)) void Assignment::PutEnterpriseText33 ( _bstr_t retval );
__declspec(implementation_key(2468)) _bstr_t Assignment::GetEnterpriseText34 ( );
__declspec(implementation_key(2469)) void Assignment::PutEnterpriseText34 ( _bstr_t retval );
__declspec(implementation_key(2470)) _bstr_t Assignment::GetEnterpriseText35 ( );
__declspec(implementation_key(2471)) void Assignment::PutEnterpriseText35 ( _bstr_t retval );
__declspec(implementation_key(2472)) _bstr_t Assignment::GetEnterpriseText36 ( );
__declspec(implementation_key(2473)) void Assignment::PutEnterpriseText36 ( _bstr_t retval );
__declspec(implementation_key(2474)) _bstr_t Assignment::GetEnterpriseText37 ( );
__declspec(implementation_key(2475)) void Assignment::PutEnterpriseText37 ( _bstr_t retval );
__declspec(implementation_key(2476)) _bstr_t Assignment::GetEnterpriseText38 ( );
__declspec(implementation_key(2477)) void Assignment::PutEnterpriseText38 ( _bstr_t retval );
__declspec(implementation_key(2478)) _bstr_t Assignment::GetEnterpriseText39 ( );
__declspec(implementation_key(2479)) void Assignment::PutEnterpriseText39 ( _bstr_t retval );
__declspec(implementation_key(2480)) _bstr_t Assignment::GetEnterpriseText40 ( );
__declspec(implementation_key(2481)) void Assignment::PutEnterpriseText40 ( _bstr_t retval );
__declspec(implementation_key(2482)) _bstr_t Assignment::GetEnterpriseResourceOutlineCode1 ( );
__declspec(implementation_key(2483)) void Assignment::PutEnterpriseResourceOutlineCode1 ( _bstr_t retval );
__declspec(implementation_key(2484)) _bstr_t Assignment::GetEnterpriseResourceOutlineCode2 ( );
__declspec(implementation_key(2485)) void Assignment::PutEnterpriseResourceOutlineCode2 ( _bstr_t retval );
__declspec(implementation_key(2486)) _bstr_t Assignment::GetEnterpriseResourceOutlineCode3 ( );
__declspec(implementation_key(2487)) void Assignment::PutEnterpriseResourceOutlineCode3 ( _bstr_t retval );
__declspec(implementation_key(2488)) _bstr_t Assignment::GetEnterpriseResourceOutlineCode4 ( );
__declspec(implementation_key(2489)) void Assignment::PutEnterpriseResourceOutlineCode4 ( _bstr_t retval );
__declspec(implementation_key(2490)) _bstr_t Assignment::GetEnterpriseResourceOutlineCode5 ( );
__declspec(implementation_key(2491)) void Assignment::PutEnterpriseResourceOutlineCode5 ( _bstr_t retval );
__declspec(implementation_key(2492)) _bstr_t Assignment::GetEnterpriseResourceOutlineCode6 ( );
__declspec(implementation_key(2493)) void Assignment::PutEnterpriseResourceOutlineCode6 ( _bstr_t retval );
__declspec(implementation_key(2494)) _bstr_t Assignment::GetEnterpriseResourceOutlineCode7 ( );
__declspec(implementation_key(2495)) void Assignment::PutEnterpriseResourceOutlineCode7 ( _bstr_t retval );
__declspec(implementation_key(2496)) _bstr_t Assignment::GetEnterpriseResourceOutlineCode8 ( );
__declspec(implementation_key(2497)) void Assignment::PutEnterpriseResourceOutlineCode8 ( _bstr_t retval );
__declspec(implementation_key(2498)) _bstr_t Assignment::GetEnterpriseResourceOutlineCode9 ( );
__declspec(implementation_key(2499)) void Assignment::PutEnterpriseResourceOutlineCode9 ( _bstr_t retval );
__declspec(implementation_key(2500)) _bstr_t Assignment::GetEnterpriseResourceOutlineCode10 ( );
__declspec(implementation_key(2501)) void Assignment::PutEnterpriseResourceOutlineCode10 ( _bstr_t retval );
__declspec(implementation_key(2502)) _bstr_t Assignment::GetEnterpriseResourceOutlineCode11 ( );
__declspec(implementation_key(2503)) void Assignment::PutEnterpriseResourceOutlineCode11 ( _bstr_t retval );
__declspec(implementation_key(2504)) _bstr_t Assignment::GetEnterpriseResourceOutlineCode12 ( );
__declspec(implementation_key(2505)) void Assignment::PutEnterpriseResourceOutlineCode12 ( _bstr_t retval );
__declspec(implementation_key(2506)) _bstr_t Assignment::GetEnterpriseResourceOutlineCode13 ( );
__declspec(implementation_key(2507)) void Assignment::PutEnterpriseResourceOutlineCode13 ( _bstr_t retval );
__declspec(implementation_key(2508)) _bstr_t Assignment::GetEnterpriseResourceOutlineCode14 ( );
__declspec(implementation_key(2509)) void Assignment::PutEnterpriseResourceOutlineCode14 ( _bstr_t retval );
__declspec(implementation_key(2510)) _bstr_t Assignment::GetEnterpriseResourceOutlineCode15 ( );
__declspec(implementation_key(2511)) void Assignment::PutEnterpriseResourceOutlineCode15 ( _bstr_t retval );
__declspec(implementation_key(2512)) _bstr_t Assignment::GetEnterpriseResourceOutlineCode16 ( );
__declspec(implementation_key(2513)) void Assignment::PutEnterpriseResourceOutlineCode16 ( _bstr_t retval );
__declspec(implementation_key(2514)) _bstr_t Assignment::GetEnterpriseResourceOutlineCode17 ( );
__declspec(implementation_key(2515)) void Assignment::PutEnterpriseResourceOutlineCode17 ( _bstr_t retval );
__declspec(implementation_key(2516)) _bstr_t Assignment::GetEnterpriseResourceOutlineCode18 ( );
__declspec(implementation_key(2517)) void Assignment::PutEnterpriseResourceOutlineCode18 ( _bstr_t retval );
__declspec(implementation_key(2518)) _bstr_t Assignment::GetEnterpriseResourceOutlineCode19 ( );
__declspec(implementation_key(2519)) void Assignment::PutEnterpriseResourceOutlineCode19 ( _bstr_t retval );
__declspec(implementation_key(2520)) _bstr_t Assignment::GetEnterpriseResourceOutlineCode20 ( );
__declspec(implementation_key(2521)) void Assignment::PutEnterpriseResourceOutlineCode20 ( _bstr_t retval );
__declspec(implementation_key(2522)) _bstr_t Assignment::GetEnterpriseResourceOutlineCode21 ( );
__declspec(implementation_key(2523)) void Assignment::PutEnterpriseResourceOutlineCode21 ( _bstr_t retval );
__declspec(implementation_key(2524)) _bstr_t Assignment::GetEnterpriseResourceOutlineCode22 ( );
__declspec(implementation_key(2525)) void Assignment::PutEnterpriseResourceOutlineCode22 ( _bstr_t retval );
__declspec(implementation_key(2526)) _bstr_t Assignment::GetEnterpriseResourceOutlineCode23 ( );
__declspec(implementation_key(2527)) void Assignment::PutEnterpriseResourceOutlineCode23 ( _bstr_t retval );
__declspec(implementation_key(2528)) _bstr_t Assignment::GetEnterpriseResourceOutlineCode24 ( );
__declspec(implementation_key(2529)) void Assignment::PutEnterpriseResourceOutlineCode24 ( _bstr_t retval );
__declspec(implementation_key(2530)) _bstr_t Assignment::GetEnterpriseResourceOutlineCode25 ( );
__declspec(implementation_key(2531)) void Assignment::PutEnterpriseResourceOutlineCode25 ( _bstr_t retval );
__declspec(implementation_key(2532)) _bstr_t Assignment::GetEnterpriseResourceOutlineCode26 ( );
__declspec(implementation_key(2533)) void Assignment::PutEnterpriseResourceOutlineCode26 ( _bstr_t retval );
__declspec(implementation_key(2534)) _bstr_t Assignment::GetEnterpriseResourceOutlineCode27 ( );
__declspec(implementation_key(2535)) void Assignment::PutEnterpriseResourceOutlineCode27 ( _bstr_t retval );
__declspec(implementation_key(2536)) _bstr_t Assignment::GetEnterpriseResourceOutlineCode28 ( );
__declspec(implementation_key(2537)) void Assignment::PutEnterpriseResourceOutlineCode28 ( _bstr_t retval );
__declspec(implementation_key(2538)) _bstr_t Assignment::GetEnterpriseResourceOutlineCode29 ( );
__declspec(implementation_key(2539)) void Assignment::PutEnterpriseResourceOutlineCode29 ( _bstr_t retval );
__declspec(implementation_key(2540)) _bstr_t Assignment::GetEnterpriseResourceRBS ( );
__declspec(implementation_key(2541)) void Assignment::PutEnterpriseResourceRBS ( _bstr_t retval );
__declspec(implementation_key(2542)) enum PjResourceRequestType Assignment::GetResourceRequestType ( );
__declspec(implementation_key(2543)) void Assignment::PutResourceRequestType ( enum PjResourceRequestType retval );
__declspec(implementation_key(2544)) VARIANT_BOOL Assignment::EnterpriseTeamMember ( IDispatch * Project );
__declspec(implementation_key(2545)) short Years::GetCount ( );
__declspec(implementation_key(2546)) _MSProjectPtr Years::GetApplication ( );
__declspec(implementation_key(2547)) CalendarPtr Years::GetParent ( );
__declspec(implementation_key(2548)) IUnknownPtr Years::Get_NewEnum ( );
__declspec(implementation_key(2549)) YearPtr Years::GetItem ( const _variant_t & Index );
__declspec(implementation_key(2550)) short Months::GetCount ( );
__declspec(implementation_key(2551)) _MSProjectPtr Months::GetApplication ( );
__declspec(implementation_key(2552)) YearPtr Months::GetParent ( );
__declspec(implementation_key(2553)) IUnknownPtr Months::Get_NewEnum ( );
__declspec(implementation_key(2554)) MonthPtr Months::GetItem ( const _variant_t & Index );
__declspec(implementation_key(2555)) short Days::GetCount ( );
__declspec(implementation_key(2556)) _MSProjectPtr Days::GetApplication ( );
__declspec(implementation_key(2557)) MonthPtr Days::GetParent ( );
__declspec(implementation_key(2558)) IUnknownPtr Days::Get_NewEnum ( );
__declspec(implementation_key(2559)) DayPtr Days::GetItem ( const _variant_t & Index );
__declspec(implementation_key(2560)) _MSProjectPtr List::GetApplication ( );
__declspec(implementation_key(2561)) IDispatchPtr List::GetParent ( );
__declspec(implementation_key(2562)) long List::GetCount ( );
__declspec(implementation_key(2563)) _bstr_t List::GetItem ( const _variant_t & Index );
__declspec(implementation_key(2564)) IUnknownPtr List::Get_NewEnum ( );
__declspec(implementation_key(2565)) _MSProjectPtr Selection::GetApplication ( );
__declspec(implementation_key(2566)) IDispatchPtr Selection::GetParent ( );
__declspec(implementation_key(2567)) TasksPtr Selection::GetTasks ( );
__declspec(implementation_key(2568)) ResourcesPtr Selection::GetResources ( );
__declspec(implementation_key(2569)) ListPtr Selection::GetFieldNameList ( );
__declspec(implementation_key(2570)) ListPtr Selection::GetFieldIDList ( );
__declspec(implementation_key(2571)) _MSProjectPtr Cell::GetApplication ( );
__declspec(implementation_key(2572)) IDispatchPtr Cell::GetParent ( );
__declspec(implementation_key(2573)) TaskPtr Cell::GetTask ( );
__declspec(implementation_key(2574)) ResourcePtr Cell::GetResource ( );
__declspec(implementation_key(2575)) _bstr_t Cell::GetFieldName ( );
__declspec(implementation_key(2576)) enum PjField Cell::GetFieldID ( );
__declspec(implementation_key(2577)) _bstr_t Cell::GetText ( );
__declspec(implementation_key(2578)) VARIANT_BOOL Subproject::GetLinkToSource ( );
__declspec(implementation_key(2579)) void Subproject::PutLinkToSource ( VARIANT_BOOL fLinkToSource );
__declspec(implementation_key(2580)) _bstr_t Subproject::GetPath ( );
__declspec(implementation_key(2581)) void Subproject::PutPath ( _bstr_t szPath );
__declspec(implementation_key(2582)) VARIANT_BOOL Subproject::GetReadOnly ( );
__declspec(implementation_key(2583)) void Subproject::PutReadOnly ( VARIANT_BOOL fReadOnly );
__declspec(implementation_key(2584)) _IProjectDocPtr Subproject::GetParent ( );
__declspec(implementation_key(2585)) _MSProjectPtr Subproject::GetApplication ( );
__declspec(implementation_key(2586)) _IProjectDocPtr Subproject::GetSourceProject ( );
__declspec(implementation_key(2587)) TaskPtr Subproject::GetInsertedProjectSummary ( );
__declspec(implementation_key(2588)) long Subproject::GetIndex ( );
__declspec(implementation_key(2589)) IUnknownPtr Subprojects::Get_NewEnum ( );
__declspec(implementation_key(2590)) SubprojectPtr Subprojects::GetItem ( const _variant_t & Index );
__declspec(implementation_key(2591)) _IProjectDocPtr Subprojects::GetParent ( );
__declspec(implementation_key(2592)) _MSProjectPtr Subprojects::GetApplication ( );
__declspec(implementation_key(2593)) long Subprojects::GetCount ( );
__declspec(implementation_key(2594)) _MSProjectPtr Group::GetApplication ( );
__declspec(implementation_key(2595)) _bstr_t Group::GetName ( );
__declspec(implementation_key(2596)) void Group::PutName ( _bstr_t szName );
__declspec(implementation_key(2597)) long Group::GetIndex ( );
__declspec(implementation_key(2598)) _IProjectDocPtr Group::GetParent ( );
__declspec(implementation_key(2599)) GroupCriteriaPtr Group::GetGroupCriteria ( );
__declspec(implementation_key(2600)) void Group::PutGroupCriteria ( struct GroupCriteria * ppDispatch );
__declspec(implementation_key(2601)) VARIANT_BOOL Group::GetShowSummary ( );
__declspec(implementation_key(2602)) void Group::PutShowSummary ( VARIANT_BOOL fShowSummary );
__declspec(implementation_key(2603)) HRESULT Group::Delete ( );
__declspec(implementation_key(2604)) VARIANT_BOOL Group::GetGroupAssignments ( );
__declspec(implementation_key(2605)) void Group::PutGroupAssignments ( VARIANT_BOOL fGroupAssignments );
__declspec(implementation_key(2606)) IUnknownPtr GroupCriteria::Get_NewEnum ( );
__declspec(implementation_key(2607)) GroupCriterionPtr GroupCriteria::GetItem ( long Index );
__declspec(implementation_key(2608)) long GroupCriteria::GetCount ( );
__declspec(implementation_key(2609)) GroupCriterionPtr GroupCriteria::Add ( _bstr_t FieldName, VARIANT_BOOL Ascending, _bstr_t FontName, int FontSize, VARIANT_BOOL FontBold, VARIANT_BOOL FontItalic, VARIANT_BOOL FontUnderLine, enum PjColor FontColor, enum PjColor CellColor, enum PjBackgroundPattern Pattern, enum PjGroupOn GroupOn, const _variant_t & StartAt, const _variant_t & GroupInterval );
__declspec(implementation_key(2610)) GroupPtr GroupCriteria::GetParent ( );
__declspec(implementation_key(2611)) _MSProjectPtr GroupCriteria::GetApplication ( );
__declspec(implementation_key(2612)) _MSProjectPtr GroupCriterion::GetApplication ( );
__declspec(implementation_key(2613)) _bstr_t GroupCriterion::GetFieldName ( );
__declspec(implementation_key(2614)) void GroupCriterion::PutFieldName ( _bstr_t szName );
__declspec(implementation_key(2615)) long GroupCriterion::GetIndex ( );
__declspec(implementation_key(2616)) GroupPtr GroupCriterion::GetParent ( );
__declspec(implementation_key(2617)) VARIANT_BOOL GroupCriterion::GetAscending ( );
__declspec(implementation_key(2618)) void GroupCriterion::PutAscending ( VARIANT_BOOL fAscending );
__declspec(implementation_key(2619)) _bstr_t GroupCriterion::GetFontName ( );
__declspec(implementation_key(2620)) void GroupCriterion::PutFontName ( _bstr_t FontName );
__declspec(implementation_key(2621)) int GroupCriterion::GetFontSize ( );
__declspec(implementation_key(2622)) void GroupCriterion::PutFontSize ( int FontSize );
__declspec(implementation_key(2623)) VARIANT_BOOL GroupCriterion::GetFontBold ( );
__declspec(implementation_key(2624)) void GroupCriterion::PutFontBold ( VARIANT_BOOL FontBold );
__declspec(implementation_key(2625)) VARIANT_BOOL GroupCriterion::GetFontItalic ( );
__declspec(implementation_key(2626)) void GroupCriterion::PutFontItalic ( VARIANT_BOOL FontItalic );
__declspec(implementation_key(2627)) VARIANT_BOOL GroupCriterion::GetFontUnderLine ( );
__declspec(implementation_key(2628)) void GroupCriterion::PutFontUnderLine ( VARIANT_BOOL FontUnderLine );
__declspec(implementation_key(2629)) enum PjColor GroupCriterion::GetFontColor ( );
__declspec(implementation_key(2630)) void GroupCriterion::PutFontColor ( enum PjColor FontColor );
__declspec(implementation_key(2631)) enum PjColor GroupCriterion::GetCellColor ( );
__declspec(implementation_key(2632)) void GroupCriterion::PutCellColor ( enum PjColor CellColor );
__declspec(implementation_key(2633)) enum PjBackgroundPattern GroupCriterion::GetPattern ( );
__declspec(implementation_key(2634)) void GroupCriterion::PutPattern ( enum PjBackgroundPattern CellColor );
__declspec(implementation_key(2635)) enum PjGroupOn GroupCriterion::GetGroupOn ( );
__declspec(implementation_key(2636)) void GroupCriterion::PutGroupOn ( enum PjGroupOn GroupOn );
__declspec(implementation_key(2637)) _variant_t GroupCriterion::GetStartAt ( );
__declspec(implementation_key(2638)) void GroupCriterion::PutStartAt ( const _variant_t & StartAt );
__declspec(implementation_key(2639)) _variant_t GroupCriterion::GetGroupInterval ( );
__declspec(implementation_key(2640)) void GroupCriterion::PutGroupInterval ( const _variant_t & GroupInterval );
__declspec(implementation_key(2641)) HRESULT GroupCriterion::Delete ( );
__declspec(implementation_key(2642)) VARIANT_BOOL GroupCriterion::GetAssignment ( );
__declspec(implementation_key(2643)) void GroupCriterion::PutAssignment ( VARIANT_BOOL fAssignment );
__declspec(implementation_key(2644)) short WeekDays::GetCount ( );
__declspec(implementation_key(2645)) _MSProjectPtr WeekDays::GetApplication ( );
__declspec(implementation_key(2646)) CalendarPtr WeekDays::GetParent ( );
__declspec(implementation_key(2647)) IUnknownPtr WeekDays::Get_NewEnum ( );
__declspec(implementation_key(2648)) WeekDayPtr WeekDays::GetItem ( const _variant_t & Index );
__declspec(implementation_key(2649)) CalendarPtr WeekDay::GetCalendar ( );
__declspec(implementation_key(2650)) ShiftPtr WeekDay::GetShift1 ( );
__declspec(implementation_key(2651)) ShiftPtr WeekDay::GetShift2 ( );
__declspec(implementation_key(2652)) ShiftPtr WeekDay::GetShift3 ( );
__declspec(implementation_key(2653)) VARIANT_BOOL WeekDay::GetWorking ( );
__declspec(implementation_key(2654)) void WeekDay::PutWorking ( const _variant_t & fWorking );
__declspec(implementation_key(2655)) HRESULT WeekDay::Default ( );
__declspec(implementation_key(2656)) short WeekDay::GetCount ( );
__declspec(implementation_key(2657)) _MSProjectPtr WeekDay::GetApplication ( );
__declspec(implementation_key(2658)) CalendarPtr WeekDay::GetParent ( );
__declspec(implementation_key(2659)) short WeekDay::GetIndex ( );
__declspec(implementation_key(2660)) _bstr_t WeekDay::GetName ( );
__declspec(implementation_key(2661)) ShiftPtr WeekDay::GetShift4 ( );
__declspec(implementation_key(2662)) ShiftPtr WeekDay::GetShift5 ( );
__declspec(implementation_key(2663)) _variant_t Shift::GetStart ( );
__declspec(implementation_key(2664)) void Shift::PutStart ( const _variant_t & pdt );
__declspec(implementation_key(2665)) _variant_t Shift::GetFinish ( );
__declspec(implementation_key(2666)) void Shift::PutFinish ( const _variant_t & pdt );
__declspec(implementation_key(2667)) HRESULT Shift::Clear ( );
__declspec(implementation_key(2668)) short Shift::GetIndex ( );
__declspec(implementation_key(2669)) _MSProjectPtr Shift::GetApplication ( );
__declspec(implementation_key(2670)) IDispatchPtr Shift::GetParent ( );
__declspec(implementation_key(2671)) CalendarPtr Period::GetCalendar ( );
__declspec(implementation_key(2672)) ShiftPtr Period::GetShift1 ( );
__declspec(implementation_key(2673)) ShiftPtr Period::GetShift2 ( );
__declspec(implementation_key(2674)) ShiftPtr Period::GetShift3 ( );
__declspec(implementation_key(2675)) VARIANT_BOOL Period::GetWorking ( );
__declspec(implementation_key(2676)) void Period::PutWorking ( const _variant_t & fWorking );
__declspec(implementation_key(2677)) HRESULT Period::Default ( );
__declspec(implementation_key(2678)) short Period::GetCount ( );
__declspec(implementation_key(2679)) _MSProjectPtr Period::GetApplication ( );
__declspec(implementation_key(2680)) CalendarPtr Period::GetParent ( );
__declspec(implementation_key(2681)) ShiftPtr Period::GetShift4 ( );
__declspec(implementation_key(2682)) ShiftPtr Period::GetShift5 ( );
__declspec(implementation_key(2683)) CalendarPtr Year::GetCalendar ( );
__declspec(implementation_key(2684)) ShiftPtr Year::GetShift1 ( );
__declspec(implementation_key(2685)) ShiftPtr Year::GetShift2 ( );
__declspec(implementation_key(2686)) ShiftPtr Year::GetShift3 ( );
__declspec(implementation_key(2687)) VARIANT_BOOL Year::GetWorking ( );
__declspec(implementation_key(2688)) void Year::PutWorking ( const _variant_t & fWorking );
__declspec(implementation_key(2689)) HRESULT Year::Default ( );
__declspec(implementation_key(2690)) short Year::GetCount ( );
__declspec(implementation_key(2691)) _MSProjectPtr Year::GetApplication ( );
__declspec(implementation_key(2692)) CalendarPtr Year::GetParent ( );
__declspec(implementation_key(2693)) short Year::GetIndex ( );
__declspec(implementation_key(2694)) _bstr_t Year::GetName ( );
__declspec(implementation_key(2695)) MonthsPtr Year::GetMonths ( );
__declspec(implementation_key(2696)) ShiftPtr Year::GetShift4 ( );
__declspec(implementation_key(2697)) ShiftPtr Year::GetShift5 ( );
__declspec(implementation_key(2698)) CalendarPtr Month::GetCalendar ( );
__declspec(implementation_key(2699)) ShiftPtr Month::GetShift1 ( );
__declspec(implementation_key(2700)) ShiftPtr Month::GetShift2 ( );
__declspec(implementation_key(2701)) ShiftPtr Month::GetShift3 ( );
__declspec(implementation_key(2702)) VARIANT_BOOL Month::GetWorking ( );
__declspec(implementation_key(2703)) void Month::PutWorking ( const _variant_t & fWorking );
__declspec(implementation_key(2704)) HRESULT Month::Default ( );
__declspec(implementation_key(2705)) short Month::GetCount ( );
__declspec(implementation_key(2706)) _MSProjectPtr Month::GetApplication ( );
__declspec(implementation_key(2707)) YearPtr Month::GetParent ( );
__declspec(implementation_key(2708)) short Month::GetIndex ( );
__declspec(implementation_key(2709)) _bstr_t Month::GetName ( );
__declspec(implementation_key(2710)) DaysPtr Month::GetDays ( );
__declspec(implementation_key(2711)) ShiftPtr Month::GetShift4 ( );
__declspec(implementation_key(2712)) ShiftPtr Month::GetShift5 ( );
__declspec(implementation_key(2713)) CalendarPtr Day::GetCalendar ( );
__declspec(implementation_key(2714)) ShiftPtr Day::GetShift1 ( );
__declspec(implementation_key(2715)) ShiftPtr Day::GetShift2 ( );
__declspec(implementation_key(2716)) ShiftPtr Day::GetShift3 ( );
__declspec(implementation_key(2717)) VARIANT_BOOL Day::GetWorking ( );
__declspec(implementation_key(2718)) void Day::PutWorking ( const _variant_t & fWorking );
__declspec(implementation_key(2719)) HRESULT Day::Default ( );
__declspec(implementation_key(2720)) short Day::GetCount ( );
__declspec(implementation_key(2721)) _MSProjectPtr Day::GetApplication ( );
__declspec(implementation_key(2722)) MonthPtr Day::GetParent ( );
__declspec(implementation_key(2723)) short Day::GetIndex ( );
__declspec(implementation_key(2724)) _bstr_t Day::GetName ( );
__declspec(implementation_key(2725)) ShiftPtr Day::GetShift4 ( );
__declspec(implementation_key(2726)) ShiftPtr Day::GetShift5 ( );
__declspec(implementation_key(2727)) _variant_t TimeScaleValue::GetStartDate ( );
__declspec(implementation_key(2728)) _variant_t TimeScaleValue::GetEndDate ( );
__declspec(implementation_key(2729)) _variant_t TimeScaleValue::GetValue ( );
__declspec(implementation_key(2730)) void TimeScaleValue::PutValue ( const _variant_t & pvar );
__declspec(implementation_key(2731)) long TimeScaleValue::GetIndex ( );
__declspec(implementation_key(2732)) HRESULT TimeScaleValue::Clear ( );
__declspec(implementation_key(2733)) HRESULT TimeScaleValue::Delete ( );
__declspec(implementation_key(2734)) _MSProjectPtr TimeScaleValue::GetApplication ( );
__declspec(implementation_key(2735)) IDispatchPtr TimeScaleValue::GetParent ( );
__declspec(implementation_key(2736)) IUnknownPtr TimeScaleValues::Get_NewEnum ( );
__declspec(implementation_key(2737)) TimeScaleValuePtr TimeScaleValues::GetItem ( long Index );
__declspec(implementation_key(2738)) long TimeScaleValues::GetCount ( );
__declspec(implementation_key(2739)) TimeScaleValuePtr TimeScaleValues::Add ( const _variant_t & Value, const _variant_t & Position );
__declspec(implementation_key(2740)) _MSProjectPtr TimeScaleValues::GetApplication ( );
__declspec(implementation_key(2741)) IDispatchPtr TimeScaleValues::GetParent ( );
__declspec(implementation_key(2742)) long CostRateTable::GetIndex ( );
__declspec(implementation_key(2743)) _bstr_t CostRateTable::GetName ( );
__declspec(implementation_key(2744)) PayRatesPtr CostRateTable::GetPayRates ( );
__declspec(implementation_key(2745)) ResourcePtr CostRateTable::GetParent ( );
__declspec(implementation_key(2746)) _MSProjectPtr CostRateTable::GetApplication ( );
__declspec(implementation_key(2747)) IUnknownPtr CostRateTables::Get_NewEnum ( );
__declspec(implementation_key(2748)) CostRateTablePtr CostRateTables::GetItem ( const _variant_t & Index );
__declspec(implementation_key(2749)) long CostRateTables::GetCount ( );
__declspec(implementation_key(2750)) ResourcePtr CostRateTables::GetParent ( );
__declspec(implementation_key(2751)) _MSProjectPtr CostRateTables::GetApplication ( );
__declspec(implementation_key(2752)) long PayRate::GetIndex ( );
__declspec(implementation_key(2753)) _variant_t PayRate::GetEffectiveDate ( );
__declspec(implementation_key(2754)) _variant_t PayRate::GetStandardRate ( );
__declspec(implementation_key(2755)) void PayRate::PutStandardRate ( const _variant_t & pvar );
__declspec(implementation_key(2756)) _variant_t PayRate::GetOvertimeRate ( );
__declspec(implementation_key(2757)) void PayRate::PutOvertimeRate ( const _variant_t & pvar );
__declspec(implementation_key(2758)) _variant_t PayRate::GetCostPerUse ( );
__declspec(implementation_key(2759)) void PayRate::PutCostPerUse ( const _variant_t & pvar );
__declspec(implementation_key(2760)) HRESULT PayRate::Delete ( );
__declspec(implementation_key(2761)) ResourcePtr PayRate::GetParent ( );
__declspec(implementation_key(2762)) _MSProjectPtr PayRate::GetApplication ( );
__declspec(implementation_key(2763)) IUnknownPtr PayRates::Get_NewEnum ( );
__declspec(implementation_key(2764)) PayRatePtr PayRates::GetItem ( const _variant_t & Index );
__declspec(implementation_key(2765)) long PayRates::GetCount ( );
__declspec(implementation_key(2766)) PayRatePtr PayRates::Add ( const _variant_t & EffectiveDate, const _variant_t & StdRate, const _variant_t & OvtRate, const _variant_t & CostPerUse );
__declspec(implementation_key(2767)) ResourcePtr PayRates::GetParent ( );
__declspec(implementation_key(2768)) _MSProjectPtr PayRates::GetApplication ( );
__declspec(implementation_key(2769)) long Availability::GetIndex ( );
__declspec(implementation_key(2770)) _variant_t Availability::GetAvailableFrom ( );
__declspec(implementation_key(2771)) void Availability::PutAvailableFrom ( const _variant_t & pFromDate );
__declspec(implementation_key(2772)) _variant_t Availability::GetAvailableTo ( );
__declspec(implementation_key(2773)) void Availability::PutAvailableTo ( const _variant_t & pToDate );
__declspec(implementation_key(2774)) double Availability::GetAvailableUnit ( );
__declspec(implementation_key(2775)) void Availability::PutAvailableUnit ( double pUnit );
__declspec(implementation_key(2776)) HRESULT Availability::Delete ( );
__declspec(implementation_key(2777)) ResourcePtr Availability::GetParent ( );
__declspec(implementation_key(2778)) _MSProjectPtr Availability::GetApplication ( );
__declspec(implementation_key(2779)) IUnknownPtr Availabilities::Get_NewEnum ( );
__declspec(implementation_key(2780)) AvailabilityPtr Availabilities::GetItem ( const _variant_t & Index );
__declspec(implementation_key(2781)) long Availabilities::GetCount ( );
__declspec(implementation_key(2782)) AvailabilityPtr Availabilities::Add ( const _variant_t & AvailableFrom, const _variant_t & AvailableTo, double AvailableUnit );
__declspec(implementation_key(2783)) ResourcePtr Availabilities::GetParent ( );
__declspec(implementation_key(2784)) _MSProjectPtr Availabilities::GetApplication ( );
__declspec(implementation_key(2785)) HRESULT TaskDependency::Delete ( );
__declspec(implementation_key(2786)) TaskPtr TaskDependency::GetFrom ( );
__declspec(implementation_key(2787)) TaskPtr TaskDependency::GetTo ( );
__declspec(implementation_key(2788)) enum PjTaskLinkType TaskDependency::GetType ( );
__declspec(implementation_key(2789)) void TaskDependency::PutType ( enum PjTaskLinkType retval );
__declspec(implementation_key(2790)) _variant_t TaskDependency::GetLag ( );
__declspec(implementation_key(2791)) void TaskDependency::PutLag ( const _variant_t & retval );
__declspec(implementation_key(2792)) _bstr_t TaskDependency::GetPath ( );
__declspec(implementation_key(2793)) void TaskDependency::PutPath ( const _variant_t & pbstrVal );
__declspec(implementation_key(2794)) long TaskDependency::GetIndex ( );
__declspec(implementation_key(2795)) TaskPtr TaskDependency::GetParent ( );
__declspec(implementation_key(2796)) _MSProjectPtr TaskDependency::GetApplication ( );
__declspec(implementation_key(2797)) IUnknownPtr TaskDependencies::Get_NewEnum ( );
__declspec(implementation_key(2798)) TaskDependencyPtr TaskDependencies::GetItem ( long Index );
__declspec(implementation_key(2799)) long TaskDependencies::GetCount ( );
__declspec(implementation_key(2800)) TaskDependencyPtr TaskDependencies::Add ( struct Task * From, enum PjTaskLinkType Type, const _variant_t & Lag );
__declspec(implementation_key(2801)) TaskPtr TaskDependencies::GetParent ( );
__declspec(implementation_key(2802)) _MSProjectPtr TaskDependencies::GetApplication ( );
__declspec(implementation_key(2803)) _MSProjectPtr Pane::GetApplication ( );
__declspec(implementation_key(2804)) IDispatchPtr Pane::GetParent ( );
__declspec(implementation_key(2805)) _variant_t Pane::GetIndex ( );
__declspec(implementation_key(2806)) HRESULT Pane::Activate ( );
__declspec(implementation_key(2807)) HRESULT Pane::Close ( );
__declspec(implementation_key(2808)) ViewPtr Pane::View ( );
__declspec(implementation_key(2809)) _MSProjectPtr Window::GetApplication ( );
__declspec(implementation_key(2810)) IDispatchPtr Window::GetParent ( );
__declspec(implementation_key(2811)) _variant_t Window::GetIndex ( );
__declspec(implementation_key(2812)) PanePtr Window::GetActivePane ( );
__declspec(implementation_key(2813)) PanePtr Window::GetTopPane ( );
__declspec(implementation_key(2814)) PanePtr Window::GetBottomPane ( );
__declspec(implementation_key(2815)) HRESULT Window::Close ( );
__declspec(implementation_key(2816)) HRESULT Window::Activate ( );
// __declspec(implementation_key(2817)) IHTMLDocument2Ptr Window::WebBrowserControlWindow ( );
// __declspec(implementation_key(2818)) IHTMLDocument2Ptr Window::WebBrowserControlFrame ( const _variant_t & FrameName );
__declspec(implementation_key(2819)) HRESULT Window::Refresh ( );
__declspec(implementation_key(2820)) _bstr_t Window::GetCaption ( );
__declspec(implementation_key(2821)) void Window::PutCaption ( _bstr_t _val );
__declspec(implementation_key(2822)) VARIANT_BOOL Window::GetVisible ( );
__declspec(implementation_key(2823)) void Window::PutVisible ( VARIANT_BOOL _val );
__declspec(implementation_key(2824)) enum PjWindowState Window::GetWindowState ( );
__declspec(implementation_key(2825)) void Window::PutWindowState ( enum PjWindowState _val );
__declspec(implementation_key(2826)) long Window::GetLeft ( );
__declspec(implementation_key(2827)) void Window::PutLeft ( long _val );
__declspec(implementation_key(2828)) long Window::GetTop ( );
__declspec(implementation_key(2829)) void Window::PutTop ( long _val );
__declspec(implementation_key(2830)) long Window::GetWidth ( );
__declspec(implementation_key(2831)) void Window::PutWidth ( long _val );
__declspec(implementation_key(2832)) long Window::GetHeight ( );
__declspec(implementation_key(2833)) void Window::PutHeight ( long _val );
__declspec(implementation_key(2834)) _MSProjectPtr Windows::GetApplication ( );
__declspec(implementation_key(2835)) IDispatchPtr Windows::GetParent ( );
__declspec(implementation_key(2836)) WindowPtr Windows::GetActiveWindow ( );
__declspec(implementation_key(2837)) long Windows::GetCount ( );
__declspec(implementation_key(2838)) WindowPtr Windows::GetItem ( const _variant_t & Index );
__declspec(implementation_key(2839)) _variant_t SplitPart::GetStart ( );
__declspec(implementation_key(2840)) void SplitPart::PutStart ( const _variant_t & retval );
__declspec(implementation_key(2841)) _variant_t SplitPart::GetFinish ( );
__declspec(implementation_key(2842)) void SplitPart::PutFinish ( const _variant_t & retval );
__declspec(implementation_key(2843)) long SplitPart::GetIndex ( );
__declspec(implementation_key(2844)) IDispatchPtr SplitPart::GetParent ( );
__declspec(implementation_key(2845)) _MSProjectPtr SplitPart::GetApplication ( );
__declspec(implementation_key(2846)) HRESULT SplitPart::Delete ( );
__declspec(implementation_key(2847)) long SplitParts::GetCount ( );
__declspec(implementation_key(2848)) HRESULT SplitParts::Add ( const _variant_t & StartSplitPartOn, const _variant_t & EndSplitPartOn );
__declspec(implementation_key(2849)) IUnknownPtr SplitParts::Get_NewEnum ( );
__declspec(implementation_key(2850)) SplitPartPtr SplitParts::GetItem ( long Index );
__declspec(implementation_key(2851)) IDispatchPtr SplitParts::GetParent ( );
__declspec(implementation_key(2852)) _MSProjectPtr SplitParts::GetApplication ( );
__declspec(implementation_key(2853)) _MSProjectPtr Tasks::GetApplication ( );
__declspec(implementation_key(2854)) _IProjectDocPtr Tasks::GetParent ( );
__declspec(implementation_key(2855)) long Tasks::GetCount ( );
__declspec(implementation_key(2856)) TaskPtr Tasks::GetUniqueID ( long Index );
__declspec(implementation_key(2857)) TaskPtr Tasks::Add ( const _variant_t & Name, const _variant_t & Before );
__declspec(implementation_key(2858)) TaskPtr Tasks::GetItem ( const _variant_t & Index );
__declspec(implementation_key(2859)) IUnknownPtr Tasks::Get_NewEnum ( );
__declspec(implementation_key(2860)) _MSProjectPtr Resources::GetApplication ( );
__declspec(implementation_key(2861)) _IProjectDocPtr Resources::GetParent ( );
__declspec(implementation_key(2862)) long Resources::GetCount ( );
__declspec(implementation_key(2863)) ResourcePtr Resources::GetUniqueID ( long Index );
__declspec(implementation_key(2864)) ResourcePtr Resources::Add ( const _variant_t & Name, const _variant_t & Before );
__declspec(implementation_key(2865)) ResourcePtr Resources::GetItem ( const _variant_t & Index );
__declspec(implementation_key(2866)) IUnknownPtr Resources::Get_NewEnum ( );
__declspec(implementation_key(2867)) _MSProjectPtr Assignments::GetApplication ( );
__declspec(implementation_key(2868)) _IProjectDocPtr Assignments::GetParent ( );
__declspec(implementation_key(2869)) long Assignments::GetCount ( );
__declspec(implementation_key(2870)) AssignmentPtr Assignments::GetUniqueID ( long Index );
__declspec(implementation_key(2871)) AssignmentPtr Assignments::Add ( const _variant_t & TaskID, const _variant_t & ResourceID, const _variant_t & Units );
__declspec(implementation_key(2872)) AssignmentPtr Assignments::GetItem ( const _variant_t & Index );
__declspec(implementation_key(2873)) IUnknownPtr Assignments::Get_NewEnum ( );
__declspec(implementation_key(2874)) _MSProjectPtr Calendars::GetApplication ( );
__declspec(implementation_key(2875)) _IProjectDocPtr Calendars::GetParent ( );
__declspec(implementation_key(2876)) long Calendars::GetCount ( );
__declspec(implementation_key(2877)) CalendarPtr Calendars::GetItem ( const _variant_t & Index );
__declspec(implementation_key(2878)) IUnknownPtr Calendars::Get_NewEnum ( );
__declspec(implementation_key(2879)) _bstr_t _IProjectDoc::Get_CodeName ( );
__declspec(implementation_key(2880)) HRESULT _IProjectDoc::Put_CodeName ( _bstr_t _arg1 );
__declspec(implementation_key(2881)) _bstr_t _IProjectDoc::GetCodeName ( );
__declspec(implementation_key(2882)) TasksPtr _IProjectDoc::GetOutlineChildren ( );
__declspec(implementation_key(2883)) _variant_t _IProjectDoc::GetCostVariance ( );
__declspec(implementation_key(2884)) TaskPtr _IProjectDoc::GetProjectSummaryTask ( );
__declspec(implementation_key(2885)) _variant_t _IProjectDoc::GetRemainingCost ( );
__declspec(implementation_key(2886)) _variant_t _IProjectDoc::GetBCWP ( );
__declspec(implementation_key(2887)) _variant_t _IProjectDoc::GetBCWS ( );
__declspec(implementation_key(2888)) _variant_t _IProjectDoc::GetSV ( );
__declspec(implementation_key(2889)) _variant_t _IProjectDoc::GetCV ( );
__declspec(implementation_key(2890)) _bstr_t _IProjectDoc::GetOutlineNumber ( );
__declspec(implementation_key(2891)) _variant_t _IProjectDoc::GetCritical ( );
__declspec(implementation_key(2892)) _variant_t _IProjectDoc::GetFreeSlack ( );
__declspec(implementation_key(2893)) _variant_t _IProjectDoc::GetTotalSlack ( );
__declspec(implementation_key(2894)) long _IProjectDoc::GetUniqueID ( );
__declspec(implementation_key(2895)) int _IProjectDoc::GetOutlineLevel ( );
__declspec(implementation_key(2896)) _variant_t _IProjectDoc::GetBaselineDuration ( );
__declspec(implementation_key(2897)) _variant_t _IProjectDoc::GetDurationVariance ( );
__declspec(implementation_key(2898)) _variant_t _IProjectDoc::GetEarlyStart ( );
__declspec(implementation_key(2899)) _variant_t _IProjectDoc::GetEarlyFinish ( );
__declspec(implementation_key(2900)) _variant_t _IProjectDoc::GetLateStart ( );
__declspec(implementation_key(2901)) _variant_t _IProjectDoc::GetStartVariance ( );
__declspec(implementation_key(2902)) _variant_t _IProjectDoc::GetFinishVariance ( );
__declspec(implementation_key(2903)) _variant_t _IProjectDoc::GetProject ( );
__declspec(implementation_key(2904)) _variant_t _IProjectDoc::GetMilestone ( );
__declspec(implementation_key(2905)) _variant_t _IProjectDoc::GetRemainingDuration ( );
__declspec(implementation_key(2906)) _variant_t _IProjectDoc::GetPercentComplete ( );
__declspec(implementation_key(2907)) _variant_t _IProjectDoc::GetStart ( );
__declspec(implementation_key(2908)) _variant_t _IProjectDoc::GetFinish ( );
__declspec(implementation_key(2909)) _variant_t _IProjectDoc::GetResourceNames ( );
__declspec(implementation_key(2910)) _variant_t _IProjectDoc::GetResourceInitials ( );
__declspec(implementation_key(2911)) _variant_t _IProjectDoc::GetResume ( );
__declspec(implementation_key(2912)) _variant_t _IProjectDoc::GetStop ( );
__declspec(implementation_key(2913)) _variant_t _IProjectDoc::GetResumeNoEarlierThan ( );
__declspec(implementation_key(2914)) _variant_t _IProjectDoc::GetConstraintType ( );
__declspec(implementation_key(2915)) _variant_t _IProjectDoc::GetConstraintDate ( );
__declspec(implementation_key(2916)) _variant_t _IProjectDoc::GetActualCost ( );
__declspec(implementation_key(2917)) _variant_t _IProjectDoc::GetCost ( );
__declspec(implementation_key(2918)) _variant_t _IProjectDoc::GetCreated ( );
__declspec(implementation_key(2919)) _variant_t _IProjectDoc::GetActualDuration ( );
__declspec(implementation_key(2920)) _variant_t _IProjectDoc::GetDuration ( );
__declspec(implementation_key(2921)) _variant_t _IProjectDoc::GetLateFinish ( );
__declspec(implementation_key(2922)) _variant_t _IProjectDoc::GetActualFinish ( );
__declspec(implementation_key(2923)) long _IProjectDoc::GetObjects ( );
__declspec(implementation_key(2924)) _variant_t _IProjectDoc::GetRemainingWork ( );
__declspec(implementation_key(2925)) _variant_t _IProjectDoc::GetResourceGroup ( );
__declspec(implementation_key(2926)) _variant_t _IProjectDoc::GetActualStart ( );
__declspec(implementation_key(2927)) _variant_t _IProjectDoc::GetSummary ( );
__declspec(implementation_key(2928)) _bstr_t _IProjectDoc::GetTemplate ( );
__declspec(implementation_key(2929)) _variant_t _IProjectDoc::GetUpdateNeeded ( );
__declspec(implementation_key(2930)) _variant_t _IProjectDoc::GetWork ( );
__declspec(implementation_key(2931)) _variant_t _IProjectDoc::GetWorkVariance ( );
__declspec(implementation_key(2932)) _variant_t _IProjectDoc::GetLinkedFields ( );
__declspec(implementation_key(2933)) _variant_t _IProjectDoc::GetConfirmed ( );
__declspec(implementation_key(2934)) VARIANT_BOOL _IProjectDoc::GetReadOnly ( );
__declspec(implementation_key(2935)) VARIANT_BOOL _IProjectDoc::GetHasPassword ( );
__declspec(implementation_key(2936)) VARIANT_BOOL _IProjectDoc::GetWriteReserved ( );
__declspec(implementation_key(2937)) _MSProjectPtr _IProjectDoc::GetApplication ( );
__declspec(implementation_key(2938)) IDispatchPtr _IProjectDoc::GetParent ( );
__declspec(implementation_key(2939)) _variant_t _IProjectDoc::GetIndex ( );
__declspec(implementation_key(2940)) HRESULT _IProjectDoc::SaveAs ( const _variant_t & Name, enum PjFileFormat Format, const _variant_t & Backup, const _variant_t & ReadOnly, const _variant_t & TaskInformation, const _variant_t & Filtered, const _variant_t & Table, const _variant_t & UserID, const _variant_t & DatabasePassWord, const _variant_t & FormatID, const _variant_t & Map, const _variant_t & ClearBaseline, const _variant_t & ClearActuals, const _variant_t & ClearResourceRates, const _variant_t & ClearFixedCosts );
__declspec(implementation_key(2941)) ListPtr _IProjectDoc::GetMapList ( );
__declspec(implementation_key(2942)) TasksPtr _IProjectDoc::GetTasks ( );
__declspec(implementation_key(2943)) ResourcesPtr _IProjectDoc::GetResources ( );
__declspec(implementation_key(2944)) CalendarsPtr _IProjectDoc::GetBaseCalendars ( );
__declspec(implementation_key(2945)) IDispatchPtr _IProjectDoc::GetBuiltinDocumentProperties ( );
__declspec(implementation_key(2946)) IDispatchPtr _IProjectDoc::GetCustomDocumentProperties ( );
__declspec(implementation_key(2947)) IDispatchPtr _IProjectDoc::GetContainer ( );
__declspec(implementation_key(2948)) CalendarPtr _IProjectDoc::GetCalendar ( );
__declspec(implementation_key(2949)) long _IProjectDoc::GetNumberOfTasks ( );
__declspec(implementation_key(2950)) long _IProjectDoc::GetNumberOfResources ( );
__declspec(implementation_key(2951)) _bstr_t _IProjectDoc::GetFullName ( );
__declspec(implementation_key(2952)) _bstr_t _IProjectDoc::GetPath ( );
__declspec(implementation_key(2953)) _bstr_t _IProjectDoc::GetResourcePoolName ( );
__declspec(implementation_key(2954)) VARIANT_BOOL _IProjectDoc::GetSaved ( );
__declspec(implementation_key(2955)) _variant_t _IProjectDoc::GetCreationDate ( );
__declspec(implementation_key(2956)) _variant_t _IProjectDoc::GetLastPrintedDate ( );
__declspec(implementation_key(2957)) _variant_t _IProjectDoc::GetLastSaveDate ( );
__declspec(implementation_key(2958)) _bstr_t _IProjectDoc::GetLastSavedBy ( );
__declspec(implementation_key(2959)) _bstr_t _IProjectDoc::GetRevisionNumber ( );
__declspec(implementation_key(2960)) ListPtr _IProjectDoc::GetViewList ( );
__declspec(implementation_key(2961)) ListPtr _IProjectDoc::GetTaskViewList ( );
__declspec(implementation_key(2962)) ListPtr _IProjectDoc::GetResourceViewList ( );
__declspec(implementation_key(2963)) VARIANT_BOOL _IProjectDoc::GetReadOnlyRecommended ( );
__declspec(implementation_key(2964)) ListPtr _IProjectDoc::GetReportList ( );
__declspec(implementation_key(2965)) ListPtr _IProjectDoc::GetTaskFilterList ( );
__declspec(implementation_key(2966)) ListPtr _IProjectDoc::GetResourceFilterList ( );
__declspec(implementation_key(2967)) ListPtr _IProjectDoc::GetTaskTableList ( );
__declspec(implementation_key(2968)) ListPtr _IProjectDoc::GetResourceTableList ( );
__declspec(implementation_key(2969)) _bstr_t _IProjectDoc::GetCurrentView ( );
__declspec(implementation_key(2970)) _bstr_t _IProjectDoc::GetCurrentTable ( );
__declspec(implementation_key(2971)) _bstr_t _IProjectDoc::GetCurrentFilter ( );
__declspec(implementation_key(2972)) long _IProjectDoc::GetID ( );
//__declspec(implementation_key(2973)) _CommandBarsPtr _IProjectDoc::GetCommandBars ( );
__declspec(implementation_key(2974)) VARIANT_BOOL _IProjectDoc::GetUserControl ( );
//__declspec(implementation_key(2975)) _VBProjectPtr _IProjectDoc::GetVBProject ( );
__declspec(implementation_key(2976)) HRESULT _IProjectDoc::Activate ( );
__declspec(implementation_key(2977)) HRESULT _IProjectDoc::LevelClearDates ( );
__declspec(implementation_key(2978)) HRESULT _IProjectDoc::AppendNotes ( _bstr_t Value );
__declspec(implementation_key(2979)) SubprojectsPtr _IProjectDoc::GetSubprojects ( );
__declspec(implementation_key(2980)) _bstr_t _IProjectDoc::GetCurrentGroup ( );
__declspec(implementation_key(2981)) ListPtr _IProjectDoc::GetTaskGroupList ( );
__declspec(implementation_key(2982)) ListPtr _IProjectDoc::GetResourceGroupList ( );
__declspec(implementation_key(2983)) TaskGroupsPtr _IProjectDoc::GetTaskGroups ( );
__declspec(implementation_key(2984)) ResourceGroupsPtr _IProjectDoc::GetResourceGroups ( );
__declspec(implementation_key(2985)) enum PjProjectType _IProjectDoc::GetType ( );
__declspec(implementation_key(2986)) ViewsPtr _IProjectDoc::GetViews ( );
__declspec(implementation_key(2987)) TablesPtr _IProjectDoc::GetTaskTables ( );
__declspec(implementation_key(2988)) TablesPtr _IProjectDoc::GetResourceTables ( );
__declspec(implementation_key(2989)) FiltersPtr _IProjectDoc::GetTaskFilters ( );
__declspec(implementation_key(2990)) FiltersPtr _IProjectDoc::GetResourceFilters ( );
__declspec(implementation_key(2991)) ViewsSinglePtr _IProjectDoc::GetViewsSingle ( );
__declspec(implementation_key(2992)) ViewsCombinationPtr _IProjectDoc::GetViewsCombination ( );
__declspec(implementation_key(2993)) _variant_t _IProjectDoc::GetBaselineSavedDate ( enum PjBaselines Baseline );
__declspec(implementation_key(2994)) _bstr_t _IProjectDoc::GetProjectNamePrefix ( );
__declspec(implementation_key(2995)) _bstr_t _IProjectDoc::GetVersionName ( );
__declspec(implementation_key(2996)) HRESULT _IProjectDoc::MakeServerURLTrusted ( );
__declspec(implementation_key(2997)) long _IProjectDoc::GetTempToDoList ( );
__declspec(implementation_key(2998)) HRESULT _IProjectDoc::PutTempToDoList ( long _arg1 );
__declspec(implementation_key(2999)) _variant_t _IProjectDoc::GetManager ( );
__declspec(implementation_key(3000)) void _IProjectDoc::PutManager ( const _variant_t & _val );
__declspec(implementation_key(3001)) _variant_t _IProjectDoc::GetCompany ( );
__declspec(implementation_key(3002)) void _IProjectDoc::PutCompany ( const _variant_t & _val );
__declspec(implementation_key(3003)) _variant_t _IProjectDoc::GetAuthor ( );
__declspec(implementation_key(3004)) void _IProjectDoc::PutAuthor ( const _variant_t & _val );
__declspec(implementation_key(3005)) _variant_t _IProjectDoc::GetKeywords ( );
__declspec(implementation_key(3006)) void _IProjectDoc::PutKeywords ( const _variant_t & _val );
__declspec(implementation_key(3007)) _bstr_t _IProjectDoc::GetProjectNotes ( );
__declspec(implementation_key(3008)) void _IProjectDoc::PutProjectNotes ( _bstr_t _val );
__declspec(implementation_key(3009)) _variant_t _IProjectDoc::GetProjectStart ( );
__declspec(implementation_key(3010)) void _IProjectDoc::PutProjectStart ( const _variant_t & _val );
__declspec(implementation_key(3011)) _variant_t _IProjectDoc::GetProjectFinish ( );
__declspec(implementation_key(3012)) void _IProjectDoc::PutProjectFinish ( const _variant_t & _val );
__declspec(implementation_key(3013)) _variant_t _IProjectDoc::GetCurrentDate ( );
__declspec(implementation_key(3014)) void _IProjectDoc::PutCurrentDate ( const _variant_t & _val );
__declspec(implementation_key(3015)) _variant_t _IProjectDoc::GetStatusDate ( );
__declspec(implementation_key(3016)) void _IProjectDoc::PutStatusDate ( const _variant_t & _val );
__declspec(implementation_key(3017)) VARIANT_BOOL _IProjectDoc::GetScheduleFromStart ( );
__declspec(implementation_key(3018)) void _IProjectDoc::PutScheduleFromStart ( VARIANT_BOOL _val );
__declspec(implementation_key(3019)) _variant_t _IProjectDoc::GetComments ( );
__declspec(implementation_key(3020)) void _IProjectDoc::PutComments ( const _variant_t & _val );
__declspec(implementation_key(3021)) _variant_t _IProjectDoc::GetTitle ( );
__declspec(implementation_key(3022)) void _IProjectDoc::PutTitle ( const _variant_t & _val );
__declspec(implementation_key(3023)) _variant_t _IProjectDoc::GetSubject ( );
__declspec(implementation_key(3024)) void _IProjectDoc::PutSubject ( const _variant_t & _val );
__declspec(implementation_key(3025)) WindowsPtr _IProjectDoc::GetWindows ( );
__declspec(implementation_key(3026)) void _IProjectDoc::PutWindows ( struct Windows * _val );
__declspec(implementation_key(3027)) short _IProjectDoc::GetMinuteLabelDisplay ( );
__declspec(implementation_key(3028)) void _IProjectDoc::PutMinuteLabelDisplay ( short _val );
__declspec(implementation_key(3029)) short _IProjectDoc::GetHourLabelDisplay ( );
__declspec(implementation_key(3030)) void _IProjectDoc::PutHourLabelDisplay ( short _val );
__declspec(implementation_key(3031)) short _IProjectDoc::GetDayLabelDisplay ( );
__declspec(implementation_key(3032)) void _IProjectDoc::PutDayLabelDisplay ( short _val );
__declspec(implementation_key(3033)) short _IProjectDoc::GetWeekLabelDisplay ( );
__declspec(implementation_key(3034)) void _IProjectDoc::PutWeekLabelDisplay ( short _val );
__declspec(implementation_key(3035)) short _IProjectDoc::GetYearLabelDisplay ( );
__declspec(implementation_key(3036)) void _IProjectDoc::PutYearLabelDisplay ( short _val );
__declspec(implementation_key(3037)) short _IProjectDoc::GetMonthLabelDisplay ( );
__declspec(implementation_key(3038)) void _IProjectDoc::PutMonthLabelDisplay ( short _val );
__declspec(implementation_key(3039)) VARIANT_BOOL _IProjectDoc::GetSpaceBeforeTimeLabels ( );
__declspec(implementation_key(3040)) void _IProjectDoc::PutSpaceBeforeTimeLabels ( VARIANT_BOOL _val );
__declspec(implementation_key(3041)) enum PjTaskFixedType _IProjectDoc::GetDefaultTaskType ( );
__declspec(implementation_key(3042)) void _IProjectDoc::PutDefaultTaskType ( enum PjTaskFixedType _val );
__declspec(implementation_key(3043)) VARIANT_BOOL _IProjectDoc::GetDefaultEffortDriven ( );
__declspec(implementation_key(3044)) void _IProjectDoc::PutDefaultEffortDriven ( VARIANT_BOOL _val );
__declspec(implementation_key(3045)) VARIANT_BOOL _IProjectDoc::GetUseFYStartYear ( );
__declspec(implementation_key(3046)) void _IProjectDoc::PutUseFYStartYear ( VARIANT_BOOL _val );
__declspec(implementation_key(3047)) VARIANT_BOOL _IProjectDoc::GetAutoFilter ( );
__declspec(implementation_key(3048)) void _IProjectDoc::PutAutoFilter ( VARIANT_BOOL _val );
__declspec(implementation_key(3049)) VARIANT_BOOL _IProjectDoc::GetHonorConstraints ( );
__declspec(implementation_key(3050)) void _IProjectDoc::PutHonorConstraints ( VARIANT_BOOL _val );
__declspec(implementation_key(3051)) VARIANT_BOOL _IProjectDoc::GetMultipleCriticalPaths ( );
__declspec(implementation_key(3052)) void _IProjectDoc::PutMultipleCriticalPaths ( VARIANT_BOOL _val );
__declspec(implementation_key(3053)) _variant_t _IProjectDoc::GetLevelFromDate ( );
__declspec(implementation_key(3054)) void _IProjectDoc::PutLevelFromDate ( const _variant_t & _val );
__declspec(implementation_key(3055)) _variant_t _IProjectDoc::GetLevelToDate ( );
__declspec(implementation_key(3056)) void _IProjectDoc::PutLevelToDate ( const _variant_t & _val );
__declspec(implementation_key(3057)) VARIANT_BOOL _IProjectDoc::GetLevelEntireProject ( );
__declspec(implementation_key(3058)) void _IProjectDoc::PutLevelEntireProject ( VARIANT_BOOL _val );
__declspec(implementation_key(3059)) enum PjAccrueAt _IProjectDoc::GetDefaultFixedCostAccrual ( );
__declspec(implementation_key(3060)) void _IProjectDoc::PutDefaultFixedCostAccrual ( enum PjAccrueAt _val );
__declspec(implementation_key(3061)) VARIANT_BOOL _IProjectDoc::GetSpreadCostsToStatusDate ( );
__declspec(implementation_key(3062)) void _IProjectDoc::PutSpreadCostsToStatusDate ( VARIANT_BOOL _val );
__declspec(implementation_key(3063)) VARIANT_BOOL _IProjectDoc::GetSpreadPercentCompleteToStatusDate ( );
__declspec(implementation_key(3064)) void _IProjectDoc::PutSpreadPercentCompleteToStatusDate ( VARIANT_BOOL _val );
__declspec(implementation_key(3065)) VARIANT_BOOL _IProjectDoc::GetAutoCalcCosts ( );
__declspec(implementation_key(3066)) void _IProjectDoc::PutAutoCalcCosts ( VARIANT_BOOL _val );
__declspec(implementation_key(3067)) VARIANT_BOOL _IProjectDoc::GetShowExternalSuccessors ( );
__declspec(implementation_key(3068)) void _IProjectDoc::PutShowExternalSuccessors ( VARIANT_BOOL _val );
__declspec(implementation_key(3069)) VARIANT_BOOL _IProjectDoc::GetShowExternalPredecessors ( );
__declspec(implementation_key(3070)) void _IProjectDoc::PutShowExternalPredecessors ( VARIANT_BOOL _val );
__declspec(implementation_key(3071)) VARIANT_BOOL _IProjectDoc::GetShowCrossProjectLinksInfo ( );
__declspec(implementation_key(3072)) void _IProjectDoc::PutShowCrossProjectLinksInfo ( VARIANT_BOOL _val );
__declspec(implementation_key(3073)) VARIANT_BOOL _IProjectDoc::GetAcceptNewExternalData ( );
__declspec(implementation_key(3074)) void _IProjectDoc::PutAcceptNewExternalData ( VARIANT_BOOL _val );
__declspec(implementation_key(3075)) enum PjPhoneticType _IProjectDoc::GetPhoneticType ( );
__declspec(implementation_key(3076)) void _IProjectDoc::PutPhoneticType ( enum PjPhoneticType _val );
__declspec(implementation_key(3077)) enum PjWorkgroupMessages _IProjectDoc::GetWorkgroupMessages ( );
__declspec(implementation_key(3078)) void _IProjectDoc::PutWorkgroupMessages ( enum PjWorkgroupMessages _val );
__declspec(implementation_key(3079)) _bstr_t _IProjectDoc::GetServerURL ( );
__declspec(implementation_key(3080)) void _IProjectDoc::PutServerURL ( _bstr_t _val );
__declspec(implementation_key(3081)) _bstr_t _IProjectDoc::GetServerPath ( );
__declspec(implementation_key(3082)) void _IProjectDoc::PutServerPath ( _bstr_t _val );
__declspec(implementation_key(3083)) VARIANT_BOOL _IProjectDoc::GetReceiveNotifications ( );
__declspec(implementation_key(3084)) void _IProjectDoc::PutReceiveNotifications ( VARIANT_BOOL _val );
__declspec(implementation_key(3085)) VARIANT_BOOL _IProjectDoc::GetSendHyperlinkNote ( );
__declspec(implementation_key(3086)) void _IProjectDoc::PutSendHyperlinkNote ( VARIANT_BOOL _val );
__declspec(implementation_key(3087)) enum PjColor _IProjectDoc::GetHyperlinkColor ( );
__declspec(implementation_key(3088)) void _IProjectDoc::PutHyperlinkColor ( enum PjColor _val );
__declspec(implementation_key(3089)) enum PjColor _IProjectDoc::GetFollowedHyperlinkColor ( );
__declspec(implementation_key(3090)) void _IProjectDoc::PutFollowedHyperlinkColor ( enum PjColor _val );
__declspec(implementation_key(3091)) VARIANT_BOOL _IProjectDoc::GetUnderlineHyperlinks ( );
__declspec(implementation_key(3092)) void _IProjectDoc::PutUnderlineHyperlinks ( VARIANT_BOOL _val );
__declspec(implementation_key(3093)) enum PjTeamStatusCompletedWork _IProjectDoc::GetAskForCompletedWork ( );
__declspec(implementation_key(3094)) void _IProjectDoc::PutAskForCompletedWork ( enum PjTeamStatusCompletedWork _val );
__declspec(implementation_key(3095)) VARIANT_BOOL _IProjectDoc::GetTrackOvertimeWork ( );
__declspec(implementation_key(3096)) void _IProjectDoc::PutTrackOvertimeWork ( VARIANT_BOOL _val );
__declspec(implementation_key(3097)) VARIANT_BOOL _IProjectDoc::GetTeamMembersCanDeclineTasks ( );
__declspec(implementation_key(3098)) void _IProjectDoc::PutTeamMembersCanDeclineTasks ( VARIANT_BOOL _val );
__declspec(implementation_key(3099)) VARIANT_BOOL _IProjectDoc::GetShowEstimatedDuration ( );
__declspec(implementation_key(3100)) void _IProjectDoc::PutShowEstimatedDuration ( VARIANT_BOOL _val );
__declspec(implementation_key(3101)) VARIANT_BOOL _IProjectDoc::GetNewTasksEstimated ( );
__declspec(implementation_key(3102)) void _IProjectDoc::PutNewTasksEstimated ( VARIANT_BOOL _val );
__declspec(implementation_key(3103)) VARIANT_BOOL _IProjectDoc::GetWBSCodeGenerate ( );
__declspec(implementation_key(3104)) void _IProjectDoc::PutWBSCodeGenerate ( VARIANT_BOOL _val );
__declspec(implementation_key(3105)) VARIANT_BOOL _IProjectDoc::GetWBSVerifyUniqueness ( );
__declspec(implementation_key(3106)) void _IProjectDoc::PutWBSVerifyUniqueness ( VARIANT_BOOL _val );
__declspec(implementation_key(3107)) VARIANT_BOOL _IProjectDoc::GetUpdateProjOnSave ( );
__declspec(implementation_key(3108)) void _IProjectDoc::PutUpdateProjOnSave ( VARIANT_BOOL _val );
__declspec(implementation_key(3109)) enum PjAuthentication _IProjectDoc::GetServerIdentification ( );
__declspec(implementation_key(3110)) void _IProjectDoc::PutServerIdentification ( enum PjAuthentication _val );
__declspec(implementation_key(3111)) VARIANT_BOOL _IProjectDoc::GetVBASigned ( );
__declspec(implementation_key(3112)) void _IProjectDoc::PutVBASigned ( VARIANT_BOOL _val );
__declspec(implementation_key(3113)) VARIANT_BOOL _IProjectDoc::GetExpandDatabaseTimephasedData ( );
__declspec(implementation_key(3114)) void _IProjectDoc::PutExpandDatabaseTimephasedData ( VARIANT_BOOL _val );
__declspec(implementation_key(3115)) _variant_t _IProjectDoc::GetDatabaseProjectUniqueID ( );
__declspec(implementation_key(3116)) void _IProjectDoc::PutDatabaseProjectUniqueID ( const _variant_t & _val );
__declspec(implementation_key(3117)) _variant_t _IProjectDoc::GetActualWork ( );
__declspec(implementation_key(3118)) void _IProjectDoc::PutActualWork ( const _variant_t & _val );
__declspec(implementation_key(3119)) _variant_t _IProjectDoc::GetCost1 ( );
__declspec(implementation_key(3120)) void _IProjectDoc::PutCost1 ( const _variant_t & _val );
__declspec(implementation_key(3121)) _variant_t _IProjectDoc::GetCost2 ( );
__declspec(implementation_key(3122)) void _IProjectDoc::PutCost2 ( const _variant_t & _val );
__declspec(implementation_key(3123)) _variant_t _IProjectDoc::GetCost3 ( );
__declspec(implementation_key(3124)) void _IProjectDoc::PutCost3 ( const _variant_t & _val );
__declspec(implementation_key(3125)) _variant_t _IProjectDoc::GetBaselineWork ( );
__declspec(implementation_key(3126)) void _IProjectDoc::PutBaselineWork ( const _variant_t & _val );
__declspec(implementation_key(3127)) _variant_t _IProjectDoc::GetBaselineCost ( );
__declspec(implementation_key(3128)) void _IProjectDoc::PutBaselineCost ( const _variant_t & _val );
__declspec(implementation_key(3129)) _variant_t _IProjectDoc::GetFixedCost ( );
__declspec(implementation_key(3130)) void _IProjectDoc::PutFixedCost ( const _variant_t & _val );
__declspec(implementation_key(3131)) _bstr_t _IProjectDoc::GetWBS ( );
__declspec(implementation_key(3132)) void _IProjectDoc::PutWBS ( _bstr_t _val );
__declspec(implementation_key(3133)) _variant_t _IProjectDoc::GetDelay ( );
__declspec(implementation_key(3134)) void _IProjectDoc::PutDelay ( const _variant_t & _val );
__declspec(implementation_key(3135)) _variant_t _IProjectDoc::GetPriority ( );
__declspec(implementation_key(3136)) void _IProjectDoc::PutPriority ( const _variant_t & _val );
__declspec(implementation_key(3137)) _variant_t _IProjectDoc::GetDuration1 ( );
__declspec(implementation_key(3138)) void _IProjectDoc::PutDuration1 ( const _variant_t & _val );
__declspec(implementation_key(3139)) _variant_t _IProjectDoc::GetDuration2 ( );
__declspec(implementation_key(3140)) void _IProjectDoc::PutDuration2 ( const _variant_t & _val );
__declspec(implementation_key(3141)) _variant_t _IProjectDoc::GetDuration3 ( );
__declspec(implementation_key(3142)) void _IProjectDoc::PutDuration3 ( const _variant_t & _val );
__declspec(implementation_key(3143)) _variant_t _IProjectDoc::GetPercentWorkComplete ( );
__declspec(implementation_key(3144)) void _IProjectDoc::PutPercentWorkComplete ( const _variant_t & _val );
__declspec(implementation_key(3145)) _variant_t _IProjectDoc::GetFixedDuration ( );
__declspec(implementation_key(3146)) void _IProjectDoc::PutFixedDuration ( const _variant_t & _val );
__declspec(implementation_key(3147)) _variant_t _IProjectDoc::GetBaselineStart ( );
__declspec(implementation_key(3148)) void _IProjectDoc::PutBaselineStart ( const _variant_t & _val );
__declspec(implementation_key(3149)) _variant_t _IProjectDoc::GetBaselineFinish ( );
__declspec(implementation_key(3150)) void _IProjectDoc::PutBaselineFinish ( const _variant_t & _val );
__declspec(implementation_key(3151)) _bstr_t _IProjectDoc::GetText1 ( );
__declspec(implementation_key(3152)) void _IProjectDoc::PutText1 ( _bstr_t _val );
__declspec(implementation_key(3153)) _variant_t _IProjectDoc::GetStart1 ( );
__declspec(implementation_key(3154)) void _IProjectDoc::PutStart1 ( const _variant_t & _val );
__declspec(implementation_key(3155)) _variant_t _IProjectDoc::GetFinish1 ( );
__declspec(implementation_key(3156)) void _IProjectDoc::PutFinish1 ( const _variant_t & _val );
__declspec(implementation_key(3157)) _bstr_t _IProjectDoc::GetText2 ( );
__declspec(implementation_key(3158)) void _IProjectDoc::PutText2 ( _bstr_t _val );
__declspec(implementation_key(3159)) _variant_t _IProjectDoc::GetStart2 ( );
__declspec(implementation_key(3160)) void _IProjectDoc::PutStart2 ( const _variant_t & _val );
__declspec(implementation_key(3161)) _variant_t _IProjectDoc::GetFinish2 ( );
__declspec(implementation_key(3162)) void _IProjectDoc::PutFinish2 ( const _variant_t & _val );
__declspec(implementation_key(3163)) _bstr_t _IProjectDoc::GetText3 ( );
__declspec(implementation_key(3164)) void _IProjectDoc::PutText3 ( _bstr_t _val );
__declspec(implementation_key(3165)) _variant_t _IProjectDoc::GetStart3 ( );
__declspec(implementation_key(3166)) void _IProjectDoc::PutStart3 ( const _variant_t & _val );
__declspec(implementation_key(3167)) _variant_t _IProjectDoc::GetFinish3 ( );
__declspec(implementation_key(3168)) void _IProjectDoc::PutFinish3 ( const _variant_t & _val );
__declspec(implementation_key(3169)) _bstr_t _IProjectDoc::GetText4 ( );
__declspec(implementation_key(3170)) void _IProjectDoc::PutText4 ( _bstr_t _val );
__declspec(implementation_key(3171)) _variant_t _IProjectDoc::GetStart4 ( );
__declspec(implementation_key(3172)) void _IProjectDoc::PutStart4 ( const _variant_t & _val );
__declspec(implementation_key(3173)) _variant_t _IProjectDoc::GetFinish4 ( );
__declspec(implementation_key(3174)) void _IProjectDoc::PutFinish4 ( const _variant_t & _val );
__declspec(implementation_key(3175)) _bstr_t _IProjectDoc::GetText5 ( );
__declspec(implementation_key(3176)) void _IProjectDoc::PutText5 ( _bstr_t _val );
__declspec(implementation_key(3177)) _variant_t _IProjectDoc::GetStart5 ( );
__declspec(implementation_key(3178)) void _IProjectDoc::PutStart5 ( const _variant_t & _val );
__declspec(implementation_key(3179)) _variant_t _IProjectDoc::GetFinish5 ( );
__declspec(implementation_key(3180)) void _IProjectDoc::PutFinish5 ( const _variant_t & _val );
__declspec(implementation_key(3181)) _bstr_t _IProjectDoc::GetText6 ( );
__declspec(implementation_key(3182)) void _IProjectDoc::PutText6 ( _bstr_t _val );
__declspec(implementation_key(3183)) _bstr_t _IProjectDoc::GetText7 ( );
__declspec(implementation_key(3184)) void _IProjectDoc::PutText7 ( _bstr_t _val );
__declspec(implementation_key(3185)) _bstr_t _IProjectDoc::GetText8 ( );
__declspec(implementation_key(3186)) void _IProjectDoc::PutText8 ( _bstr_t _val );
__declspec(implementation_key(3187)) _bstr_t _IProjectDoc::GetText9 ( );
__declspec(implementation_key(3188)) void _IProjectDoc::PutText9 ( _bstr_t _val );
__declspec(implementation_key(3189)) _bstr_t _IProjectDoc::GetText10 ( );
__declspec(implementation_key(3190)) void _IProjectDoc::PutText10 ( _bstr_t _val );
__declspec(implementation_key(3191)) _variant_t _IProjectDoc::GetMarked ( );
__declspec(implementation_key(3192)) void _IProjectDoc::PutMarked ( const _variant_t & _val );
__declspec(implementation_key(3193)) _variant_t _IProjectDoc::GetFlag1 ( );
__declspec(implementation_key(3194)) void _IProjectDoc::PutFlag1 ( const _variant_t & _val );
__declspec(implementation_key(3195)) _variant_t _IProjectDoc::GetFlag2 ( );
__declspec(implementation_key(3196)) void _IProjectDoc::PutFlag2 ( const _variant_t & _val );
__declspec(implementation_key(3197)) _variant_t _IProjectDoc::GetFlag3 ( );
__declspec(implementation_key(3198)) void _IProjectDoc::PutFlag3 ( const _variant_t & _val );
__declspec(implementation_key(3199)) _variant_t _IProjectDoc::GetFlag4 ( );
__declspec(implementation_key(3200)) void _IProjectDoc::PutFlag4 ( const _variant_t & _val );
__declspec(implementation_key(3201)) _variant_t _IProjectDoc::GetFlag5 ( );
__declspec(implementation_key(3202)) void _IProjectDoc::PutFlag5 ( const _variant_t & _val );
__declspec(implementation_key(3203)) _variant_t _IProjectDoc::GetFlag6 ( );
__declspec(implementation_key(3204)) void _IProjectDoc::PutFlag6 ( const _variant_t & _val );
__declspec(implementation_key(3205)) _variant_t _IProjectDoc::GetFlag7 ( );
__declspec(implementation_key(3206)) void _IProjectDoc::PutFlag7 ( const _variant_t & _val );
__declspec(implementation_key(3207)) _variant_t _IProjectDoc::GetFlag8 ( );
__declspec(implementation_key(3208)) void _IProjectDoc::PutFlag8 ( const _variant_t & _val );
__declspec(implementation_key(3209)) _variant_t _IProjectDoc::GetFlag9 ( );
__declspec(implementation_key(3210)) void _IProjectDoc::PutFlag9 ( const _variant_t & _val );
__declspec(implementation_key(3211)) _variant_t _IProjectDoc::GetFlag10 ( );
__declspec(implementation_key(3212)) void _IProjectDoc::PutFlag10 ( const _variant_t & _val );
__declspec(implementation_key(3213)) _variant_t _IProjectDoc::GetRollup ( );
__declspec(implementation_key(3214)) void _IProjectDoc::PutRollup ( const _variant_t & _val );
__declspec(implementation_key(3215)) double _IProjectDoc::GetNumber1 ( );
__declspec(implementation_key(3216)) void _IProjectDoc::PutNumber1 ( double _val );
__declspec(implementation_key(3217)) double _IProjectDoc::GetNumber2 ( );
__declspec(implementation_key(3218)) void _IProjectDoc::PutNumber2 ( double _val );
__declspec(implementation_key(3219)) double _IProjectDoc::GetNumber3 ( );
__declspec(implementation_key(3220)) void _IProjectDoc::PutNumber3 ( double _val );
__declspec(implementation_key(3221)) double _IProjectDoc::GetNumber4 ( );
__declspec(implementation_key(3222)) void _IProjectDoc::PutNumber4 ( double _val );
__declspec(implementation_key(3223)) double _IProjectDoc::GetNumber5 ( );
__declspec(implementation_key(3224)) void _IProjectDoc::PutNumber5 ( double _val );
__declspec(implementation_key(3225)) _bstr_t _IProjectDoc::GetNotes ( );
__declspec(implementation_key(3226)) void _IProjectDoc::PutNotes ( _bstr_t _val );
__declspec(implementation_key(3227)) _bstr_t _IProjectDoc::GetContact ( );
__declspec(implementation_key(3228)) void _IProjectDoc::PutContact ( _bstr_t _val );
__declspec(implementation_key(3229)) _variant_t _IProjectDoc::GetHideBar ( );
__declspec(implementation_key(3230)) void _IProjectDoc::PutHideBar ( const _variant_t & _val );
__declspec(implementation_key(3231)) _bstr_t _IProjectDoc::GetCurrencySymbol ( );
__declspec(implementation_key(3232)) void _IProjectDoc::PutCurrencySymbol ( _bstr_t _val );
__declspec(implementation_key(3233)) enum PjPlacement _IProjectDoc::GetCurrencySymbolPosition ( );
__declspec(implementation_key(3234)) void _IProjectDoc::PutCurrencySymbolPosition ( enum PjPlacement _val );
__declspec(implementation_key(3235)) short _IProjectDoc::GetCurrencyDigits ( );
__declspec(implementation_key(3236)) void _IProjectDoc::PutCurrencyDigits ( short _val );
__declspec(implementation_key(3237)) long _IProjectDoc::GetShowCriticalSlack ( );
__declspec(implementation_key(3238)) void _IProjectDoc::PutShowCriticalSlack ( long _val );
__declspec(implementation_key(3239)) enum PjUnit _IProjectDoc::GetDefaultDurationUnits ( );
__declspec(implementation_key(3240)) void _IProjectDoc::PutDefaultDurationUnits ( enum PjUnit _val );
__declspec(implementation_key(3241)) enum PjUnit _IProjectDoc::GetDefaultWorkUnits ( );
__declspec(implementation_key(3242)) void _IProjectDoc::PutDefaultWorkUnits ( enum PjUnit _val );
__declspec(implementation_key(3243)) VARIANT_BOOL _IProjectDoc::GetStartOnCurrentDate ( );
__declspec(implementation_key(3244)) void _IProjectDoc::PutStartOnCurrentDate ( VARIANT_BOOL _val );
__declspec(implementation_key(3245)) VARIANT_BOOL _IProjectDoc::GetAutoTrack ( );
__declspec(implementation_key(3246)) void _IProjectDoc::PutAutoTrack ( VARIANT_BOOL _val );
__declspec(implementation_key(3247)) VARIANT_BOOL _IProjectDoc::GetAutoSplitTasks ( );
__declspec(implementation_key(3248)) void _IProjectDoc::PutAutoSplitTasks ( VARIANT_BOOL _val );
__declspec(implementation_key(3249)) VARIANT_BOOL _IProjectDoc::GetAutoLinkTasks ( );
__declspec(implementation_key(3250)) void _IProjectDoc::PutAutoLinkTasks ( VARIANT_BOOL _val );
__declspec(implementation_key(3251)) _variant_t _IProjectDoc::GetDefaultStartTime ( );
__declspec(implementation_key(3252)) void _IProjectDoc::PutDefaultStartTime ( const _variant_t & _val );
__declspec(implementation_key(3253)) _variant_t _IProjectDoc::GetDefaultFinishTime ( );
__declspec(implementation_key(3254)) void _IProjectDoc::PutDefaultFinishTime ( const _variant_t & _val );
__declspec(implementation_key(3255)) double _IProjectDoc::GetHoursPerDay ( );
__declspec(implementation_key(3256)) void _IProjectDoc::PutHoursPerDay ( double _val );
__declspec(implementation_key(3257)) double _IProjectDoc::GetHoursPerWeek ( );
__declspec(implementation_key(3258)) void _IProjectDoc::PutHoursPerWeek ( double _val );
__declspec(implementation_key(3259)) double _IProjectDoc::GetDaysPerMonth ( );
__declspec(implementation_key(3260)) void _IProjectDoc::PutDaysPerMonth ( double _val );
__declspec(implementation_key(3261)) _variant_t _IProjectDoc::GetDefaultResourceStandardRate ( );
__declspec(implementation_key(3262)) void _IProjectDoc::PutDefaultResourceStandardRate ( const _variant_t & _val );
__declspec(implementation_key(3263)) _variant_t _IProjectDoc::GetDefaultResourceOvertimeRate ( );
__declspec(implementation_key(3264)) void _IProjectDoc::PutDefaultResourceOvertimeRate ( const _variant_t & _val );
__declspec(implementation_key(3265)) VARIANT_BOOL _IProjectDoc::GetDisplayProjectSummaryTask ( );
__declspec(implementation_key(3266)) void _IProjectDoc::PutDisplayProjectSummaryTask ( VARIANT_BOOL _val );
__declspec(implementation_key(3267)) VARIANT_BOOL _IProjectDoc::GetAutoAddResources ( );
__declspec(implementation_key(3268)) void _IProjectDoc::PutAutoAddResources ( VARIANT_BOOL _val );
__declspec(implementation_key(3269)) enum PjWeekday _IProjectDoc::GetStartWeekOn ( );
__declspec(implementation_key(3270)) void _IProjectDoc::PutStartWeekOn ( enum PjWeekday _val );
__declspec(implementation_key(3271)) enum PjMonth _IProjectDoc::GetStartYearIn ( );
__declspec(implementation_key(3272)) void _IProjectDoc::PutStartYearIn ( enum PjMonth _val );
__declspec(implementation_key(3273)) VARIANT_BOOL _IProjectDoc::GetAllowTaskDelegation ( );
__declspec(implementation_key(3274)) void _IProjectDoc::PutAllowTaskDelegation ( VARIANT_BOOL _val );
__declspec(implementation_key(3275)) _bstr_t _IProjectDoc::GetName ( );
__declspec(implementation_key(3276)) void _IProjectDoc::PutName ( _bstr_t _val );
__declspec(implementation_key(3277)) enum PjPublishInformationOnSave _IProjectDoc::GetPublishInformationOnSave ( );
__declspec(implementation_key(3278)) void _IProjectDoc::PutPublishInformationOnSave ( enum PjPublishInformationOnSave _val );
__declspec(implementation_key(3279)) _bstr_t _IProjectDoc::GetProjectGuideFunctionalLayoutPage ( );
__declspec(implementation_key(3280)) void _IProjectDoc::PutProjectGuideFunctionalLayoutPage ( _bstr_t _val );
__declspec(implementation_key(3281)) _bstr_t _IProjectDoc::GetProjectGuideSaveBuffer ( );
__declspec(implementation_key(3282)) void _IProjectDoc::PutProjectGuideSaveBuffer ( _bstr_t _val );
__declspec(implementation_key(3283)) _bstr_t _IProjectDoc::GetProjectGuideContent ( );
__declspec(implementation_key(3284)) void _IProjectDoc::PutProjectGuideContent ( _bstr_t _val );
__declspec(implementation_key(3285)) VARIANT_BOOL _IProjectDoc::GetProjectServerUsedForTracking ( );
__declspec(implementation_key(3286)) void _IProjectDoc::PutProjectServerUsedForTracking ( VARIANT_BOOL _val );
__declspec(implementation_key(3287)) enum PjProjectServerTrackingMethod _IProjectDoc::GetTrackingMethod ( );
__declspec(implementation_key(3288)) void _IProjectDoc::PutTrackingMethod ( enum PjProjectServerTrackingMethod _val );
__declspec(implementation_key(3289)) VARIANT_BOOL _IProjectDoc::GetMoveCompleted ( );
__declspec(implementation_key(3290)) void _IProjectDoc::PutMoveCompleted ( VARIANT_BOOL _val );
__declspec(implementation_key(3291)) VARIANT_BOOL _IProjectDoc::GetAndMoveRemaining ( );
__declspec(implementation_key(3292)) void _IProjectDoc::PutAndMoveRemaining ( VARIANT_BOOL _val );
__declspec(implementation_key(3293)) VARIANT_BOOL _IProjectDoc::GetMoveRemaining ( );
__declspec(implementation_key(3294)) void _IProjectDoc::PutMoveRemaining ( VARIANT_BOOL _val );
__declspec(implementation_key(3295)) VARIANT_BOOL _IProjectDoc::GetAndMoveCompleted ( );
__declspec(implementation_key(3296)) void _IProjectDoc::PutAndMoveCompleted ( VARIANT_BOOL _val );
__declspec(implementation_key(3297)) enum PjEarnedValueMethod _IProjectDoc::GetDefaultEarnedValueMethod ( );
__declspec(implementation_key(3298)) void _IProjectDoc::PutDefaultEarnedValueMethod ( enum PjEarnedValueMethod _val );
__declspec(implementation_key(3299)) enum PjBaselines _IProjectDoc::GetEarnedValueBaseline ( );
__declspec(implementation_key(3300)) void _IProjectDoc::PutEarnedValueBaseline ( enum PjBaselines _val );
__declspec(implementation_key(3301)) VARIANT_BOOL _IProjectDoc::GetProjectGuideUseDefaultFunctionalLayoutPage ( );
__declspec(implementation_key(3302)) void _IProjectDoc::PutProjectGuideUseDefaultFunctionalLayoutPage ( VARIANT_BOOL _val );
__declspec(implementation_key(3303)) VARIANT_BOOL _IProjectDoc::GetProjectGuideUseDefaultContent ( );
__declspec(implementation_key(3304)) void _IProjectDoc::PutProjectGuideUseDefaultContent ( VARIANT_BOOL _val );
__declspec(implementation_key(3305)) HRESULT _EProjectDoc::Open ( struct _IProjectDoc * pj );
__declspec(implementation_key(3306)) HRESULT _EProjectDoc::BeforeClose ( struct _IProjectDoc * pj );
__declspec(implementation_key(3307)) HRESULT _EProjectDoc::BeforeSave ( struct _IProjectDoc * pj );
__declspec(implementation_key(3308)) HRESULT _EProjectDoc::BeforePrint ( struct _IProjectDoc * pj );
__declspec(implementation_key(3309)) HRESULT _EProjectDoc::Calculate ( struct _IProjectDoc * pj );
__declspec(implementation_key(3310)) HRESULT _EProjectDoc::Change ( struct _IProjectDoc * pj );
__declspec(implementation_key(3311)) HRESULT _EProjectDoc::Activate ( struct _IProjectDoc * pj );
__declspec(implementation_key(3312)) HRESULT _EProjectDoc::Deactivate ( struct _IProjectDoc * pj );
__declspec(implementation_key(3313)) _MSProjectPtr Projects::GetApplication ( );
__declspec(implementation_key(3314)) IDispatchPtr Projects::GetParent ( );
__declspec(implementation_key(3315)) long Projects::GetCount ( );
__declspec(implementation_key(3316)) _IProjectDocPtr Projects::Add ( const _variant_t & DisplayProjectInfo, const _variant_t & Template, const _variant_t & FileNewDialog );
__declspec(implementation_key(3317)) _IProjectDocPtr Projects::GetItem ( const _variant_t & Index );
__declspec(implementation_key(3318)) IUnknownPtr Projects::Get_NewEnum ( );
__declspec(implementation_key(3319)) WindowsPtr _Global::GetWindows ( );
//__declspec(implementation_key(3320)) _CommandBarsPtr _Global::GetCommandBars ( );
//__declspec(implementation_key(3321)) AnswerWizardPtr _Global::GetAnswerWizard ( );
__declspec(implementation_key(3322)) ProjectsPtr _Global::GetProjects ( );
__declspec(implementation_key(3323)) HRESULT _Global::Quit ( enum PjSaveType SaveChanges );
__declspec(implementation_key(3324)) _bstr_t _Global::GetOperatingSystem ( );
__declspec(implementation_key(3325)) _variant_t _Global::DateSubtract ( const _variant_t & FinishDate, const _variant_t & Duration, const _variant_t & Calendar );
__declspec(implementation_key(3326)) _bstr_t _Global::DurationFormat ( const _variant_t & Duration, const _variant_t & Units );
__declspec(implementation_key(3327)) _variant_t _Global::DurationValue ( _bstr_t Duration );
__declspec(implementation_key(3328)) _variant_t _Global::DateFormat ( const _variant_t & Date, const _variant_t & Format );
__declspec(implementation_key(3329)) HRESULT _Global::MailLogon ( const _variant_t & Name, const _variant_t & Password, const _variant_t & DownloadNewMail );
__declspec(implementation_key(3330)) HRESULT _Global::MailLogoff ( );
__declspec(implementation_key(3331)) _variant_t _Global::MailSession ( );
__declspec(implementation_key(3332)) _variant_t _Global::MailSystem ( );
__declspec(implementation_key(3333)) _variant_t _Global::TimescaledData ( long TaskID, long ResourceID, const _variant_t & StartDate, const _variant_t & EndDate, enum PjTimescaledData Type, enum PjTimescaleUnit TimeScaleUnit, const _variant_t & Count );
__declspec(implementation_key(3334)) _bstr_t _Global::CustomFieldGetName ( enum PjCustomField FieldID );
__declspec(implementation_key(3335)) HRESULT _Global::Run ( _bstr_t Name, const _variant_t & Arg1, const _variant_t & Arg2, const _variant_t & Arg3, const _variant_t & Arg4, const _variant_t & Arg5, const _variant_t & Arg6, const _variant_t & Arg7, const _variant_t & Arg8, const _variant_t & Arg9, const _variant_t & Arg10, const _variant_t & Arg11, const _variant_t & Arg12, const _variant_t & Arg13, const _variant_t & Arg14, const _variant_t & Arg15, const _variant_t & Arg16, const _variant_t & Arg17, const _variant_t & Arg18, const _variant_t & Arg19, const _variant_t & Arg20, const _variant_t & Arg21, const _variant_t & Arg22, const _variant_t & Arg23, const _variant_t & Arg24, const _variant_t & Arg25, const _variant_t & Arg26, const _variant_t & Arg27, const _variant_t & Arg28, const _variant_t & Arg29, const _variant_t & Arg30 );
__declspec(implementation_key(3336)) _bstr_t _Global::GetFileFormatID ( _bstr_t Name, const _variant_t & UserID, const _variant_t & DatabasePassWord );
__declspec(implementation_key(3337)) _bstr_t _Global::GetFileBuildID ( _bstr_t Name, const _variant_t & UserID, const _variant_t & DatabasePassWord );
//__declspec(implementation_key(3338)) COMAddInsPtr _Global::GetCOMAddIns ( );
__declspec(implementation_key(3339)) long _Global::BoxGetXPosition ( long TaskID, const _variant_t & ProjectName );
__declspec(implementation_key(3340)) long _Global::BoxGetYPosition ( long TaskID, const _variant_t & ProjectName );
__declspec(implementation_key(3341)) _bstr_t _Global::CustomFieldGetFormula ( enum PjCustomField FieldID );
__declspec(implementation_key(3342)) _bstr_t _Global::CustomFieldValueListGetItem ( enum PjCustomField FieldID, enum PjValueListItem Item, long Index );
__declspec(implementation_key(3343)) HRESULT _Global::GoalAreaHighlight ( long goalArea );
__declspec(implementation_key(3344)) HRESULT _Global::SetSidepaneStateButton ( VARIANT_BOOL DisplayState );
__declspec(implementation_key(3345)) HRESULT _Global::GoalAreaTaskHighlight ( long TaskID );
__declspec(implementation_key(3346)) enum PjField _Global::FieldNameToFieldConstant ( _bstr_t FieldName, enum PjFieldType FieldType );
__declspec(implementation_key(3347)) _bstr_t _Global::FieldConstantToFieldName ( enum PjField Field );
__declspec(implementation_key(3348)) _bstr_t _Global::GetProjectServerSettings ( _bstr_t RequestXML, const _variant_t & Project );
__declspec(implementation_key(3349)) HRESULT _Global::UnloadWebBrowserControl ( VARIANT * Window );
__declspec(implementation_key(3350)) enum PjServerVersionInfo _Global::GetProjectServerVersion ( _bstr_t ServerURL );
__declspec(implementation_key(3351)) _variant_t _Global::UpdateFromProjectServer ( _bstr_t DataFile );
__declspec(implementation_key(3352)) long _Global::LocaleID ( );
__declspec(implementation_key(3353)) HRESULT _Global::EnterpriseMakeServerURLTrusted ( );
__declspec(implementation_key(3354)) VARIANT_BOOL _Global::IsURLTrusted ( _bstr_t URL );
__declspec(implementation_key(3355)) HRESULT _Global::PublishNewAndChangedAssignments ( VARIANT_BOOL ShowDialog, enum PjPublishScope ItemsScope, VARIANT_BOOL NotifyResources, const _variant_t & NotificationText );
__declspec(implementation_key(3356)) HRESULT _Global::PublishProjectPlan ( VARIANT_BOOL ShowDialog, VARIANT_BOOL PublishFullPlan );
__declspec(implementation_key(3357)) HRESULT _Global::PublishAllInformation ( );
__declspec(implementation_key(3358)) HRESULT _Global::RequestProgressInformation ( VARIANT_BOOL ShowDialog, enum PjPublishScope ItemsScope, VARIANT_BOOL NotifyTaskLead, const _variant_t & NotificationText, const _variant_t & ReportingPeriodFrom, const _variant_t & ReportingPeriodTo );
__declspec(implementation_key(3359)) HRESULT _Global::RepublishAssignments ( VARIANT_BOOL ShowDialog, enum PjPublishScope ItemsScope, VARIANT_BOOL NotifyResources, VARIANT_BOOL OverwriteActuals, VARIANT_BOOL BecomeManager, const _variant_t & NotificationText );
__declspec(implementation_key(3360)) long _Global::RegisterProject ( VARIANT_BOOL WaitForCompletion );
__declspec(implementation_key(3361)) VARIANT_BOOL _Global::SaveProjectIfDirty ( _bstr_t AlertText );
__declspec(implementation_key(3362)) VARIANT_BOOL _Global::Message ( _bstr_t Message, enum PjMessageType Type, const _variant_t & YesText, const _variant_t & NoText );
__declspec(implementation_key(3363)) VARIANT_BOOL _Global::Alerts ( const _variant_t & Show );
__declspec(implementation_key(3364)) VARIANT_BOOL _Global::FileNew ( const _variant_t & SummaryInfo, const _variant_t & Template, const _variant_t & FileNewDialog, const _variant_t & FileNewWorkpane );
__declspec(implementation_key(3365)) VARIANT_BOOL _Global::FileProperties ( );
__declspec(implementation_key(3366)) VARIANT_BOOL _Global::FileOpen ( const _variant_t & Name, const _variant_t & ReadOnly, const _variant_t & Merge, const _variant_t & TaskInformation, const _variant_t & Table, const _variant_t & Sheet, const _variant_t & NoAuto, const _variant_t & UserID, const _variant_t & DatabasePassWord, const _variant_t & FormatID, const _variant_t & Map, enum PjPoolOpen openPool, const _variant_t & Password, const _variant_t & WriteResPassword, const _variant_t & IgnoreReadOnlyRecommended, const _variant_t & XMLName );
__declspec(implementation_key(3367)) VARIANT_BOOL _Global::Zoom ( );
__declspec(implementation_key(3368)) VARIANT_BOOL _Global::ZoomTimescale ( const _variant_t & Duration, const _variant_t & Entire, const _variant_t & Selection, const _variant_t & Reset );
__declspec(implementation_key(3369)) VARIANT_BOOL _Global::BoxZoom ( const _variant_t & Percent, const _variant_t & Entire );
__declspec(implementation_key(3370)) VARIANT_BOOL _Global::FileClose ( enum PjSaveType Save, const _variant_t & NoAuto );
__declspec(implementation_key(3371)) VARIANT_BOOL _Global::FileCloseAll ( enum PjSaveType Save );
__declspec(implementation_key(3372)) VARIANT_BOOL _Global::ResourceSharing ( const _variant_t & Share, const _variant_t & Name, const _variant_t & Pool );
__declspec(implementation_key(3373)) VARIANT_BOOL _Global::FileSave ( );
__declspec(implementation_key(3374)) VARIANT_BOOL _Global::FileSaveAs ( const _variant_t & Name, enum PjFileFormat Format, const _variant_t & Backup, const _variant_t & ReadOnly, const _variant_t & TaskInformation, const _variant_t & Filtered, const _variant_t & Table, const _variant_t & UserID, const _variant_t & DatabasePassWord, const _variant_t & FormatID, const _variant_t & Map, const _variant_t & Password, const _variant_t & WriteResPassword, const _variant_t & ClearBaseline, const _variant_t & ClearActuals, const _variant_t & ClearResourceRates, const _variant_t & ClearFixedCosts, const _variant_t & XMLName, const _variant_t & ClearConfirmed );
__declspec(implementation_key(3375)) VARIANT_BOOL _Global::FileSaveWorkspace ( const _variant_t & Name );
__declspec(implementation_key(3376)) VARIANT_BOOL _Global::FilePrint ( const _variant_t & FromPage, const _variant_t & ToPage, const _variant_t & PageBreaks, const _variant_t & Draft, const _variant_t & Copies, const _variant_t & FromDate, const _variant_t & ToDate, const _variant_t & OnePageWide, const _variant_t & Preview, const _variant_t & Color, const _variant_t & ShowIEPrintDialog );
__declspec(implementation_key(3377)) VARIANT_BOOL _Global::ReportPrint ( const _variant_t & Name, const _variant_t & FromPage, const _variant_t & ToPage, const _variant_t & PageBreaks, const _variant_t & Draft, const _variant_t & Copies, const _variant_t & FromDate, const _variant_t & ToDate, const _variant_t & Preview, const _variant_t & Color );
__declspec(implementation_key(3378)) VARIANT_BOOL _Global::FilePrintPreview ( );
__declspec(implementation_key(3379)) VARIANT_BOOL _Global::ReportPrintPreview ( const _variant_t & Name );
__declspec(implementation_key(3380)) VARIANT_BOOL _Global::FilePrintSetup ( const _variant_t & Printer );
__declspec(implementation_key(3381)) VARIANT_BOOL _Global::FilePageSetup ( const _variant_t & Name );
__declspec(implementation_key(3382)) VARIANT_BOOL _Global::FilePageSetupPage ( const _variant_t & Name, const _variant_t & Portrait, const _variant_t & PercentScale, const _variant_t & PagesTall, const _variant_t & PagesWide, enum PjPaperSize PaperSize, const _variant_t & FirstPageNumber );
__declspec(implementation_key(3383)) VARIANT_BOOL _Global::FilePageSetupMargins ( const _variant_t & Name, const _variant_t & Top, const _variant_t & Bottom, const _variant_t & Left, const _variant_t & Right, const _variant_t & Borders );
__declspec(implementation_key(3384)) VARIANT_BOOL _Global::FilePageSetupHeader ( const _variant_t & Name, enum PjAlignment Alignment, const _variant_t & Text );
__declspec(implementation_key(3385)) VARIANT_BOOL _Global::FilePageSetupFooter ( const _variant_t & Name, enum PjAlignment Alignment, const _variant_t & Text );
__declspec(implementation_key(3386)) VARIANT_BOOL _Global::FilePageSetupLegend ( const _variant_t & Name, const _variant_t & TextWidth, const _variant_t & LegendOn, enum PjAlignment Alignment, const _variant_t & Text, const _variant_t & LabelFontName, const _variant_t & LabelFontSize, const _variant_t & LabelFontBold, const _variant_t & LabelFontItalic, const _variant_t & LabelFontUnderline, enum PjColor LabelFontColor );
__declspec(implementation_key(3387)) VARIANT_BOOL _Global::FilePageSetupView ( const _variant_t & Name, const _variant_t & AllSheetColumns, const _variant_t & RepeatColumns, const _variant_t & PrintNotes, const _variant_t & PrintBlankPages, const _variant_t & BestPageFitTimescale, const _variant_t & PrintColumnTotals, const _variant_t & PrintRowTotals );
__declspec(implementation_key(3388)) VARIANT_BOOL _Global::FilePageSetupCalendar ( const _variant_t & Name, const _variant_t & MonthsPerPage, const _variant_t & WeeksPerPage, const _variant_t & ScreenWeekHeight, const _variant_t & OnlyDaysInMonth, const _variant_t & OnlyWeeksInMonth, const _variant_t & MonthPreviews, const _variant_t & MonthTitle, const _variant_t & AdditionalTasks, const _variant_t & GroupAdditionalTasks, const _variant_t & PrintNotes );
__declspec(implementation_key(3389)) VARIANT_BOOL _Global::FilePageSetupCalendarText ( const _variant_t & Name, const _variant_t & Item, const _variant_t & Font, const _variant_t & Size, const _variant_t & Bold, const _variant_t & Italic, const _variant_t & Underline, const _variant_t & Color );
__declspec(implementation_key(3390)) VARIANT_BOOL _Global::MailOpen ( const _variant_t & Any );
__declspec(implementation_key(3391)) VARIANT_BOOL _Global::MailSend ( const _variant_t & To, const _variant_t & Cc, const _variant_t & Subject, const _variant_t & Body, const _variant_t & Enclosures, const _variant_t & IncludeDocument, const _variant_t & ReturnReceipt, const _variant_t & Bcc, const _variant_t & Urgent, const _variant_t & SaveCopy, const _variant_t & AddRecipient );
__declspec(implementation_key(3392)) VARIANT_BOOL _Global::MailSendScheduleNote ( const _variant_t & Manager, const _variant_t & Resources, const _variant_t & TaskContacts, const _variant_t & Selection, const _variant_t & IncludeDocument, const _variant_t & IncludePicture, const _variant_t & Body, const _variant_t & Subject );
__declspec(implementation_key(3393)) VARIANT_BOOL _Global::MailPostDocument ( );
__declspec(implementation_key(3394)) VARIANT_BOOL _Global::ODBCManageDataSources ( );
__declspec(implementation_key(3395)) VARIANT_BOOL _Global::ODBCCreateDataSource ( );
__declspec(implementation_key(3396)) VARIANT_BOOL _Global::MailRoutingSlip ( const _variant_t & To, const _variant_t & Subject, const _variant_t & Body, const _variant_t & AllAtOnce, const _variant_t & ReturnWhenDone, const _variant_t & TrackStatus, const _variant_t & Clear, const _variant_t & SendNow );
__declspec(implementation_key(3397)) VARIANT_BOOL _Global::FileLoadLast ( const _variant_t & Number );
__declspec(implementation_key(3398)) VARIANT_BOOL _Global::FileExit ( enum PjSaveType Save );
__declspec(implementation_key(3399)) VARIANT_BOOL _Global::MenuBars ( );
__declspec(implementation_key(3400)) VARIANT_BOOL _Global::MenuBarEdit ( const _variant_t & Copy, const _variant_t & Create, const _variant_t & Name, const _variant_t & NewName );
__declspec(implementation_key(3401)) VARIANT_BOOL _Global::MenuBarApply ( _bstr_t Name, const _variant_t & Default, const _variant_t & NoFiles );
__declspec(implementation_key(3402)) VARIANT_BOOL _Global::EditUndo ( );
__declspec(implementation_key(3403)) VARIANT_BOOL _Global::EditCut ( );
__declspec(implementation_key(3404)) VARIANT_BOOL _Global::EditCopy ( );
__declspec(implementation_key(3405)) VARIANT_BOOL _Global::EditCopyPicture ( const _variant_t & Object, const _variant_t & ForPrinter, const _variant_t & SelectedRows, const _variant_t & FromDate, const _variant_t & ToDate, const _variant_t & FileName, enum PjCopyPictureScaleOption ScaleOption );
__declspec(implementation_key(3406)) VARIANT_BOOL _Global::EditPaste ( );
__declspec(implementation_key(3407)) VARIANT_BOOL _Global::EditPasteSpecial ( const _variant_t & Link, const _variant_t & Type, const _variant_t & DisplayAsIcon );
__declspec(implementation_key(3408)) VARIANT_BOOL _Global::EditClearFormats ( );
__declspec(implementation_key(3409)) VARIANT_BOOL _Global::EditClear ( const _variant_t & Contents, const _variant_t & Formats, const _variant_t & Notes, const _variant_t & Hyperlinks );
__declspec(implementation_key(3410)) VARIANT_BOOL _Global::RowClear ( );
__declspec(implementation_key(3411)) VARIANT_BOOL _Global::DDEPasteLink ( );
__declspec(implementation_key(3412)) VARIANT_BOOL _Global::EditDelete ( );
__declspec(implementation_key(3413)) VARIANT_BOOL _Global::ColumnDelete ( );
__declspec(implementation_key(3414)) VARIANT_BOOL _Global::RowDelete ( );
__declspec(implementation_key(3415)) VARIANT_BOOL _Global::ObjectVerb ( const _variant_t & Verb );
__declspec(implementation_key(3416)) VARIANT_BOOL _Global::ObjectLinks ( );
__declspec(implementation_key(3417)) VARIANT_BOOL _Global::ObjectChangeIcon ( );
__declspec(implementation_key(3418)) VARIANT_BOOL _Global::ObjectConvert ( );
__declspec(implementation_key(3419)) VARIANT_BOOL _Global::EditInsert ( );
__declspec(implementation_key(3420)) VARIANT_BOOL _Global::ColumnInsert ( );
__declspec(implementation_key(3421)) VARIANT_BOOL _Global::RowInsert ( );
__declspec(implementation_key(3422)) VARIANT_BOOL _Global::LinkTasks ( );
__declspec(implementation_key(3423)) VARIANT_BOOL _Global::LinkTasksEdit ( long From, long To, const _variant_t & Delete, const _variant_t & Type, const _variant_t & Lag, const _variant_t & PredecessorProjectName, const _variant_t & SuccessorProjectName );
__declspec(implementation_key(3424)) VARIANT_BOOL _Global::UnlinkTasks ( );
__declspec(implementation_key(3425)) VARIANT_BOOL _Global::ResourceAssignment ( const _variant_t & Resources, enum PjResAssignOperation Operation, const _variant_t & With );
__declspec(implementation_key(3426)) VARIANT_BOOL _Global::EditGoTo ( const _variant_t & ID, const _variant_t & Date );
__declspec(implementation_key(3427)) VARIANT_BOOL _Global::GotoNextOverAllocation ( );
__declspec(implementation_key(3428)) VARIANT_BOOL _Global::InsertNotes ( );
__declspec(implementation_key(3429)) VARIANT_BOOL _Global::Find ( const _variant_t & Field, const _variant_t & Test, const _variant_t & Value, const _variant_t & Next, const _variant_t & MatchCase );
__declspec(implementation_key(3430)) VARIANT_BOOL _Global::Replace ( const _variant_t & Field, const _variant_t & Test, const _variant_t & Value, const _variant_t & Replacement, const _variant_t & ReplaceAll, const _variant_t & Next, const _variant_t & MatchCase );
__declspec(implementation_key(3431)) VARIANT_BOOL _Global::SelectAll ( );
__declspec(implementation_key(3432)) VARIANT_BOOL _Global::ObjectInsert ( );
__declspec(implementation_key(3433)) VARIANT_BOOL _Global::SubscribeTo ( const _variant_t & Edition, enum PjSubscribeFormat Format );
__declspec(implementation_key(3434)) VARIANT_BOOL _Global::SubscriberOptions ( const _variant_t & Name, const _variant_t & IsTask, const _variant_t & UniqueID, const _variant_t & Field, const _variant_t & Automatically, const _variant_t & Action );
__declspec(implementation_key(3435)) VARIANT_BOOL _Global::CreatePublisher ( const _variant_t & Edition, const _variant_t & Contains );
__declspec(implementation_key(3436)) VARIANT_BOOL _Global::PublisherOptions ( const _variant_t & Name, const _variant_t & View, const _variant_t & IsTask, const _variant_t & UniqueID, const _variant_t & Field, const _variant_t & OnSave, const _variant_t & Action );
__declspec(implementation_key(3437)) VARIANT_BOOL _Global::EditionStopAll ( const _variant_t & Stop );
__declspec(implementation_key(3438)) VARIANT_BOOL _Global::ClipboardShow ( );
__declspec(implementation_key(3439)) VARIANT_BOOL _Global::ViewApply ( const _variant_t & Name, const _variant_t & SinglePane, const _variant_t & Toggle );
__declspec(implementation_key(3440)) VARIANT_BOOL _Global::ViewEditSingle ( const _variant_t & Name, const _variant_t & Create, const _variant_t & NewName, const _variant_t & Screen, const _variant_t & ShowInMenu, const _variant_t & HighlightFilter, const _variant_t & Table, const _variant_t & Filter, const _variant_t & Group );
__declspec(implementation_key(3441)) VARIANT_BOOL _Global::ViewEditCombination ( const _variant_t & Name, const _variant_t & Create, const _variant_t & NewName, const _variant_t & TopView, const _variant_t & BottomView, const _variant_t & ShowInMenu );
__declspec(implementation_key(3442)) VARIANT_BOOL _Global::TableApply ( const _variant_t & Name );
__declspec(implementation_key(3443)) VARIANT_BOOL _Global::TableEdit ( _bstr_t Name, VARIANT_BOOL TaskTable, const _variant_t & Create, const _variant_t & OverwriteExisting, const _variant_t & NewName, const _variant_t & FieldName, const _variant_t & NewFieldName, const _variant_t & Title, const _variant_t & Width, const _variant_t & Align, const _variant_t & ShowInMenu, const _variant_t & LockFirstColumn, const _variant_t & DateFormat, const _variant_t & RowHeight, const _variant_t & ColumnPosition, const _variant_t & AlignTitle, const _variant_t & HeaderAutoRowHeightAdjustment, const _variant_t & HeaderTextWrap );
__declspec(implementation_key(3444)) VARIANT_BOOL _Global::FilterApply ( const _variant_t & Name, const _variant_t & Highlight, const _variant_t & Value1, const _variant_t & Value2 );
__declspec(implementation_key(3445)) VARIANT_BOOL _Global::FilterEdit ( _bstr_t Name, VARIANT_BOOL TaskFilter, const _variant_t & Create, const _variant_t & OverwriteExisting, const _variant_t & Parenthesis, const _variant_t & NewName, const _variant_t & FieldName, const _variant_t & NewFieldName, const _variant_t & Test, const _variant_t & Value, const _variant_t & Operation, const _variant_t & ShowInMenu, const _variant_t & ShowSummaryTasks );
__declspec(implementation_key(3446)) VARIANT_BOOL _Global::ProjectSummaryInfo ( const _variant_t & Project, const _variant_t & Title, const _variant_t & Subject, const _variant_t & Author, const _variant_t & Company, const _variant_t & Manager, const _variant_t & Keywords, const _variant_t & Comments, const _variant_t & Start, const _variant_t & Finish, const _variant_t & ScheduleFrom, const _variant_t & CurrentDate, const _variant_t & Calendar, const _variant_t & StatusDate, const _variant_t & Priority, const _variant_t & PartiallyDisabled );
__declspec(implementation_key(3447)) VARIANT_BOOL _Global::ProjectStatistics ( const _variant_t & Project );
__declspec(implementation_key(3448)) VARIANT_BOOL _Global::OptionsCalendar ( const _variant_t & StartWeekOnMonday, const _variant_t & StartYearIn, const _variant_t & StartTime, const _variant_t & FinishTime, const _variant_t & HoursPerDay, const _variant_t & HoursPerWeek, const _variant_t & SetDefaults, const _variant_t & StartWeekOn, const _variant_t & UseFYStartYear, const _variant_t & DaysPerMonth );
__declspec(implementation_key(3449)) VARIANT_BOOL _Global::OptionsEdit ( const _variant_t & MoveAfterReturn, const _variant_t & DragAndDrop, const _variant_t & UpdateLinks, const _variant_t & CopyResourceUsageHeader, const _variant_t & PhoneticInfo, const _variant_t & PhoneticType, const _variant_t & MinuteLabelDisplay, const _variant_t & HourLabelDisplay, const _variant_t & DayLabelDisplay, const _variant_t & WeekLabelDisplay, const _variant_t & YearLabelDisplay, const _variant_t & SpaceBeforeTimeLabel, const _variant_t & SetDefaults, const _variant_t & MonthLabelDisplay, const _variant_t & SetDefaultsTimeUnits, const _variant_t & HyperlinkColor, const _variant_t & FollowedHyperlinkColor, const _variant_t & UnderlineHyperlinks, const _variant_t & SetDefaultsHyperlink, const _variant_t & InCellEditing );
__declspec(implementation_key(3450)) VARIANT_BOOL _Global::OptionsGeneral ( const _variant_t & PlanningWizard, const _variant_t & WizardUsage, const _variant_t & WizardErrors, const _variant_t & WizardScheduling, const _variant_t & ShowTipOfDay, const _variant_t & AutoAddResources, const _variant_t & StandardRate, const _variant_t & OvertimeRate, const _variant_t & LastFile, const _variant_t & SummaryInfo, const _variant_t & UserName, const _variant_t & SetDefaults, const _variant_t & ShowWelcome, const _variant_t & AutoFilter, const _variant_t & MacroVirusProtection, const _variant_t & DisplayRecentFiles, const _variant_t & RecentFilesMaximum, const _variant_t & FontConversion, const _variant_t & ShowStartupWorkpane );
__declspec(implementation_key(3451)) VARIANT_BOOL _Global::OptionsSchedule ( const _variant_t & ScheduleMessages, const _variant_t & StartOnCurrentDate, const _variant_t & AutoLink, const _variant_t & AutoSplit, const _variant_t & CriticalSlack, const _variant_t & TaskType, const _variant_t & DurationUnits, const _variant_t & WorkUnits, const _variant_t & AutoTrack, const _variant_t & SetDefaults, const _variant_t & AssignmentUnits, const _variant_t & EffortDriven, const _variant_t & HonorConstraints, const _variant_t & ShowEstimated, const _variant_t & NewTasksEstimated );
__declspec(implementation_key(3452)) VARIANT_BOOL _Global::OptionsView ( const _variant_t & DefaultView, const _variant_t & DateFormat, const _variant_t & ProjectSummary, const _variant_t & DisplayStatusBar, const _variant_t & DisplayEntryBar, const _variant_t & DisplayScrollBars, const _variant_t & CurrencySymbol, const _variant_t & SymbolPlacement, const _variant_t & CurrencyDigits, const _variant_t & DisplayOutlineNumber, const _variant_t & DisplayOutlineSymbols, const _variant_t & DisplayNameIndent, const _variant_t & DisplaySummaryTasks, const _variant_t & DisplayOLEIndicator, const _variant_t & DisplayExternalSuccessors, const _variant_t & DisplayExternalPredecessors, const _variant_t & CrossProjectLinksInfo, const _variant_t & AcceptNewExternalData, const _variant_t & DisplayWindowsInTaskbar, const _variant_t & DisplayScreentips );
__declspec(implementation_key(3453)) VARIANT_BOOL _Global::OptionsWorkgroup ( const _variant_t & WorkgroupMessages, const _variant_t & ServerURL, const _variant_t & ServerPath, const _variant_t & ReceiveNotifications, const _variant_t & SendHyperlinkNote, const _variant_t & HyperlinkColor, const _variant_t & FollowedHyperlinkColor, const _variant_t & UnderlineHyperlinks, const _variant_t & SetDefaults, const _variant_t & ServerIdentification, const _variant_t & AllowTaskDelegation, const _variant_t & UpdateProjectToWeb, const _variant_t & PublishInformationOnSave, const _variant_t & SetDefaultsMessaging, const _variant_t & SetDefaultsWebServer, const _variant_t & ManagerEmail, const _variant_t & ConfirmationDialog, const _variant_t & ChangesMarkAssnDirty );
__declspec(implementation_key(3454)) VARIANT_BOOL _Global::OptionsCalculation ( const _variant_t & Automatic, const _variant_t & AutoTrack, const _variant_t & SpreadPercentToStatusDate, const _variant_t & SpreadCostsToStatusDate, const _variant_t & AutoCalcCosts, const _variant_t & FixedCostAccrual, const _variant_t & CalcMultipleCriticalPaths, const _variant_t & CriticalSlack, const _variant_t & SetDefaults, const _variant_t & CalcInsProjLikeSummTask, const _variant_t & MoveCompleted, const _variant_t & AndMoveRemaining, const _variant_t & MoveRemaining, const _variant_t & AndMoveCompleted, const _variant_t & EVMethod, const _variant_t & EVBaseline );
__declspec(implementation_key(3455)) VARIANT_BOOL _Global::CalculateAll ( );
__declspec(implementation_key(3456)) VARIANT_BOOL _Global::OptionsPreferences ( );
__declspec(implementation_key(3457)) VARIANT_BOOL _Global::ChangeWorkingTime ( const _variant_t & CalendarName, const _variant_t & Locked );
__declspec(implementation_key(3458)) VARIANT_BOOL _Global::BaseCalendars ( const _variant_t & Index, const _variant_t & Locked );
__declspec(implementation_key(3459)) VARIANT_BOOL _Global::BaseCalendarCreate ( _bstr_t Name, const _variant_t & FromName );
__declspec(implementation_key(3460)) VARIANT_BOOL _Global::BaseCalendarRename ( _bstr_t FromName, _bstr_t ToName );
__declspec(implementation_key(3461)) VARIANT_BOOL _Global::BaseCalendarDelete ( _bstr_t Name );
__declspec(implementation_key(3462)) VARIANT_BOOL _Global::BaseCalendarEditDays ( _bstr_t Name, const _variant_t & StartDate, const _variant_t & EndDate, const _variant_t & WeekDay, const _variant_t & Working, const _variant_t & From1, const _variant_t & To1, const _variant_t & From2, const _variant_t & To2, const _variant_t & From3, const _variant_t & To3, const _variant_t & Default, const _variant_t & From4, const _variant_t & To4, const _variant_t & From5, const _variant_t & To5 );
__declspec(implementation_key(3463)) VARIANT_BOOL _Global::ResourceCalendarEditDays ( _bstr_t ProjectName, _bstr_t ResourceName, const _variant_t & StartDate, const _variant_t & EndDate, const _variant_t & WeekDay, const _variant_t & Working, const _variant_t & Default, const _variant_t & From1, const _variant_t & To1, const _variant_t & From2, const _variant_t & To2, const _variant_t & From3, const _variant_t & To3, const _variant_t & From4, const _variant_t & To4, const _variant_t & From5, const _variant_t & To5 );
__declspec(implementation_key(3464)) VARIANT_BOOL _Global::BaseCalendarReset ( _bstr_t Name );
__declspec(implementation_key(3465)) VARIANT_BOOL _Global::ResourceCalendarReset ( _bstr_t ProjectName, _bstr_t ResourceName, const _variant_t & BaseCalendar );
__declspec(implementation_key(3466)) VARIANT_BOOL _Global::ResourceCalendars ( const _variant_t & Index, const _variant_t & Locked );
__declspec(implementation_key(3467)) VARIANT_BOOL _Global::LevelingOptions ( const _variant_t & Automatic, const _variant_t & DelayInSlack, const _variant_t & AutoClearLeveling, const _variant_t & Order, const _variant_t & LevelEntireProject, const _variant_t & FromDate, const _variant_t & ToDate, const _variant_t & PeriodBasis, const _variant_t & LevelIndividualAssignments, const _variant_t & LevelingCanSplit );
__declspec(implementation_key(3468)) VARIANT_BOOL _Global::LevelNow ( const _variant_t & All );
__declspec(implementation_key(3469)) VARIANT_BOOL _Global::BaselineSave ( const _variant_t & All, const _variant_t & Copy, const _variant_t & Into, const _variant_t & RollupToSummaryTasks, const _variant_t & RollupFromSubtasks, const _variant_t & SetDefaults );
__declspec(implementation_key(3470)) VARIANT_BOOL _Global::UpdateProject ( const _variant_t & All, const _variant_t & UpdateDate, const _variant_t & Action );
__declspec(implementation_key(3471)) VARIANT_BOOL _Global::UpdateTasks ( const _variant_t & PercentComplete, const _variant_t & ActualDuration, const _variant_t & RemainingDuration, const _variant_t & ActualStart, const _variant_t & ActualFinish, const _variant_t & Notes );
__declspec(implementation_key(3472)) VARIANT_BOOL _Global::WindowNewWindow ( const _variant_t & Projects, const _variant_t & View, const _variant_t & AllProjects, const _variant_t & ShowDialog );
__declspec(implementation_key(3473)) VARIANT_BOOL _Global::WindowArrangeAll ( );
__declspec(implementation_key(3474)) VARIANT_BOOL _Global::WindowHide ( const _variant_t & Name );
__declspec(implementation_key(3475)) VARIANT_BOOL _Global::WindowUnhide ( const _variant_t & Name );
__declspec(implementation_key(3476)) VARIANT_BOOL _Global::WindowActivate ( const _variant_t & WindowName, const _variant_t & DialogID, const _variant_t & TopPane );
__declspec(implementation_key(3477)) VARIANT_BOOL _Global::PageBreakSet ( );
__declspec(implementation_key(3478)) VARIANT_BOOL _Global::PageBreakRemove ( );
__declspec(implementation_key(3479)) VARIANT_BOOL _Global::PageBreaksRemoveAll ( );
__declspec(implementation_key(3480)) VARIANT_BOOL _Global::ViewShowResourcesPredecessors ( );
__declspec(implementation_key(3481)) VARIANT_BOOL _Global::ViewShowResourcesSuccessors ( );
__declspec(implementation_key(3482)) VARIANT_BOOL _Global::ViewShowPredecessorsSuccessors ( );
__declspec(implementation_key(3483)) VARIANT_BOOL _Global::ViewShowNotes ( );
__declspec(implementation_key(3484)) VARIANT_BOOL _Global::ViewShowObjects ( );
__declspec(implementation_key(3485)) VARIANT_BOOL _Global::ViewShowOverallocation ( );
__declspec(implementation_key(3486)) VARIANT_BOOL _Global::ViewShowPercentAllocation ( );
__declspec(implementation_key(3487)) VARIANT_BOOL _Global::ViewShowWork ( );
__declspec(implementation_key(3488)) VARIANT_BOOL _Global::ViewShowCost ( );
__declspec(implementation_key(3489)) VARIANT_BOOL _Global::ViewShowSchedule ( );
__declspec(implementation_key(3490)) VARIANT_BOOL _Global::ViewShowPeakUnits ( );
__declspec(implementation_key(3491)) VARIANT_BOOL _Global::ViewShowAvailability ( );
__declspec(implementation_key(3492)) VARIANT_BOOL _Global::ViewShowRemainingAvailability ( );
__declspec(implementation_key(3493)) VARIANT_BOOL _Global::ViewShowCumulativeWork ( );
__declspec(implementation_key(3494)) VARIANT_BOOL _Global::ViewShowCumulativeCost ( );
__declspec(implementation_key(3495)) VARIANT_BOOL _Global::PaneNext ( );
__declspec(implementation_key(3496)) VARIANT_BOOL _Global::PaneCreate ( );
__declspec(implementation_key(3497)) VARIANT_BOOL _Global::FormViewShow ( );
__declspec(implementation_key(3498)) VARIANT_BOOL _Global::PaneClose ( );
__declspec(implementation_key(3499)) VARIANT_BOOL _Global::WindowSplit ( );
__declspec(implementation_key(3500)) VARIANT_BOOL _Global::WindowNext ( const _variant_t & NoWrap );
__declspec(implementation_key(3501)) VARIANT_BOOL _Global::WindowPrev ( const _variant_t & NoWrap );
__declspec(implementation_key(3502)) VARIANT_BOOL _Global::DocClose ( );
__declspec(implementation_key(3503)) VARIANT_BOOL _Global::AppMaximize ( );
__declspec(implementation_key(3504)) VARIANT_BOOL _Global::AppMinimize ( );
__declspec(implementation_key(3505)) VARIANT_BOOL _Global::AppMove ( const _variant_t & XPosition, const _variant_t & YPosition, const _variant_t & Points );
__declspec(implementation_key(3506)) VARIANT_BOOL _Global::AppRestore ( );
__declspec(implementation_key(3507)) VARIANT_BOOL _Global::AppSize ( const _variant_t & Width, const _variant_t & Height, const _variant_t & Points );
__declspec(implementation_key(3508)) VARIANT_BOOL _Global::DocMaximize ( );
__declspec(implementation_key(3509)) VARIANT_BOOL _Global::DocMove ( const _variant_t & XPosition, const _variant_t & YPosition, const _variant_t & Points );
__declspec(implementation_key(3510)) VARIANT_BOOL _Global::DocRestore ( );
__declspec(implementation_key(3511)) VARIANT_BOOL _Global::DocSize ( const _variant_t & Width, const _variant_t & Height, const _variant_t & Points );
__declspec(implementation_key(3512)) VARIANT_BOOL _Global::OutlineOutdent ( const _variant_t & Levels );
__declspec(implementation_key(3513)) VARIANT_BOOL _Global::OutlineShowTasks ( enum PJTaskOutlineShowLevel OutlineNumber, const _variant_t & ExpandInsertedProjects );
__declspec(implementation_key(3514)) VARIANT_BOOL _Global::OutlineIndent ( const _variant_t & Levels );
__declspec(implementation_key(3515)) VARIANT_BOOL _Global::OutlineHideSubTasks ( );
__declspec(implementation_key(3516)) VARIANT_BOOL _Global::OutlineShowSubTasks ( );
__declspec(implementation_key(3517)) VARIANT_BOOL _Global::OutlineShowAllTasks ( );
__declspec(implementation_key(3518)) VARIANT_BOOL _Global::SelectBeginning ( const _variant_t & Extend );
__declspec(implementation_key(3519)) VARIANT_BOOL _Global::SelectEnd ( const _variant_t & Extend );
__declspec(implementation_key(3520)) VARIANT_BOOL _Global::SelectRowStart ( const _variant_t & Extend );
__declspec(implementation_key(3521)) VARIANT_BOOL _Global::SelectRowEnd ( const _variant_t & Extend );
__declspec(implementation_key(3522)) VARIANT_BOOL _Global::SelectCellLeft ( const _variant_t & NumCells, const _variant_t & Extend );
__declspec(implementation_key(3523)) VARIANT_BOOL _Global::SelectCellRight ( const _variant_t & NumCells, const _variant_t & Extend );
__declspec(implementation_key(3524)) VARIANT_BOOL _Global::SelectCellUp ( const _variant_t & NumCells, const _variant_t & Extend );
__declspec(implementation_key(3525)) VARIANT_BOOL _Global::SelectCellDown ( const _variant_t & NumCells, const _variant_t & Extend );
__declspec(implementation_key(3526)) VARIANT_BOOL _Global::SelectionExtend ( const _variant_t & Extend, const _variant_t & Add );
__declspec(implementation_key(3527)) VARIANT_BOOL _Global::ColumnBestFit ( const _variant_t & Column );
__declspec(implementation_key(3528)) VARIANT_BOOL _Global::ColumnEdit ( const _variant_t & Column );
__declspec(implementation_key(3529)) VARIANT_BOOL _Global::SelectRange ( long Row, short Column, const _variant_t & RowRelative, const _variant_t & Width, const _variant_t & Height, const _variant_t & Extend, const _variant_t & Add );
__declspec(implementation_key(3530)) VARIANT_BOOL _Global::SelectTimescaleRange ( long Row, _bstr_t StartTime, short Width, long Height );
__declspec(implementation_key(3531)) VARIANT_BOOL _Global::SelectTaskField ( long Row, _bstr_t Column, const _variant_t & RowRelative, const _variant_t & Width, const _variant_t & Height, const _variant_t & Extend, const _variant_t & Add );
__declspec(implementation_key(3532)) VARIANT_BOOL _Global::SelectResourceField ( long Row, _bstr_t Column, const _variant_t & RowRelative, const _variant_t & Width, const _variant_t & Height, const _variant_t & Extend, const _variant_t & Add );
__declspec(implementation_key(3533)) VARIANT_BOOL _Global::SelectRow ( const _variant_t & Row, const _variant_t & RowRelative, const _variant_t & Height, const _variant_t & Extend, const _variant_t & Add );
__declspec(implementation_key(3534)) VARIANT_BOOL _Global::SelectColumn ( const _variant_t & Column, const _variant_t & Additional, const _variant_t & Extend, const _variant_t & Add );
__declspec(implementation_key(3535)) VARIANT_BOOL _Global::SelectTaskColumn ( const _variant_t & Column, const _variant_t & Additional, const _variant_t & Extend, const _variant_t & Add );
__declspec(implementation_key(3536)) VARIANT_BOOL _Global::SelectResourceColumn ( const _variant_t & Column, const _variant_t & Additional, const _variant_t & Extend, const _variant_t & Add );
__declspec(implementation_key(3537)) VARIANT_BOOL _Global::SelectTaskCell ( const _variant_t & Row, const _variant_t & Column, const _variant_t & RowRelative );
__declspec(implementation_key(3538)) VARIANT_BOOL _Global::SelectResourceCell ( const _variant_t & Row, const _variant_t & Column, const _variant_t & RowRelative );
__declspec(implementation_key(3539)) VARIANT_BOOL _Global::SelectCell ( const _variant_t & Row, const _variant_t & Column, const _variant_t & RowRelative );
__declspec(implementation_key(3540)) VARIANT_BOOL _Global::SelectSheet ( );
__declspec(implementation_key(3541)) VARIANT_BOOL _Global::DDEInitiate ( _bstr_t App, _bstr_t Topic );
__declspec(implementation_key(3542)) VARIANT_BOOL _Global::DDEExecute ( _bstr_t Command, const _variant_t & TimeOut );
__declspec(implementation_key(3543)) VARIANT_BOOL _Global::DDETerminate ( );
__declspec(implementation_key(3544)) VARIANT_BOOL _Global::InformationDialog ( const _variant_t & Tab );
__declspec(implementation_key(3545)) VARIANT_BOOL _Global::Form ( const _variant_t & Name );
__declspec(implementation_key(3546)) VARIANT_BOOL _Global::CustomForms ( );
__declspec(implementation_key(3547)) VARIANT_BOOL _Global::Tables ( );
__declspec(implementation_key(3548)) VARIANT_BOOL _Global::Filters ( );
__declspec(implementation_key(3549)) VARIANT_BOOL _Global::Macro ( const _variant_t & Name );
__declspec(implementation_key(3550)) VARIANT_BOOL _Global::FillDown ( const _variant_t & Down );
__declspec(implementation_key(3551)) VARIANT_BOOL _Global::Views ( );
__declspec(implementation_key(3552)) VARIANT_BOOL _Global::CalculateProject ( );
__declspec(implementation_key(3553)) VARIANT_BOOL _Global::LevelingClear ( const _variant_t & All );
__declspec(implementation_key(3554)) VARIANT_BOOL _Global::SpellingCheck ( );
__declspec(implementation_key(3555)) VARIANT_BOOL _Global::OptionsSpelling ( const _variant_t & TaskName, const _variant_t & TaskNotes, const _variant_t & TaskText1, const _variant_t & TaskText2, const _variant_t & TaskText3, const _variant_t & TaskText4, const _variant_t & TaskText5, const _variant_t & TaskText6, const _variant_t & TaskText7, const _variant_t & TaskText8, const _variant_t & TaskText9, const _variant_t & TaskText10, const _variant_t & ResourceCode, const _variant_t & ResourceName, const _variant_t & ResourceNotes, const _variant_t & ResourceGroup, const _variant_t & ResourceText1, const _variant_t & ResourceText2, const _variant_t & ResourceText3, const _variant_t & ResourceText4, const _variant_t & ResourceText5, const _variant_t & AssignNotes, const _variant_t & IgnoreUppercase, const _variant_t & IgnoreNumberWords, const _variant_t & AlwaysSuggest, const _variant_t & UseCustomDictionary );
__declspec(implementation_key(3556)) VARIANT_BOOL _Global::WindowMoreWindows ( );
__declspec(implementation_key(3557)) VARIANT_BOOL _Global::HelpContents ( );
__declspec(implementation_key(3558)) VARIANT_BOOL _Global::HelpSearch ( );
__declspec(implementation_key(3559)) VARIANT_BOOL _Global::HelpOnlineIndex ( );
__declspec(implementation_key(3560)) VARIANT_BOOL _Global::HelpAbout ( );
__declspec(implementation_key(3561)) VARIANT_BOOL _Global::HelpLaunch ( const _variant_t & FileName, const _variant_t & ContextNumber, const _variant_t & Search, const _variant_t & SearchKey );
__declspec(implementation_key(3562)) VARIANT_BOOL _Global::HelpCueCards ( const _variant_t & FileName, const _variant_t & ContextNumber );
__declspec(implementation_key(3563)) VARIANT_BOOL _Global::HelpTopics ( );
__declspec(implementation_key(3564)) VARIANT_BOOL _Global::HelpAnswerWizard ( );
__declspec(implementation_key(3565)) VARIANT_BOOL _Global::HelpMSProjectFundamentals ( );
__declspec(implementation_key(3566)) VARIANT_BOOL _Global::AutoCorrect ( );
__declspec(implementation_key(3567)) VARIANT_BOOL _Global::HelpQuickPreview ( );
__declspec(implementation_key(3568)) VARIANT_BOOL _Global::HelpTechnicalSupport ( );
__declspec(implementation_key(3569)) VARIANT_BOOL _Global::HelpCreateYourProject ( );
__declspec(implementation_key(3570)) VARIANT_BOOL _Global::HelpContextHelp ( );
__declspec(implementation_key(3571)) VARIANT_BOOL _Global::TextStyles ( const _variant_t & Item, const _variant_t & Font, const _variant_t & Size, const _variant_t & Bold, const _variant_t & Italic, const _variant_t & Underline, const _variant_t & Color );
__declspec(implementation_key(3572)) VARIANT_BOOL _Global::DetailStylesFormat ( const _variant_t & Item, const _variant_t & Font, const _variant_t & Size, const _variant_t & Bold, const _variant_t & Italic, const _variant_t & Underline, const _variant_t & Color, const _variant_t & CellColor, const _variant_t & Pattern, const _variant_t & ShowInMenu );
__declspec(implementation_key(3573)) VARIANT_BOOL _Global::DetailStylesAdd ( enum PjTimescaledData Item, const _variant_t & Position );
__declspec(implementation_key(3574)) VARIANT_BOOL _Global::DetailStylesRemove ( enum PjTimescaledData Item );
__declspec(implementation_key(3575)) VARIANT_BOOL _Global::DetailStylesRemoveAll ( );
__declspec(implementation_key(3576)) VARIANT_BOOL _Global::Font ( const _variant_t & Name, const _variant_t & Size, const _variant_t & Bold, const _variant_t & Italic, const _variant_t & Underline, const _variant_t & Color, const _variant_t & Reset );
__declspec(implementation_key(3577)) VARIANT_BOOL _Global::Timescale ( );
__declspec(implementation_key(3578)) VARIANT_BOOL _Global::TimescaleEdit ( const _variant_t & MajorUnits, const _variant_t & MinorUnits, const _variant_t & MajorLabel, const _variant_t & MinorLabel, const _variant_t & MajorAlign, const _variant_t & MinorAlign, const _variant_t & MajorCount, const _variant_t & MinorCount, const _variant_t & MajorTicks, const _variant_t & MinorTicks, const _variant_t & Enlarge, const _variant_t & Separator, const _variant_t & MajorUseFY, const _variant_t & MinorUseFY, const _variant_t & TopUnits, const _variant_t & TopLabel, const _variant_t & TopAlign, const _variant_t & TopCount, const _variant_t & TopTicks, const _variant_t & TopUseFY, const _variant_t & TierCount );
__declspec(implementation_key(3579)) VARIANT_BOOL _Global::Sort ( const _variant_t & Key1, const _variant_t & Ascending1, const _variant_t & Key2, const _variant_t & Ascending2, const _variant_t & Key3, const _variant_t & Ascending3, const _variant_t & Renumber, const _variant_t & Outline );
__declspec(implementation_key(3580)) VARIANT_BOOL _Global::BarBoxStyles ( );
__declspec(implementation_key(3581)) VARIANT_BOOL _Global::GanttBarFormat ( const _variant_t & TaskID, const _variant_t & GanttStyle, const _variant_t & StartShape, const _variant_t & StartType, const _variant_t & StartColor, const _variant_t & MiddleShape, const _variant_t & MiddlePattern, const _variant_t & MiddleColor, const _variant_t & EndShape, const _variant_t & EndType, const _variant_t & EndColor, const _variant_t & LeftText, const _variant_t & RightText, const _variant_t & TopText, const _variant_t & BottomText, const _variant_t & InsideText, const _variant_t & Reset, const _variant_t & ProjectName );
__declspec(implementation_key(3582)) VARIANT_BOOL _Global::TimescaleNonWorking ( const _variant_t & Draw, const _variant_t & Calendar, const _variant_t & Color, const _variant_t & Pattern );
__declspec(implementation_key(3583)) VARIANT_BOOL _Global::BoxShowHideFields ( const _variant_t & Show );
__declspec(implementation_key(3584)) VARIANT_BOOL _Global::Layout ( );
__declspec(implementation_key(3585)) VARIANT_BOOL _Global::PERTLayout ( const _variant_t & Straight, const _variant_t & DisplayArrows, const _variant_t & AdjustForPageBreaks, const _variant_t & DisplayPageBreaks );
__declspec(implementation_key(3586)) VARIANT_BOOL _Global::LayoutNow ( );
__declspec(implementation_key(3587)) VARIANT_BOOL _Global::PERTBorders ( const _variant_t & CriticalStyle, const _variant_t & CriticalColor, const _variant_t & NoncriticalStyle, const _variant_t & NoncriticalColor, const _variant_t & CriticalMilestoneStyle, const _variant_t & CriticalMilestoneColor, const _variant_t & NoncriticalMilestoneStyle, const _variant_t & NoncriticalMilestoneColor, const _variant_t & CriticalSummaryStyle, const _variant_t & CriticalSummaryColor, const _variant_t & NoncriticalSummaryStyle, const _variant_t & NoncriticalSummaryColor, const _variant_t & CriticalSubprojectStyle, const _variant_t & CriticalSubprojectColor, const _variant_t & NoncriticalSubprojectStyle, const _variant_t & NoncriticalSubprojectColor, const _variant_t & CriticalMarkedStyle, const _variant_t & CriticalMarkedColor, const _variant_t & NoncriticalMarkedStyle, const _variant_t & NoncriticalMarkedColor, const _variant_t & CriticalExternalTaskStyle, const _variant_t & CriticalExternalTaskColor, const _variant_t & NoncriticalExternalTaskStyle, const _variant_t & NoncriticalExternalTaskColor );
__declspec(implementation_key(3588)) VARIANT_BOOL _Global::Gridlines ( );
__declspec(implementation_key(3589)) VARIANT_BOOL _Global::GridlinesEdit ( enum PjGridline Item, const _variant_t & NormalType, const _variant_t & NormalColor, const _variant_t & Interval, const _variant_t & IntervalType, const _variant_t & IntervalColor );
__declspec(implementation_key(3590)) VARIANT_BOOL _Global::ViewShowSelectedTasks ( const _variant_t & Show );
__declspec(implementation_key(3591)) VARIANT_BOOL _Global::PageBreaksShow ( const _variant_t & Show );
__declspec(implementation_key(3592)) VARIANT_BOOL _Global::FindNext ( );
__declspec(implementation_key(3593)) VARIANT_BOOL _Global::FindPrevious ( );
__declspec(implementation_key(3594)) VARIANT_BOOL _Global::ZoomOut ( );
__declspec(implementation_key(3595)) VARIANT_BOOL _Global::ZoomIn ( );
__declspec(implementation_key(3596)) VARIANT_BOOL _Global::SetField ( _bstr_t Field, _bstr_t Value, const _variant_t & Create );
__declspec(implementation_key(3597)) VARIANT_BOOL _Global::SetTaskField ( _bstr_t Field, _bstr_t Value, const _variant_t & AllSelectedTasks, const _variant_t & Create, const _variant_t & TaskID, const _variant_t & ProjectName );
__declspec(implementation_key(3598)) VARIANT_BOOL _Global::SetResourceField ( _bstr_t Field, _bstr_t Value, const _variant_t & AllSelectedResources, const _variant_t & Create, const _variant_t & ResourceID, const _variant_t & ProjectName );
__declspec(implementation_key(3599)) VARIANT_BOOL _Global::SetActiveCell ( _bstr_t Value, const _variant_t & Create );
__declspec(implementation_key(3600)) _variant_t _Global::CheckField ( _bstr_t Field, _bstr_t Value, const _variant_t & Test, const _variant_t & Op, const _variant_t & Field2, const _variant_t & Value2, const _variant_t & Test2 );
__declspec(implementation_key(3601)) VARIANT_BOOL _Global::SetMatchingField ( _bstr_t Field, _bstr_t Value, _bstr_t CheckField, _bstr_t CheckValue, const _variant_t & CheckTest, const _variant_t & CheckOperation, const _variant_t & CheckField2, const _variant_t & CheckValue2, const _variant_t & CheckTest2 );
__declspec(implementation_key(3602)) VARIANT_BOOL _Global::AppExecute ( const _variant_t & Window, const _variant_t & Command, const _variant_t & Minimize, const _variant_t & Activate );
__declspec(implementation_key(3603)) VARIANT_BOOL _Global::AppLaunch ( _bstr_t Application, const _variant_t & Document, const _variant_t & Activate );
__declspec(implementation_key(3604)) VARIANT_BOOL _Global::DDELinksUpdate ( );
__declspec(implementation_key(3605)) VARIANT_BOOL _Global::GotoTaskDates ( );
__declspec(implementation_key(3606)) VARIANT_BOOL _Global::GanttBarLinks ( enum PjGanttBarLink Display );
__declspec(implementation_key(3607)) VARIANT_BOOL _Global::GanttShowDrawings ( const _variant_t & Display );
__declspec(implementation_key(3608)) VARIANT_BOOL _Global::BarRounding ( const _variant_t & On );
__declspec(implementation_key(3609)) VARIANT_BOOL _Global::GanttRollup ( const _variant_t & AlwaysRollup, const _variant_t & HideWhenSummaryExpanded );
__declspec(implementation_key(3610)) VARIANT_BOOL _Global::GanttBarTextDateFormat ( enum PjDateFormat DateFormat );
__declspec(implementation_key(3611)) VARIANT_BOOL _Global::GanttBarSize ( enum PjBarSize Size );
__declspec(implementation_key(3612)) VARIANT_BOOL _Global::GanttBarStyleDelete ( _bstr_t Item );
__declspec(implementation_key(3613)) VARIANT_BOOL _Global::GanttBarStyleEdit ( _bstr_t Item, const _variant_t & Create, const _variant_t & Name, const _variant_t & StartShape, const _variant_t & StartType, const _variant_t & StartColor, const _variant_t & MiddleShape, const _variant_t & MiddleColor, const _variant_t & MiddlePattern, const _variant_t & EndShape, const _variant_t & EndType, const _variant_t & EndColor, const _variant_t & ShowFor, const _variant_t & Row, const _variant_t & From, const _variant_t & To, const _variant_t & BottomText, const _variant_t & TopText, const _variant_t & LeftText, const _variant_t & RightText, const _variant_t & InsideText );
__declspec(implementation_key(3614)) VARIANT_BOOL _Global::PERTBoxStyles ( const _variant_t & Size, const _variant_t & DateFormat, const _variant_t & Gridlines, const _variant_t & CrossMarks, const _variant_t & Field1, const _variant_t & Field2, const _variant_t & Field3, const _variant_t & Field4, const _variant_t & Field5 );
__declspec(implementation_key(3615)) VARIANT_BOOL _Global::PERTSetTask ( const _variant_t & Create, const _variant_t & Move, const _variant_t & TaskID, const _variant_t & XPosition, const _variant_t & YPosition );
__declspec(implementation_key(3616)) VARIANT_BOOL _Global::ResourceGraphBarStyles ( const _variant_t & TopLeftShowAs, const _variant_t & TopLeftColor, const _variant_t & TopLeftPattern, const _variant_t & BottomLeftShowAs, const _variant_t & BottomLeftColor, const _variant_t & BottomLeftPattern, const _variant_t & TopRightShowAs, const _variant_t & TopRightColor, const _variant_t & TopRightPattern, const _variant_t & BottomRightShowAs, const _variant_t & BottomRightColor, const _variant_t & BottomRightPattern, const _variant_t & ShowValues, const _variant_t & ShowAvailabilityLine, const _variant_t & PercentBarOverlap );
__declspec(implementation_key(3617)) VARIANT_BOOL _Global::ConsolidateProjects ( const _variant_t & Filenames, const _variant_t & NewWindow, const _variant_t & AttachToSources, const _variant_t & PoolResources, const _variant_t & HideSubtasks, enum PjPoolOpen openPool, const _variant_t & UserID, const _variant_t & Password );
__declspec(implementation_key(3618)) VARIANT_BOOL _Global::Organizer ( enum PjOrganizer Type, const _variant_t & Task );
__declspec(implementation_key(3619)) VARIANT_BOOL _Global::OrganizerMoveItem ( const _variant_t & Type, const _variant_t & FileName, const _variant_t & ToFileName, const _variant_t & Name, const _variant_t & Task );
__declspec(implementation_key(3620)) VARIANT_BOOL _Global::OrganizerDeleteItem ( const _variant_t & Type, const _variant_t & FileName, const _variant_t & Name, const _variant_t & Task );
__declspec(implementation_key(3621)) VARIANT_BOOL _Global::OrganizerRenameItem ( const _variant_t & Type, const _variant_t & FileName, const _variant_t & Name, const _variant_t & NewName, const _variant_t & Task );
__declspec(implementation_key(3622)) VARIANT_BOOL _Global::RecurringTaskInsert ( );
__declspec(implementation_key(3623)) VARIANT_BOOL _Global::CalendarTimescale ( );
__declspec(implementation_key(3624)) VARIANT_BOOL _Global::CalendarDateBoxes ( const _variant_t & TopLeft, const _variant_t & TopRight, const _variant_t & BottomLeft, const _variant_t & BottomRight, const _variant_t & TopColor, const _variant_t & BottomColor, const _variant_t & TopPattern, const _variant_t & BottomPattern );
__declspec(implementation_key(3625)) VARIANT_BOOL _Global::CalendarWeekHeadings ( const _variant_t & MonthTitle, const _variant_t & WeekTitle, const _variant_t & DayTitle, const _variant_t & ShowPreview, const _variant_t & DaysPerWeek );
__declspec(implementation_key(3626)) VARIANT_BOOL _Global::CalendarDateShadingEdit ( enum PjCalendarShading Item, const _variant_t & Pattern, const _variant_t & Color );
__declspec(implementation_key(3627)) VARIANT_BOOL _Global::CalendarDateShading ( const _variant_t & BaseCalendarName, const _variant_t & ResourceUniqueID, const _variant_t & ProjectIndex );
__declspec(implementation_key(3628)) VARIANT_BOOL _Global::ZoomCalendar ( const _variant_t & NumWeeks, const _variant_t & StartDate, const _variant_t & EndDate );
__declspec(implementation_key(3629)) VARIANT_BOOL _Global::CalendarLayout ( const _variant_t & SortOrder, const _variant_t & AutoLayout );
__declspec(implementation_key(3630)) VARIANT_BOOL _Global::CalendarBarStyles ( const _variant_t & BarRounding );
__declspec(implementation_key(3631)) VARIANT_BOOL _Global::CalendarBarStylesEdit ( enum PjBarItem Item, const _variant_t & Bar, const _variant_t & Pattern, const _variant_t & Color, const _variant_t & Align, const _variant_t & Wrap, const _variant_t & Shadow, const _variant_t & Field1, const _variant_t & Field2, const _variant_t & Field3, const _variant_t & Field4, const _variant_t & Field5, const _variant_t & SplitPattern );
__declspec(implementation_key(3632)) VARIANT_BOOL _Global::CalendarBestFitWeekHeight ( );
__declspec(implementation_key(3633)) VARIANT_BOOL _Global::DrawingCreate ( enum PjShape Type, const _variant_t & Behind );
__declspec(implementation_key(3634)) VARIANT_BOOL _Global::DrawingMove ( const _variant_t & Forward, const _variant_t & Full );
__declspec(implementation_key(3635)) VARIANT_BOOL _Global::DrawingReshape ( );
__declspec(implementation_key(3636)) VARIANT_BOOL _Global::DrawingProperties ( const _variant_t & SizePositionTab );
__declspec(implementation_key(3637)) VARIANT_BOOL _Global::DrawingCycleColor ( );
__declspec(implementation_key(3638)) VARIANT_BOOL _Global::FormatCopy ( );
__declspec(implementation_key(3639)) VARIANT_BOOL _Global::FormatPaste ( );
__declspec(implementation_key(3640)) VARIANT_BOOL _Global::FormatPainter ( );
__declspec(implementation_key(3641)) VARIANT_BOOL _Global::Toolbars ( const _variant_t & Action, const _variant_t & ToolbarName, const _variant_t & NewToolbarName );
__declspec(implementation_key(3642)) VARIANT_BOOL _Global::ToolbarInsertTool ( _bstr_t ToolbarName, short ButtonIndex, const _variant_t & Command, const _variant_t & FaceIndex, const _variant_t & Description, const _variant_t & ToolTip );
__declspec(implementation_key(3643)) VARIANT_BOOL _Global::ToolbarDeleteTool ( _bstr_t ToolbarName, short ButtonIndex );
__declspec(implementation_key(3644)) VARIANT_BOOL _Global::ToolbarsCustomize ( );
__declspec(implementation_key(3645)) VARIANT_BOOL _Global::ToolbarCustomizeTool ( const _variant_t & ToolbarName, const _variant_t & ButtonIndex, const _variant_t & Command, const _variant_t & FaceIndex, const _variant_t & Description, const _variant_t & ToolTip );
__declspec(implementation_key(3646)) VARIANT_BOOL _Global::ToolbarCopyToolFace ( _bstr_t ToolbarName, short ButtonIndex );
__declspec(implementation_key(3647)) VARIANT_BOOL _Global::ToolbarPasteToolFace ( _bstr_t ToolbarName, short ButtonIndex );
__declspec(implementation_key(3648)) VARIANT_BOOL _Global::FontBold ( const _variant_t & Set );
__declspec(implementation_key(3649)) VARIANT_BOOL _Global::FontItalic ( const _variant_t & Set );
__declspec(implementation_key(3650)) VARIANT_BOOL _Global::FontUnderLine ( const _variant_t & Set );
__declspec(implementation_key(3651)) VARIANT_BOOL _Global::ColumnAlignment ( enum PjAlignment Align );
__declspec(implementation_key(3652)) VARIANT_BOOL _Global::Reports ( );
__declspec(implementation_key(3653)) VARIANT_BOOL _Global::TipOfTheDay ( );
__declspec(implementation_key(3654)) VARIANT_BOOL _Global::FindFile ( );
__declspec(implementation_key(3655)) VARIANT_BOOL _Global::MailUpdateProject ( _bstr_t DataFile );
__declspec(implementation_key(3656)) VARIANT_BOOL _Global::MailSendProjectMail ( const _variant_t & MessageType, const _variant_t & Subject, const _variant_t & Body, const _variant_t & Fields, const _variant_t & UpdateAsOf, const _variant_t & ShowDialog, const _variant_t & InstallationMessage, const _variant_t & UpdateFrom, const _variant_t & PublishScope );
__declspec(implementation_key(3657)) VARIANT_BOOL _Global::WebInbox ( );
__declspec(implementation_key(3658)) VARIANT_BOOL _Global::GanttChartWizard ( );
__declspec(implementation_key(3659)) VARIANT_BOOL _Global::DrawingToolbarShow ( );
__declspec(implementation_key(3660)) VARIANT_BOOL _Global::ReminderSet ( const _variant_t & Start, const _variant_t & LeadTime );
__declspec(implementation_key(3661)) VARIANT_BOOL _Global::SchedulePlusReminderSet ( const _variant_t & Start, const _variant_t & LeadTime );
__declspec(implementation_key(3662)) VARIANT_BOOL _Global::CalendarTaskList ( const _variant_t & Date );
__declspec(implementation_key(3663)) VARIANT_BOOL _Global::OutlineSymbolsToggle ( const _variant_t & Show );
__declspec(implementation_key(3664)) VARIANT_BOOL _Global::ResourceSharingPoolAction ( enum PjPoolAction Action, const _variant_t & FileName, const _variant_t & ReadOnly );
__declspec(implementation_key(3665)) VARIANT_BOOL _Global::ResourceActiveDirectory ( );
__declspec(implementation_key(3666)) VARIANT_BOOL _Global::ResourceAddressBook ( );
__declspec(implementation_key(3667)) VARIANT_BOOL _Global::ResourceDetails ( const _variant_t & Name );
__declspec(implementation_key(3668)) VARIANT_BOOL _Global::MailProjectMailCustomize ( const _variant_t & Action, const _variant_t & Position, const _variant_t & FieldID, const _variant_t & Title, const _variant_t & IncludeInTeamStatus, const _variant_t & Editable, const _variant_t & UseAssignmentField );
__declspec(implementation_key(3669)) VARIANT_BOOL _Global::FileQuit ( enum PjSaveType Save );
__declspec(implementation_key(3670)) VARIANT_BOOL _Global::About ( );
__declspec(implementation_key(3671)) VARIANT_BOOL _Global::DetailStylesProperties ( const _variant_t & AlignCellData, const _variant_t & RepeatRowLabel, const _variant_t & ShortLabels, const _variant_t & DisplayDetailsColumn );
__declspec(implementation_key(3672)) VARIANT_BOOL _Global::DetailStylesToggleItem ( enum PjTimescaledData Item );
__declspec(implementation_key(3673)) VARIANT_BOOL _Global::AutoFilter ( );
__declspec(implementation_key(3674)) VARIANT_BOOL _Global::ViewBar ( );
__declspec(implementation_key(3675)) VARIANT_BOOL _Global::MacroShowVba ( );
__declspec(implementation_key(3676)) VARIANT_BOOL _Global::MacroShowCode ( );
__declspec(implementation_key(3677)) VARIANT_BOOL _Global::WebGoBack ( );
__declspec(implementation_key(3678)) VARIANT_BOOL _Global::WebGoForward ( );
__declspec(implementation_key(3679)) VARIANT_BOOL _Global::WebStopLoading ( );
__declspec(implementation_key(3680)) VARIANT_BOOL _Global::WebRefresh ( );
__declspec(implementation_key(3681)) VARIANT_BOOL _Global::WebOpenStartPage ( );
__declspec(implementation_key(3682)) VARIANT_BOOL _Global::WebOpenSearchPage ( );
__declspec(implementation_key(3683)) VARIANT_BOOL _Global::WebHideToolbars ( const _variant_t & Hide );
__declspec(implementation_key(3684)) VARIANT_BOOL _Global::FollowHyperlink ( const _variant_t & Address, const _variant_t & SubAddress, const _variant_t & AddHistory, const _variant_t & NewWindow );
__declspec(implementation_key(3685)) VARIANT_BOOL _Global::EditPasteAsHyperlink ( );
__declspec(implementation_key(3686)) VARIANT_BOOL _Global::InsertHyperlink ( const _variant_t & Name, const _variant_t & Address, const _variant_t & SubAddress, const _variant_t & ScreenTip );
__declspec(implementation_key(3687)) VARIANT_BOOL _Global::EditHyperlink ( const _variant_t & Name, const _variant_t & Address, const _variant_t & SubAddress, const _variant_t & ScreenTip );
__declspec(implementation_key(3688)) VARIANT_BOOL _Global::WebOpenHyperlink ( const _variant_t & Address, const _variant_t & SubAddress, const _variant_t & AddHistory, const _variant_t & NewWindow );
__declspec(implementation_key(3689)) VARIANT_BOOL _Global::WebCopyHyperlink ( );
__declspec(implementation_key(3690)) VARIANT_BOOL _Global::WebAddToFavorites ( const _variant_t & CurrentLink );
__declspec(implementation_key(3691)) VARIANT_BOOL _Global::EditClearHyperlink ( );
__declspec(implementation_key(3692)) VARIANT_BOOL _Global::WebSetStartPage ( const _variant_t & Address );
__declspec(implementation_key(3693)) VARIANT_BOOL _Global::WebSetSearchPage ( const _variant_t & Address );
__declspec(implementation_key(3694)) VARIANT_BOOL _Global::WebOpenFavorites ( );
__declspec(implementation_key(3695)) VARIANT_BOOL _Global::WebToolbar ( const _variant_t & Show );
__declspec(implementation_key(3696)) VARIANT_BOOL _Global::SplitTask ( const _variant_t & Lock );
__declspec(implementation_key(3697)) VARIANT_BOOL _Global::CustomFieldRename ( enum PjCustomField FieldID, const _variant_t & NewName, const _variant_t & Phonetic );
__declspec(implementation_key(3698)) VARIANT_BOOL _Global::CustomizeField ( );
__declspec(implementation_key(3699)) VARIANT_BOOL _Global::GanttShowBarSplits ( const _variant_t & Display );
__declspec(implementation_key(3700)) VARIANT_BOOL _Global::CalendarShowBarSplits ( const _variant_t & Display );
__declspec(implementation_key(3701)) VARIANT_BOOL _Global::MapEdit ( const _variant_t & Name, const _variant_t & Create, const _variant_t & OverwriteExisting, const _variant_t & NewName, const _variant_t & DataCategory, const _variant_t & CategoryEnabled, const _variant_t & TableName, const _variant_t & FieldName, const _variant_t & ExternalFieldName, const _variant_t & ExportFilter, const _variant_t & ImportMethod, const _variant_t & MergeKey, const _variant_t & HeaderRow, const _variant_t & AssignmentData, const _variant_t & TextDelimiter, const _variant_t & TextFileOrigin, const _variant_t & UseHtmlTemplate, const _variant_t & TemplateFile, const _variant_t & IncludeImage, const _variant_t & ImageFile );
__declspec(implementation_key(3702)) VARIANT_BOOL _Global::FillAcross ( const _variant_t & Right );
__declspec(implementation_key(3703)) VARIANT_BOOL _Global::LinksBetweenProjects ( const _variant_t & AcceptAll );
__declspec(implementation_key(3704)) VARIANT_BOOL _Global::ToggleAssignments ( );
__declspec(implementation_key(3705)) VARIANT_BOOL _Global::ProgressLines ( );
__declspec(implementation_key(3706)) VARIANT_BOOL _Global::ResourceSharingPoolUpdate ( const _variant_t & allSharers );
__declspec(implementation_key(3707)) VARIANT_BOOL _Global::ResourceSharingPoolRefresh ( );
__declspec(implementation_key(3708)) VARIANT_BOOL _Global::WebHelp ( const _variant_t & Type );
__declspec(implementation_key(3709)) VARIANT_BOOL _Global::AddProgressLine ( );
__declspec(implementation_key(3710)) VARIANT_BOOL _Global::CustomizeIMEMode ( enum PjField FieldID, enum PjIMEMode IMEMode );
__declspec(implementation_key(3711)) VARIANT_BOOL _Global::DeleteFromDatabase ( const _variant_t & Name, const _variant_t & UserID, const _variant_t & DatabasePassWord, const _variant_t & FormatID );
__declspec(implementation_key(3712)) VARIANT_BOOL _Global::WBSCodeRenumber ( const _variant_t & All );
__declspec(implementation_key(3713)) VARIANT_BOOL _Global::WBSCodeMaskEdit ( const _variant_t & CodePrefix, const _variant_t & Level, enum PjWBSSequence Sequence, const _variant_t & Length, const _variant_t & Separator, const _variant_t & CodeGenerate, const _variant_t & VerifyUniqueness );
__declspec(implementation_key(3714)) VARIANT_BOOL _Global::CustomOutlineCodeEdit ( enum PjCustomField FieldID, const _variant_t & Level, enum PjCustomOutlineCodeSequence Sequence, const _variant_t & Length, const _variant_t & Separator, const _variant_t & OnlyLookUpTableCodes, const _variant_t & OnlyCompleteCodes, const _variant_t & LookupTableLink, const _variant_t & OnlyLeaves, const _variant_t & MatchGeneric, const _variant_t & RequiredCode );
__declspec(implementation_key(3715)) VARIANT_BOOL _Global::OptionsSave ( const _variant_t & DefaultSaveFormat, const _variant_t & DefaultProjectsPath, const _variant_t & DefaultUserTemplatesPath, const _variant_t & DefaultWorkgroupTemplatesPath, const _variant_t & ExpandDatabaseTimephasedData, const _variant_t & AutomaticSave, const _variant_t & AutomaticSaveInterval, const _variant_t & AutomaticSaveOptions, const _variant_t & AutomaticSavePrompt, const _variant_t & SetDefaultsDatabase );
__declspec(implementation_key(3716)) VARIANT_BOOL _Global::OfficeOnTheWeb ( );
__declspec(implementation_key(3717)) VARIANT_BOOL _Global::FixMe ( );
__declspec(implementation_key(3718)) VARIANT_BOOL _Global::ViewShowWorkAvailability ( );
__declspec(implementation_key(3719)) VARIANT_BOOL _Global::ViewShowUnitAvailability ( );
__declspec(implementation_key(3720)) VARIANT_BOOL _Global::BaselineClear ( const _variant_t & All, const _variant_t & From );
__declspec(implementation_key(3721)) VARIANT_BOOL _Global::Groups ( );
__declspec(implementation_key(3722)) VARIANT_BOOL _Global::GroupApply ( const _variant_t & Name );
__declspec(implementation_key(3723)) VARIANT_BOOL _Global::GroupBy ( );
__declspec(implementation_key(3724)) VARIANT_BOOL _Global::LookUpTableAdd ( enum PjCustomField FieldID, const _variant_t & Level, const _variant_t & Code, const _variant_t & Description );
__declspec(implementation_key(3725)) VARIANT_BOOL _Global::BoxStylesEdit ( enum PjBoxStyle Style, const _variant_t & DataTemplate, const _variant_t & HorizontalGridlines, const _variant_t & VerticalGridlines, enum PjBoxShape BorderShape, enum PjColor BorderColor, const _variant_t & BorderWidth, enum PjColor BackgroundColor, enum PjBackgroundPattern BackgroundPattern );
__declspec(implementation_key(3726)) VARIANT_BOOL _Global::BoxFormat ( const _variant_t & ProjectName, const _variant_t & TaskID, const _variant_t & DataTemplate, const _variant_t & HorizontalGridlines, const _variant_t & VerticalGridlines, enum PjBoxShape BorderShape, enum PjColor BorderColor, const _variant_t & BorderWidth, enum PjColor BackgroundColor, enum PjBackgroundPattern BackgroundPattern, const _variant_t & Reset );
__declspec(implementation_key(3727)) VARIANT_BOOL _Global::BarBoxFormat ( );
__declspec(implementation_key(3728)) VARIANT_BOOL _Global::CreateWebAccount ( const _variant_t & ServerURL, const _variant_t & Name, enum PjAuthentication AuthenticationType, enum PjAccountType AccountType, const _variant_t & ShowDialog, const _variant_t & Email, const _variant_t & WindowsAccount );
__declspec(implementation_key(3729)) VARIANT_BOOL _Global::BoxDataTemplate ( _bstr_t Name, enum PjDataTemplate Action, const _variant_t & NewName, const _variant_t & Overwrite );
__declspec(implementation_key(3730)) VARIANT_BOOL _Global::BoxCellLayout ( _bstr_t Name, const _variant_t & CellRows, const _variant_t & CellColumns, const _variant_t & CellWidth, const _variant_t & MergeCells );
__declspec(implementation_key(3731)) VARIANT_BOOL _Global::BoxCellEdit ( _bstr_t Name, enum PjCell Cell, enum PjField FieldName, const _variant_t & Font, const _variant_t & FontSize, enum PjColor FontColor, const _variant_t & Bold, const _variant_t & Italic, const _variant_t & Underline, enum PjAlignment HorizontalAlignment, enum PjVerticalAlignment VerticalAlignment, const _variant_t & TextLineLimit, const _variant_t & ShowLabel, const _variant_t & Label, enum PjDateFormat DateFormat );
__declspec(implementation_key(3732)) VARIANT_BOOL _Global::ResourceWindowsAccount ( const _variant_t & Name, const _variant_t & ShowDialog );
__declspec(implementation_key(3733)) VARIANT_BOOL _Global::SetRowHeight ( const _variant_t & Unit, const _variant_t & Rows, const _variant_t & UseUniqueID );
__declspec(implementation_key(3734)) VARIANT_BOOL _Global::ComAddInsDialog ( );
__declspec(implementation_key(3735)) VARIANT_BOOL _Global::MacroSecurity ( );
__declspec(implementation_key(3736)) VARIANT_BOOL _Global::LayoutSelectionNow ( );
__declspec(implementation_key(3737)) VARIANT_BOOL _Global::BoxAlign ( enum PjAlign Alignment );
__declspec(implementation_key(3738)) VARIANT_BOOL _Global::ConvertHangulToHanja ( );
__declspec(implementation_key(3739)) VARIANT_BOOL _Global::UpdateProjectToWeb ( const _variant_t & ServerURL, const _variant_t & EmbedProjectFile, const _variant_t & OnlyRegisterProject, const _variant_t & WaitForCompletion );
__declspec(implementation_key(3740)) VARIANT_BOOL _Global::CustomFieldProperties ( enum PjCustomField FieldID, enum PjCustomFieldAttribute Attribute, enum PjSummaryCalc SummaryCalc, const _variant_t & GraphicalIndicators, const _variant_t & Required );
__declspec(implementation_key(3741)) VARIANT_BOOL _Global::CustomFieldSetFormula ( enum PjCustomField FieldID, const _variant_t & Formula );
__declspec(implementation_key(3742)) VARIANT_BOOL _Global::CustomFieldIndicatorAdd ( enum PjCustomField FieldID, enum PjComparison Test, _bstr_t Value, enum PjIndicator IndicatorID, enum PjCriteriaList CriteriaList, const _variant_t & Index );
__declspec(implementation_key(3743)) VARIANT_BOOL _Global::CustomFieldIndicators ( enum PjCustomField FieldID, const _variant_t & SummaryInheritsNonsummary, const _variant_t & ProjectInheritsSummary, const _variant_t & ShowToolTips );
__declspec(implementation_key(3744)) VARIANT_BOOL _Global::CustomFieldIndicatorDelete ( enum PjCustomField FieldID, short Index, enum PjCriteriaList CriteriaList );
__declspec(implementation_key(3745)) VARIANT_BOOL _Global::CustomFieldValueList ( enum PjCustomField FieldID, const _variant_t & ListDefault, const _variant_t & DefaultValue, const _variant_t & RestrictToList, const _variant_t & AppendNew, const _variant_t & PromptOnNew, enum PjListOrder DisplayOrder );
__declspec(implementation_key(3746)) VARIANT_BOOL _Global::CustomFieldValueListAdd ( enum PjCustomField FieldID, const _variant_t & Value, const _variant_t & Description, const _variant_t & Phonetic, const _variant_t & Index, const _variant_t & FieldDefault );
__declspec(implementation_key(3747)) VARIANT_BOOL _Global::CustomFieldValueListDelete ( enum PjCustomField FieldID, short Index );
__declspec(implementation_key(3748)) VARIANT_BOOL _Global::BoxLayout ( enum PjLayoutMode LayoutMode, enum PjLayoutScheme LayoutScheme, const _variant_t & SummaryPrecedence, enum PjVerticalAlignment RowAlignment, enum PjAlignment ColumnAlignment, const _variant_t & RowSpacing, const _variant_t & ColumnSpacing, enum PjRowColSize RowHeight, enum PjRowColSize ColumnWidth, const _variant_t & AdjustForPageBreaks, const _variant_t & ShowSummaryTasks, enum PjColor ViewBackgroundColor, enum PjBackgroundPattern ViewBackgroundPattern, const _variant_t & ShowProgressMarks, const _variant_t & ShowPageBreaks, const _variant_t & ShowIDOnly );
__declspec(implementation_key(3749)) VARIANT_BOOL _Global::BoxLinks ( enum PjLinkStyle Style, const _variant_t & ShowArrows, const _variant_t & ShowLabels, enum PjLinkColorMode ColorMode, enum PjColor CriticalColor, enum PjColor NoncriticalColor );
__declspec(implementation_key(3750)) VARIANT_BOOL _Global::SummaryTasksShow ( const _variant_t & Show );
__declspec(implementation_key(3751)) VARIANT_BOOL _Global::BoxProgressMarksShow ( const _variant_t & Show );
__declspec(implementation_key(3752)) VARIANT_BOOL _Global::BoxLinkLabelsShow ( const _variant_t & Show );
__declspec(implementation_key(3753)) VARIANT_BOOL _Global::BoxLinkStyleToggle ( const _variant_t & StraightLinks );
__declspec(implementation_key(3754)) VARIANT_BOOL _Global::LayoutRelatedNow ( );
__declspec(implementation_key(3755)) VARIANT_BOOL _Global::BoxSet ( enum PjBoxSet Action, const _variant_t & TaskID, const _variant_t & XPosition, const _variant_t & YPosition, const _variant_t & ProjectName );
__declspec(implementation_key(3756)) VARIANT_BOOL _Global::SetSplitBar ( const _variant_t & ShowColumns );
__declspec(implementation_key(3757)) VARIANT_BOOL _Global::SetTitleRowHeight ( const _variant_t & TitleHeight );
__declspec(implementation_key(3758)) VARIANT_BOOL _Global::GoalAreaChange ( short goalArea );
__declspec(implementation_key(3759)) VARIANT_BOOL _Global::SidepaneToggle ( const _variant_t & Show );
__declspec(implementation_key(3760)) VARIANT_BOOL _Global::SearchFiles ( );
__declspec(implementation_key(3761)) VARIANT_BOOL _Global::ImportOutlookTasks ( );
__declspec(implementation_key(3762)) VARIANT_BOOL _Global::OptionsInterface ( const _variant_t & ShowResourceAssignmentIndicators, const _variant_t & ShowEditToStartFinishDates, const _variant_t & ShowEditsToWorkUnitsDurationIndicators, const _variant_t & ShowDeletionInNameColumn, const _variant_t & DisplayProjectGuide, const _variant_t & ProjectGuideUseDefaultFunctionalLayoutPage, const _variant_t & ProjectGuideFunctionalLayoutPage, const _variant_t & ProjectGuideUseDefaultContent, const _variant_t & ProjectGuideContent, const _variant_t & SetAsDefaults );
__declspec(implementation_key(3763)) VARIANT_BOOL _Global::SidepaneTaskChange ( short ID, const _variant_t & IsGoalArea );
__declspec(implementation_key(3764)) VARIANT_BOOL _Global::ImportResourceList ( const _variant_t & ServerURL );
__declspec(implementation_key(3765)) VARIANT_BOOL _Global::EnterpriseResSubstitutionWizard ( const _variant_t & ProjectList, enum PjResSubstitutionPoolOption PoolOption, const _variant_t & RBSorResourceList, const _variant_t & FreezeHorizonDate, const _variant_t & UpdateProjects, const _variant_t & SaveReport, const _variant_t & Path );
__declspec(implementation_key(3766)) VARIANT_BOOL _Global::EnterpriseResourcesOpen ( const _variant_t & EUID, enum PjCheckOutType OpenType );
__declspec(implementation_key(3767)) VARIANT_BOOL _Global::EnterpriseResourcesImport ( const _variant_t & LocalRUIDs );
__declspec(implementation_key(3768)) VARIANT_BOOL _Global::EnterpriseResourceGet ( const _variant_t & EUID, const _variant_t & RUID );
__declspec(implementation_key(3769)) VARIANT_BOOL _Global::EnterpriseProjectImportWizard ( const _variant_t & Name );
__declspec(implementation_key(3770)) VARIANT_BOOL _Global::EnterpriseTeamBuilder ( );
__declspec(implementation_key(3771)) VARIANT_BOOL _Global::EnterpriseCustomOutlineCodeShare ( long LinkFrom, const _variant_t & LinkTo );
__declspec(implementation_key(3772)) VARIANT_BOOL _Global::EnterpriseCustomizeFields ( );
__declspec(implementation_key(3773)) VARIANT_BOOL _Global::EnterpriseGlobalCheckOut ( );
__declspec(implementation_key(3774)) VARIANT_BOOL _Global::EnterpriseProjectProfiles ( );
__declspec(implementation_key(3775)) VARIANT_BOOL _Global::ResourceAssignmentDialog ( const _variant_t & ShowResourceListOptions, enum PjAssignResourcesListFields ResourceListFields, const _variant_t & UseNamedFilter, const _variant_t & FilterName, const _variant_t & UseAvailableToWorkFilter, const _variant_t & AvailableToWork );
__declspec(implementation_key(3776)) VARIANT_BOOL _Global::LoadWebBrowserControl ( _bstr_t TargetPage, const _variant_t & WrapperPage );
__declspec(implementation_key(3777)) VARIANT_BOOL _Global::FileSaveOffline ( enum PjSaveType Save );
__declspec(implementation_key(3778)) VARIANT_BOOL _Global::HelpReference ( );
__declspec(implementation_key(3779)) VARIANT_BOOL _Global::HelpWhatsNew ( );
__declspec(implementation_key(3780)) VARIANT_BOOL _Global::StopWebBrowserControlNavigation ( );
__declspec(implementation_key(3781)) VARIANT_BOOL _Global::EnterpriseGlobalBackup ( const _variant_t & BackupFileName );
__declspec(implementation_key(3782)) VARIANT_BOOL _Global::EnterpriseGlobalRestore ( const _variant_t & ProfileName, const _variant_t & RestoreFileName );
__declspec(implementation_key(3783)) VARIANT_BOOL _Global::SpellCheckField ( enum PjSpellingField FieldName, const _variant_t & EnableSpellCheck );
__declspec(implementation_key(3784)) VARIANT_BOOL _Global::AddResourcesFromProjectServer ( );
__declspec(implementation_key(3785)) VARIANT_BOOL _Global::ResetTrackingMethod ( );
__declspec(implementation_key(3786)) _MSProjectPtr _Global::GetApplication ( );
__declspec(implementation_key(3787)) void _Global::PutApplication ( struct _MSProject * _val );
__declspec(implementation_key(3788)) _MSProjectPtr _Global::GetParent ( );
__declspec(implementation_key(3789)) void _Global::PutParent ( struct _MSProject * _val );
__declspec(implementation_key(3790)) SelectionPtr _Global::GetActiveSelection ( );
__declspec(implementation_key(3791)) void _Global::PutActiveSelection ( struct Selection * _val );
__declspec(implementation_key(3792)) CellPtr _Global::GetActiveCell ( );
__declspec(implementation_key(3793)) void _Global::PutActiveCell ( struct Cell * _val );
__declspec(implementation_key(3794)) _IProjectDocPtr _Global::GetActiveProject ( );
__declspec(implementation_key(3795)) void _Global::PutActiveProject ( struct _IProjectDoc * _val );
__declspec(implementation_key(3796)) WindowPtr _Global::GetActiveWindow ( );
__declspec(implementation_key(3797)) void _Global::PutActiveWindow ( struct Window * _val );
__declspec(implementation_key(3798)) VARIANT_BOOL _Global::GetSupportsMultipleDocuments ( );
__declspec(implementation_key(3799)) void _Global::PutSupportsMultipleDocuments ( VARIANT_BOOL _val );
__declspec(implementation_key(3800)) VARIANT_BOOL _Global::GetSupportsMultipleWindows ( );
__declspec(implementation_key(3801)) void _Global::PutSupportsMultipleWindows ( VARIANT_BOOL _val );
__declspec(implementation_key(3802)) VARIANT_BOOL _Global::GetVisible ( );
__declspec(implementation_key(3803)) void _Global::PutVisible ( VARIANT_BOOL _val );
__declspec(implementation_key(3804)) _bstr_t _Global::GetPathSeparator ( );
__declspec(implementation_key(3805)) void _Global::PutPathSeparator ( _bstr_t _val );
__declspec(implementation_key(3806)) _bstr_t _Global::GetCaption ( );
__declspec(implementation_key(3807)) void _Global::PutCaption ( _bstr_t _val );
__declspec(implementation_key(3808)) _bstr_t _Global::GetName ( );
__declspec(implementation_key(3809)) void _Global::PutName ( _bstr_t _val );
__declspec(implementation_key(3810)) _bstr_t _Global::GetPath ( );
__declspec(implementation_key(3811)) void _Global::PutPath ( _bstr_t _val );
__declspec(implementation_key(3812)) _bstr_t _Global::GetVersion ( );
__declspec(implementation_key(3813)) void _Global::PutVersion ( _bstr_t _val );
__declspec(implementation_key(3814)) enum PjWindowState _Global::GetWindowState ( );
__declspec(implementation_key(3815)) void _Global::PutWindowState ( enum PjWindowState _val );
__declspec(implementation_key(3816)) enum PjDateOrder _Global::GetDateOrder ( );
__declspec(implementation_key(3817)) void _Global::PutDateOrder ( enum PjDateOrder _val );
__declspec(implementation_key(3818)) _bstr_t _Global::GetDateSeparator ( );
__declspec(implementation_key(3819)) void _Global::PutDateSeparator ( _bstr_t _val );
__declspec(implementation_key(3820)) _bstr_t _Global::GetThousandSeparator ( );
__declspec(implementation_key(3821)) void _Global::PutThousandSeparator ( _bstr_t _val );
__declspec(implementation_key(3822)) _bstr_t _Global::GetDecimalSeparator ( );
__declspec(implementation_key(3823)) void _Global::PutDecimalSeparator ( _bstr_t _val );
__declspec(implementation_key(3824)) _bstr_t _Global::GetListSeparator ( );
__declspec(implementation_key(3825)) void _Global::PutListSeparator ( _bstr_t _val );
__declspec(implementation_key(3826)) _bstr_t _Global::GetTimeSeparator ( );
__declspec(implementation_key(3827)) void _Global::PutTimeSeparator ( _bstr_t _val );
__declspec(implementation_key(3828)) VARIANT_BOOL _Global::GetTwelveHourTimeFormat ( );
__declspec(implementation_key(3829)) void _Global::PutTwelveHourTimeFormat ( VARIANT_BOOL _val );
__declspec(implementation_key(3830)) _bstr_t _Global::GetAMText ( );
__declspec(implementation_key(3831)) void _Global::PutAMText ( _bstr_t _val );
__declspec(implementation_key(3832)) _bstr_t _Global::GetPMText ( );
__declspec(implementation_key(3833)) void _Global::PutPMText ( _bstr_t _val );
__declspec(implementation_key(3834)) _bstr_t _Global::GetDefaultView ( );
__declspec(implementation_key(3835)) void _Global::PutDefaultView ( _bstr_t _val );
__declspec(implementation_key(3836)) VARIANT_BOOL _Global::GetDisplayStatusBar ( );
__declspec(implementation_key(3837)) void _Global::PutDisplayStatusBar ( VARIANT_BOOL _val );
__declspec(implementation_key(3838)) VARIANT_BOOL _Global::GetDisplayAlerts ( );
__declspec(implementation_key(3839)) void _Global::PutDisplayAlerts ( VARIANT_BOOL _val );
__declspec(implementation_key(3840)) VARIANT_BOOL _Global::GetDisplayEntryBar ( );
__declspec(implementation_key(3841)) void _Global::PutDisplayEntryBar ( VARIANT_BOOL _val );
__declspec(implementation_key(3842)) VARIANT_BOOL _Global::GetDisplayScrollBars ( );
__declspec(implementation_key(3843)) void _Global::PutDisplayScrollBars ( VARIANT_BOOL _val );
__declspec(implementation_key(3844)) VARIANT_BOOL _Global::GetDisplayWindowsInTaskbar ( );
__declspec(implementation_key(3845)) void _Global::PutDisplayWindowsInTaskbar ( VARIANT_BOOL _val );
__declspec(implementation_key(3846)) enum PjCalculation _Global::GetCalculation ( );
__declspec(implementation_key(3847)) void _Global::PutCalculation ( enum PjCalculation _val );
__declspec(implementation_key(3848)) VARIANT_BOOL _Global::GetAutoLevel ( );
__declspec(implementation_key(3849)) void _Global::PutAutoLevel ( VARIANT_BOOL _val );
__declspec(implementation_key(3850)) VARIANT_BOOL _Global::GetAutoClearLeveling ( );
__declspec(implementation_key(3851)) void _Global::PutAutoClearLeveling ( VARIANT_BOOL _val );
__declspec(implementation_key(3852)) VARIANT_BOOL _Global::GetLevelWithinSlack ( );
__declspec(implementation_key(3853)) void _Global::PutLevelWithinSlack ( VARIANT_BOOL _val );
__declspec(implementation_key(3854)) enum PjLevelOrder _Global::GetLevelOrder ( );
__declspec(implementation_key(3855)) void _Global::PutLevelOrder ( enum PjLevelOrder _val );
__declspec(implementation_key(3856)) enum PjLevelPeriodBasis _Global::GetLevelPeriodBasis ( );
__declspec(implementation_key(3857)) void _Global::PutLevelPeriodBasis ( enum PjLevelPeriodBasis _val );
__declspec(implementation_key(3858)) VARIANT_BOOL _Global::GetLevelIndividualAssignments ( );
__declspec(implementation_key(3859)) void _Global::PutLevelIndividualAssignments ( VARIANT_BOOL _val );
__declspec(implementation_key(3860)) VARIANT_BOOL _Global::GetLevelingCanSplit ( );
__declspec(implementation_key(3861)) void _Global::PutLevelingCanSplit ( VARIANT_BOOL _val );
__declspec(implementation_key(3862)) VARIANT_BOOL _Global::GetMoveAfterReturn ( );
__declspec(implementation_key(3863)) void _Global::PutMoveAfterReturn ( VARIANT_BOOL _val );
__declspec(implementation_key(3864)) VARIANT_BOOL _Global::GetDisplayScheduleMessages ( );
__declspec(implementation_key(3865)) void _Global::PutDisplayScheduleMessages ( VARIANT_BOOL _val );
__declspec(implementation_key(3866)) enum PjWeekday _Global::GetStartWeekOn ( );
__declspec(implementation_key(3867)) void _Global::PutStartWeekOn ( enum PjWeekday _val );
__declspec(implementation_key(3868)) enum PjMonth _Global::GetStartYearIn ( );
__declspec(implementation_key(3869)) void _Global::PutStartYearIn ( enum PjMonth _val );
__declspec(implementation_key(3870)) VARIANT_BOOL _Global::GetCellDragAndDrop ( );
__declspec(implementation_key(3871)) void _Global::PutCellDragAndDrop ( VARIANT_BOOL _val );
__declspec(implementation_key(3872)) _bstr_t _Global::GetUserName ( );
__declspec(implementation_key(3873)) void _Global::PutUserName ( _bstr_t _val );
__declspec(implementation_key(3874)) VARIANT_BOOL _Global::GetDisplayNotesIndicator ( );
__declspec(implementation_key(3875)) void _Global::PutDisplayNotesIndicator ( VARIANT_BOOL _val );
__declspec(implementation_key(3876)) VARIANT_BOOL _Global::GetAskToUpdateLinks ( );
__declspec(implementation_key(3877)) void _Global::PutAskToUpdateLinks ( VARIANT_BOOL _val );
__declspec(implementation_key(3878)) VARIANT_BOOL _Global::GetDisplayPlanningWizard ( );
__declspec(implementation_key(3879)) void _Global::PutDisplayPlanningWizard ( VARIANT_BOOL _val );
__declspec(implementation_key(3880)) VARIANT_BOOL _Global::GetDisplayWizardUsage ( );
__declspec(implementation_key(3881)) void _Global::PutDisplayWizardUsage ( VARIANT_BOOL _val );
__declspec(implementation_key(3882)) VARIANT_BOOL _Global::GetDisplayWizardErrors ( );
__declspec(implementation_key(3883)) void _Global::PutDisplayWizardErrors ( VARIANT_BOOL _val );
__declspec(implementation_key(3884)) VARIANT_BOOL _Global::GetDisplayWizardScheduling ( );
__declspec(implementation_key(3885)) void _Global::PutDisplayWizardScheduling ( VARIANT_BOOL _val );
__declspec(implementation_key(3886)) VARIANT_BOOL _Global::GetShowTipOfDay ( );
__declspec(implementation_key(3887)) void _Global::PutShowTipOfDay ( VARIANT_BOOL _val );
__declspec(implementation_key(3888)) VARIANT_BOOL _Global::GetShowToolTips ( );
__declspec(implementation_key(3889)) void _Global::PutShowToolTips ( VARIANT_BOOL _val );
__declspec(implementation_key(3890)) VARIANT_BOOL _Global::GetShowWelcome ( );
__declspec(implementation_key(3891)) void _Global::PutShowWelcome ( VARIANT_BOOL _val );
__declspec(implementation_key(3892)) VARIANT_BOOL _Global::GetLoadLastFile ( );
__declspec(implementation_key(3893)) void _Global::PutLoadLastFile ( VARIANT_BOOL _val );
__declspec(implementation_key(3894)) VARIANT_BOOL _Global::GetPromptForSummaryInfo ( );
__declspec(implementation_key(3895)) void _Global::PutPromptForSummaryInfo ( VARIANT_BOOL _val );
__declspec(implementation_key(3896)) VARIANT_BOOL _Global::GetDisplayOLEIndicator ( );
__declspec(implementation_key(3897)) void _Global::PutDisplayOLEIndicator ( VARIANT_BOOL _val );
__declspec(implementation_key(3898)) enum PjDateFormat _Global::GetDefaultDateFormat ( );
__declspec(implementation_key(3899)) void _Global::PutDefaultDateFormat ( enum PjDateFormat _val );
__declspec(implementation_key(3900)) VARIANT_BOOL _Global::GetDayLeadingZero ( );
__declspec(implementation_key(3901)) void _Global::PutDayLeadingZero ( VARIANT_BOOL _val );
__declspec(implementation_key(3902)) VARIANT_BOOL _Global::GetMonthLeadingZero ( );
__declspec(implementation_key(3903)) void _Global::PutMonthLeadingZero ( VARIANT_BOOL _val );
__declspec(implementation_key(3904)) VARIANT_BOOL _Global::GetTimeLeadingZero ( );
__declspec(implementation_key(3905)) void _Global::PutTimeLeadingZero ( VARIANT_BOOL _val );
__declspec(implementation_key(3906)) VARIANT_BOOL _Global::GetCopyResourceUsageHeader ( );
__declspec(implementation_key(3907)) void _Global::PutCopyResourceUsageHeader ( VARIANT_BOOL _val );
__declspec(implementation_key(3908)) long _Global::GetRecentFilesMaximum ( );
__declspec(implementation_key(3909)) void _Global::PutRecentFilesMaximum ( long _val );
__declspec(implementation_key(3910)) VARIANT_BOOL _Global::GetDisplayRecentFiles ( );
__declspec(implementation_key(3911)) void _Global::PutDisplayRecentFiles ( VARIANT_BOOL _val );
__declspec(implementation_key(3912)) VARIANT_BOOL _Global::GetMacroVirusProtection ( );
__declspec(implementation_key(3913)) void _Global::PutMacroVirusProtection ( VARIANT_BOOL _val );
__declspec(implementation_key(3914)) enum PjAssignmentUnits _Global::GetShowAssignmentUnitsAs ( );
__declspec(implementation_key(3915)) void _Global::PutShowAssignmentUnitsAs ( enum PjAssignmentUnits _val );
__declspec(implementation_key(3916)) VARIANT_BOOL _Global::GetAutomaticallyFillPhoneticFields ( );
__declspec(implementation_key(3917)) void _Global::PutAutomaticallyFillPhoneticFields ( VARIANT_BOOL _val );
__declspec(implementation_key(3918)) VARIANT_BOOL _Global::GetDefaultAutoFilter ( );
__declspec(implementation_key(3919)) void _Global::PutDefaultAutoFilter ( VARIANT_BOOL _val );
__declspec(implementation_key(3920)) VARIANT_BOOL _Global::GetShowEstimatedDuration ( );
__declspec(implementation_key(3921)) void _Global::PutShowEstimatedDuration ( VARIANT_BOOL _val );
__declspec(implementation_key(3922)) VARIANT_BOOL _Global::GetNewTasksEstimated ( );
__declspec(implementation_key(3923)) void _Global::PutNewTasksEstimated ( VARIANT_BOOL _val );
//__declspec(implementation_key(3924)) AssistantPtr _Global::GetAssistant ( );
__declspec(implementation_key(3925)) void _Global::PutAssistant ( struct Assistant * _val );
__declspec(implementation_key(3926)) VARIANT_BOOL _Global::GetDisplayViewBar ( );
__declspec(implementation_key(3927)) void _Global::PutDisplayViewBar ( VARIANT_BOOL _val );
//__declspec(implementation_key(3928)) VBEPtr _Global::GetVBE ( );
__declspec(implementation_key(3929)) void _Global::PutVBE ( struct VBE * _val );
__declspec(implementation_key(3930)) enum PjEnableCancelKey _Global::GetEnableCancelKey ( );
__declspec(implementation_key(3931)) void _Global::PutEnableCancelKey ( enum PjEnableCancelKey _val );
__declspec(implementation_key(3932)) VARIANT_BOOL _Global::GetUserControl ( );
__declspec(implementation_key(3933)) void _Global::PutUserControl ( VARIANT_BOOL _val );
__declspec(implementation_key(3934)) double _Global::GetUsableWidth ( );
__declspec(implementation_key(3935)) void _Global::PutUsableWidth ( double _val );
__declspec(implementation_key(3936)) double _Global::GetUsableHeight ( );
__declspec(implementation_key(3937)) void _Global::PutUsableHeight ( double _val );
__declspec(implementation_key(3938)) VARIANT_BOOL _Global::GetScreenUpdating ( );
__declspec(implementation_key(3939)) void _Global::PutScreenUpdating ( VARIANT_BOOL _val );
__declspec(implementation_key(3940)) VARIANT_BOOL _Global::GetDisplayProjectGuide ( );
__declspec(implementation_key(3941)) void _Global::PutDisplayProjectGuide ( VARIANT_BOOL _val );
__declspec(implementation_key(3942)) VARIANT_BOOL _Global::GetEnterpriseAllowLocalBaseCalendars ( );
__declspec(implementation_key(3943)) void _Global::PutEnterpriseAllowLocalBaseCalendars ( VARIANT_BOOL _val );
__declspec(implementation_key(3944)) enum PjEditionType _Global::GetEdition ( );
__declspec(implementation_key(3945)) void _Global::PutEdition ( enum PjEditionType _val );
__declspec(implementation_key(3946)) ProfilesPtr _Global::GetProfiles ( );
__declspec(implementation_key(3947)) void _Global::PutProfiles ( struct Profiles * _val );
__declspec(implementation_key(3948)) CalendarsPtr _Global::GetGlobalBaseCalendars ( );
__declspec(implementation_key(3949)) void _Global::PutGlobalBaseCalendars ( struct Calendars * _val );
__declspec(implementation_key(3950)) ViewsPtr _Global::GetGlobalViews ( );
__declspec(implementation_key(3951)) void _Global::PutGlobalViews ( struct Views * _val );
__declspec(implementation_key(3952)) ViewsSinglePtr _Global::GetGlobalViewsSingle ( );
__declspec(implementation_key(3953)) void _Global::PutGlobalViewsSingle ( struct ViewsSingle * _val );
__declspec(implementation_key(3954)) ViewsCombinationPtr _Global::GetGlobalViewsCombination ( );
__declspec(implementation_key(3955)) void _Global::PutGlobalViewsCombination ( struct ViewsCombination * _val );
__declspec(implementation_key(3956)) TablesPtr _Global::GetGlobalTaskTables ( );
__declspec(implementation_key(3957)) void _Global::PutGlobalTaskTables ( struct Tables * _val );
__declspec(implementation_key(3958)) TablesPtr _Global::GetGlobalResourceTables ( );
__declspec(implementation_key(3959)) void _Global::PutGlobalResourceTables ( struct Tables * _val );
__declspec(implementation_key(3960)) FiltersPtr _Global::GetGlobalTaskFilters ( );
__declspec(implementation_key(3961)) void _Global::PutGlobalTaskFilters ( struct Filters * _val );
__declspec(implementation_key(3962)) FiltersPtr _Global::GetGlobalResourceFilters ( );
__declspec(implementation_key(3963)) void _Global::PutGlobalResourceFilters ( struct Filters * _val );
__declspec(implementation_key(3964)) WindowsPtr _MSProject::GetWindows ( );
//__declspec(implementation_key(3965)) _CommandBarsPtr _MSProject::GetCommandBars ( );
//__declspec(implementation_key(3966)) AnswerWizardPtr _MSProject::GetAnswerWizard ( );
__declspec(implementation_key(3967)) HRESULT _MSProject::Quit ( enum PjSaveType SaveChanges );
__declspec(implementation_key(3968)) _bstr_t _MSProject::GetOperatingSystem ( );
__declspec(implementation_key(3969)) _variant_t _MSProject::DateAdd ( const _variant_t & StartDate, const _variant_t & Duration, const _variant_t & Calendar );
__declspec(implementation_key(3970)) _variant_t _MSProject::DateSubtract ( const _variant_t & FinishDate, const _variant_t & Duration, const _variant_t & Calendar );
__declspec(implementation_key(3971)) _variant_t _MSProject::DateDifference ( const _variant_t & StartDate, const _variant_t & FinishDate, const _variant_t & Calendar );
__declspec(implementation_key(3972)) _bstr_t _MSProject::DurationFormat ( const _variant_t & Duration, const _variant_t & Units );
__declspec(implementation_key(3973)) _variant_t _MSProject::DurationValue ( _bstr_t Duration );
__declspec(implementation_key(3974)) _variant_t _MSProject::DateFormat ( const _variant_t & Date, const _variant_t & Format );
__declspec(implementation_key(3975)) HRESULT _MSProject::MailLogon ( const _variant_t & Name, const _variant_t & Password, const _variant_t & DownloadNewMail );
__declspec(implementation_key(3976)) HRESULT _MSProject::MailLogoff ( );
__declspec(implementation_key(3977)) _bstr_t _MSProject::MailSession ( );
__declspec(implementation_key(3978)) enum PjMailSystem _MSProject::MailSystem ( );
__declspec(implementation_key(3979)) _variant_t _MSProject::TimescaledData ( long TaskID, long ResourceID, const _variant_t & StartDate, const _variant_t & EndDate, enum PjTimescaledData Type, enum PjTimescaleUnit TimeScaleUnit, const _variant_t & Count );
__declspec(implementation_key(3980)) _bstr_t _MSProject::CustomFieldGetName ( enum PjCustomField FieldID );
__declspec(implementation_key(3981)) HRESULT _MSProject::Run ( _bstr_t Name, const _variant_t & Arg1, const _variant_t & Arg2, const _variant_t & Arg3, const _variant_t & Arg4, const _variant_t & Arg5, const _variant_t & Arg6, const _variant_t & Arg7, const _variant_t & Arg8, const _variant_t & Arg9, const _variant_t & Arg10, const _variant_t & Arg11, const _variant_t & Arg12, const _variant_t & Arg13, const _variant_t & Arg14, const _variant_t & Arg15, const _variant_t & Arg16, const _variant_t & Arg17, const _variant_t & Arg18, const _variant_t & Arg19, const _variant_t & Arg20, const _variant_t & Arg21, const _variant_t & Arg22, const _variant_t & Arg23, const _variant_t & Arg24, const _variant_t & Arg25, const _variant_t & Arg26, const _variant_t & Arg27, const _variant_t & Arg28, const _variant_t & Arg29, const _variant_t & Arg30 );
__declspec(implementation_key(3982)) HRESULT _MSProject::ActivateMicrosoftApp ( enum PjMSApplication Index );
__declspec(implementation_key(3983)) _bstr_t _MSProject::GetFileFormatID ( _bstr_t Name, const _variant_t & UserID, const _variant_t & DatabasePassWord );
__declspec(implementation_key(3984)) _bstr_t _MSProject::GetFileBuildID ( _bstr_t Name, const _variant_t & UserID, const _variant_t & DatabasePassWord );
//__declspec(implementation_key(3985)) COMAddInsPtr _MSProject::GetCOMAddIns ( );
__declspec(implementation_key(3986)) long _MSProject::BoxGetXPosition ( long TaskID, const _variant_t & ProjectName );
__declspec(implementation_key(3987)) long _MSProject::BoxGetYPosition ( long TaskID, const _variant_t & ProjectName );
__declspec(implementation_key(3988)) _bstr_t _MSProject::CustomFieldGetFormula ( enum PjCustomField FieldID );
__declspec(implementation_key(3989)) _bstr_t _MSProject::CustomFieldValueListGetItem ( enum PjCustomField FieldID, enum PjValueListItem Item, long Index );
__declspec(implementation_key(3990)) HRESULT _MSProject::GoalAreaHighlight ( long goalArea );
__declspec(implementation_key(3991)) HRESULT _MSProject::SetSidepaneStateButton ( VARIANT_BOOL DisplayState );
__declspec(implementation_key(3992)) HRESULT _MSProject::GoalAreaTaskHighlight ( long TaskID );
__declspec(implementation_key(3993)) enum PjField _MSProject::FieldNameToFieldConstant ( _bstr_t FieldName, enum PjFieldType FieldType );
__declspec(implementation_key(3994)) _bstr_t _MSProject::FieldConstantToFieldName ( enum PjField Field );
__declspec(implementation_key(3995)) _bstr_t _MSProject::GetProjectServerSettings ( _bstr_t RequestXML, const _variant_t & Project );
__declspec(implementation_key(3996)) HRESULT _MSProject::UnloadWebBrowserControl ( VARIANT * Window );
__declspec(implementation_key(3997)) int _MSProject::OpenXML ( _bstr_t XML );
__declspec(implementation_key(3998)) enum PjServerVersionInfo _MSProject::GetProjectServerVersion ( _bstr_t ServerURL );
__declspec(implementation_key(3999)) _variant_t _MSProject::UpdateFromProjectServer ( _bstr_t DataFile );
__declspec(implementation_key(4000)) long _MSProject::LocaleID ( );
__declspec(implementation_key(4001)) HRESULT _MSProject::EnterpriseMakeServerURLTrusted ( );
__declspec(implementation_key(4002)) VARIANT_BOOL _MSProject::IsURLTrusted ( _bstr_t URL );
__declspec(implementation_key(4003)) HRESULT _MSProject::PublishNewAndChangedAssignments ( VARIANT_BOOL ShowDialog, enum PjPublishScope ItemsScope, VARIANT_BOOL NotifyResources, const _variant_t & NotificationText );
__declspec(implementation_key(4004)) HRESULT _MSProject::PublishProjectPlan ( VARIANT_BOOL ShowDialog, VARIANT_BOOL PublishFullPlan );
__declspec(implementation_key(4005)) HRESULT _MSProject::PublishAllInformation ( );
__declspec(implementation_key(4006)) HRESULT _MSProject::RequestProgressInformation ( VARIANT_BOOL ShowDialog, enum PjPublishScope ItemsScope, VARIANT_BOOL NotifyTaskLead, const _variant_t & NotificationText, const _variant_t & ReportingPeriodFrom, const _variant_t & ReportingPeriodTo );
__declspec(implementation_key(4007)) HRESULT _MSProject::RepublishAssignments ( VARIANT_BOOL ShowDialog, enum PjPublishScope ItemsScope, VARIANT_BOOL NotifyResources, VARIANT_BOOL OverwriteActuals, VARIANT_BOOL BecomeManager, const _variant_t & NotificationText );
__declspec(implementation_key(4008)) long _MSProject::RegisterProject ( VARIANT_BOOL WaitForCompletion );
__declspec(implementation_key(4009)) VARIANT_BOOL _MSProject::SaveProjectIfDirty ( _bstr_t AlertText );
__declspec(implementation_key(4010)) VARIANT_BOOL _MSProject::Message ( _bstr_t Message, enum PjMessageType Type, const _variant_t & YesText, const _variant_t & NoText );
__declspec(implementation_key(4011)) VARIANT_BOOL _MSProject::Alerts ( const _variant_t & Show );
__declspec(implementation_key(4012)) VARIANT_BOOL _MSProject::FileNew ( const _variant_t & SummaryInfo, const _variant_t & Template, const _variant_t & FileNewDialog, const _variant_t & FileNewWorkpane );
__declspec(implementation_key(4013)) VARIANT_BOOL _MSProject::FileProperties ( );
__declspec(implementation_key(4014)) VARIANT_BOOL _MSProject::FileOpen ( const _variant_t & Name, const _variant_t & ReadOnly, const _variant_t & Merge, const _variant_t & TaskInformation, const _variant_t & Table, const _variant_t & Sheet, const _variant_t & NoAuto, const _variant_t & UserID, const _variant_t & DatabasePassWord, const _variant_t & FormatID, const _variant_t & Map, enum PjPoolOpen openPool, const _variant_t & Password, const _variant_t & WriteResPassword, const _variant_t & IgnoreReadOnlyRecommended, const _variant_t & XMLName );
__declspec(implementation_key(4015)) VARIANT_BOOL _MSProject::Zoom ( );
__declspec(implementation_key(4016)) VARIANT_BOOL _MSProject::ZoomTimescale ( const _variant_t & Duration, const _variant_t & Entire, const _variant_t & Selection, const _variant_t & Reset );
__declspec(implementation_key(4017)) VARIANT_BOOL _MSProject::BoxZoom ( const _variant_t & Percent, const _variant_t & Entire );
__declspec(implementation_key(4018)) VARIANT_BOOL _MSProject::FileClose ( enum PjSaveType Save, const _variant_t & NoAuto );
__declspec(implementation_key(4019)) VARIANT_BOOL _MSProject::FileCloseAll ( enum PjSaveType Save );
__declspec(implementation_key(4020)) VARIANT_BOOL _MSProject::ResourceSharing ( const _variant_t & Share, const _variant_t & Name, const _variant_t & Pool );
__declspec(implementation_key(4021)) VARIANT_BOOL _MSProject::FileSave ( );
__declspec(implementation_key(4022)) VARIANT_BOOL _MSProject::FileSaveAs ( const _variant_t & Name, enum PjFileFormat Format, const _variant_t & Backup, const _variant_t & ReadOnly, const _variant_t & TaskInformation, const _variant_t & Filtered, const _variant_t & Table, const _variant_t & UserID, const _variant_t & DatabasePassWord, const _variant_t & FormatID, const _variant_t & Map, const _variant_t & Password, const _variant_t & WriteResPassword, const _variant_t & ClearBaseline, const _variant_t & ClearActuals, const _variant_t & ClearResourceRates, const _variant_t & ClearFixedCosts, const _variant_t & XMLName, const _variant_t & ClearConfirmed );
__declspec(implementation_key(4023)) VARIANT_BOOL _MSProject::FileSaveWorkspace ( const _variant_t & Name );
__declspec(implementation_key(4024)) VARIANT_BOOL _MSProject::FilePrint ( const _variant_t & FromPage, const _variant_t & ToPage, const _variant_t & PageBreaks, const _variant_t & Draft, const _variant_t & Copies, const _variant_t & FromDate, const _variant_t & ToDate, const _variant_t & OnePageWide, const _variant_t & Preview, const _variant_t & Color, const _variant_t & ShowIEPrintDialog );
__declspec(implementation_key(4025)) VARIANT_BOOL _MSProject::ReportPrint ( const _variant_t & Name, const _variant_t & FromPage, const _variant_t & ToPage, const _variant_t & PageBreaks, const _variant_t & Draft, const _variant_t & Copies, const _variant_t & FromDate, const _variant_t & ToDate, const _variant_t & Preview, const _variant_t & Color );
__declspec(implementation_key(4026)) VARIANT_BOOL _MSProject::FilePrintPreview ( );
__declspec(implementation_key(4027)) VARIANT_BOOL _MSProject::ReportPrintPreview ( const _variant_t & Name );
__declspec(implementation_key(4028)) VARIANT_BOOL _MSProject::FilePrintSetup ( const _variant_t & Printer );
__declspec(implementation_key(4029)) VARIANT_BOOL _MSProject::FilePageSetup ( const _variant_t & Name );
__declspec(implementation_key(4030)) VARIANT_BOOL _MSProject::FilePageSetupPage ( const _variant_t & Name, const _variant_t & Portrait, const _variant_t & PercentScale, const _variant_t & PagesTall, const _variant_t & PagesWide, enum PjPaperSize PaperSize, const _variant_t & FirstPageNumber );
__declspec(implementation_key(4031)) VARIANT_BOOL _MSProject::FilePageSetupMargins ( const _variant_t & Name, const _variant_t & Top, const _variant_t & Bottom, const _variant_t & Left, const _variant_t & Right, const _variant_t & Borders );
__declspec(implementation_key(4032)) VARIANT_BOOL _MSProject::FilePageSetupHeader ( const _variant_t & Name, enum PjAlignment Alignment, const _variant_t & Text );
__declspec(implementation_key(4033)) VARIANT_BOOL _MSProject::FilePageSetupFooter ( const _variant_t & Name, enum PjAlignment Alignment, const _variant_t & Text );
__declspec(implementation_key(4034)) VARIANT_BOOL _MSProject::FilePageSetupLegend ( const _variant_t & Name, const _variant_t & TextWidth, const _variant_t & LegendOn, enum PjAlignment Alignment, const _variant_t & Text, const _variant_t & LabelFontName, const _variant_t & LabelFontSize, const _variant_t & LabelFontBold, const _variant_t & LabelFontItalic, const _variant_t & LabelFontUnderline, enum PjColor LabelFontColor );
__declspec(implementation_key(4035)) VARIANT_BOOL _MSProject::FilePageSetupView ( const _variant_t & Name, const _variant_t & AllSheetColumns, const _variant_t & RepeatColumns, const _variant_t & PrintNotes, const _variant_t & PrintBlankPages, const _variant_t & BestPageFitTimescale, const _variant_t & PrintColumnTotals, const _variant_t & PrintRowTotals );
__declspec(implementation_key(4036)) VARIANT_BOOL _MSProject::FilePageSetupCalendar ( const _variant_t & Name, const _variant_t & MonthsPerPage, const _variant_t & WeeksPerPage, const _variant_t & ScreenWeekHeight, const _variant_t & OnlyDaysInMonth, const _variant_t & OnlyWeeksInMonth, const _variant_t & MonthPreviews, const _variant_t & MonthTitle, const _variant_t & AdditionalTasks, const _variant_t & GroupAdditionalTasks, const _variant_t & PrintNotes );
__declspec(implementation_key(4037)) VARIANT_BOOL _MSProject::FilePageSetupCalendarText ( const _variant_t & Name, const _variant_t & Item, const _variant_t & Font, const _variant_t & Size, const _variant_t & Bold, const _variant_t & Italic, const _variant_t & Underline, const _variant_t & Color );
__declspec(implementation_key(4038)) VARIANT_BOOL _MSProject::MailOpen ( const _variant_t & Any );
__declspec(implementation_key(4039)) VARIANT_BOOL _MSProject::MailSend ( const _variant_t & To, const _variant_t & Cc, const _variant_t & Subject, const _variant_t & Body, const _variant_t & Enclosures, const _variant_t & IncludeDocument, const _variant_t & ReturnReceipt, const _variant_t & Bcc, const _variant_t & Urgent, const _variant_t & SaveCopy, const _variant_t & AddRecipient );
__declspec(implementation_key(4040)) VARIANT_BOOL _MSProject::MailSendScheduleNote ( const _variant_t & Manager, const _variant_t & Resources, const _variant_t & TaskContacts, const _variant_t & Selection, const _variant_t & IncludeDocument, const _variant_t & IncludePicture, const _variant_t & Body, const _variant_t & Subject );
__declspec(implementation_key(4041)) VARIANT_BOOL _MSProject::MailPostDocument ( );
__declspec(implementation_key(4042)) VARIANT_BOOL _MSProject::ODBCManageDataSources ( );
__declspec(implementation_key(4043)) VARIANT_BOOL _MSProject::ODBCCreateDataSource ( );
__declspec(implementation_key(4044)) VARIANT_BOOL _MSProject::MailRoutingSlip ( const _variant_t & To, const _variant_t & Subject, const _variant_t & Body, const _variant_t & AllAtOnce, const _variant_t & ReturnWhenDone, const _variant_t & TrackStatus, const _variant_t & Clear, const _variant_t & SendNow );
__declspec(implementation_key(4045)) VARIANT_BOOL _MSProject::FileLoadLast ( const _variant_t & Number );
__declspec(implementation_key(4046)) VARIANT_BOOL _MSProject::FileExit ( enum PjSaveType Save );
__declspec(implementation_key(4047)) VARIANT_BOOL _MSProject::MenuBars ( );
__declspec(implementation_key(4048)) VARIANT_BOOL _MSProject::MenuBarEdit ( const _variant_t & Copy, const _variant_t & Create, const _variant_t & Name, const _variant_t & NewName );
__declspec(implementation_key(4049)) VARIANT_BOOL _MSProject::MenuBarApply ( _bstr_t Name, const _variant_t & Default, const _variant_t & NoFiles );
__declspec(implementation_key(4050)) VARIANT_BOOL _MSProject::EditUndo ( );
__declspec(implementation_key(4051)) VARIANT_BOOL _MSProject::EditCut ( );
__declspec(implementation_key(4052)) VARIANT_BOOL _MSProject::EditCopy ( );
__declspec(implementation_key(4053)) VARIANT_BOOL _MSProject::EditCopyPicture ( const _variant_t & Object, const _variant_t & ForPrinter, const _variant_t & SelectedRows, const _variant_t & FromDate, const _variant_t & ToDate, const _variant_t & FileName, enum PjCopyPictureScaleOption ScaleOption );
__declspec(implementation_key(4054)) VARIANT_BOOL _MSProject::EditPaste ( );
__declspec(implementation_key(4055)) VARIANT_BOOL _MSProject::EditPasteSpecial ( const _variant_t & Link, const _variant_t & Type, const _variant_t & DisplayAsIcon );
__declspec(implementation_key(4056)) VARIANT_BOOL _MSProject::EditClearFormats ( );
__declspec(implementation_key(4057)) VARIANT_BOOL _MSProject::EditClear ( const _variant_t & Contents, const _variant_t & Formats, const _variant_t & Notes, const _variant_t & Hyperlinks );
__declspec(implementation_key(4058)) VARIANT_BOOL _MSProject::RowClear ( );
__declspec(implementation_key(4059)) VARIANT_BOOL _MSProject::DDEPasteLink ( );
__declspec(implementation_key(4060)) VARIANT_BOOL _MSProject::EditDelete ( );
__declspec(implementation_key(4061)) VARIANT_BOOL _MSProject::ColumnDelete ( );
__declspec(implementation_key(4062)) VARIANT_BOOL _MSProject::RowDelete ( );
__declspec(implementation_key(4063)) VARIANT_BOOL _MSProject::ObjectVerb ( const _variant_t & Verb );
__declspec(implementation_key(4064)) VARIANT_BOOL _MSProject::ObjectLinks ( );
__declspec(implementation_key(4065)) VARIANT_BOOL _MSProject::ObjectChangeIcon ( );
__declspec(implementation_key(4066)) VARIANT_BOOL _MSProject::ObjectConvert ( );
__declspec(implementation_key(4067)) VARIANT_BOOL _MSProject::EditInsert ( );
__declspec(implementation_key(4068)) VARIANT_BOOL _MSProject::ColumnInsert ( );
__declspec(implementation_key(4069)) VARIANT_BOOL _MSProject::RowInsert ( );
__declspec(implementation_key(4070)) VARIANT_BOOL _MSProject::LinkTasks ( );
__declspec(implementation_key(4071)) VARIANT_BOOL _MSProject::LinkTasksEdit ( long From, long To, const _variant_t & Delete, const _variant_t & Type, const _variant_t & Lag, const _variant_t & PredecessorProjectName, const _variant_t & SuccessorProjectName );
__declspec(implementation_key(4072)) VARIANT_BOOL _MSProject::UnlinkTasks ( );
__declspec(implementation_key(4073)) VARIANT_BOOL _MSProject::ResourceAssignment ( const _variant_t & Resources, enum PjResAssignOperation Operation, const _variant_t & With );
__declspec(implementation_key(4074)) VARIANT_BOOL _MSProject::EditGoTo ( const _variant_t & ID, const _variant_t & Date );
__declspec(implementation_key(4075)) VARIANT_BOOL _MSProject::GotoNextOverAllocation ( );
__declspec(implementation_key(4076)) VARIANT_BOOL _MSProject::InsertNotes ( );
__declspec(implementation_key(4077)) VARIANT_BOOL _MSProject::Find ( const _variant_t & Field, const _variant_t & Test, const _variant_t & Value, const _variant_t & Next, const _variant_t & MatchCase );
__declspec(implementation_key(4078)) VARIANT_BOOL _MSProject::Replace ( const _variant_t & Field, const _variant_t & Test, const _variant_t & Value, const _variant_t & Replacement, const _variant_t & ReplaceAll, const _variant_t & Next, const _variant_t & MatchCase );
__declspec(implementation_key(4079)) VARIANT_BOOL _MSProject::SelectAll ( );
__declspec(implementation_key(4080)) VARIANT_BOOL _MSProject::ObjectInsert ( );
__declspec(implementation_key(4081)) VARIANT_BOOL _MSProject::SubscribeTo ( const _variant_t & Edition, enum PjSubscribeFormat Format );
__declspec(implementation_key(4082)) VARIANT_BOOL _MSProject::SubscriberOptions ( const _variant_t & Name, const _variant_t & IsTask, const _variant_t & UniqueID, const _variant_t & Field, const _variant_t & Automatically, const _variant_t & Action );
__declspec(implementation_key(4083)) VARIANT_BOOL _MSProject::CreatePublisher ( const _variant_t & Edition, const _variant_t & Contains );
__declspec(implementation_key(4084)) VARIANT_BOOL _MSProject::PublisherOptions ( const _variant_t & Name, const _variant_t & View, const _variant_t & IsTask, const _variant_t & UniqueID, const _variant_t & Field, const _variant_t & OnSave, const _variant_t & Action );
__declspec(implementation_key(4085)) VARIANT_BOOL _MSProject::EditionStopAll ( const _variant_t & Stop );
__declspec(implementation_key(4086)) VARIANT_BOOL _MSProject::ClipboardShow ( );
__declspec(implementation_key(4087)) VARIANT_BOOL _MSProject::ViewApply ( const _variant_t & Name, const _variant_t & SinglePane, const _variant_t & Toggle );
__declspec(implementation_key(4088)) VARIANT_BOOL _MSProject::ViewEditSingle ( const _variant_t & Name, const _variant_t & Create, const _variant_t & NewName, const _variant_t & Screen, const _variant_t & ShowInMenu, const _variant_t & HighlightFilter, const _variant_t & Table, const _variant_t & Filter, const _variant_t & Group );
__declspec(implementation_key(4089)) VARIANT_BOOL _MSProject::ViewEditCombination ( const _variant_t & Name, const _variant_t & Create, const _variant_t & NewName, const _variant_t & TopView, const _variant_t & BottomView, const _variant_t & ShowInMenu );
__declspec(implementation_key(4090)) VARIANT_BOOL _MSProject::TableApply ( const _variant_t & Name );
__declspec(implementation_key(4091)) VARIANT_BOOL _MSProject::TableEdit ( _bstr_t Name, VARIANT_BOOL TaskTable, const _variant_t & Create, const _variant_t & OverwriteExisting, const _variant_t & NewName, const _variant_t & FieldName, const _variant_t & NewFieldName, const _variant_t & Title, const _variant_t & Width, const _variant_t & Align, const _variant_t & ShowInMenu, const _variant_t & LockFirstColumn, const _variant_t & DateFormat, const _variant_t & RowHeight, const _variant_t & ColumnPosition, const _variant_t & AlignTitle, const _variant_t & HeaderAutoRowHeightAdjustment, const _variant_t & HeaderTextWrap );
__declspec(implementation_key(4092)) VARIANT_BOOL _MSProject::FilterApply ( const _variant_t & Name, const _variant_t & Highlight, const _variant_t & Value1, const _variant_t & Value2 );
__declspec(implementation_key(4093)) VARIANT_BOOL _MSProject::FilterEdit ( _bstr_t Name, VARIANT_BOOL TaskFilter, const _variant_t & Create, const _variant_t & OverwriteExisting, const _variant_t & Parenthesis, const _variant_t & NewName, const _variant_t & FieldName, const _variant_t & NewFieldName, const _variant_t & Test, const _variant_t & Value, const _variant_t & Operation, const _variant_t & ShowInMenu, const _variant_t & ShowSummaryTasks );
__declspec(implementation_key(4094)) VARIANT_BOOL _MSProject::ProjectSummaryInfo ( const _variant_t & Project, const _variant_t & Title, const _variant_t & Subject, const _variant_t & Author, const _variant_t & Company, const _variant_t & Manager, const _variant_t & Keywords, const _variant_t & Comments, const _variant_t & Start, const _variant_t & Finish, const _variant_t & ScheduleFrom, const _variant_t & CurrentDate, const _variant_t & Calendar, const _variant_t & StatusDate, const _variant_t & Priority, const _variant_t & PartiallyDisabled );
__declspec(implementation_key(4095)) VARIANT_BOOL _MSProject::ProjectStatistics ( const _variant_t & Project );
__declspec(implementation_key(4096)) VARIANT_BOOL _MSProject::OptionsCalendar ( const _variant_t & StartWeekOnMonday, const _variant_t & StartYearIn, const _variant_t & StartTime, const _variant_t & FinishTime, const _variant_t & HoursPerDay, const _variant_t & HoursPerWeek, const _variant_t & SetDefaults, const _variant_t & StartWeekOn, const _variant_t & UseFYStartYear, const _variant_t & DaysPerMonth );
__declspec(implementation_key(4097)) VARIANT_BOOL _MSProject::OptionsEdit ( const _variant_t & MoveAfterReturn, const _variant_t & DragAndDrop, const _variant_t & UpdateLinks, const _variant_t & CopyResourceUsageHeader, const _variant_t & PhoneticInfo, const _variant_t & PhoneticType, const _variant_t & MinuteLabelDisplay, const _variant_t & HourLabelDisplay, const _variant_t & DayLabelDisplay, const _variant_t & WeekLabelDisplay, const _variant_t & YearLabelDisplay, const _variant_t & SpaceBeforeTimeLabel, const _variant_t & SetDefaults, const _variant_t & MonthLabelDisplay, const _variant_t & SetDefaultsTimeUnits, const _variant_t & HyperlinkColor, const _variant_t & FollowedHyperlinkColor, const _variant_t & UnderlineHyperlinks, const _variant_t & SetDefaultsHyperlink, const _variant_t & InCellEditing );
__declspec(implementation_key(4098)) VARIANT_BOOL _MSProject::OptionsGeneral ( const _variant_t & PlanningWizard, const _variant_t & WizardUsage, const _variant_t & WizardErrors, const _variant_t & WizardScheduling, const _variant_t & ShowTipOfDay, const _variant_t & AutoAddResources, const _variant_t & StandardRate, const _variant_t & OvertimeRate, const _variant_t & LastFile, const _variant_t & SummaryInfo, const _variant_t & UserName, const _variant_t & SetDefaults, const _variant_t & ShowWelcome, const _variant_t & AutoFilter, const _variant_t & MacroVirusProtection, const _variant_t & DisplayRecentFiles, const _variant_t & RecentFilesMaximum, const _variant_t & FontConversion, const _variant_t & ShowStartupWorkpane );
__declspec(implementation_key(4099)) VARIANT_BOOL _MSProject::OptionsSchedule ( const _variant_t & ScheduleMessages, const _variant_t & StartOnCurrentDate, const _variant_t & AutoLink, const _variant_t & AutoSplit, const _variant_t & CriticalSlack, const _variant_t & TaskType, const _variant_t & DurationUnits, const _variant_t & WorkUnits, const _variant_t & AutoTrack, const _variant_t & SetDefaults, const _variant_t & AssignmentUnits, const _variant_t & EffortDriven, const _variant_t & HonorConstraints, const _variant_t & ShowEstimated, const _variant_t & NewTasksEstimated );
__declspec(implementation_key(4100)) VARIANT_BOOL _MSProject::OptionsView ( const _variant_t & DefaultView, const _variant_t & DateFormat, const _variant_t & ProjectSummary, const _variant_t & DisplayStatusBar, const _variant_t & DisplayEntryBar, const _variant_t & DisplayScrollBars, const _variant_t & CurrencySymbol, const _variant_t & SymbolPlacement, const _variant_t & CurrencyDigits, const _variant_t & DisplayOutlineNumber, const _variant_t & DisplayOutlineSymbols, const _variant_t & DisplayNameIndent, const _variant_t & DisplaySummaryTasks, const _variant_t & DisplayOLEIndicator, const _variant_t & DisplayExternalSuccessors, const _variant_t & DisplayExternalPredecessors, const _variant_t & CrossProjectLinksInfo, const _variant_t & AcceptNewExternalData, const _variant_t & DisplayWindowsInTaskbar, const _variant_t & DisplayScreentips );
__declspec(implementation_key(4101)) VARIANT_BOOL _MSProject::OptionsWorkgroup ( const _variant_t & WorkgroupMessages, const _variant_t & ServerURL, const _variant_t & ServerPath, const _variant_t & ReceiveNotifications, const _variant_t & SendHyperlinkNote, const _variant_t & HyperlinkColor, const _variant_t & FollowedHyperlinkColor, const _variant_t & UnderlineHyperlinks, const _variant_t & SetDefaults, const _variant_t & ServerIdentification, const _variant_t & AllowTaskDelegation, const _variant_t & UpdateProjectToWeb, const _variant_t & PublishInformationOnSave, const _variant_t & SetDefaultsMessaging, const _variant_t & SetDefaultsWebServer, const _variant_t & ManagerEmail, const _variant_t & ConfirmationDialog, const _variant_t & ChangesMarkAssnDirty );
__declspec(implementation_key(4102)) VARIANT_BOOL _MSProject::OptionsCalculation ( const _variant_t & Automatic, const _variant_t & AutoTrack, const _variant_t & SpreadPercentToStatusDate, const _variant_t & SpreadCostsToStatusDate, const _variant_t & AutoCalcCosts, const _variant_t & FixedCostAccrual, const _variant_t & CalcMultipleCriticalPaths, const _variant_t & CriticalSlack, const _variant_t & SetDefaults, const _variant_t & CalcInsProjLikeSummTask, const _variant_t & MoveCompleted, const _variant_t & AndMoveRemaining, const _variant_t & MoveRemaining, const _variant_t & AndMoveCompleted, const _variant_t & EVMethod, const _variant_t & EVBaseline );
__declspec(implementation_key(4103)) VARIANT_BOOL _MSProject::CalculateAll ( );
__declspec(implementation_key(4104)) VARIANT_BOOL _MSProject::OptionsPreferences ( );
__declspec(implementation_key(4105)) VARIANT_BOOL _MSProject::ChangeWorkingTime ( const _variant_t & CalendarName, const _variant_t & Locked );
__declspec(implementation_key(4106)) VARIANT_BOOL _MSProject::BaseCalendars ( const _variant_t & Index, const _variant_t & Locked );
__declspec(implementation_key(4107)) VARIANT_BOOL _MSProject::BaseCalendarCreate ( _bstr_t Name, const _variant_t & FromName );
__declspec(implementation_key(4108)) VARIANT_BOOL _MSProject::BaseCalendarRename ( _bstr_t FromName, _bstr_t ToName );
__declspec(implementation_key(4109)) VARIANT_BOOL _MSProject::BaseCalendarDelete ( _bstr_t Name );
__declspec(implementation_key(4110)) VARIANT_BOOL _MSProject::BaseCalendarEditDays ( _bstr_t Name, const _variant_t & StartDate, const _variant_t & EndDate, const _variant_t & WeekDay, const _variant_t & Working, const _variant_t & From1, const _variant_t & To1, const _variant_t & From2, const _variant_t & To2, const _variant_t & From3, const _variant_t & To3, const _variant_t & Default, const _variant_t & From4, const _variant_t & To4, const _variant_t & From5, const _variant_t & To5 );
__declspec(implementation_key(4111)) VARIANT_BOOL _MSProject::ResourceCalendarEditDays ( _bstr_t ProjectName, _bstr_t ResourceName, const _variant_t & StartDate, const _variant_t & EndDate, const _variant_t & WeekDay, const _variant_t & Working, const _variant_t & Default, const _variant_t & From1, const _variant_t & To1, const _variant_t & From2, const _variant_t & To2, const _variant_t & From3, const _variant_t & To3, const _variant_t & From4, const _variant_t & To4, const _variant_t & From5, const _variant_t & To5 );
__declspec(implementation_key(4112)) VARIANT_BOOL _MSProject::BaseCalendarReset ( _bstr_t Name );
__declspec(implementation_key(4113)) VARIANT_BOOL _MSProject::ResourceCalendarReset ( _bstr_t ProjectName, _bstr_t ResourceName, const _variant_t & BaseCalendar );
__declspec(implementation_key(4114)) VARIANT_BOOL _MSProject::ResourceCalendars ( const _variant_t & Index, const _variant_t & Locked );
__declspec(implementation_key(4115)) VARIANT_BOOL _MSProject::LevelingOptions ( const _variant_t & Automatic, const _variant_t & DelayInSlack, const _variant_t & AutoClearLeveling, const _variant_t & Order, const _variant_t & LevelEntireProject, const _variant_t & FromDate, const _variant_t & ToDate, const _variant_t & PeriodBasis, const _variant_t & LevelIndividualAssignments, const _variant_t & LevelingCanSplit );
__declspec(implementation_key(4116)) VARIANT_BOOL _MSProject::LevelNow ( const _variant_t & All );
__declspec(implementation_key(4117)) VARIANT_BOOL _MSProject::BaselineSave ( const _variant_t & All, const _variant_t & Copy, const _variant_t & Into, const _variant_t & RollupToSummaryTasks, const _variant_t & RollupFromSubtasks, const _variant_t & SetDefaults );
__declspec(implementation_key(4118)) VARIANT_BOOL _MSProject::UpdateProject ( const _variant_t & All, const _variant_t & UpdateDate, const _variant_t & Action );
__declspec(implementation_key(4119)) VARIANT_BOOL _MSProject::UpdateTasks ( const _variant_t & PercentComplete, const _variant_t & ActualDuration, const _variant_t & RemainingDuration, const _variant_t & ActualStart, const _variant_t & ActualFinish, const _variant_t & Notes );
__declspec(implementation_key(4120)) VARIANT_BOOL _MSProject::WindowNewWindow ( const _variant_t & Projects, const _variant_t & View, const _variant_t & AllProjects, const _variant_t & ShowDialog );
__declspec(implementation_key(4121)) VARIANT_BOOL _MSProject::WindowArrangeAll ( );
__declspec(implementation_key(4122)) VARIANT_BOOL _MSProject::WindowHide ( const _variant_t & Name );
__declspec(implementation_key(4123)) VARIANT_BOOL _MSProject::WindowUnhide ( const _variant_t & Name );
__declspec(implementation_key(4124)) VARIANT_BOOL _MSProject::WindowActivate ( const _variant_t & WindowName, const _variant_t & DialogID, const _variant_t & TopPane );
__declspec(implementation_key(4125)) VARIANT_BOOL _MSProject::PageBreakSet ( );
__declspec(implementation_key(4126)) VARIANT_BOOL _MSProject::PageBreakRemove ( );
__declspec(implementation_key(4127)) VARIANT_BOOL _MSProject::PageBreaksRemoveAll ( );
__declspec(implementation_key(4128)) VARIANT_BOOL _MSProject::ViewShowResourcesPredecessors ( );
__declspec(implementation_key(4129)) VARIANT_BOOL _MSProject::ViewShowResourcesSuccessors ( );
__declspec(implementation_key(4130)) VARIANT_BOOL _MSProject::ViewShowPredecessorsSuccessors ( );
__declspec(implementation_key(4131)) VARIANT_BOOL _MSProject::ViewShowNotes ( );
__declspec(implementation_key(4132)) VARIANT_BOOL _MSProject::ViewShowObjects ( );
__declspec(implementation_key(4133)) VARIANT_BOOL _MSProject::ViewShowOverallocation ( );
__declspec(implementation_key(4134)) VARIANT_BOOL _MSProject::ViewShowPercentAllocation ( );
__declspec(implementation_key(4135)) VARIANT_BOOL _MSProject::ViewShowWork ( );
__declspec(implementation_key(4136)) VARIANT_BOOL _MSProject::ViewShowCost ( );
__declspec(implementation_key(4137)) VARIANT_BOOL _MSProject::ViewShowSchedule ( );
__declspec(implementation_key(4138)) VARIANT_BOOL _MSProject::ViewShowPeakUnits ( );
__declspec(implementation_key(4139)) VARIANT_BOOL _MSProject::ViewShowAvailability ( );
__declspec(implementation_key(4140)) VARIANT_BOOL _MSProject::ViewShowRemainingAvailability ( );
__declspec(implementation_key(4141)) VARIANT_BOOL _MSProject::ViewShowCumulativeWork ( );
__declspec(implementation_key(4142)) VARIANT_BOOL _MSProject::ViewShowCumulativeCost ( );
__declspec(implementation_key(4143)) VARIANT_BOOL _MSProject::PaneNext ( );
__declspec(implementation_key(4144)) VARIANT_BOOL _MSProject::PaneCreate ( );
__declspec(implementation_key(4145)) VARIANT_BOOL _MSProject::FormViewShow ( );
__declspec(implementation_key(4146)) VARIANT_BOOL _MSProject::PaneClose ( );
__declspec(implementation_key(4147)) VARIANT_BOOL _MSProject::WindowSplit ( );
__declspec(implementation_key(4148)) VARIANT_BOOL _MSProject::WindowNext ( const _variant_t & NoWrap );
__declspec(implementation_key(4149)) VARIANT_BOOL _MSProject::WindowPrev ( const _variant_t & NoWrap );
__declspec(implementation_key(4150)) VARIANT_BOOL _MSProject::DocClose ( );
__declspec(implementation_key(4151)) VARIANT_BOOL _MSProject::AppMaximize ( );
__declspec(implementation_key(4152)) VARIANT_BOOL _MSProject::AppMinimize ( );
__declspec(implementation_key(4153)) VARIANT_BOOL _MSProject::AppMove ( const _variant_t & XPosition, const _variant_t & YPosition, const _variant_t & Points );
__declspec(implementation_key(4154)) VARIANT_BOOL _MSProject::AppRestore ( );
__declspec(implementation_key(4155)) VARIANT_BOOL _MSProject::AppSize ( const _variant_t & Width, const _variant_t & Height, const _variant_t & Points );
__declspec(implementation_key(4156)) VARIANT_BOOL _MSProject::DocMaximize ( );
__declspec(implementation_key(4157)) VARIANT_BOOL _MSProject::DocMove ( const _variant_t & XPosition, const _variant_t & YPosition, const _variant_t & Points );
__declspec(implementation_key(4158)) VARIANT_BOOL _MSProject::DocRestore ( );
__declspec(implementation_key(4159)) VARIANT_BOOL _MSProject::DocSize ( const _variant_t & Width, const _variant_t & Height, const _variant_t & Points );
__declspec(implementation_key(4160)) VARIANT_BOOL _MSProject::OutlineOutdent ( const _variant_t & Levels );
__declspec(implementation_key(4161)) VARIANT_BOOL _MSProject::OutlineShowTasks ( enum PJTaskOutlineShowLevel OutlineNumber, const _variant_t & ExpandInsertedProjects );
__declspec(implementation_key(4162)) VARIANT_BOOL _MSProject::OutlineIndent ( const _variant_t & Levels );
__declspec(implementation_key(4163)) VARIANT_BOOL _MSProject::OutlineHideSubTasks ( );
__declspec(implementation_key(4164)) VARIANT_BOOL _MSProject::OutlineShowSubTasks ( );
__declspec(implementation_key(4165)) VARIANT_BOOL _MSProject::OutlineShowAllTasks ( );
__declspec(implementation_key(4166)) VARIANT_BOOL _MSProject::SelectBeginning ( const _variant_t & Extend );
__declspec(implementation_key(4167)) VARIANT_BOOL _MSProject::SelectEnd ( const _variant_t & Extend );
__declspec(implementation_key(4168)) VARIANT_BOOL _MSProject::SelectRowStart ( const _variant_t & Extend );
__declspec(implementation_key(4169)) VARIANT_BOOL _MSProject::SelectRowEnd ( const _variant_t & Extend );
__declspec(implementation_key(4170)) VARIANT_BOOL _MSProject::SelectCellLeft ( const _variant_t & NumCells, const _variant_t & Extend );
__declspec(implementation_key(4171)) VARIANT_BOOL _MSProject::SelectCellRight ( const _variant_t & NumCells, const _variant_t & Extend );
__declspec(implementation_key(4172)) VARIANT_BOOL _MSProject::SelectCellUp ( const _variant_t & NumCells, const _variant_t & Extend );
__declspec(implementation_key(4173)) VARIANT_BOOL _MSProject::SelectCellDown ( const _variant_t & NumCells, const _variant_t & Extend );
__declspec(implementation_key(4174)) VARIANT_BOOL _MSProject::SelectionExtend ( const _variant_t & Extend, const _variant_t & Add );
__declspec(implementation_key(4175)) VARIANT_BOOL _MSProject::ColumnBestFit ( const _variant_t & Column );
__declspec(implementation_key(4176)) VARIANT_BOOL _MSProject::ColumnEdit ( const _variant_t & Column );
__declspec(implementation_key(4177)) VARIANT_BOOL _MSProject::SelectRange ( long Row, short Column, const _variant_t & RowRelative, const _variant_t & Width, const _variant_t & Height, const _variant_t & Extend, const _variant_t & Add );
__declspec(implementation_key(4178)) VARIANT_BOOL _MSProject::SelectTimescaleRange ( long Row, _bstr_t StartTime, short Width, long Height );
__declspec(implementation_key(4179)) VARIANT_BOOL _MSProject::SelectTaskField ( long Row, _bstr_t Column, const _variant_t & RowRelative, const _variant_t & Width, const _variant_t & Height, const _variant_t & Extend, const _variant_t & Add );
__declspec(implementation_key(4180)) VARIANT_BOOL _MSProject::SelectResourceField ( long Row, _bstr_t Column, const _variant_t & RowRelative, const _variant_t & Width, const _variant_t & Height, const _variant_t & Extend, const _variant_t & Add );
__declspec(implementation_key(4181)) VARIANT_BOOL _MSProject::SelectRow ( const _variant_t & Row, const _variant_t & RowRelative, const _variant_t & Height, const _variant_t & Extend, const _variant_t & Add );
__declspec(implementation_key(4182)) VARIANT_BOOL _MSProject::SelectColumn ( const _variant_t & Column, const _variant_t & Additional, const _variant_t & Extend, const _variant_t & Add );
__declspec(implementation_key(4183)) VARIANT_BOOL _MSProject::SelectTaskColumn ( const _variant_t & Column, const _variant_t & Additional, const _variant_t & Extend, const _variant_t & Add );
__declspec(implementation_key(4184)) VARIANT_BOOL _MSProject::SelectResourceColumn ( const _variant_t & Column, const _variant_t & Additional, const _variant_t & Extend, const _variant_t & Add );
__declspec(implementation_key(4185)) VARIANT_BOOL _MSProject::SelectTaskCell ( const _variant_t & Row, const _variant_t & Column, const _variant_t & RowRelative );
__declspec(implementation_key(4186)) VARIANT_BOOL _MSProject::SelectResourceCell ( const _variant_t & Row, const _variant_t & Column, const _variant_t & RowRelative );
__declspec(implementation_key(4187)) VARIANT_BOOL _MSProject::SelectCell ( const _variant_t & Row, const _variant_t & Column, const _variant_t & RowRelative );
__declspec(implementation_key(4188)) VARIANT_BOOL _MSProject::SelectSheet ( );
__declspec(implementation_key(4189)) VARIANT_BOOL _MSProject::DDEInitiate ( _bstr_t App, _bstr_t Topic );
__declspec(implementation_key(4190)) VARIANT_BOOL _MSProject::DDEExecute ( _bstr_t Command, const _variant_t & TimeOut );
__declspec(implementation_key(4191)) VARIANT_BOOL _MSProject::DDETerminate ( );
__declspec(implementation_key(4192)) VARIANT_BOOL _MSProject::InformationDialog ( const _variant_t & Tab );
__declspec(implementation_key(4193)) VARIANT_BOOL _MSProject::Form ( const _variant_t & Name );
__declspec(implementation_key(4194)) VARIANT_BOOL _MSProject::CustomForms ( );
__declspec(implementation_key(4195)) VARIANT_BOOL _MSProject::Tables ( );
__declspec(implementation_key(4196)) VARIANT_BOOL _MSProject::Filters ( );
__declspec(implementation_key(4197)) VARIANT_BOOL _MSProject::Macro ( const _variant_t & Name );
__declspec(implementation_key(4198)) VARIANT_BOOL _MSProject::FillDown ( const _variant_t & Down );
__declspec(implementation_key(4199)) VARIANT_BOOL _MSProject::Views ( );
__declspec(implementation_key(4200)) VARIANT_BOOL _MSProject::CalculateProject ( );
__declspec(implementation_key(4201)) VARIANT_BOOL _MSProject::LevelingClear ( const _variant_t & All );
__declspec(implementation_key(4202)) VARIANT_BOOL _MSProject::SpellingCheck ( );
__declspec(implementation_key(4203)) VARIANT_BOOL _MSProject::OptionsSpelling ( const _variant_t & TaskName, const _variant_t & TaskNotes, const _variant_t & TaskText1, const _variant_t & TaskText2, const _variant_t & TaskText3, const _variant_t & TaskText4, const _variant_t & TaskText5, const _variant_t & TaskText6, const _variant_t & TaskText7, const _variant_t & TaskText8, const _variant_t & TaskText9, const _variant_t & TaskText10, const _variant_t & ResourceCode, const _variant_t & ResourceName, const _variant_t & ResourceNotes, const _variant_t & ResourceGroup, const _variant_t & ResourceText1, const _variant_t & ResourceText2, const _variant_t & ResourceText3, const _variant_t & ResourceText4, const _variant_t & ResourceText5, const _variant_t & AssignNotes, const _variant_t & IgnoreUppercase, const _variant_t & IgnoreNumberWords, const _variant_t & AlwaysSuggest, const _variant_t & UseCustomDictionary );
__declspec(implementation_key(4204)) VARIANT_BOOL _MSProject::WindowMoreWindows ( );
__declspec(implementation_key(4205)) VARIANT_BOOL _MSProject::HelpContents ( );
__declspec(implementation_key(4206)) VARIANT_BOOL _MSProject::HelpSearch ( );
__declspec(implementation_key(4207)) VARIANT_BOOL _MSProject::HelpOnlineIndex ( );
__declspec(implementation_key(4208)) VARIANT_BOOL _MSProject::HelpAbout ( );
__declspec(implementation_key(4209)) VARIANT_BOOL _MSProject::HelpLaunch ( const _variant_t & FileName, const _variant_t & ContextNumber, const _variant_t & Search, const _variant_t & SearchKey );
__declspec(implementation_key(4210)) VARIANT_BOOL _MSProject::HelpCueCards ( const _variant_t & FileName, const _variant_t & ContextNumber );
__declspec(implementation_key(4211)) VARIANT_BOOL _MSProject::HelpTopics ( );
__declspec(implementation_key(4212)) VARIANT_BOOL _MSProject::HelpAnswerWizard ( );
__declspec(implementation_key(4213)) VARIANT_BOOL _MSProject::HelpMSProjectFundamentals ( );
__declspec(implementation_key(4214)) VARIANT_BOOL _MSProject::AutoCorrect ( );
__declspec(implementation_key(4215)) VARIANT_BOOL _MSProject::HelpQuickPreview ( );
__declspec(implementation_key(4216)) VARIANT_BOOL _MSProject::HelpTechnicalSupport ( );
__declspec(implementation_key(4217)) VARIANT_BOOL _MSProject::HelpCreateYourProject ( );
__declspec(implementation_key(4218)) VARIANT_BOOL _MSProject::HelpContextHelp ( );
__declspec(implementation_key(4219)) VARIANT_BOOL _MSProject::TextStyles ( const _variant_t & Item, const _variant_t & Font, const _variant_t & Size, const _variant_t & Bold, const _variant_t & Italic, const _variant_t & Underline, const _variant_t & Color );
__declspec(implementation_key(4220)) VARIANT_BOOL _MSProject::DetailStylesFormat ( const _variant_t & Item, const _variant_t & Font, const _variant_t & Size, const _variant_t & Bold, const _variant_t & Italic, const _variant_t & Underline, const _variant_t & Color, const _variant_t & CellColor, const _variant_t & Pattern, const _variant_t & ShowInMenu );
__declspec(implementation_key(4221)) VARIANT_BOOL _MSProject::DetailStylesAdd ( enum PjTimescaledData Item, const _variant_t & Position );
__declspec(implementation_key(4222)) VARIANT_BOOL _MSProject::DetailStylesRemove ( enum PjTimescaledData Item );
__declspec(implementation_key(4223)) VARIANT_BOOL _MSProject::DetailStylesRemoveAll ( );
__declspec(implementation_key(4224)) VARIANT_BOOL _MSProject::Font ( const _variant_t & Name, const _variant_t & Size, const _variant_t & Bold, const _variant_t & Italic, const _variant_t & Underline, const _variant_t & Color, const _variant_t & Reset );
__declspec(implementation_key(4225)) VARIANT_BOOL _MSProject::Timescale ( );
__declspec(implementation_key(4226)) VARIANT_BOOL _MSProject::TimescaleEdit ( const _variant_t & MajorUnits, const _variant_t & MinorUnits, const _variant_t & MajorLabel, const _variant_t & MinorLabel, const _variant_t & MajorAlign, const _variant_t & MinorAlign, const _variant_t & MajorCount, const _variant_t & MinorCount, const _variant_t & MajorTicks, const _variant_t & MinorTicks, const _variant_t & Enlarge, const _variant_t & Separator, const _variant_t & MajorUseFY, const _variant_t & MinorUseFY, const _variant_t & TopUnits, const _variant_t & TopLabel, const _variant_t & TopAlign, const _variant_t & TopCount, const _variant_t & TopTicks, const _variant_t & TopUseFY, const _variant_t & TierCount );
__declspec(implementation_key(4227)) VARIANT_BOOL _MSProject::Sort ( const _variant_t & Key1, const _variant_t & Ascending1, const _variant_t & Key2, const _variant_t & Ascending2, const _variant_t & Key3, const _variant_t & Ascending3, const _variant_t & Renumber, const _variant_t & Outline );
__declspec(implementation_key(4228)) VARIANT_BOOL _MSProject::BarBoxStyles ( );
__declspec(implementation_key(4229)) VARIANT_BOOL _MSProject::GanttBarFormat ( const _variant_t & TaskID, const _variant_t & GanttStyle, const _variant_t & StartShape, const _variant_t & StartType, const _variant_t & StartColor, const _variant_t & MiddleShape, const _variant_t & MiddlePattern, const _variant_t & MiddleColor, const _variant_t & EndShape, const _variant_t & EndType, const _variant_t & EndColor, const _variant_t & LeftText, const _variant_t & RightText, const _variant_t & TopText, const _variant_t & BottomText, const _variant_t & InsideText, const _variant_t & Reset, const _variant_t & ProjectName );
__declspec(implementation_key(4230)) VARIANT_BOOL _MSProject::TimescaleNonWorking ( const _variant_t & Draw, const _variant_t & Calendar, const _variant_t & Color, const _variant_t & Pattern );
__declspec(implementation_key(4231)) VARIANT_BOOL _MSProject::BoxShowHideFields ( const _variant_t & Show );
__declspec(implementation_key(4232)) VARIANT_BOOL _MSProject::Layout ( );
__declspec(implementation_key(4233)) VARIANT_BOOL _MSProject::PERTLayout ( const _variant_t & Straight, const _variant_t & DisplayArrows, const _variant_t & AdjustForPageBreaks, const _variant_t & DisplayPageBreaks );
__declspec(implementation_key(4234)) VARIANT_BOOL _MSProject::LayoutNow ( );
__declspec(implementation_key(4235)) VARIANT_BOOL _MSProject::PERTBorders ( const _variant_t & CriticalStyle, const _variant_t & CriticalColor, const _variant_t & NoncriticalStyle, const _variant_t & NoncriticalColor, const _variant_t & CriticalMilestoneStyle, const _variant_t & CriticalMilestoneColor, const _variant_t & NoncriticalMilestoneStyle, const _variant_t & NoncriticalMilestoneColor, const _variant_t & CriticalSummaryStyle, const _variant_t & CriticalSummaryColor, const _variant_t & NoncriticalSummaryStyle, const _variant_t & NoncriticalSummaryColor, const _variant_t & CriticalSubprojectStyle, const _variant_t & CriticalSubprojectColor, const _variant_t & NoncriticalSubprojectStyle, const _variant_t & NoncriticalSubprojectColor, const _variant_t & CriticalMarkedStyle, const _variant_t & CriticalMarkedColor, const _variant_t & NoncriticalMarkedStyle, const _variant_t & NoncriticalMarkedColor, const _variant_t & CriticalExternalTaskStyle, const _variant_t & CriticalExternalTaskColor, const _variant_t & NoncriticalExternalTaskStyle, const _variant_t & NoncriticalExternalTaskColor );
__declspec(implementation_key(4236)) VARIANT_BOOL _MSProject::Gridlines ( );
__declspec(implementation_key(4237)) VARIANT_BOOL _MSProject::GridlinesEdit ( enum PjGridline Item, const _variant_t & NormalType, const _variant_t & NormalColor, const _variant_t & Interval, const _variant_t & IntervalType, const _variant_t & IntervalColor );
__declspec(implementation_key(4238)) VARIANT_BOOL _MSProject::ViewShowSelectedTasks ( const _variant_t & Show );
__declspec(implementation_key(4239)) VARIANT_BOOL _MSProject::PageBreaksShow ( const _variant_t & Show );
__declspec(implementation_key(4240)) VARIANT_BOOL _MSProject::FindNext ( );
__declspec(implementation_key(4241)) VARIANT_BOOL _MSProject::FindPrevious ( );
__declspec(implementation_key(4242)) VARIANT_BOOL _MSProject::ZoomOut ( );
__declspec(implementation_key(4243)) VARIANT_BOOL _MSProject::ZoomIn ( );
__declspec(implementation_key(4244)) VARIANT_BOOL _MSProject::SetField ( _bstr_t Field, _bstr_t Value, const _variant_t & Create );
__declspec(implementation_key(4245)) VARIANT_BOOL _MSProject::SetTaskField ( _bstr_t Field, _bstr_t Value, const _variant_t & AllSelectedTasks, const _variant_t & Create, const _variant_t & TaskID, const _variant_t & ProjectName );
__declspec(implementation_key(4246)) VARIANT_BOOL _MSProject::SetResourceField ( _bstr_t Field, _bstr_t Value, const _variant_t & AllSelectedResources, const _variant_t & Create, const _variant_t & ResourceID, const _variant_t & ProjectName );
__declspec(implementation_key(4247)) VARIANT_BOOL _MSProject::SetActiveCell ( _bstr_t Value, const _variant_t & Create );
__declspec(implementation_key(4248)) _variant_t _MSProject::CheckField ( _bstr_t Field, _bstr_t Value, const _variant_t & Test, const _variant_t & Op, const _variant_t & Field2, const _variant_t & Value2, const _variant_t & Test2 );
__declspec(implementation_key(4249)) VARIANT_BOOL _MSProject::SetMatchingField ( _bstr_t Field, _bstr_t Value, _bstr_t CheckField, _bstr_t CheckValue, const _variant_t & CheckTest, const _variant_t & CheckOperation, const _variant_t & CheckField2, const _variant_t & CheckValue2, const _variant_t & CheckTest2 );
__declspec(implementation_key(4250)) VARIANT_BOOL _MSProject::AppExecute ( const _variant_t & Window, const _variant_t & Command, const _variant_t & Minimize, const _variant_t & Activate );
__declspec(implementation_key(4251)) VARIANT_BOOL _MSProject::AppLaunch ( _bstr_t Application, const _variant_t & Document, const _variant_t & Activate );
__declspec(implementation_key(4252)) VARIANT_BOOL _MSProject::DDELinksUpdate ( );
__declspec(implementation_key(4253)) VARIANT_BOOL _MSProject::GotoTaskDates ( );
__declspec(implementation_key(4254)) VARIANT_BOOL _MSProject::GanttBarLinks ( enum PjGanttBarLink Display );
__declspec(implementation_key(4255)) VARIANT_BOOL _MSProject::GanttShowDrawings ( const _variant_t & Display );
__declspec(implementation_key(4256)) VARIANT_BOOL _MSProject::BarRounding ( const _variant_t & On );
__declspec(implementation_key(4257)) VARIANT_BOOL _MSProject::GanttRollup ( const _variant_t & AlwaysRollup, const _variant_t & HideWhenSummaryExpanded );
__declspec(implementation_key(4258)) VARIANT_BOOL _MSProject::GanttBarTextDateFormat ( enum PjDateFormat DateFormat );
__declspec(implementation_key(4259)) VARIANT_BOOL _MSProject::GanttBarSize ( enum PjBarSize Size );
__declspec(implementation_key(4260)) VARIANT_BOOL _MSProject::GanttBarStyleDelete ( _bstr_t Item );
__declspec(implementation_key(4261)) VARIANT_BOOL _MSProject::GanttBarStyleEdit ( _bstr_t Item, const _variant_t & Create, const _variant_t & Name, const _variant_t & StartShape, const _variant_t & StartType, const _variant_t & StartColor, const _variant_t & MiddleShape, const _variant_t & MiddleColor, const _variant_t & MiddlePattern, const _variant_t & EndShape, const _variant_t & EndType, const _variant_t & EndColor, const _variant_t & ShowFor, const _variant_t & Row, const _variant_t & From, const _variant_t & To, const _variant_t & BottomText, const _variant_t & TopText, const _variant_t & LeftText, const _variant_t & RightText, const _variant_t & InsideText );
__declspec(implementation_key(4262)) VARIANT_BOOL _MSProject::PERTBoxStyles ( const _variant_t & Size, const _variant_t & DateFormat, const _variant_t & Gridlines, const _variant_t & CrossMarks, const _variant_t & Field1, const _variant_t & Field2, const _variant_t & Field3, const _variant_t & Field4, const _variant_t & Field5 );
__declspec(implementation_key(4263)) VARIANT_BOOL _MSProject::PERTSetTask ( const _variant_t & Create, const _variant_t & Move, const _variant_t & TaskID, const _variant_t & XPosition, const _variant_t & YPosition );
__declspec(implementation_key(4264)) VARIANT_BOOL _MSProject::ResourceGraphBarStyles ( const _variant_t & TopLeftShowAs, const _variant_t & TopLeftColor, const _variant_t & TopLeftPattern, const _variant_t & BottomLeftShowAs, const _variant_t & BottomLeftColor, const _variant_t & BottomLeftPattern, const _variant_t & TopRightShowAs, const _variant_t & TopRightColor, const _variant_t & TopRightPattern, const _variant_t & BottomRightShowAs, const _variant_t & BottomRightColor, const _variant_t & BottomRightPattern, const _variant_t & ShowValues, const _variant_t & ShowAvailabilityLine, const _variant_t & PercentBarOverlap );
__declspec(implementation_key(4265)) VARIANT_BOOL _MSProject::ConsolidateProjects ( const _variant_t & Filenames, const _variant_t & NewWindow, const _variant_t & AttachToSources, const _variant_t & PoolResources, const _variant_t & HideSubtasks, enum PjPoolOpen openPool, const _variant_t & UserID, const _variant_t & Password );
__declspec(implementation_key(4266)) VARIANT_BOOL _MSProject::Organizer ( enum PjOrganizer Type, const _variant_t & Task );
__declspec(implementation_key(4267)) VARIANT_BOOL _MSProject::OrganizerMoveItem ( const _variant_t & Type, const _variant_t & FileName, const _variant_t & ToFileName, const _variant_t & Name, const _variant_t & Task );
__declspec(implementation_key(4268)) VARIANT_BOOL _MSProject::OrganizerDeleteItem ( const _variant_t & Type, const _variant_t & FileName, const _variant_t & Name, const _variant_t & Task );
__declspec(implementation_key(4269)) VARIANT_BOOL _MSProject::OrganizerRenameItem ( const _variant_t & Type, const _variant_t & FileName, const _variant_t & Name, const _variant_t & NewName, const _variant_t & Task );
__declspec(implementation_key(4270)) VARIANT_BOOL _MSProject::RecurringTaskInsert ( );
__declspec(implementation_key(4271)) VARIANT_BOOL _MSProject::CalendarTimescale ( );
__declspec(implementation_key(4272)) VARIANT_BOOL _MSProject::CalendarDateBoxes ( const _variant_t & TopLeft, const _variant_t & TopRight, const _variant_t & BottomLeft, const _variant_t & BottomRight, const _variant_t & TopColor, const _variant_t & BottomColor, const _variant_t & TopPattern, const _variant_t & BottomPattern );
__declspec(implementation_key(4273)) VARIANT_BOOL _MSProject::CalendarWeekHeadings ( const _variant_t & MonthTitle, const _variant_t & WeekTitle, const _variant_t & DayTitle, const _variant_t & ShowPreview, const _variant_t & DaysPerWeek );
__declspec(implementation_key(4274)) VARIANT_BOOL _MSProject::CalendarDateShadingEdit ( enum PjCalendarShading Item, const _variant_t & Pattern, const _variant_t & Color );
__declspec(implementation_key(4275)) VARIANT_BOOL _MSProject::CalendarDateShading ( const _variant_t & BaseCalendarName, const _variant_t & ResourceUniqueID, const _variant_t & ProjectIndex );
__declspec(implementation_key(4276)) VARIANT_BOOL _MSProject::ZoomCalendar ( const _variant_t & NumWeeks, const _variant_t & StartDate, const _variant_t & EndDate );
__declspec(implementation_key(4277)) VARIANT_BOOL _MSProject::CalendarLayout ( const _variant_t & SortOrder, const _variant_t & AutoLayout );
__declspec(implementation_key(4278)) VARIANT_BOOL _MSProject::CalendarBarStyles ( const _variant_t & BarRounding );
__declspec(implementation_key(4279)) VARIANT_BOOL _MSProject::CalendarBarStylesEdit ( enum PjBarItem Item, const _variant_t & Bar, const _variant_t & Pattern, const _variant_t & Color, const _variant_t & Align, const _variant_t & Wrap, const _variant_t & Shadow, const _variant_t & Field1, const _variant_t & Field2, const _variant_t & Field3, const _variant_t & Field4, const _variant_t & Field5, const _variant_t & SplitPattern );
__declspec(implementation_key(4280)) VARIANT_BOOL _MSProject::CalendarBestFitWeekHeight ( );
__declspec(implementation_key(4281)) VARIANT_BOOL _MSProject::DrawingCreate ( enum PjShape Type, const _variant_t & Behind );
__declspec(implementation_key(4282)) VARIANT_BOOL _MSProject::DrawingMove ( const _variant_t & Forward, const _variant_t & Full );
__declspec(implementation_key(4283)) VARIANT_BOOL _MSProject::DrawingReshape ( );
__declspec(implementation_key(4284)) VARIANT_BOOL _MSProject::DrawingProperties ( const _variant_t & SizePositionTab );
__declspec(implementation_key(4285)) VARIANT_BOOL _MSProject::DrawingCycleColor ( );
__declspec(implementation_key(4286)) VARIANT_BOOL _MSProject::FormatCopy ( );
__declspec(implementation_key(4287)) VARIANT_BOOL _MSProject::FormatPaste ( );
__declspec(implementation_key(4288)) VARIANT_BOOL _MSProject::FormatPainter ( );
__declspec(implementation_key(4289)) VARIANT_BOOL _MSProject::Toolbars ( const _variant_t & Action, const _variant_t & ToolbarName, const _variant_t & NewToolbarName );
__declspec(implementation_key(4290)) VARIANT_BOOL _MSProject::ToolbarInsertTool ( _bstr_t ToolbarName, short ButtonIndex, const _variant_t & Command, const _variant_t & FaceIndex, const _variant_t & Description, const _variant_t & ToolTip );
__declspec(implementation_key(4291)) VARIANT_BOOL _MSProject::ToolbarDeleteTool ( _bstr_t ToolbarName, short ButtonIndex );
__declspec(implementation_key(4292)) VARIANT_BOOL _MSProject::ToolbarsCustomize ( );
__declspec(implementation_key(4293)) VARIANT_BOOL _MSProject::ToolbarCustomizeTool ( const _variant_t & ToolbarName, const _variant_t & ButtonIndex, const _variant_t & Command, const _variant_t & FaceIndex, const _variant_t & Description, const _variant_t & ToolTip );
__declspec(implementation_key(4294)) VARIANT_BOOL _MSProject::ToolbarCopyToolFace ( _bstr_t ToolbarName, short ButtonIndex );
__declspec(implementation_key(4295)) VARIANT_BOOL _MSProject::ToolbarPasteToolFace ( _bstr_t ToolbarName, short ButtonIndex );
__declspec(implementation_key(4296)) VARIANT_BOOL _MSProject::FontBold ( const _variant_t & Set );
__declspec(implementation_key(4297)) VARIANT_BOOL _MSProject::FontItalic ( const _variant_t & Set );
__declspec(implementation_key(4298)) VARIANT_BOOL _MSProject::FontUnderLine ( const _variant_t & Set );
__declspec(implementation_key(4299)) VARIANT_BOOL _MSProject::ColumnAlignment ( enum PjAlignment Align );
__declspec(implementation_key(4300)) VARIANT_BOOL _MSProject::Reports ( );
__declspec(implementation_key(4301)) VARIANT_BOOL _MSProject::TipOfTheDay ( );
__declspec(implementation_key(4302)) VARIANT_BOOL _MSProject::FindFile ( );
__declspec(implementation_key(4303)) VARIANT_BOOL _MSProject::MailUpdateProject ( _bstr_t DataFile );
__declspec(implementation_key(4304)) VARIANT_BOOL _MSProject::MailSendProjectMail ( const _variant_t & MessageType, const _variant_t & Subject, const _variant_t & Body, const _variant_t & Fields, const _variant_t & UpdateAsOf, const _variant_t & ShowDialog, const _variant_t & InstallationMessage, const _variant_t & UpdateFrom, const _variant_t & PublishScope );
__declspec(implementation_key(4305)) VARIANT_BOOL _MSProject::WebInbox ( );
__declspec(implementation_key(4306)) VARIANT_BOOL _MSProject::GanttChartWizard ( );
__declspec(implementation_key(4307)) VARIANT_BOOL _MSProject::DrawingToolbarShow ( );
__declspec(implementation_key(4308)) VARIANT_BOOL _MSProject::ReminderSet ( const _variant_t & Start, const _variant_t & LeadTime );
__declspec(implementation_key(4309)) VARIANT_BOOL _MSProject::SchedulePlusReminderSet ( const _variant_t & Start, const _variant_t & LeadTime );
__declspec(implementation_key(4310)) VARIANT_BOOL _MSProject::CalendarTaskList ( const _variant_t & Date );
__declspec(implementation_key(4311)) VARIANT_BOOL _MSProject::OutlineSymbolsToggle ( const _variant_t & Show );
__declspec(implementation_key(4312)) VARIANT_BOOL _MSProject::ResourceSharingPoolAction ( enum PjPoolAction Action, const _variant_t & FileName, const _variant_t & ReadOnly );
__declspec(implementation_key(4313)) VARIANT_BOOL _MSProject::ResourceActiveDirectory ( );
__declspec(implementation_key(4314)) VARIANT_BOOL _MSProject::ResourceAddressBook ( );
__declspec(implementation_key(4315)) VARIANT_BOOL _MSProject::ResourceDetails ( const _variant_t & Name );
__declspec(implementation_key(4316)) VARIANT_BOOL _MSProject::MailProjectMailCustomize ( const _variant_t & Action, const _variant_t & Position, const _variant_t & FieldID, const _variant_t & Title, const _variant_t & IncludeInTeamStatus, const _variant_t & Editable, const _variant_t & UseAssignmentField );
__declspec(implementation_key(4317)) VARIANT_BOOL _MSProject::FileQuit ( enum PjSaveType Save );
__declspec(implementation_key(4318)) VARIANT_BOOL _MSProject::About ( );
__declspec(implementation_key(4319)) VARIANT_BOOL _MSProject::DetailStylesProperties ( const _variant_t & AlignCellData, const _variant_t & RepeatRowLabel, const _variant_t & ShortLabels, const _variant_t & DisplayDetailsColumn );
__declspec(implementation_key(4320)) VARIANT_BOOL _MSProject::DetailStylesToggleItem ( enum PjTimescaledData Item );
__declspec(implementation_key(4321)) VARIANT_BOOL _MSProject::AutoFilter ( );
__declspec(implementation_key(4322)) VARIANT_BOOL _MSProject::ViewBar ( );
__declspec(implementation_key(4323)) VARIANT_BOOL _MSProject::MacroShowVba ( );
__declspec(implementation_key(4324)) VARIANT_BOOL _MSProject::MacroShowCode ( );
__declspec(implementation_key(4325)) VARIANT_BOOL _MSProject::WebGoBack ( );
__declspec(implementation_key(4326)) VARIANT_BOOL _MSProject::WebGoForward ( );
__declspec(implementation_key(4327)) VARIANT_BOOL _MSProject::WebStopLoading ( );
__declspec(implementation_key(4328)) VARIANT_BOOL _MSProject::WebRefresh ( );
__declspec(implementation_key(4329)) VARIANT_BOOL _MSProject::WebOpenStartPage ( );
__declspec(implementation_key(4330)) VARIANT_BOOL _MSProject::WebOpenSearchPage ( );
__declspec(implementation_key(4331)) VARIANT_BOOL _MSProject::WebHideToolbars ( const _variant_t & Hide );
__declspec(implementation_key(4332)) VARIANT_BOOL _MSProject::FollowHyperlink ( const _variant_t & Address, const _variant_t & SubAddress, const _variant_t & AddHistory, const _variant_t & NewWindow );
__declspec(implementation_key(4333)) VARIANT_BOOL _MSProject::EditPasteAsHyperlink ( );
__declspec(implementation_key(4334)) VARIANT_BOOL _MSProject::InsertHyperlink ( const _variant_t & Name, const _variant_t & Address, const _variant_t & SubAddress, const _variant_t & ScreenTip );
__declspec(implementation_key(4335)) VARIANT_BOOL _MSProject::EditHyperlink ( const _variant_t & Name, const _variant_t & Address, const _variant_t & SubAddress, const _variant_t & ScreenTip );
__declspec(implementation_key(4336)) VARIANT_BOOL _MSProject::WebOpenHyperlink ( const _variant_t & Address, const _variant_t & SubAddress, const _variant_t & AddHistory, const _variant_t & NewWindow );
__declspec(implementation_key(4337)) VARIANT_BOOL _MSProject::WebCopyHyperlink ( );
__declspec(implementation_key(4338)) VARIANT_BOOL _MSProject::WebAddToFavorites ( const _variant_t & CurrentLink );
__declspec(implementation_key(4339)) VARIANT_BOOL _MSProject::EditClearHyperlink ( );
__declspec(implementation_key(4340)) VARIANT_BOOL _MSProject::WebSetStartPage ( const _variant_t & Address );
__declspec(implementation_key(4341)) VARIANT_BOOL _MSProject::WebSetSearchPage ( const _variant_t & Address );
__declspec(implementation_key(4342)) VARIANT_BOOL _MSProject::WebOpenFavorites ( );
__declspec(implementation_key(4343)) VARIANT_BOOL _MSProject::WebToolbar ( const _variant_t & Show );
__declspec(implementation_key(4344)) VARIANT_BOOL _MSProject::SplitTask ( const _variant_t & Lock );
__declspec(implementation_key(4345)) VARIANT_BOOL _MSProject::CustomFieldRename ( enum PjCustomField FieldID, const _variant_t & NewName, const _variant_t & Phonetic );
__declspec(implementation_key(4346)) VARIANT_BOOL _MSProject::CustomizeField ( );
__declspec(implementation_key(4347)) VARIANT_BOOL _MSProject::GanttShowBarSplits ( const _variant_t & Display );
__declspec(implementation_key(4348)) VARIANT_BOOL _MSProject::CalendarShowBarSplits ( const _variant_t & Display );
__declspec(implementation_key(4349)) VARIANT_BOOL _MSProject::MapEdit ( const _variant_t & Name, const _variant_t & Create, const _variant_t & OverwriteExisting, const _variant_t & NewName, const _variant_t & DataCategory, const _variant_t & CategoryEnabled, const _variant_t & TableName, const _variant_t & FieldName, const _variant_t & ExternalFieldName, const _variant_t & ExportFilter, const _variant_t & ImportMethod, const _variant_t & MergeKey, const _variant_t & HeaderRow, const _variant_t & AssignmentData, const _variant_t & TextDelimiter, const _variant_t & TextFileOrigin, const _variant_t & UseHtmlTemplate, const _variant_t & TemplateFile, const _variant_t & IncludeImage, const _variant_t & ImageFile );
__declspec(implementation_key(4350)) VARIANT_BOOL _MSProject::FillAcross ( const _variant_t & Right );
__declspec(implementation_key(4351)) VARIANT_BOOL _MSProject::LinksBetweenProjects ( const _variant_t & AcceptAll );
__declspec(implementation_key(4352)) VARIANT_BOOL _MSProject::ToggleAssignments ( );
__declspec(implementation_key(4353)) VARIANT_BOOL _MSProject::ProgressLines ( );
__declspec(implementation_key(4354)) VARIANT_BOOL _MSProject::ResourceSharingPoolUpdate ( const _variant_t & allSharers );
__declspec(implementation_key(4355)) VARIANT_BOOL _MSProject::ResourceSharingPoolRefresh ( );
__declspec(implementation_key(4356)) VARIANT_BOOL _MSProject::WebHelp ( const _variant_t & Type );
__declspec(implementation_key(4357)) VARIANT_BOOL _MSProject::AddProgressLine ( );
__declspec(implementation_key(4358)) VARIANT_BOOL _MSProject::CustomizeIMEMode ( enum PjField FieldID, enum PjIMEMode IMEMode );
__declspec(implementation_key(4359)) VARIANT_BOOL _MSProject::DeleteFromDatabase ( const _variant_t & Name, const _variant_t & UserID, const _variant_t & DatabasePassWord, const _variant_t & FormatID );
__declspec(implementation_key(4360)) VARIANT_BOOL _MSProject::WBSCodeRenumber ( const _variant_t & All );
__declspec(implementation_key(4361)) VARIANT_BOOL _MSProject::WBSCodeMaskEdit ( const _variant_t & CodePrefix, const _variant_t & Level, enum PjWBSSequence Sequence, const _variant_t & Length, const _variant_t & Separator, const _variant_t & CodeGenerate, const _variant_t & VerifyUniqueness );
__declspec(implementation_key(4362)) VARIANT_BOOL _MSProject::CustomOutlineCodeEdit ( enum PjCustomField FieldID, const _variant_t & Level, enum PjCustomOutlineCodeSequence Sequence, const _variant_t & Length, const _variant_t & Separator, const _variant_t & OnlyLookUpTableCodes, const _variant_t & OnlyCompleteCodes, const _variant_t & LookupTableLink, const _variant_t & OnlyLeaves, const _variant_t & MatchGeneric, const _variant_t & RequiredCode );
__declspec(implementation_key(4363)) VARIANT_BOOL _MSProject::OptionsSave ( const _variant_t & DefaultSaveFormat, const _variant_t & DefaultProjectsPath, const _variant_t & DefaultUserTemplatesPath, const _variant_t & DefaultWorkgroupTemplatesPath, const _variant_t & ExpandDatabaseTimephasedData, const _variant_t & AutomaticSave, const _variant_t & AutomaticSaveInterval, const _variant_t & AutomaticSaveOptions, const _variant_t & AutomaticSavePrompt, const _variant_t & SetDefaultsDatabase );
__declspec(implementation_key(4364)) VARIANT_BOOL _MSProject::OfficeOnTheWeb ( );
__declspec(implementation_key(4365)) VARIANT_BOOL _MSProject::FixMe ( );
__declspec(implementation_key(4366)) VARIANT_BOOL _MSProject::ViewShowWorkAvailability ( );
__declspec(implementation_key(4367)) VARIANT_BOOL _MSProject::ViewShowUnitAvailability ( );
__declspec(implementation_key(4368)) VARIANT_BOOL _MSProject::BaselineClear ( const _variant_t & All, const _variant_t & From );
__declspec(implementation_key(4369)) VARIANT_BOOL _MSProject::Groups ( );
__declspec(implementation_key(4370)) VARIANT_BOOL _MSProject::GroupApply ( const _variant_t & Name );
__declspec(implementation_key(4371)) VARIANT_BOOL _MSProject::GroupBy ( );
__declspec(implementation_key(4372)) VARIANT_BOOL _MSProject::LookUpTableAdd ( enum PjCustomField FieldID, const _variant_t & Level, const _variant_t & Code, const _variant_t & Description );
__declspec(implementation_key(4373)) VARIANT_BOOL _MSProject::BoxStylesEdit ( enum PjBoxStyle Style, const _variant_t & DataTemplate, const _variant_t & HorizontalGridlines, const _variant_t & VerticalGridlines, enum PjBoxShape BorderShape, enum PjColor BorderColor, const _variant_t & BorderWidth, enum PjColor BackgroundColor, enum PjBackgroundPattern BackgroundPattern );
__declspec(implementation_key(4374)) VARIANT_BOOL _MSProject::BoxFormat ( const _variant_t & ProjectName, const _variant_t & TaskID, const _variant_t & DataTemplate, const _variant_t & HorizontalGridlines, const _variant_t & VerticalGridlines, enum PjBoxShape BorderShape, enum PjColor BorderColor, const _variant_t & BorderWidth, enum PjColor BackgroundColor, enum PjBackgroundPattern BackgroundPattern, const _variant_t & Reset );
__declspec(implementation_key(4375)) VARIANT_BOOL _MSProject::BarBoxFormat ( );
__declspec(implementation_key(4376)) VARIANT_BOOL _MSProject::CreateWebAccount ( const _variant_t & ServerURL, const _variant_t & Name, enum PjAuthentication AuthenticationType, enum PjAccountType AccountType, const _variant_t & ShowDialog, const _variant_t & Email, const _variant_t & WindowsAccount );
__declspec(implementation_key(4377)) VARIANT_BOOL _MSProject::BoxDataTemplate ( _bstr_t Name, enum PjDataTemplate Action, const _variant_t & NewName, const _variant_t & Overwrite );
__declspec(implementation_key(4378)) VARIANT_BOOL _MSProject::BoxCellLayout ( _bstr_t Name, const _variant_t & CellRows, const _variant_t & CellColumns, const _variant_t & CellWidth, const _variant_t & MergeCells );
__declspec(implementation_key(4379)) VARIANT_BOOL _MSProject::BoxCellEdit ( _bstr_t Name, enum PjCell Cell, enum PjField FieldName, const _variant_t & Font, const _variant_t & FontSize, enum PjColor FontColor, const _variant_t & Bold, const _variant_t & Italic, const _variant_t & Underline, enum PjAlignment HorizontalAlignment, enum PjVerticalAlignment VerticalAlignment, const _variant_t & TextLineLimit, const _variant_t & ShowLabel, const _variant_t & Label, enum PjDateFormat DateFormat );
__declspec(implementation_key(4380)) VARIANT_BOOL _MSProject::ResourceWindowsAccount ( const _variant_t & Name, const _variant_t & ShowDialog );
__declspec(implementation_key(4381)) VARIANT_BOOL _MSProject::SetRowHeight ( const _variant_t & Unit, const _variant_t & Rows, const _variant_t & UseUniqueID );
__declspec(implementation_key(4382)) VARIANT_BOOL _MSProject::ComAddInsDialog ( );
__declspec(implementation_key(4383)) VARIANT_BOOL _MSProject::MacroSecurity ( );
__declspec(implementation_key(4384)) VARIANT_BOOL _MSProject::LayoutSelectionNow ( );
__declspec(implementation_key(4385)) VARIANT_BOOL _MSProject::BoxAlign ( enum PjAlign Alignment );
__declspec(implementation_key(4386)) VARIANT_BOOL _MSProject::ConvertHangulToHanja ( );
__declspec(implementation_key(4387)) VARIANT_BOOL _MSProject::UpdateProjectToWeb ( const _variant_t & ServerURL, const _variant_t & EmbedProjectFile, const _variant_t & OnlyRegisterProject, const _variant_t & WaitForCompletion );
__declspec(implementation_key(4388)) VARIANT_BOOL _MSProject::CustomFieldProperties ( enum PjCustomField FieldID, enum PjCustomFieldAttribute Attribute, enum PjSummaryCalc SummaryCalc, const _variant_t & GraphicalIndicators, const _variant_t & Required );
__declspec(implementation_key(4389)) VARIANT_BOOL _MSProject::CustomFieldSetFormula ( enum PjCustomField FieldID, const _variant_t & Formula );
__declspec(implementation_key(4390)) VARIANT_BOOL _MSProject::CustomFieldIndicatorAdd ( enum PjCustomField FieldID, enum PjComparison Test, _bstr_t Value, enum PjIndicator IndicatorID, enum PjCriteriaList CriteriaList, const _variant_t & Index );
__declspec(implementation_key(4391)) VARIANT_BOOL _MSProject::CustomFieldIndicators ( enum PjCustomField FieldID, const _variant_t & SummaryInheritsNonsummary, const _variant_t & ProjectInheritsSummary, const _variant_t & ShowToolTips );
__declspec(implementation_key(4392)) VARIANT_BOOL _MSProject::CustomFieldIndicatorDelete ( enum PjCustomField FieldID, short Index, enum PjCriteriaList CriteriaList );
__declspec(implementation_key(4393)) VARIANT_BOOL _MSProject::CustomFieldValueList ( enum PjCustomField FieldID, const _variant_t & ListDefault, const _variant_t & DefaultValue, const _variant_t & RestrictToList, const _variant_t & AppendNew, const _variant_t & PromptOnNew, enum PjListOrder DisplayOrder );
__declspec(implementation_key(4394)) VARIANT_BOOL _MSProject::CustomFieldValueListAdd ( enum PjCustomField FieldID, const _variant_t & Value, const _variant_t & Description, const _variant_t & Phonetic, const _variant_t & Index, const _variant_t & FieldDefault );
__declspec(implementation_key(4395)) VARIANT_BOOL _MSProject::CustomFieldValueListDelete ( enum PjCustomField FieldID, short Index );
__declspec(implementation_key(4396)) VARIANT_BOOL _MSProject::BoxLayout ( enum PjLayoutMode LayoutMode, enum PjLayoutScheme LayoutScheme, const _variant_t & SummaryPrecedence, enum PjVerticalAlignment RowAlignment, enum PjAlignment ColumnAlignment, const _variant_t & RowSpacing, const _variant_t & ColumnSpacing, enum PjRowColSize RowHeight, enum PjRowColSize ColumnWidth, const _variant_t & AdjustForPageBreaks, const _variant_t & ShowSummaryTasks, enum PjColor ViewBackgroundColor, enum PjBackgroundPattern ViewBackgroundPattern, const _variant_t & ShowProgressMarks, const _variant_t & ShowPageBreaks, const _variant_t & ShowIDOnly );
__declspec(implementation_key(4397)) VARIANT_BOOL _MSProject::BoxLinks ( enum PjLinkStyle Style, const _variant_t & ShowArrows, const _variant_t & ShowLabels, enum PjLinkColorMode ColorMode, enum PjColor CriticalColor, enum PjColor NoncriticalColor );
__declspec(implementation_key(4398)) VARIANT_BOOL _MSProject::SummaryTasksShow ( const _variant_t & Show );
__declspec(implementation_key(4399)) VARIANT_BOOL _MSProject::BoxProgressMarksShow ( const _variant_t & Show );
__declspec(implementation_key(4400)) VARIANT_BOOL _MSProject::BoxLinkLabelsShow ( const _variant_t & Show );
__declspec(implementation_key(4401)) VARIANT_BOOL _MSProject::BoxLinkStyleToggle ( const _variant_t & StraightLinks );
__declspec(implementation_key(4402)) VARIANT_BOOL _MSProject::LayoutRelatedNow ( );
__declspec(implementation_key(4403)) VARIANT_BOOL _MSProject::BoxSet ( enum PjBoxSet Action, const _variant_t & TaskID, const _variant_t & XPosition, const _variant_t & YPosition, const _variant_t & ProjectName );
__declspec(implementation_key(4404)) VARIANT_BOOL _MSProject::SetSplitBar ( const _variant_t & ShowColumns );
__declspec(implementation_key(4405)) VARIANT_BOOL _MSProject::SetTitleRowHeight ( const _variant_t & TitleHeight );
__declspec(implementation_key(4406)) VARIANT_BOOL _MSProject::GoalAreaChange ( short goalArea );
__declspec(implementation_key(4407)) VARIANT_BOOL _MSProject::SidepaneToggle ( const _variant_t & Show );
__declspec(implementation_key(4408)) VARIANT_BOOL _MSProject::SearchFiles ( );
__declspec(implementation_key(4409)) VARIANT_BOOL _MSProject::ImportOutlookTasks ( );
__declspec(implementation_key(4410)) VARIANT_BOOL _MSProject::OptionsInterface ( const _variant_t & ShowResourceAssignmentIndicators, const _variant_t & ShowEditToStartFinishDates, const _variant_t & ShowEditsToWorkUnitsDurationIndicators, const _variant_t & ShowDeletionInNameColumn, const _variant_t & DisplayProjectGuide, const _variant_t & ProjectGuideUseDefaultFunctionalLayoutPage, const _variant_t & ProjectGuideFunctionalLayoutPage, const _variant_t & ProjectGuideUseDefaultContent, const _variant_t & ProjectGuideContent, const _variant_t & SetAsDefaults );
__declspec(implementation_key(4411)) VARIANT_BOOL _MSProject::SidepaneTaskChange ( short ID, const _variant_t & IsGoalArea );
__declspec(implementation_key(4412)) VARIANT_BOOL _MSProject::ImportResourceList ( const _variant_t & ServerURL );
__declspec(implementation_key(4413)) VARIANT_BOOL _MSProject::EnterpriseResSubstitutionWizard ( const _variant_t & ProjectList, enum PjResSubstitutionPoolOption PoolOption, const _variant_t & RBSorResourceList, const _variant_t & FreezeHorizonDate, const _variant_t & UpdateProjects, const _variant_t & SaveReport, const _variant_t & Path );
__declspec(implementation_key(4414)) VARIANT_BOOL _MSProject::EnterpriseResourcesOpen ( const _variant_t & EUID, enum PjCheckOutType OpenType );
__declspec(implementation_key(4415)) VARIANT_BOOL _MSProject::EnterpriseResourcesImport ( const _variant_t & LocalRUIDs );
__declspec(implementation_key(4416)) VARIANT_BOOL _MSProject::EnterpriseResourceGet ( const _variant_t & EUID, const _variant_t & RUID );
__declspec(implementation_key(4417)) VARIANT_BOOL _MSProject::EnterpriseProjectImportWizard ( const _variant_t & Name );
__declspec(implementation_key(4418)) VARIANT_BOOL _MSProject::EnterpriseTeamBuilder ( );
__declspec(implementation_key(4419)) VARIANT_BOOL _MSProject::EnterpriseCustomOutlineCodeShare ( long LinkFrom, const _variant_t & LinkTo );
__declspec(implementation_key(4420)) VARIANT_BOOL _MSProject::EnterpriseCustomizeFields ( );
__declspec(implementation_key(4421)) VARIANT_BOOL _MSProject::EnterpriseGlobalCheckOut ( );
__declspec(implementation_key(4422)) VARIANT_BOOL _MSProject::EnterpriseProjectProfiles ( );
__declspec(implementation_key(4423)) VARIANT_BOOL _MSProject::ResourceAssignmentDialog ( const _variant_t & ShowResourceListOptions, enum PjAssignResourcesListFields ResourceListFields, const _variant_t & UseNamedFilter, const _variant_t & FilterName, const _variant_t & UseAvailableToWorkFilter, const _variant_t & AvailableToWork );
__declspec(implementation_key(4424)) VARIANT_BOOL _MSProject::LoadWebBrowserControl ( _bstr_t TargetPage, const _variant_t & WrapperPage );
__declspec(implementation_key(4425)) VARIANT_BOOL _MSProject::FileSaveOffline ( enum PjSaveType Save );
__declspec(implementation_key(4426)) VARIANT_BOOL _MSProject::HelpReference ( );
__declspec(implementation_key(4427)) VARIANT_BOOL _MSProject::HelpWhatsNew ( );
__declspec(implementation_key(4428)) VARIANT_BOOL _MSProject::StopWebBrowserControlNavigation ( );
__declspec(implementation_key(4429)) VARIANT_BOOL _MSProject::EnterpriseGlobalBackup ( const _variant_t & BackupFileName );
__declspec(implementation_key(4430)) VARIANT_BOOL _MSProject::EnterpriseGlobalRestore ( const _variant_t & ProfileName, const _variant_t & RestoreFileName );
__declspec(implementation_key(4431)) VARIANT_BOOL _MSProject::SpellCheckField ( enum PjSpellingField FieldName, const _variant_t & EnableSpellCheck );
__declspec(implementation_key(4432)) VARIANT_BOOL _MSProject::AddResourcesFromProjectServer ( );
__declspec(implementation_key(4433)) VARIANT_BOOL _MSProject::ResetTrackingMethod ( );
__declspec(implementation_key(4434)) _MSProjectPtr _MSProject::GetApplication ( );
__declspec(implementation_key(4435)) void _MSProject::PutApplication ( struct _MSProject * _val );
__declspec(implementation_key(4436)) _MSProjectPtr _MSProject::GetParent ( );
__declspec(implementation_key(4437)) void _MSProject::PutParent ( struct _MSProject * _val );
__declspec(implementation_key(4438)) ProjectsPtr _MSProject::GetProjects ( );
__declspec(implementation_key(4439)) void _MSProject::PutProjects ( struct Projects * _val );
__declspec(implementation_key(4440)) SelectionPtr _MSProject::GetActiveSelection ( );
__declspec(implementation_key(4441)) void _MSProject::PutActiveSelection ( struct Selection * _val );
__declspec(implementation_key(4442)) CellPtr _MSProject::GetActiveCell ( );
__declspec(implementation_key(4443)) void _MSProject::PutActiveCell ( struct Cell * _val );
__declspec(implementation_key(4444)) _IProjectDocPtr _MSProject::GetActiveProject ( );
__declspec(implementation_key(4445)) void _MSProject::PutActiveProject ( struct _IProjectDoc * _val );
__declspec(implementation_key(4446)) WindowPtr _MSProject::GetActiveWindow ( );
__declspec(implementation_key(4447)) void _MSProject::PutActiveWindow ( struct Window * _val );
__declspec(implementation_key(4448)) VARIANT_BOOL _MSProject::GetSupportsMultipleDocuments ( );
__declspec(implementation_key(4449)) void _MSProject::PutSupportsMultipleDocuments ( VARIANT_BOOL _val );
__declspec(implementation_key(4450)) VARIANT_BOOL _MSProject::GetSupportsMultipleWindows ( );
__declspec(implementation_key(4451)) void _MSProject::PutSupportsMultipleWindows ( VARIANT_BOOL _val );
__declspec(implementation_key(4452)) VARIANT_BOOL _MSProject::GetVisible ( );
__declspec(implementation_key(4453)) void _MSProject::PutVisible ( VARIANT_BOOL _val );
__declspec(implementation_key(4454)) _bstr_t _MSProject::GetPathSeparator ( );
__declspec(implementation_key(4455)) void _MSProject::PutPathSeparator ( _bstr_t _val );
__declspec(implementation_key(4456)) _bstr_t _MSProject::GetCaption ( );
__declspec(implementation_key(4457)) void _MSProject::PutCaption ( _bstr_t _val );
__declspec(implementation_key(4458)) _bstr_t _MSProject::GetName ( );
__declspec(implementation_key(4459)) void _MSProject::PutName ( _bstr_t _val );
__declspec(implementation_key(4460)) _bstr_t _MSProject::GetPath ( );
__declspec(implementation_key(4461)) void _MSProject::PutPath ( _bstr_t _val );
__declspec(implementation_key(4462)) _bstr_t _MSProject::GetVersion ( );
__declspec(implementation_key(4463)) void _MSProject::PutVersion ( _bstr_t _val );
__declspec(implementation_key(4464)) enum PjWindowState _MSProject::GetWindowState ( );
__declspec(implementation_key(4465)) void _MSProject::PutWindowState ( enum PjWindowState _val );
__declspec(implementation_key(4466)) long _MSProject::GetLeft ( );
__declspec(implementation_key(4467)) void _MSProject::PutLeft ( long _val );
__declspec(implementation_key(4468)) long _MSProject::GetTop ( );
__declspec(implementation_key(4469)) void _MSProject::PutTop ( long _val );
__declspec(implementation_key(4470)) long _MSProject::GetWidth ( );
__declspec(implementation_key(4471)) void _MSProject::PutWidth ( long _val );
__declspec(implementation_key(4472)) long _MSProject::GetHeight ( );
__declspec(implementation_key(4473)) void _MSProject::PutHeight ( long _val );
__declspec(implementation_key(4474)) enum PjDateOrder _MSProject::GetDateOrder ( );
__declspec(implementation_key(4475)) void _MSProject::PutDateOrder ( enum PjDateOrder _val );
__declspec(implementation_key(4476)) _bstr_t _MSProject::GetDateSeparator ( );
__declspec(implementation_key(4477)) void _MSProject::PutDateSeparator ( _bstr_t _val );
__declspec(implementation_key(4478)) _bstr_t _MSProject::GetThousandSeparator ( );
__declspec(implementation_key(4479)) void _MSProject::PutThousandSeparator ( _bstr_t _val );
__declspec(implementation_key(4480)) _bstr_t _MSProject::GetDecimalSeparator ( );
__declspec(implementation_key(4481)) void _MSProject::PutDecimalSeparator ( _bstr_t _val );
__declspec(implementation_key(4482)) _bstr_t _MSProject::GetListSeparator ( );
__declspec(implementation_key(4483)) void _MSProject::PutListSeparator ( _bstr_t _val );
__declspec(implementation_key(4484)) _bstr_t _MSProject::GetTimeSeparator ( );
__declspec(implementation_key(4485)) void _MSProject::PutTimeSeparator ( _bstr_t _val );
__declspec(implementation_key(4486)) VARIANT_BOOL _MSProject::GetTwelveHourTimeFormat ( );
__declspec(implementation_key(4487)) void _MSProject::PutTwelveHourTimeFormat ( VARIANT_BOOL _val );
__declspec(implementation_key(4488)) _bstr_t _MSProject::GetAMText ( );
__declspec(implementation_key(4489)) void _MSProject::PutAMText ( _bstr_t _val );
__declspec(implementation_key(4490)) _bstr_t _MSProject::GetPMText ( );
__declspec(implementation_key(4491)) void _MSProject::PutPMText ( _bstr_t _val );
__declspec(implementation_key(4492)) _bstr_t _MSProject::GetDefaultView ( );
__declspec(implementation_key(4493)) void _MSProject::PutDefaultView ( _bstr_t _val );
__declspec(implementation_key(4494)) VARIANT_BOOL _MSProject::GetDisplayStatusBar ( );
__declspec(implementation_key(4495)) void _MSProject::PutDisplayStatusBar ( VARIANT_BOOL _val );
__declspec(implementation_key(4496)) VARIANT_BOOL _MSProject::GetDisplayAlerts ( );
__declspec(implementation_key(4497)) void _MSProject::PutDisplayAlerts ( VARIANT_BOOL _val );
__declspec(implementation_key(4498)) VARIANT_BOOL _MSProject::GetDisplayEntryBar ( );
__declspec(implementation_key(4499)) void _MSProject::PutDisplayEntryBar ( VARIANT_BOOL _val );
__declspec(implementation_key(4500)) VARIANT_BOOL _MSProject::GetDisplayScrollBars ( );
__declspec(implementation_key(4501)) void _MSProject::PutDisplayScrollBars ( VARIANT_BOOL _val );
__declspec(implementation_key(4502)) VARIANT_BOOL _MSProject::GetDisplayWindowsInTaskbar ( );
__declspec(implementation_key(4503)) void _MSProject::PutDisplayWindowsInTaskbar ( VARIANT_BOOL _val );
__declspec(implementation_key(4504)) enum PjCalculation _MSProject::GetCalculation ( );
__declspec(implementation_key(4505)) void _MSProject::PutCalculation ( enum PjCalculation _val );
__declspec(implementation_key(4506)) VARIANT_BOOL _MSProject::GetAutoLevel ( );
__declspec(implementation_key(4507)) void _MSProject::PutAutoLevel ( VARIANT_BOOL _val );
__declspec(implementation_key(4508)) VARIANT_BOOL _MSProject::GetAutoClearLeveling ( );
__declspec(implementation_key(4509)) void _MSProject::PutAutoClearLeveling ( VARIANT_BOOL _val );
__declspec(implementation_key(4510)) VARIANT_BOOL _MSProject::GetLevelWithinSlack ( );
__declspec(implementation_key(4511)) void _MSProject::PutLevelWithinSlack ( VARIANT_BOOL _val );
__declspec(implementation_key(4512)) enum PjLevelOrder _MSProject::GetLevelOrder ( );
__declspec(implementation_key(4513)) void _MSProject::PutLevelOrder ( enum PjLevelOrder _val );
__declspec(implementation_key(4514)) enum PjLevelPeriodBasis _MSProject::GetLevelPeriodBasis ( );
__declspec(implementation_key(4515)) void _MSProject::PutLevelPeriodBasis ( enum PjLevelPeriodBasis _val );
__declspec(implementation_key(4516)) VARIANT_BOOL _MSProject::GetLevelIndividualAssignments ( );
__declspec(implementation_key(4517)) void _MSProject::PutLevelIndividualAssignments ( VARIANT_BOOL _val );
__declspec(implementation_key(4518)) VARIANT_BOOL _MSProject::GetLevelingCanSplit ( );
__declspec(implementation_key(4519)) void _MSProject::PutLevelingCanSplit ( VARIANT_BOOL _val );
__declspec(implementation_key(4520)) VARIANT_BOOL _MSProject::GetMoveAfterReturn ( );
__declspec(implementation_key(4521)) void _MSProject::PutMoveAfterReturn ( VARIANT_BOOL _val );
__declspec(implementation_key(4522)) VARIANT_BOOL _MSProject::GetDisplayScheduleMessages ( );
__declspec(implementation_key(4523)) void _MSProject::PutDisplayScheduleMessages ( VARIANT_BOOL _val );
__declspec(implementation_key(4524)) enum PjWeekday _MSProject::GetStartWeekOn ( );
__declspec(implementation_key(4525)) void _MSProject::PutStartWeekOn ( enum PjWeekday _val );
__declspec(implementation_key(4526)) enum PjMonth _MSProject::GetStartYearIn ( );
__declspec(implementation_key(4527)) void _MSProject::PutStartYearIn ( enum PjMonth _val );
__declspec(implementation_key(4528)) VARIANT_BOOL _MSProject::GetCellDragAndDrop ( );
__declspec(implementation_key(4529)) void _MSProject::PutCellDragAndDrop ( VARIANT_BOOL _val );
__declspec(implementation_key(4530)) _bstr_t _MSProject::GetUserName ( );
__declspec(implementation_key(4531)) void _MSProject::PutUserName ( _bstr_t _val );
__declspec(implementation_key(4532)) VARIANT_BOOL _MSProject::GetDisplayNotesIndicator ( );
__declspec(implementation_key(4533)) void _MSProject::PutDisplayNotesIndicator ( VARIANT_BOOL _val );
__declspec(implementation_key(4534)) VARIANT_BOOL _MSProject::GetAskToUpdateLinks ( );
__declspec(implementation_key(4535)) void _MSProject::PutAskToUpdateLinks ( VARIANT_BOOL _val );
__declspec(implementation_key(4536)) VARIANT_BOOL _MSProject::GetDisplayPlanningWizard ( );
__declspec(implementation_key(4537)) void _MSProject::PutDisplayPlanningWizard ( VARIANT_BOOL _val );
__declspec(implementation_key(4538)) VARIANT_BOOL _MSProject::GetDisplayWizardUsage ( );
__declspec(implementation_key(4539)) void _MSProject::PutDisplayWizardUsage ( VARIANT_BOOL _val );
__declspec(implementation_key(4540)) VARIANT_BOOL _MSProject::GetDisplayWizardErrors ( );
__declspec(implementation_key(4541)) void _MSProject::PutDisplayWizardErrors ( VARIANT_BOOL _val );
__declspec(implementation_key(4542)) VARIANT_BOOL _MSProject::GetDisplayWizardScheduling ( );
__declspec(implementation_key(4543)) void _MSProject::PutDisplayWizardScheduling ( VARIANT_BOOL _val );
__declspec(implementation_key(4544)) VARIANT_BOOL _MSProject::GetShowTipOfDay ( );
__declspec(implementation_key(4545)) void _MSProject::PutShowTipOfDay ( VARIANT_BOOL _val );
__declspec(implementation_key(4546)) VARIANT_BOOL _MSProject::GetShowToolTips ( );
__declspec(implementation_key(4547)) void _MSProject::PutShowToolTips ( VARIANT_BOOL _val );
__declspec(implementation_key(4548)) VARIANT_BOOL _MSProject::GetShowWelcome ( );
__declspec(implementation_key(4549)) void _MSProject::PutShowWelcome ( VARIANT_BOOL _val );
__declspec(implementation_key(4550)) VARIANT_BOOL _MSProject::GetLoadLastFile ( );
__declspec(implementation_key(4551)) void _MSProject::PutLoadLastFile ( VARIANT_BOOL _val );
__declspec(implementation_key(4552)) VARIANT_BOOL _MSProject::GetPromptForSummaryInfo ( );
__declspec(implementation_key(4553)) void _MSProject::PutPromptForSummaryInfo ( VARIANT_BOOL _val );
__declspec(implementation_key(4554)) VARIANT_BOOL _MSProject::GetDisplayOLEIndicator ( );
__declspec(implementation_key(4555)) void _MSProject::PutDisplayOLEIndicator ( VARIANT_BOOL _val );
__declspec(implementation_key(4556)) enum PjDateFormat _MSProject::GetDefaultDateFormat ( );
__declspec(implementation_key(4557)) void _MSProject::PutDefaultDateFormat ( enum PjDateFormat _val );
__declspec(implementation_key(4558)) VARIANT_BOOL _MSProject::GetDayLeadingZero ( );
__declspec(implementation_key(4559)) void _MSProject::PutDayLeadingZero ( VARIANT_BOOL _val );
__declspec(implementation_key(4560)) VARIANT_BOOL _MSProject::GetMonthLeadingZero ( );
__declspec(implementation_key(4561)) void _MSProject::PutMonthLeadingZero ( VARIANT_BOOL _val );
__declspec(implementation_key(4562)) VARIANT_BOOL _MSProject::GetTimeLeadingZero ( );
__declspec(implementation_key(4563)) void _MSProject::PutTimeLeadingZero ( VARIANT_BOOL _val );
__declspec(implementation_key(4564)) VARIANT_BOOL _MSProject::GetCopyResourceUsageHeader ( );
__declspec(implementation_key(4565)) void _MSProject::PutCopyResourceUsageHeader ( VARIANT_BOOL _val );
__declspec(implementation_key(4566)) long _MSProject::GetRecentFilesMaximum ( );
__declspec(implementation_key(4567)) void _MSProject::PutRecentFilesMaximum ( long _val );
__declspec(implementation_key(4568)) VARIANT_BOOL _MSProject::GetDisplayRecentFiles ( );
__declspec(implementation_key(4569)) void _MSProject::PutDisplayRecentFiles ( VARIANT_BOOL _val );
__declspec(implementation_key(4570)) VARIANT_BOOL _MSProject::GetMacroVirusProtection ( );
__declspec(implementation_key(4571)) void _MSProject::PutMacroVirusProtection ( VARIANT_BOOL _val );
__declspec(implementation_key(4572)) enum PjAssignmentUnits _MSProject::GetShowAssignmentUnitsAs ( );
__declspec(implementation_key(4573)) void _MSProject::PutShowAssignmentUnitsAs ( enum PjAssignmentUnits _val );
__declspec(implementation_key(4574)) VARIANT_BOOL _MSProject::GetAutomaticallyFillPhoneticFields ( );
__declspec(implementation_key(4575)) void _MSProject::PutAutomaticallyFillPhoneticFields ( VARIANT_BOOL _val );
__declspec(implementation_key(4576)) VARIANT_BOOL _MSProject::GetDefaultAutoFilter ( );
__declspec(implementation_key(4577)) void _MSProject::PutDefaultAutoFilter ( VARIANT_BOOL _val );
__declspec(implementation_key(4578)) VARIANT_BOOL _MSProject::GetShowEstimatedDuration ( );
__declspec(implementation_key(4579)) void _MSProject::PutShowEstimatedDuration ( VARIANT_BOOL _val );
__declspec(implementation_key(4580)) VARIANT_BOOL _MSProject::GetNewTasksEstimated ( );
__declspec(implementation_key(4581)) void _MSProject::PutNewTasksEstimated ( VARIANT_BOOL _val );
//__declspec(implementation_key(4582)) AssistantPtr _MSProject::GetAssistant ( );
__declspec(implementation_key(4583)) void _MSProject::PutAssistant ( struct Assistant * _val );
__declspec(implementation_key(4584)) VARIANT_BOOL _MSProject::GetDisplayViewBar ( );
__declspec(implementation_key(4585)) void _MSProject::PutDisplayViewBar ( VARIANT_BOOL _val );
//__declspec(implementation_key(4586)) VBEPtr _MSProject::GetVBE ( );
__declspec(implementation_key(4587)) void _MSProject::PutVBE ( struct VBE * _val );
__declspec(implementation_key(4588)) enum PjEnableCancelKey _MSProject::GetEnableCancelKey ( );
__declspec(implementation_key(4589)) void _MSProject::PutEnableCancelKey ( enum PjEnableCancelKey _val );
__declspec(implementation_key(4590)) VARIANT_BOOL _MSProject::GetUserControl ( );
__declspec(implementation_key(4591)) void _MSProject::PutUserControl ( VARIANT_BOOL _val );
__declspec(implementation_key(4592)) double _MSProject::GetUsableWidth ( );
__declspec(implementation_key(4593)) void _MSProject::PutUsableWidth ( double _val );
__declspec(implementation_key(4594)) double _MSProject::GetUsableHeight ( );
__declspec(implementation_key(4595)) void _MSProject::PutUsableHeight ( double _val );
__declspec(implementation_key(4596)) _variant_t _MSProject::GetStatusBar ( );
__declspec(implementation_key(4597)) void _MSProject::PutStatusBar ( const _variant_t & _val );
//__declspec(implementation_key(4598)) FileSearchPtr _MSProject::GetFileSearch ( );
__declspec(implementation_key(4599)) void _MSProject::PutFileSearch ( struct FileSearch * _val );
__declspec(implementation_key(4600)) VARIANT_BOOL _MSProject::GetScreenUpdating ( );
__declspec(implementation_key(4601)) void _MSProject::PutScreenUpdating ( VARIANT_BOOL _val );
__declspec(implementation_key(4602)) VARIANT_BOOL _MSProject::GetDisplayProjectGuide ( );
__declspec(implementation_key(4603)) void _MSProject::PutDisplayProjectGuide ( VARIANT_BOOL _val );
//__declspec(implementation_key(4604)) enum MsoAutomationSecurity _MSProject::GetAutomationSecurity ( );
__declspec(implementation_key(4605)) void _MSProject::PutAutomationSecurity ( enum MsoAutomationSecurity _val );
__declspec(implementation_key(4606)) VARIANT_BOOL _MSProject::GetEnterpriseAllowLocalBaseCalendars ( );
__declspec(implementation_key(4607)) void _MSProject::PutEnterpriseAllowLocalBaseCalendars ( VARIANT_BOOL _val );
__declspec(implementation_key(4608)) enum PjEditionType _MSProject::GetEdition ( );
__declspec(implementation_key(4609)) void _MSProject::PutEdition ( enum PjEditionType _val );
__declspec(implementation_key(4610)) ProfilesPtr _MSProject::GetProfiles ( );
__declspec(implementation_key(4611)) void _MSProject::PutProfiles ( struct Profiles * _val );
__declspec(implementation_key(4612)) CalendarsPtr _MSProject::GetGlobalBaseCalendars ( );
__declspec(implementation_key(4613)) void _MSProject::PutGlobalBaseCalendars ( struct Calendars * _val );
__declspec(implementation_key(4614)) ViewsPtr _MSProject::GetGlobalViews ( );
__declspec(implementation_key(4615)) void _MSProject::PutGlobalViews ( struct Views * _val );
__declspec(implementation_key(4616)) ViewsSinglePtr _MSProject::GetGlobalViewsSingle ( );
__declspec(implementation_key(4617)) void _MSProject::PutGlobalViewsSingle ( struct ViewsSingle * _val );
__declspec(implementation_key(4618)) ViewsCombinationPtr _MSProject::GetGlobalViewsCombination ( );
__declspec(implementation_key(4619)) void _MSProject::PutGlobalViewsCombination ( struct ViewsCombination * _val );
__declspec(implementation_key(4620)) TablesPtr _MSProject::GetGlobalTaskTables ( );
__declspec(implementation_key(4621)) void _MSProject::PutGlobalTaskTables ( struct Tables * _val );
__declspec(implementation_key(4622)) TablesPtr _MSProject::GetGlobalResourceTables ( );
__declspec(implementation_key(4623)) void _MSProject::PutGlobalResourceTables ( struct Tables * _val );
__declspec(implementation_key(4624)) FiltersPtr _MSProject::GetGlobalTaskFilters ( );
__declspec(implementation_key(4625)) void _MSProject::PutGlobalTaskFilters ( struct Filters * _val );
__declspec(implementation_key(4626)) FiltersPtr _MSProject::GetGlobalResourceFilters ( );
__declspec(implementation_key(4627)) void _MSProject::PutGlobalResourceFilters ( struct Filters * _val );
__declspec(implementation_key(4628)) HRESULT _EProjectApp::NewProject ( struct _IProjectDoc * pj );
__declspec(implementation_key(4629)) HRESULT _EProjectApp::ProjectBeforeTaskDelete ( struct Task * tsk, VARIANT_BOOL * Cancel );
__declspec(implementation_key(4630)) HRESULT _EProjectApp::ProjectBeforeResourceDelete ( struct Resource * res, VARIANT_BOOL * Cancel );
__declspec(implementation_key(4631)) HRESULT _EProjectApp::ProjectBeforeAssignmentDelete ( struct Assignment * asg, VARIANT_BOOL * Cancel );
__declspec(implementation_key(4632)) HRESULT _EProjectApp::ProjectBeforeTaskChange ( struct Task * tsk, enum PjField Field, const _variant_t & NewVal, VARIANT_BOOL * Cancel );
__declspec(implementation_key(4633)) HRESULT _EProjectApp::ProjectBeforeResourceChange ( struct Resource * res, enum PjField Field, const _variant_t & NewVal, VARIANT_BOOL * Cancel );
__declspec(implementation_key(4634)) HRESULT _EProjectApp::ProjectBeforeAssignmentChange ( struct Assignment * asg, enum PjAssignmentField Field, const _variant_t & NewVal, VARIANT_BOOL * Cancel );
__declspec(implementation_key(4635)) HRESULT _EProjectApp::ProjectBeforeTaskNew ( struct _IProjectDoc * pj, VARIANT_BOOL * Cancel );
__declspec(implementation_key(4636)) HRESULT _EProjectApp::ProjectBeforeResourceNew ( struct _IProjectDoc * pj, VARIANT_BOOL * Cancel );
__declspec(implementation_key(4637)) HRESULT _EProjectApp::ProjectBeforeAssignmentNew ( struct _IProjectDoc * pj, VARIANT_BOOL * Cancel );
__declspec(implementation_key(4638)) HRESULT _EProjectApp::ProjectBeforeClose ( struct _IProjectDoc * pj, VARIANT_BOOL * Cancel );
__declspec(implementation_key(4639)) HRESULT _EProjectApp::ProjectBeforePrint ( struct _IProjectDoc * pj, VARIANT_BOOL * Cancel );
__declspec(implementation_key(4640)) HRESULT _EProjectApp::ProjectBeforeSave ( struct _IProjectDoc * pj, VARIANT_BOOL SaveAsUi, VARIANT_BOOL * Cancel );
__declspec(implementation_key(4641)) HRESULT _EProjectApp::ProjectCalculate ( struct _IProjectDoc * pj );
__declspec(implementation_key(4642)) IUnknownPtr Groups::Get_NewEnum ( );
__declspec(implementation_key(4643)) GroupPtr Groups::GetItem ( const _variant_t & Index );
__declspec(implementation_key(4644)) long Groups::GetCount ( );
__declspec(implementation_key(4645)) GroupPtr Groups::Add ( _bstr_t Name, _bstr_t FieldName );
__declspec(implementation_key(4646)) GroupPtr Groups::Copy ( _bstr_t Name, _bstr_t NewName );
__declspec(implementation_key(4647)) _IProjectDocPtr Groups::GetParent ( );
__declspec(implementation_key(4648)) _MSProjectPtr Groups::GetApplication ( );
__declspec(implementation_key(4649)) IUnknownPtr Views::Get_NewEnum ( );
__declspec(implementation_key(4650)) ViewPtr Views::GetItem ( const _variant_t & Index );
__declspec(implementation_key(4651)) long Views::GetCount ( );
__declspec(implementation_key(4652)) ViewPtr Views::Copy ( const _variant_t & Source, _bstr_t NewName );
__declspec(implementation_key(4653)) _IProjectDocPtr Views::GetParent ( );
__declspec(implementation_key(4654)) _MSProjectPtr Views::GetApplication ( );
__declspec(implementation_key(4655)) ViewSinglePtr ViewsSingle::Add ( _bstr_t Name, enum PjViewScreen Screen, VARIANT_BOOL ShowInMenu, const _variant_t & Table, const _variant_t & Filter, const _variant_t & Group, VARIANT_BOOL HighlightFilt );
__declspec(implementation_key(4656)) ViewCombinationPtr ViewsCombination::Add ( _bstr_t Name, const _variant_t & TopView, const _variant_t & BottomView, VARIANT_BOOL ShowInMenu );
__declspec(implementation_key(4657)) _MSProjectPtr View::GetApplication ( );
__declspec(implementation_key(4658)) _bstr_t View::GetName ( );
__declspec(implementation_key(4659)) void View::PutName ( _bstr_t Name );
__declspec(implementation_key(4660)) long View::GetIndex ( );
__declspec(implementation_key(4661)) _IProjectDocPtr View::GetParent ( );
__declspec(implementation_key(4662)) HRESULT View::Delete ( );
__declspec(implementation_key(4663)) enum PjItemType View::GetType ( );
__declspec(implementation_key(4664)) VARIANT_BOOL View::GetShowInMenu ( );
__declspec(implementation_key(4665)) void View::PutShowInMenu ( VARIANT_BOOL ShowInMenu );
__declspec(implementation_key(4666)) HRESULT View::Apply ( );
__declspec(implementation_key(4667)) VARIANT_BOOL View::GetSingle ( );
__declspec(implementation_key(4668)) enum PjViewScreen View::GetScreen ( );
__declspec(implementation_key(4669)) TablePtr ViewSingle::GetTable ( );
__declspec(implementation_key(4670)) void ViewSingle::PutTable ( const _variant_t & Table );
__declspec(implementation_key(4671)) FilterPtr ViewSingle::GetFilter ( );
__declspec(implementation_key(4672)) void ViewSingle::PutFilter ( const _variant_t & Filter );
__declspec(implementation_key(4673)) GroupPtr ViewSingle::GetGroup ( );
__declspec(implementation_key(4674)) void ViewSingle::PutGroup ( const _variant_t & Group );
__declspec(implementation_key(4675)) VARIANT_BOOL ViewSingle::GetHighlightFilter ( );
__declspec(implementation_key(4676)) void ViewSingle::PutHighlightFilter ( VARIANT_BOOL HighlightFilter );
__declspec(implementation_key(4677)) ViewSinglePtr ViewCombination::GetTopView ( );
__declspec(implementation_key(4678)) void ViewCombination::PutTopView ( const _variant_t & TopView );
__declspec(implementation_key(4679)) ViewSinglePtr ViewCombination::GetBottomView ( );
__declspec(implementation_key(4680)) void ViewCombination::PutBottomView ( const _variant_t & BottomView );
__declspec(implementation_key(4681)) IUnknownPtr Tables::Get_NewEnum ( );
__declspec(implementation_key(4682)) TablePtr Tables::GetItem ( const _variant_t & Index );
__declspec(implementation_key(4683)) long Tables::GetCount ( );
__declspec(implementation_key(4684)) TablePtr Tables::Copy ( const _variant_t & Source, _bstr_t NewName );
__declspec(implementation_key(4685)) _IProjectDocPtr Tables::GetParent ( );
__declspec(implementation_key(4686)) _MSProjectPtr Tables::GetApplication ( );
__declspec(implementation_key(4687)) TablePtr Tables::Add ( _bstr_t Name, enum PjField Field, VARIANT_BOOL Task );
__declspec(implementation_key(4688)) _MSProjectPtr Table::GetApplication ( );
__declspec(implementation_key(4689)) _bstr_t Table::GetName ( );
__declspec(implementation_key(4690)) void Table::PutName ( _bstr_t Name );
__declspec(implementation_key(4691)) long Table::GetIndex ( );
__declspec(implementation_key(4692)) _IProjectDocPtr Table::GetParent ( );
__declspec(implementation_key(4693)) HRESULT Table::Delete ( );
__declspec(implementation_key(4694)) enum PjItemType Table::GetTableType ( );
__declspec(implementation_key(4695)) VARIANT_BOOL Table::GetShowInMenu ( );
__declspec(implementation_key(4696)) void Table::PutShowInMenu ( VARIANT_BOOL ShowInMenu );
__declspec(implementation_key(4697)) HRESULT Table::Apply ( );
__declspec(implementation_key(4698)) enum PjDateFormat Table::GetDateFormat ( );
__declspec(implementation_key(4699)) void Table::PutDateFormat ( enum PjDateFormat Format );
__declspec(implementation_key(4700)) long Table::GetRowHeight ( );
__declspec(implementation_key(4701)) void Table::PutRowHeight ( long Height );
__declspec(implementation_key(4702)) VARIANT_BOOL Table::GetLockFirstColumn ( );
__declspec(implementation_key(4703)) void Table::PutLockFirstColumn ( VARIANT_BOOL Locked );
__declspec(implementation_key(4704)) VARIANT_BOOL Table::GetAdjustHeaderRowHeight ( );
__declspec(implementation_key(4705)) void Table::PutAdjustHeaderRowHeight ( VARIANT_BOOL adjustable );
__declspec(implementation_key(4706)) TableFieldsPtr Table::GetTableFields ( );
__declspec(implementation_key(4707)) IUnknownPtr Filters::Get_NewEnum ( );
__declspec(implementation_key(4708)) FilterPtr Filters::GetItem ( const _variant_t & Index );
__declspec(implementation_key(4709)) long Filters::GetCount ( );
__declspec(implementation_key(4710)) FilterPtr Filters::Copy ( const _variant_t & Source, _bstr_t NewName );
__declspec(implementation_key(4711)) _IProjectDocPtr Filters::GetParent ( );
__declspec(implementation_key(4712)) _MSProjectPtr Filters::GetApplication ( );
__declspec(implementation_key(4713)) _MSProjectPtr Filter::GetApplication ( );
__declspec(implementation_key(4714)) _bstr_t Filter::GetName ( );
__declspec(implementation_key(4715)) void Filter::PutName ( _bstr_t Name );
__declspec(implementation_key(4716)) long Filter::GetIndex ( );
__declspec(implementation_key(4717)) _IProjectDocPtr Filter::GetParent ( );
__declspec(implementation_key(4718)) HRESULT Filter::Delete ( );
__declspec(implementation_key(4719)) enum PjItemType Filter::GetFilterType ( );
__declspec(implementation_key(4720)) VARIANT_BOOL Filter::GetShowInMenu ( );
__declspec(implementation_key(4721)) void Filter::PutShowInMenu ( VARIANT_BOOL ShowInMenu );
__declspec(implementation_key(4722)) HRESULT Filter::Apply ( VARIANT_BOOL Highlight );
__declspec(implementation_key(4723)) VARIANT_BOOL Filter::GetShowRelatedSummaryRows ( );
__declspec(implementation_key(4724)) void Filter::PutShowRelatedSummaryRows ( VARIANT_BOOL ShowRelatedSummaryRows );
__declspec(implementation_key(4725)) VARIANT_BOOL EventInfo::GetCancel ( );
__declspec(implementation_key(4726)) void EventInfo::PutCancel ( VARIANT_BOOL Cancel );
__declspec(implementation_key(4727)) HRESULT Profile::Delete ( );
__declspec(implementation_key(4728)) _bstr_t Profile::GetName ( );
__declspec(implementation_key(4729)) void Profile::PutName ( _bstr_t Name );
__declspec(implementation_key(4730)) _bstr_t Profile::GetServer ( );
__declspec(implementation_key(4731)) void Profile::PutServer ( _bstr_t Server );
__declspec(implementation_key(4732)) enum PjLoginType Profile::GetLoginType ( );
__declspec(implementation_key(4733)) void Profile::PutLoginType ( enum PjLoginType LoginType );
__declspec(implementation_key(4734)) _bstr_t Profile::GetUserName ( );
__declspec(implementation_key(4735)) void Profile::PutUserName ( _bstr_t UserName );
__declspec(implementation_key(4736)) enum PjProfileType Profile::GetType ( );
__declspec(implementation_key(4737)) enum PjProfileConnectionState Profile::GetConnectionState ( );
__declspec(implementation_key(4738)) IUnknownPtr Profiles::Get_NewEnum ( );
__declspec(implementation_key(4739)) ProfilePtr Profiles::Add ( _bstr_t Name, _bstr_t Server, enum PjLoginType LoginType, _bstr_t UserName );
__declspec(implementation_key(4740)) ProfilePtr Profiles::GetItem ( const _variant_t & Index );
__declspec(implementation_key(4741)) long Profiles::GetCount ( );
__declspec(implementation_key(4742)) ProfilePtr Profiles::GetDefaultProfile ( );
__declspec(implementation_key(4743)) void Profiles::PutDefaultProfile ( struct Profile * pf );
__declspec(implementation_key(4744)) ProfilePtr Profiles::GetActiveProfile ( );
__declspec(implementation_key(4745)) IUnknownPtr TableFields::Get_NewEnum ( );
__declspec(implementation_key(4746)) TableFieldPtr TableFields::Add ( enum PjField Field, enum PjAlignment AlignData, long Width, _bstr_t Title, enum PjAlignment AlignTitle, long Before, VARIANT_BOOL AutoWrap );
__declspec(implementation_key(4747)) _MSProjectPtr TableFields::GetApplication ( );
__declspec(implementation_key(4748)) _IProjectDocPtr TableFields::GetParent ( );
__declspec(implementation_key(4749)) TableFieldPtr TableFields::GetItem ( const _variant_t & Index );
__declspec(implementation_key(4750)) long TableFields::GetCount ( );
__declspec(implementation_key(4751)) HRESULT TableField::Delete ( );
__declspec(implementation_key(4752)) _MSProjectPtr TableField::GetApplication ( );
__declspec(implementation_key(4753)) TablePtr TableField::GetParent ( );
__declspec(implementation_key(4754)) long TableField::GetIndex ( );
__declspec(implementation_key(4755)) enum PjField TableField::GetField ( );
__declspec(implementation_key(4756)) void TableField::PutField ( enum PjField Field );
__declspec(implementation_key(4757)) enum PjAlignment TableField::GetAlignData ( );
__declspec(implementation_key(4758)) void TableField::PutAlignData ( enum PjAlignment Alignment );
__declspec(implementation_key(4759)) long TableField::GetWidth ( );
__declspec(implementation_key(4760)) void TableField::PutWidth ( long Width );
__declspec(implementation_key(4761)) _bstr_t TableField::GetTitle ( );
__declspec(implementation_key(4762)) void TableField::PutTitle ( _bstr_t Title );
__declspec(implementation_key(4763)) enum PjAlignment TableField::GetAlignTitle ( );
__declspec(implementation_key(4764)) void TableField::PutAlignTitle ( enum PjAlignment Alignment );
__declspec(implementation_key(4765)) VARIANT_BOOL TableField::GetAutoWrap ( );
__declspec(implementation_key(4766)) void TableField::PutAutoWrap ( VARIANT_BOOL AutoWrap );
__declspec(implementation_key(4767)) HRESULT _EProjectApp2::NewProject ( struct _IProjectDoc * pj );
__declspec(implementation_key(4768)) HRESULT _EProjectApp2::ProjectBeforeTaskDelete ( struct Task * tsk, VARIANT_BOOL * Cancel );
__declspec(implementation_key(4769)) HRESULT _EProjectApp2::ProjectBeforeResourceDelete ( struct Resource * res, VARIANT_BOOL * Cancel );
__declspec(implementation_key(4770)) HRESULT _EProjectApp2::ProjectBeforeAssignmentDelete ( struct Assignment * asg, VARIANT_BOOL * Cancel );
__declspec(implementation_key(4771)) HRESULT _EProjectApp2::ProjectBeforeTaskChange ( struct Task * tsk, enum PjField Field, const _variant_t & NewVal, VARIANT_BOOL * Cancel );
__declspec(implementation_key(4772)) HRESULT _EProjectApp2::ProjectBeforeResourceChange ( struct Resource * res, enum PjField Field, const _variant_t & NewVal, VARIANT_BOOL * Cancel );
__declspec(implementation_key(4773)) HRESULT _EProjectApp2::ProjectBeforeAssignmentChange ( struct Assignment * asg, enum PjAssignmentField Field, const _variant_t & NewVal, VARIANT_BOOL * Cancel );
__declspec(implementation_key(4774)) HRESULT _EProjectApp2::ProjectBeforeTaskNew ( struct _IProjectDoc * pj, VARIANT_BOOL * Cancel );
__declspec(implementation_key(4775)) HRESULT _EProjectApp2::ProjectBeforeResourceNew ( struct _IProjectDoc * pj, VARIANT_BOOL * Cancel );
__declspec(implementation_key(4776)) HRESULT _EProjectApp2::ProjectBeforeAssignmentNew ( struct _IProjectDoc * pj, VARIANT_BOOL * Cancel );
__declspec(implementation_key(4777)) HRESULT _EProjectApp2::ProjectBeforeClose ( struct _IProjectDoc * pj, VARIANT_BOOL * Cancel );
__declspec(implementation_key(4778)) HRESULT _EProjectApp2::ProjectBeforePrint ( struct _IProjectDoc * pj, VARIANT_BOOL * Cancel );
__declspec(implementation_key(4779)) HRESULT _EProjectApp2::ProjectBeforeSave ( struct _IProjectDoc * pj, VARIANT_BOOL SaveAsUi, VARIANT_BOOL * Cancel );
__declspec(implementation_key(4780)) HRESULT _EProjectApp2::ProjectCalculate ( struct _IProjectDoc * pj );
__declspec(implementation_key(4781)) HRESULT _EProjectApp2::WindowGoalAreaChange ( struct Window * Window, long goalArea );
__declspec(implementation_key(4782)) HRESULT _EProjectApp2::WindowSelectionChange ( struct Window * Window, struct Selection * sel, const _variant_t & selType );
__declspec(implementation_key(4783)) HRESULT _EProjectApp2::WindowBeforeViewChange ( struct Window * Window, struct View * prevView, struct View * newView, VARIANT_BOOL projectHasViewWindow, struct EventInfo * Info );
__declspec(implementation_key(4784)) HRESULT _EProjectApp2::WindowViewChange ( struct Window * Window, struct View * prevView, struct View * newView, VARIANT_BOOL success );
__declspec(implementation_key(4785)) HRESULT _EProjectApp2::WindowActivate ( struct Window * activatedWindow );
__declspec(implementation_key(4786)) HRESULT _EProjectApp2::WindowDeactivate ( struct Window * deactivatedWindow );
__declspec(implementation_key(4787)) HRESULT _EProjectApp2::WindowSidepaneDisplayChange ( struct Window * Window, VARIANT_BOOL Close );
__declspec(implementation_key(4788)) HRESULT _EProjectApp2::WindowSidepaneTaskChange ( struct Window * Window, long ID, VARIANT_BOOL IsGoalArea );
__declspec(implementation_key(4789)) HRESULT _EProjectApp2::WorkpaneDisplayChange ( VARIANT_BOOL DisplayState );
__declspec(implementation_key(4790)) HRESULT _EProjectApp2::LoadWebPage ( struct Window * Window, BSTR * TargetPage );
__declspec(implementation_key(4791)) HRESULT _EProjectApp2::ProjectAfterSave ( );
__declspec(implementation_key(4792)) HRESULT _EProjectApp2::ProjectTaskNew ( struct _IProjectDoc * pj, long ID );
__declspec(implementation_key(4793)) HRESULT _EProjectApp2::ProjectResourceNew ( struct _IProjectDoc * pj, long ID );
__declspec(implementation_key(4794)) HRESULT _EProjectApp2::ProjectAssignmentNew ( struct _IProjectDoc * pj, long ID );
__declspec(implementation_key(4795)) HRESULT _EProjectApp2::ProjectBeforeSaveBaseline ( struct _IProjectDoc * pj, VARIANT_BOOL Interim, enum PjBaselines bl, enum PjSaveBaselineFrom InterimCopy, enum PjSaveBaselineTo InterimInto, VARIANT_BOOL AllTasks, VARIANT_BOOL RollupToSummaryTasks, VARIANT_BOOL RollupFromSubtasks, struct EventInfo * Info );
__declspec(implementation_key(4796)) HRESULT _EProjectApp2::ProjectBeforeClearBaseline ( struct _IProjectDoc * pj, VARIANT_BOOL Interim, enum PjBaselines bl, enum PjSaveBaselineTo InterimFrom, VARIANT_BOOL AllTasks, struct EventInfo * Info );
__declspec(implementation_key(4797)) HRESULT _EProjectApp2::ProjectBeforeClose2 ( struct _IProjectDoc * pj, struct EventInfo * Info );
__declspec(implementation_key(4798)) HRESULT _EProjectApp2::ProjectBeforePrint2 ( struct _IProjectDoc * pj, struct EventInfo * Info );
__declspec(implementation_key(4799)) HRESULT _EProjectApp2::ProjectBeforeSave2 ( struct _IProjectDoc * pj, VARIANT_BOOL SaveAsUi, struct EventInfo * Info );
__declspec(implementation_key(4800)) HRESULT _EProjectApp2::ProjectBeforeTaskDelete2 ( struct Task * tsk, struct EventInfo * Info );
__declspec(implementation_key(4801)) HRESULT _EProjectApp2::ProjectBeforeResourceDelete2 ( struct Resource * res, struct EventInfo * Info );
__declspec(implementation_key(4802)) HRESULT _EProjectApp2::ProjectBeforeAssignmentDelete2 ( struct Assignment * asg, struct EventInfo * Info );
__declspec(implementation_key(4803)) HRESULT _EProjectApp2::ProjectBeforeTaskChange2 ( struct Task * tsk, enum PjField Field, const _variant_t & NewVal, struct EventInfo * Info );
__declspec(implementation_key(4804)) HRESULT _EProjectApp2::ProjectBeforeResourceChange2 ( struct Resource * res, enum PjField Field, const _variant_t & NewVal, struct EventInfo * Info );
__declspec(implementation_key(4805)) HRESULT _EProjectApp2::ProjectBeforeAssignmentChange2 ( struct Assignment * asg, enum PjAssignmentField Field, const _variant_t & NewVal, struct EventInfo * Info );
__declspec(implementation_key(4806)) HRESULT _EProjectApp2::ProjectBeforeTaskNew2 ( struct _IProjectDoc * pj, struct EventInfo * Info );
__declspec(implementation_key(4807)) HRESULT _EProjectApp2::ProjectBeforeResourceNew2 ( struct _IProjectDoc * pj, struct EventInfo * Info );
__declspec(implementation_key(4808)) HRESULT _EProjectApp2::ProjectBeforeAssignmentNew2 ( struct _IProjectDoc * pj, struct EventInfo * Info );
__declspec(implementation_key(4809)) HRESULT _EProjectApp2::ApplicationBeforeClose ( struct EventInfo * Info );
#pragma stop_map_region

} // namespace MSProject

#pragma pack(pop)
